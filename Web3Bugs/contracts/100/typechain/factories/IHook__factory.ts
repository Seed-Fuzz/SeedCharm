/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { IHook, IHookInterface } from "../IHook";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultChanged",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "initialAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "finalAmount",
        type: "uint256",
      },
    ],
    name: "hook",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newVault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IHook__factory {
  static readonly abi = _abi;
  static createInterface(): IHookInterface {
    return new utils.Interface(_abi) as IHookInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): IHook {
    return new Contract(address, _abi, signerOrProvider) as IHook;
  }
}
