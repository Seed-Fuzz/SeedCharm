/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  IPrePOMarketFactory,
  IPrePOMarketFactoryInterface,
} from "../IPrePOMarketFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "allowed",
        type: "bool",
      },
    ],
    name: "CollateralValidityChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "longShortHash",
        type: "bytes32",
      },
    ],
    name: "MarketAdded",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "tokenNameSuffix",
        type: "string",
      },
      {
        internalType: "string",
        name: "tokenSymbolSuffix",
        type: "string",
      },
      {
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "governance",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "floorLongPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ceilingLongPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "floorValuation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "ceilingValuation",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "mintingFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "redemptionFee",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiryTime",
        type: "uint256",
      },
    ],
    name: "createMarket",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "longShortHash",
        type: "bytes32",
      },
    ],
    name: "getMarket",
    outputs: [
      {
        internalType: "contract IPrePOMarket",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateral",
        type: "address",
      },
    ],
    name: "isCollateralValid",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "collateral",
        type: "address",
      },
      {
        internalType: "bool",
        name: "validity",
        type: "bool",
      },
    ],
    name: "setCollateralValidity",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPrePOMarketFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IPrePOMarketFactoryInterface {
    return new utils.Interface(_abi) as IPrePOMarketFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPrePOMarketFactory {
    return new Contract(address, _abi, signerOrProvider) as IPrePOMarketFactory;
  }
}
