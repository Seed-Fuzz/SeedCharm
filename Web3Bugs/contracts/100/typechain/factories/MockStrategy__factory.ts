/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockStrategy, MockStrategyInterface } from "../MockStrategy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_newController",
        type: "address",
      },
      {
        internalType: "address",
        name: "_newBaseToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "vault",
        type: "address",
      },
    ],
    name: "VaultChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "INITIAL_SHARE_VALUE",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "apy",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "beginning",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "deposit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getBaseToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getController",
    outputs: [
      {
        internalType: "contract IStrategyController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_apy",
        type: "uint256",
      },
    ],
    name: "setApy",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_beginning",
        type: "uint256",
      },
    ],
    name: "setBeginning",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_newVault",
        type: "address",
      },
    ],
    name: "setVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalValue",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "vault",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001750380380620017508339810160408190526200003491620000e6565b6200003f3362000079565b60018055600280546001600160a01b039384166001600160a01b03199182161790915560038054929093169116179055426005556200011e565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b80516001600160a01b0381168114620000e157600080fd5b919050565b60008060408385031215620000fa57600080fd5b6200010583620000c9565b91506200011560208401620000c9565b90509250929050565b611622806200012e6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806398acd7a611610097578063e440a03e11610066578063e440a03e146101f4578063f2fde38b14610207578063f3fef3a31461021a578063fbfa77cf1461022d57600080fd5b806398acd7a6146101ac578063b436e49a146101ca578063b6b55f25146101d9578063d4c3eea0146101ec57600080fd5b80634a797b47116100d35780634a797b471461016a5780636817031b14610173578063715018a6146101865780638da5cb5b1461018e57600080fd5b80633018205f146100fa5780633b3f5e361461013e5780633bcfc4b814610153575b600080fd5b60025473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61015161014c366004611429565b61024d565b005b61015c60065481565b604051908152602001610135565b61015c60055481565b6101516101813660046113a1565b6102d8565b6101516103d2565b60005473ffffffffffffffffffffffffffffffffffffffff16610114565b60035473ffffffffffffffffffffffffffffffffffffffff16610114565b61015c670de0b6b3a764000081565b6101516101e7366004611429565b61045f565b61015c61079c565b610151610202366004611429565b610864565b6101516102153660046113a1565b6108ea565b6101516102283660046113db565b610a1a565b6004546101149073ffffffffffffffffffffffffffffffffffffffff1681565b60005473ffffffffffffffffffffffffffffffffffffffff1633146102d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064015b60405180910390fd5b600655565b60005473ffffffffffffffffffffffffffffffffffffffff163314610359576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ca565b600480547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081179091556040519081527fa49691f0dd6477ccef49962612a236d252e3a31c3be8b61fa6abeff3e74a75729060200160405180910390a150565b60005473ffffffffffffffffffffffffffffffffffffffff163314610453576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ca565b61045d6000610dc5565b565b60025473ffffffffffffffffffffffffffffffffffffffff1633146104e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f43616c6c6572206973206e6f742074686520636f6e74726f6c6c65720000000060448201526064016102ca565b6003546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b15801561054a57600080fd5b505afa15801561055e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105829190611442565b9050600061058e610e3a565b9050811561076c578181111561076c57600354604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051309273ffffffffffffffffffffffffffffffffffffffff1691638da5cb5b9160048083019260209291908290030181600087803b15801561060a57600080fd5b505af115801561061e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061064291906113be565b73ffffffffffffffffffffffffffffffffffffffff16146106bf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5374726174656779206d7573742062652062617365546f6b656e206f776e657260448201526064016102ca565b60035473ffffffffffffffffffffffffffffffffffffffff166340c10f19306106e88585611558565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff90921660048301526024820152604401600060405180830381600087803b15801561075357600080fd5b505af1158015610767573d6000803e3d6000fd5b505050505b6002546003546107979173ffffffffffffffffffffffffffffffffffffffff91821691163086610f06565b505050565b6003546040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152600091829173ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b15801561080a57600080fd5b505afa15801561081e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108429190611442565b9050600061084e610e3a565b90508082111561085e5750919050565b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146108e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ca565b600555565b60005473ffffffffffffffffffffffffffffffffffffffff16331461096b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102ca565b73ffffffffffffffffffffffffffffffffffffffff8116610a0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016102ca565b610a1781610dc5565b50565b60025473ffffffffffffffffffffffffffffffffffffffff163314610a9b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f43616c6c6572206973206e6f742074686520636f6e74726f6c6c65720000000060448201526064016102ca565b600354604080517f8da5cb5b0000000000000000000000000000000000000000000000000000000081529051309273ffffffffffffffffffffffffffffffffffffffff1691638da5cb5b9160048083019260209291908290030181600087803b158015610b0757600080fd5b505af1158015610b1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b3f91906113be565b73ffffffffffffffffffffffffffffffffffffffff1614610bbc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f5374726174656779206d7573742062652062617365546f6b656e206f776e657260448201526064016102ca565b6003546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff909116906370a082319060240160206040518083038186803b158015610c2557600080fd5b505afa158015610c39573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c5d9190611442565b811115610d9d576003546040517f70a0823100000000000000000000000000000000000000000000000000000000815230600482015260009173ffffffffffffffffffffffffffffffffffffffff16906370a082319060240160206040518083038186803b158015610cce57600080fd5b505afa158015610ce2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d069190611442565b610d109083611558565b6003546040517f40c10f190000000000000000000000000000000000000000000000000000000081523060048201526024810183905291925073ffffffffffffffffffffffffffffffffffffffff16906340c10f1990604401600060405180830381600087803b158015610d8357600080fd5b505af1158015610d97573d6000803e3d6000fd5b50505050505b600354610dc19073ffffffffffffffffffffffffffffffffffffffff168383610fe8565b5050565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000670de0b6b3a7640000610e4d61103e565b60048054604080517f18160ddd000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216926318160ddd928282019260209290829003018186803b158015610eb557600080fd5b505afa158015610ec9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eed9190611442565b610ef7919061151b565b610f0191906114e0565b905090565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610fe29085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526110a9565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526107979084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401610f60565b6000806301e133806064600654670de0b6b3a764000061105e919061151b565b61106891906114e0565b61107291906114e0565b90506000600554426110849190611558565b9050611090818361151b565b6110a290670de0b6b3a76400006114c8565b9250505090565b600061110b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166111b59092919063ffffffff16565b80519091501561079757808060200190518101906111299190611407565b610797576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016102ca565b60606111c484846000856111ce565b90505b9392505050565b606082471015611260576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016102ca565b843b6112c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102ca565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516112f1919061145b565b60006040518083038185875af1925050503d806000811461132e576040519150601f19603f3d011682016040523d82523d6000602084013e611333565b606091505b509150915061134382828661134e565b979650505050505050565b6060831561135d5750816111c7565b82511561136d5782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ca9190611477565b6000602082840312156113b357600080fd5b81356111c7816115ca565b6000602082840312156113d057600080fd5b81516111c7816115ca565b600080604083850312156113ee57600080fd5b82356113f9816115ca565b946020939093013593505050565b60006020828403121561141957600080fd5b815180151581146111c757600080fd5b60006020828403121561143b57600080fd5b5035919050565b60006020828403121561145457600080fd5b5051919050565b6000825161146d81846020870161156f565b9190910192915050565b602081526000825180602084015261149681604085016020870161156f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b600082198211156114db576114db61159b565b500190565b600082611516577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115535761155361159b565b500290565b60008282101561156a5761156a61159b565b500390565b60005b8381101561158a578181015183820152602001611572565b83811115610fe25750506000910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b73ffffffffffffffffffffffffffffffffffffffff81168114610a1757600080fdfea2646970667358221220098cb7418f2e439c8d3a4e65746f7d805f878679ac84cb36bcc5fbb7d34809fa64736f6c63430008070033";

type MockStrategyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockStrategyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockStrategy__factory extends ContractFactory {
  constructor(...args: MockStrategyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _newController: string,
    _newBaseToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockStrategy> {
    return super.deploy(
      _newController,
      _newBaseToken,
      overrides || {}
    ) as Promise<MockStrategy>;
  }
  getDeployTransaction(
    _newController: string,
    _newBaseToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _newController,
      _newBaseToken,
      overrides || {}
    );
  }
  attach(address: string): MockStrategy {
    return super.attach(address) as MockStrategy;
  }
  connect(signer: Signer): MockStrategy__factory {
    return super.connect(signer) as MockStrategy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockStrategyInterface {
    return new utils.Interface(_abi) as MockStrategyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockStrategy {
    return new Contract(address, _abi, signerOrProvider) as MockStrategy;
  }
}
