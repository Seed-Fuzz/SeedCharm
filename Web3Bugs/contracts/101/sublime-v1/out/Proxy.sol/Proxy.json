{"abi":[{"type":"fallback","stateMutability":"payable"},{"type":"receive","stateMutability":"payable"}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"details\":\"This abstract contract provides a fallback function that delegates all calls to another contract using the EVM instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to be specified by overriding the virtual {_implementation} function. Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a different contract through the {_delegate} function. The success and return data of the delegated call will be returned back to the caller of the proxy.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":\"Proxy\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@uniswap/v3-core/=node_modules/@uniswap/v3-core/\",\":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/proxy/Proxy.sol\":{\"keccak256\":\"0x0414d54056b3d8f9102ae1142264e9361408397878148203ab7a25cbf6248f08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebdc01639f69030c754dc3462d5f437c4644164465066187e320f524579fbede\",\"dweb:/ipfs/QmZZhoPYagwu4MoJMAg26Y6Nfj4d9HJzUnvrMNsbo9ZorM\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[{"inputs":[],"stateMutability":"payable","type":"fallback"},{"inputs":[],"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@ensdomains/=node_modules/@ensdomains/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@uniswap/v3-core/=node_modules/@uniswap/v3-core/","@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/proxy/Proxy.sol":"Proxy"},"evmVersion":"istanbul","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/proxy/Proxy.sol":{"keccak256":"0x0414d54056b3d8f9102ae1142264e9361408397878148203ab7a25cbf6248f08","urls":["bzz-raw://ebdc01639f69030c754dc3462d5f437c4644164465066187e320f524579fbede","dweb:/ipfs/QmZZhoPYagwu4MoJMAg26Y6Nfj4d9HJzUnvrMNsbo9ZorM"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/proxy/Proxy.sol","id":28124,"exportedSymbols":{"Proxy":[28123]},"nodeType":"SourceUnit","src":"33:3163:77","nodes":[{"id":28073,"nodeType":"PragmaDirective","src":"33:31:77","nodes":[],"literals":["solidity",">=","0.6",".0","<","0.8",".0"]},{"id":28123,"nodeType":"ContractDefinition","src":"665:2530:77","nodes":[{"id":28082,"nodeType":"FunctionDefinition","src":"891:895:77","nodes":[],"body":{"id":28081,"nodeType":"Block","src":"951:835:77","nodes":[],"statements":[{"AST":{"nodeType":"YulBlock","src":"1026:754:77","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1279:1:77","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1282:1:77","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1285:12:77"},"nodeType":"YulFunctionCall","src":"1285:14:77"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"1266:12:77"},"nodeType":"YulFunctionCall","src":"1266:34:77"},"nodeType":"YulExpressionStatement","src":"1266:34:77"},{"nodeType":"YulVariableDeclaration","src":"1427:74:77","value":{"arguments":[{"arguments":[],"functionName":{"name":"gas","nodeType":"YulIdentifier","src":"1454:3:77"},"nodeType":"YulFunctionCall","src":"1454:5:77"},{"name":"implementation","nodeType":"YulIdentifier","src":"1461:14:77"},{"kind":"number","nodeType":"YulLiteral","src":"1477:1:77","type":"","value":"0"},{"arguments":[],"functionName":{"name":"calldatasize","nodeType":"YulIdentifier","src":"1480:12:77"},"nodeType":"YulFunctionCall","src":"1480:14:77"},{"kind":"number","nodeType":"YulLiteral","src":"1496:1:77","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1499:1:77","type":"","value":"0"}],"functionName":{"name":"delegatecall","nodeType":"YulIdentifier","src":"1441:12:77"},"nodeType":"YulFunctionCall","src":"1441:60:77"},"variables":[{"name":"result","nodeType":"YulTypedName","src":"1431:6:77","type":""}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1569:1:77","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1572:1:77","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1575:14:77"},"nodeType":"YulFunctionCall","src":"1575:16:77"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"1554:14:77"},"nodeType":"YulFunctionCall","src":"1554:38:77"},"nodeType":"YulExpressionStatement","src":"1554:38:77"},{"cases":[{"body":{"nodeType":"YulBlock","src":"1687:31:77","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1696:1:77","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1699:14:77"},"nodeType":"YulFunctionCall","src":"1699:16:77"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1689:6:77"},"nodeType":"YulFunctionCall","src":"1689:27:77"},"nodeType":"YulExpressionStatement","src":"1689:27:77"}]},"nodeType":"YulCase","src":"1680:38:77","value":{"kind":"number","nodeType":"YulLiteral","src":"1685:1:77","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"1739:31:77","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1748:1:77","type":"","value":"0"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"1751:14:77"},"nodeType":"YulFunctionCall","src":"1751:16:77"}],"functionName":{"name":"return","nodeType":"YulIdentifier","src":"1741:6:77"},"nodeType":"YulFunctionCall","src":"1741:27:77"},"nodeType":"YulExpressionStatement","src":"1741:27:77"}]},"nodeType":"YulCase","src":"1731:39:77","value":"default"}],"expression":{"name":"result","nodeType":"YulIdentifier","src":"1613:6:77"},"nodeType":"YulSwitch","src":"1606:164:77"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":28077,"isOffset":false,"isSlot":false,"src":"1461:14:77","valueSize":1}],"id":28080,"nodeType":"InlineAssembly","src":"1017:763:77"}]},"documentation":{"id":28075,"nodeType":"StructuredDocumentation","src":"695:191:77","text":" @dev Delegates the current call to `implementation`.\n This function does not return to its internall call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_delegate","parameters":{"id":28078,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28077,"mutability":"mutable","name":"implementation","nodeType":"VariableDeclaration","scope":28082,"src":"910:22:77","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28076,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:77","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"909:24:77"},"returnParameters":{"id":28079,"nodeType":"ParameterList","parameters":[],"src":"951:0:77"},"scope":28123,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":28088,"nodeType":"FunctionDefinition","src":"1969:67:77","nodes":[],"documentation":{"id":28083,"nodeType":"StructuredDocumentation","src":"1792:172:77","text":" @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\n and {_fallback} should delegate."},"implemented":false,"kind":"function","modifiers":[],"name":"_implementation","parameters":{"id":28084,"nodeType":"ParameterList","parameters":[],"src":"1993:2:77"},"returnParameters":{"id":28087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":28086,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":28088,"src":"2027:7:77","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":28085,"name":"address","nodeType":"ElementaryTypeName","src":"2027:7:77","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2026:9:77"},"scope":28123,"stateMutability":"view","virtual":true,"visibility":"internal"},{"id":28101,"nodeType":"FunctionDefinition","src":"2265:110:77","nodes":[],"body":{"id":28100,"nodeType":"Block","src":"2303:72:77","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":28092,"name":"_beforeFallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28122,"src":"2313:15:77","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":28093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2313:17:77","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28094,"nodeType":"ExpressionStatement","src":"2313:17:77"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":28096,"name":"_implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28088,"src":"2350:15:77","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":28097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2350:17:77","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":28095,"name":"_delegate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28082,"src":"2340:9:77","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":28098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2340:28:77","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28099,"nodeType":"ExpressionStatement","src":"2340:28:77"}]},"documentation":{"id":28089,"nodeType":"StructuredDocumentation","src":"2042:218:77","text":" @dev Delegates the current call to the address returned by `_implementation()`.\n This function does not return to its internall call site, it will return directly to the external caller."},"implemented":true,"kind":"function","modifiers":[],"name":"_fallback","parameters":{"id":28090,"nodeType":"ParameterList","parameters":[],"src":"2283:2:77"},"returnParameters":{"id":28091,"nodeType":"ParameterList","parameters":[],"src":"2303:0:77"},"scope":28123,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"id":28109,"nodeType":"FunctionDefinition","src":"2572:65:77","nodes":[],"body":{"id":28108,"nodeType":"Block","src":"2609:28:77","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":28105,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28101,"src":"2619:9:77","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":28106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2619:11:77","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28107,"nodeType":"ExpressionStatement","src":"2619:11:77"}]},"documentation":{"id":28102,"nodeType":"StructuredDocumentation","src":"2381:186:77","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\n function in the contract matches the call data."},"implemented":true,"kind":"fallback","modifiers":[],"name":"","parameters":{"id":28103,"nodeType":"ParameterList","parameters":[],"src":"2581:2:77"},"returnParameters":{"id":28104,"nodeType":"ParameterList","parameters":[],"src":"2609:0:77"},"scope":28123,"stateMutability":"payable","virtual":true,"visibility":"external"},{"id":28117,"nodeType":"FunctionDefinition","src":"2797:64:77","nodes":[],"body":{"id":28116,"nodeType":"Block","src":"2833:28:77","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":28113,"name":"_fallback","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28101,"src":"2843:9:77","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":28114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2843:11:77","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28115,"nodeType":"ExpressionStatement","src":"2843:11:77"}]},"documentation":{"id":28110,"nodeType":"StructuredDocumentation","src":"2643:149:77","text":" @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\n is empty."},"implemented":true,"kind":"receive","modifiers":[],"name":"","parameters":{"id":28111,"nodeType":"ParameterList","parameters":[],"src":"2805:2:77"},"returnParameters":{"id":28112,"nodeType":"ParameterList","parameters":[],"src":"2833:0:77"},"scope":28123,"stateMutability":"payable","virtual":true,"visibility":"external"},{"id":28122,"nodeType":"FunctionDefinition","src":"3142:51:77","nodes":[],"body":{"id":28121,"nodeType":"Block","src":"3186:7:77","nodes":[],"statements":[]},"documentation":{"id":28118,"nodeType":"StructuredDocumentation","src":"2867:270:77","text":" @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\n call, or as part of the Solidity `fallback` or `receive` functions.\n If overriden should call `super._beforeFallback()`."},"implemented":true,"kind":"function","modifiers":[],"name":"_beforeFallback","parameters":{"id":28119,"nodeType":"ParameterList","parameters":[],"src":"3166:2:77"},"returnParameters":{"id":28120,"nodeType":"ParameterList","parameters":[],"src":"3186:0:77"},"scope":28123,"stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":28074,"nodeType":"StructuredDocumentation","src":"66:598:77","text":" @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\n instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\n be specified by overriding the virtual {_implementation} function.\n Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\n different contract through the {_delegate} function.\n The success and return data of the delegated call will be returned back to the caller of the proxy."},"fullyImplemented":false,"linearizedBaseContracts":[28123],"name":"Proxy","scope":28124}],"license":"MIT"},"id":77}