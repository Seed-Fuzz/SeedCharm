{"abi":[],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":\"ReentrancyGuardUpgradeable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/=node_modules/@chainlink/\",\":@ensdomains/=node_modules/@ensdomains/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@uniswap/v3-core/=node_modules/@uniswap/v3-core/\",\":@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/\",\":base64-sol/=node_modules/base64-sol/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305\",\"dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03\",\"dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x46034cd5cca740f636345c8f7aebae0f78adfd4b70e31e6f888cccbe1086586e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0b9f36bfde7168be120a14da6c8c54cde5e5df07b79c5239752e07e5fb1ac046\",\"dweb:/ipfs/QmZfEjoDzj3EfBkZB8X9dyBGt81tQ1KmFPuY3cz2yqWQDK\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.7.6+commit.7338295f"},"language":"Solidity","output":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@chainlink/=node_modules/@chainlink/","@ensdomains/=node_modules/@ensdomains/","@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/","@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/","@uniswap/v3-core/=node_modules/@uniswap/v3-core/","@uniswap/v3-periphery/=node_modules/@uniswap/v3-periphery/","base64-sol/=node_modules/base64-sol/","ds-test/=lib/forge-std/lib/ds-test/src/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat-deploy/=node_modules/hardhat-deploy/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":"ReentrancyGuardUpgradeable"},"evmVersion":"istanbul","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol":{"keccak256":"0xd8e4eb08dcc1d1860fb347ba5ffd595242b9a1b66d49a47f2b4cb51c3f35017e","urls":["bzz-raw://7dbc89479d30592e82442edc38053b380f611037a5e6ceafc7bf57a7aa1f0305","dweb:/ipfs/QmcdYtt56WmjeYvsFjK69FnahnAriw88VzY3XRZwXkQKKN"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol":{"keccak256":"0xfc5ea91fa9ceb1961023b2a6c978b902888c52b90847ac7813fe3b79524165f6","urls":["bzz-raw://a6b81dcc816857a9d981386f6d8de49198420ee41cdc0ecade366ab412174d03","dweb:/ipfs/QmV2vznMT6m9qo3pFMAWi3Nz3UDhwesgwFxeXe6Tod3v8A"],"license":"MIT"},"node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol":{"keccak256":"0x46034cd5cca740f636345c8f7aebae0f78adfd4b70e31e6f888cccbe1086586e","urls":["bzz-raw://0b9f36bfde7168be120a14da6c8c54cde5e5df07b79c5239752e07e5fb1ac046","dweb:/ipfs/QmZfEjoDzj3EfBkZB8X9dyBGt81tQ1KmFPuY3cz2yqWQDK"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/utils/ReentrancyGuardUpgradeable.sol","id":27481,"exportedSymbols":{"AddressUpgradeable":[27264],"Initializable":[25134],"ReentrancyGuardUpgradeable":[27480]},"nodeType":"SourceUnit","src":"33:2828:72","nodes":[{"id":27424,"nodeType":"PragmaDirective","src":"33:31:72","nodes":[],"literals":["solidity",">=","0.6",".0","<","0.8",".0"]},{"id":27425,"nodeType":"ImportDirective","src":"65:36:72","nodes":[],"absolutePath":"node_modules/@openzeppelin/contracts-upgradeable/proxy/Initializable.sol","file":"../proxy/Initializable.sol","scope":27481,"sourceUnit":25135,"symbolAliases":[],"unitAlias":""},{"id":27480,"nodeType":"ContractDefinition","src":"854:2006:72","nodes":[{"id":27431,"nodeType":"VariableDeclaration","src":"1670:41:72","nodes":[],"constant":true,"mutability":"constant","name":"_NOT_ENTERED","scope":27480,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27429,"name":"uint256","nodeType":"ElementaryTypeName","src":"1670:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":27430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1710:1:72","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":27434,"nodeType":"VariableDeclaration","src":"1717:37:72","nodes":[],"constant":true,"mutability":"constant","name":"_ENTERED","scope":27480,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27432,"name":"uint256","nodeType":"ElementaryTypeName","src":"1717:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":27433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1753:1:72","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":27436,"nodeType":"VariableDeclaration","src":"1761:23:72","nodes":[],"constant":false,"mutability":"mutable","name":"_status","scope":27480,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1761:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":27445,"nodeType":"FunctionDefinition","src":"1791:106:72","nodes":[],"body":{"id":27444,"nodeType":"Block","src":"1846:51:72","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":27441,"name":"__ReentrancyGuard_init_unchained","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27455,"src":"1856:32:72","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":27442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1856:34:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27443,"nodeType":"ExpressionStatement","src":"1856:34:72"}]},"implemented":true,"kind":"function","modifiers":[{"id":27439,"modifierName":{"id":27438,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25117,"src":"1834:11:72","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1834:11:72"}],"name":"__ReentrancyGuard_init","parameters":{"id":27437,"nodeType":"ParameterList","parameters":[],"src":"1822:2:72"},"returnParameters":{"id":27440,"nodeType":"ParameterList","parameters":[],"src":"1846:0:72"},"scope":27480,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":27455,"nodeType":"FunctionDefinition","src":"1903:104:72","nodes":[],"body":{"id":27454,"nodeType":"Block","src":"1968:39:72","nodes":[],"statements":[{"expression":{"id":27452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":27450,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27436,"src":"1978:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":27451,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27431,"src":"1988:12:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1978:22:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":27453,"nodeType":"ExpressionStatement","src":"1978:22:72"}]},"implemented":true,"kind":"function","modifiers":[{"id":27448,"modifierName":{"id":27447,"name":"initializer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25117,"src":"1956:11:72","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1956:11:72"}],"name":"__ReentrancyGuard_init_unchained","parameters":{"id":27446,"nodeType":"ParameterList","parameters":[],"src":"1944:2:72"},"returnParameters":{"id":27449,"nodeType":"ParameterList","parameters":[],"src":"1968:0:72"},"scope":27480,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":27475,"nodeType":"ModifierDefinition","src":"2382:445:72","nodes":[],"body":{"id":27474,"nodeType":"Block","src":"2406:421:72","nodes":[],"statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":27461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":27459,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27436,"src":"2495:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":27460,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27434,"src":"2506:8:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2495:19:72","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":27462,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2516:33:72","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":27458,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2487:7:72","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":27463,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2487:63:72","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":27464,"nodeType":"ExpressionStatement","src":"2487:63:72"},{"expression":{"id":27467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":27465,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27436,"src":"2625:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":27466,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27434,"src":"2635:8:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2625:18:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":27468,"nodeType":"ExpressionStatement","src":"2625:18:72"},{"id":27469,"nodeType":"PlaceholderStatement","src":"2654:1:72"},{"expression":{"id":27472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":27470,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27436,"src":"2798:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":27471,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27431,"src":"2808:12:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2798:22:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":27473,"nodeType":"ExpressionStatement","src":"2798:22:72"}]},"documentation":{"id":27456,"nodeType":"StructuredDocumentation","src":"2013:364:72","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."},"name":"nonReentrant","parameters":{"id":27457,"nodeType":"ParameterList","parameters":[],"src":"2403:2:72"},"virtual":false,"visibility":"internal"},{"id":27479,"nodeType":"VariableDeclaration","src":"2832:25:72","nodes":[],"constant":false,"mutability":"mutable","name":"__gap","scope":27480,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage","typeString":"uint256[49]"},"typeName":{"baseType":{"id":27476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2832:7:72","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":27478,"length":{"hexValue":"3439","id":27477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2840:2:72","typeDescriptions":{"typeIdentifier":"t_rational_49_by_1","typeString":"int_const 49"},"value":"49"},"nodeType":"ArrayTypeName","src":"2832:11:72","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$49_storage_ptr","typeString":"uint256[49]"}},"visibility":"private"}],"abstract":true,"baseContracts":[{"baseName":{"id":27427,"name":"Initializable","nodeType":"UserDefinedTypeName","referencedDeclaration":25134,"src":"902:13:72","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$25134","typeString":"contract Initializable"}},"id":27428,"nodeType":"InheritanceSpecifier","src":"902:13:72"}],"contractDependencies":[25134],"contractKind":"contract","documentation":{"id":27426,"nodeType":"StructuredDocumentation","src":"103:750:72","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[27480,25134],"name":"ReentrancyGuardUpgradeable","scope":27481}],"license":"MIT"},"id":72}