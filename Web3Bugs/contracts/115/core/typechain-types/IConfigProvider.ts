/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import {BytesLike} from "@ethersproject/bytes";
import {Listener, Provider} from "@ethersproject/providers";
import {FunctionFragment, EventFragment, Result} from "@ethersproject/abi";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
} from "./common";

export type CollateralConfigStruct = {
  collateralType: string;
  debtLimit: BigNumberish;
  liquidationRatio: BigNumberish;
  minCollateralRatio: BigNumberish;
  borrowRate: BigNumberish;
  originationFee: BigNumberish;
  liquidationBonus: BigNumberish;
  liquidationFee: BigNumberish;
};

export type CollateralConfigStructOutput = [
  string,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber,
  BigNumber
] & {
  collateralType: string;
  debtLimit: BigNumber;
  liquidationRatio: BigNumber;
  minCollateralRatio: BigNumber;
  borrowRate: BigNumber;
  originationFee: BigNumber;
  liquidationBonus: BigNumber;
  liquidationFee: BigNumber;
};

export interface IConfigProviderInterface extends ethers.utils.Interface {
  functions: {
    "a()": FunctionFragment;
    "collateralBorrowRate(address)": FunctionFragment;
    "collateralConfigs(uint256)": FunctionFragment;
    "collateralDebtLimit(address)": FunctionFragment;
    "collateralIds(address)": FunctionFragment;
    "collateralLiquidationBonus(address)": FunctionFragment;
    "collateralLiquidationFee(address)": FunctionFragment;
    "collateralLiquidationRatio(address)": FunctionFragment;
    "collateralMinCollateralRatio(address)": FunctionFragment;
    "collateralOriginationFee(address)": FunctionFragment;
    "maxVotingPeriod()": FunctionFragment;
    "minVotingPeriod()": FunctionFragment;
    "numCollateralConfigs()": FunctionFragment;
    "proposalThreshold()": FunctionFragment;
    "removeCollateral(address)": FunctionFragment;
    "setCollateralBorrowRate(address,uint256)": FunctionFragment;
    "setCollateralConfig(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": FunctionFragment;
    "setCollateralDebtLimit(address,uint256)": FunctionFragment;
    "setCollateralLiquidationBonus(address,uint256)": FunctionFragment;
    "setCollateralLiquidationFee(address,uint256)": FunctionFragment;
    "setCollateralLiquidationRatio(address,uint256)": FunctionFragment;
    "setCollateralMinCollateralRatio(address,uint256)": FunctionFragment;
    "setCollateralOriginationFee(address,uint256)": FunctionFragment;
    "setMaxVotingPeriod(uint256)": FunctionFragment;
    "setMinVotingPeriod(uint256)": FunctionFragment;
    "setProposalThreshold(uint256)": FunctionFragment;
    "setVotingQuorum(uint256)": FunctionFragment;
    "votingQuorum()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "a", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "collateralBorrowRate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralConfigs",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralDebtLimit",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralIds",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralLiquidationBonus",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralLiquidationFee",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralLiquidationRatio",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralMinCollateralRatio",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "collateralOriginationFee",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "maxVotingPeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "minVotingPeriod",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "numCollateralConfigs",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "proposalThreshold",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeCollateral",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralBorrowRate",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralConfig",
    values: [
      string,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralDebtLimit",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralLiquidationBonus",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralLiquidationFee",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralLiquidationRatio",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralMinCollateralRatio",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setCollateralOriginationFee",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMaxVotingPeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setMinVotingPeriod",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setProposalThreshold",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "setVotingQuorum",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "votingQuorum",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "a", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "collateralBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralConfigs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralDebtLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralLiquidationBonus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralLiquidationFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralLiquidationRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralMinCollateralRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "collateralOriginationFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "maxVotingPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "minVotingPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "numCollateralConfigs",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proposalThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeCollateral",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralBorrowRate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralConfig",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralDebtLimit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralLiquidationBonus",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralLiquidationFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralLiquidationRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralMinCollateralRatio",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setCollateralOriginationFee",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMaxVotingPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setMinVotingPeriod",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProposalThreshold",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setVotingQuorum",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "votingQuorum",
    data: BytesLike
  ): Result;

  events: {
    "CollateralRemoved(address)": EventFragment;
    "CollateralUpdated(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "CollateralRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "CollateralUpdated"): EventFragment;
}

export type CollateralRemovedEvent = TypedEvent<
  [string],
  {collateralType: string}
>;

export type CollateralRemovedEventFilter =
  TypedEventFilter<CollateralRemovedEvent>;

export type CollateralUpdatedEvent = TypedEvent<
  [
    string,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber,
    BigNumber
  ],
  {
    collateralType: string;
    debtLimit: BigNumber;
    liquidationRatio: BigNumber;
    minCollateralRatio: BigNumber;
    borrowRate: BigNumber;
    originationFee: BigNumber;
    liquidationBonus: BigNumber;
    liquidationFee: BigNumber;
  }
>;

export type CollateralUpdatedEventFilter =
  TypedEventFilter<CollateralUpdatedEvent>;

export interface IConfigProvider extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: IConfigProviderInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    a(overrides?: CallOverrides): Promise<[string]>;

    collateralBorrowRate(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralConfigs(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[CollateralConfigStructOutput]>;

    collateralDebtLimit(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralIds(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralLiquidationBonus(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralLiquidationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralLiquidationRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralMinCollateralRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    collateralOriginationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    maxVotingPeriod(overrides?: CallOverrides): Promise<[BigNumber]>;

    minVotingPeriod(overrides?: CallOverrides): Promise<[BigNumber]>;

    numCollateralConfigs(overrides?: CallOverrides): Promise<[BigNumber]>;

    proposalThreshold(overrides?: CallOverrides): Promise<[BigNumber]>;

    removeCollateral(
      _collateralType: string,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralBorrowRate(
      _collateralType: string,
      _borrowRate: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralConfig(
      _collateralType: string,
      _debtLimit: BigNumberish,
      _liquidationRatio: BigNumberish,
      _minCollateralRatio: BigNumberish,
      _borrowRate: BigNumberish,
      _originationFee: BigNumberish,
      _liquidationBonus: BigNumberish,
      _liquidationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralDebtLimit(
      _collateralType: string,
      _debtLimit: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralLiquidationBonus(
      _collateralType: string,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralLiquidationFee(
      _collateralType: string,
      _liquidationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralLiquidationRatio(
      _collateralType: string,
      _liquidationRatio: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralMinCollateralRatio(
      _collateralType: string,
      _minCollateralRatio: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setCollateralOriginationFee(
      _collateralType: string,
      _originationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setMaxVotingPeriod(
      _maxVotingPeriod: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setMinVotingPeriod(
      _minVotingPeriod: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setProposalThreshold(
      _proposalThreshold: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    setVotingQuorum(
      _votingQuorum: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<ContractTransaction>;

    votingQuorum(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  a(overrides?: CallOverrides): Promise<string>;

  collateralBorrowRate(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralConfigs(
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<CollateralConfigStructOutput>;

  collateralDebtLimit(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralIds(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralLiquidationBonus(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralLiquidationFee(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralLiquidationRatio(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralMinCollateralRatio(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  collateralOriginationFee(
    _collateralType: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  maxVotingPeriod(overrides?: CallOverrides): Promise<BigNumber>;

  minVotingPeriod(overrides?: CallOverrides): Promise<BigNumber>;

  numCollateralConfigs(overrides?: CallOverrides): Promise<BigNumber>;

  proposalThreshold(overrides?: CallOverrides): Promise<BigNumber>;

  removeCollateral(
    _collateralType: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralBorrowRate(
    _collateralType: string,
    _borrowRate: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralConfig(
    _collateralType: string,
    _debtLimit: BigNumberish,
    _liquidationRatio: BigNumberish,
    _minCollateralRatio: BigNumberish,
    _borrowRate: BigNumberish,
    _originationFee: BigNumberish,
    _liquidationBonus: BigNumberish,
    _liquidationFee: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralDebtLimit(
    _collateralType: string,
    _debtLimit: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralLiquidationBonus(
    _collateralType: string,
    _liquidationBonus: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralLiquidationFee(
    _collateralType: string,
    _liquidationFee: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralLiquidationRatio(
    _collateralType: string,
    _liquidationRatio: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralMinCollateralRatio(
    _collateralType: string,
    _minCollateralRatio: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setCollateralOriginationFee(
    _collateralType: string,
    _originationFee: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setMaxVotingPeriod(
    _maxVotingPeriod: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setMinVotingPeriod(
    _minVotingPeriod: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setProposalThreshold(
    _proposalThreshold: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  setVotingQuorum(
    _votingQuorum: BigNumberish,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<ContractTransaction>;

  votingQuorum(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    a(overrides?: CallOverrides): Promise<string>;

    collateralBorrowRate(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralConfigs(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<CollateralConfigStructOutput>;

    collateralDebtLimit(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralIds(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralLiquidationBonus(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralLiquidationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralLiquidationRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralMinCollateralRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralOriginationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxVotingPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    minVotingPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    numCollateralConfigs(overrides?: CallOverrides): Promise<BigNumber>;

    proposalThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    removeCollateral(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralBorrowRate(
      _collateralType: string,
      _borrowRate: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralConfig(
      _collateralType: string,
      _debtLimit: BigNumberish,
      _liquidationRatio: BigNumberish,
      _minCollateralRatio: BigNumberish,
      _borrowRate: BigNumberish,
      _originationFee: BigNumberish,
      _liquidationBonus: BigNumberish,
      _liquidationFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralDebtLimit(
      _collateralType: string,
      _debtLimit: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralLiquidationBonus(
      _collateralType: string,
      _liquidationBonus: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralLiquidationFee(
      _collateralType: string,
      _liquidationFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralLiquidationRatio(
      _collateralType: string,
      _liquidationRatio: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralMinCollateralRatio(
      _collateralType: string,
      _minCollateralRatio: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setCollateralOriginationFee(
      _collateralType: string,
      _originationFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMaxVotingPeriod(
      _maxVotingPeriod: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setMinVotingPeriod(
      _minVotingPeriod: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setProposalThreshold(
      _proposalThreshold: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setVotingQuorum(
      _votingQuorum: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    votingQuorum(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {
    "CollateralRemoved(address)"(
      collateralType?: string | null
    ): CollateralRemovedEventFilter;
    CollateralRemoved(
      collateralType?: string | null
    ): CollateralRemovedEventFilter;

    "CollateralUpdated(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256)"(
      collateralType?: string | null,
      debtLimit?: null,
      liquidationRatio?: null,
      minCollateralRatio?: null,
      borrowRate?: null,
      originationFee?: null,
      liquidationBonus?: null,
      liquidationFee?: null
    ): CollateralUpdatedEventFilter;
    CollateralUpdated(
      collateralType?: string | null,
      debtLimit?: null,
      liquidationRatio?: null,
      minCollateralRatio?: null,
      borrowRate?: null,
      originationFee?: null,
      liquidationBonus?: null,
      liquidationFee?: null
    ): CollateralUpdatedEventFilter;
  };

  estimateGas: {
    a(overrides?: CallOverrides): Promise<BigNumber>;

    collateralBorrowRate(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralConfigs(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralDebtLimit(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralIds(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralLiquidationBonus(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralLiquidationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralLiquidationRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralMinCollateralRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    collateralOriginationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    maxVotingPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    minVotingPeriod(overrides?: CallOverrides): Promise<BigNumber>;

    numCollateralConfigs(overrides?: CallOverrides): Promise<BigNumber>;

    proposalThreshold(overrides?: CallOverrides): Promise<BigNumber>;

    removeCollateral(
      _collateralType: string,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralBorrowRate(
      _collateralType: string,
      _borrowRate: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralConfig(
      _collateralType: string,
      _debtLimit: BigNumberish,
      _liquidationRatio: BigNumberish,
      _minCollateralRatio: BigNumberish,
      _borrowRate: BigNumberish,
      _originationFee: BigNumberish,
      _liquidationBonus: BigNumberish,
      _liquidationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralDebtLimit(
      _collateralType: string,
      _debtLimit: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralLiquidationBonus(
      _collateralType: string,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralLiquidationFee(
      _collateralType: string,
      _liquidationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralLiquidationRatio(
      _collateralType: string,
      _liquidationRatio: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralMinCollateralRatio(
      _collateralType: string,
      _minCollateralRatio: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setCollateralOriginationFee(
      _collateralType: string,
      _originationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setMaxVotingPeriod(
      _maxVotingPeriod: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setMinVotingPeriod(
      _minVotingPeriod: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setProposalThreshold(
      _proposalThreshold: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    setVotingQuorum(
      _votingQuorum: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<BigNumber>;

    votingQuorum(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    a(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    collateralBorrowRate(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralConfigs(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralDebtLimit(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralIds(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralLiquidationBonus(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralLiquidationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralLiquidationRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralMinCollateralRatio(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    collateralOriginationFee(
      _collateralType: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    maxVotingPeriod(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    minVotingPeriod(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    numCollateralConfigs(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    proposalThreshold(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    removeCollateral(
      _collateralType: string,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralBorrowRate(
      _collateralType: string,
      _borrowRate: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralConfig(
      _collateralType: string,
      _debtLimit: BigNumberish,
      _liquidationRatio: BigNumberish,
      _minCollateralRatio: BigNumberish,
      _borrowRate: BigNumberish,
      _originationFee: BigNumberish,
      _liquidationBonus: BigNumberish,
      _liquidationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralDebtLimit(
      _collateralType: string,
      _debtLimit: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralLiquidationBonus(
      _collateralType: string,
      _liquidationBonus: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralLiquidationFee(
      _collateralType: string,
      _liquidationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralLiquidationRatio(
      _collateralType: string,
      _liquidationRatio: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralMinCollateralRatio(
      _collateralType: string,
      _minCollateralRatio: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setCollateralOriginationFee(
      _collateralType: string,
      _originationFee: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setMaxVotingPeriod(
      _maxVotingPeriod: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setMinVotingPeriod(
      _minVotingPeriod: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setProposalThreshold(
      _proposalThreshold: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    setVotingQuorum(
      _votingQuorum: BigNumberish,
      overrides?: Overrides & {from?: string | Promise<string>}
    ): Promise<PopulatedTransaction>;

    votingQuorum(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
