/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import {Provider} from "@ethersproject/providers";
import type {
  IAddressProvider,
  IAddressProviderInterface,
} from "../IAddressProvider";

const _abi = [
  {
    inputs: [],
    name: "config",
    outputs: [
      {
        internalType: "contract IConfigProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IAccessController",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "core",
    outputs: [
      {
        internalType: "contract IVaultsCore",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "feeDistributor",
    outputs: [
      {
        internalType: "contract IFeeDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "liquidationManager",
    outputs: [
      {
        internalType: "contract ILiquidationManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeed",
    outputs: [
      {
        internalType: "contract IPriceFeed",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ratesManager",
    outputs: [
      {
        internalType: "contract IRatesManager",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IAccessController",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setAccessController",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IConfigProvider",
        name: "_config",
        type: "address",
      },
    ],
    name: "setConfigProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeDistributor",
        name: "_feeDistributor",
        type: "address",
      },
    ],
    name: "setFeeDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ILiquidationManager",
        name: "_liquidationManager",
        type: "address",
      },
    ],
    name: "setLiquidationManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IPriceFeed",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "setPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IRatesManager",
        name: "_ratesManager",
        type: "address",
      },
    ],
    name: "setRatesManager",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract ISTABLEX",
        name: "_stablex",
        type: "address",
      },
    ],
    name: "setStableX",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVaultsCore",
        name: "_core",
        type: "address",
      },
    ],
    name: "setVaultsCore",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IVaultsDataProvider",
        name: "_vaultsData",
        type: "address",
      },
    ],
    name: "setVaultsDataProvider",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stablex",
    outputs: [
      {
        internalType: "contract ISTABLEX",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultsData",
    outputs: [
      {
        internalType: "contract IVaultsDataProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IAddressProvider__factory {
  static readonly abi = _abi;
  static createInterface(): IAddressProviderInterface {
    return new utils.Interface(_abi) as IAddressProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAddressProvider {
    return new Contract(address, _abi, signerOrProvider) as IAddressProvider;
  }
}
