/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Contract, Signer, utils} from "ethers";
import {Provider} from "@ethersproject/providers";
import type {
  IInceptionVaultFactory,
  IInceptionVaultFactoryInterface,
} from "../IInceptionVaultFactory";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IAdminInceptionVault",
        name: "adminInceptionVault",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IInceptionVaultsCore",
        name: "inceptionVaultsCore",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IInceptionVaultsDataProvider",
        name: "inceptionVaultsDataProvider",
        type: "address",
      },
      {
        indexed: false,
        internalType: "contract IInceptionVaultPriceFeed",
        name: "inceptionVaultPriceFeed",
        type: "address",
      },
    ],
    name: "InceptionVaultDeployed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint16",
        name: "_id",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "PriceFeedAdded",
    type: "event",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "addPriceFeed",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "adminInceptionVaultBase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "liquidationRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minCollateralRatio",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "borrowRate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "originationFee",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationBonus",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidationFee",
            type: "uint256",
          },
        ],
        internalType: "struct IInceptionVaultsCore.VaultConfig",
        name: "_vaultConfig",
        type: "tuple",
      },
      {
        internalType: "contract IERC20",
        name: "_inceptionCollateral",
        type: "address",
      },
      {
        internalType: "address",
        name: "_inceptionVaultPriceFeed",
        type: "address",
      },
      {
        internalType: "address",
        name: "_assetOracle",
        type: "address",
      },
    ],
    name: "cloneInceptionVault",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "debtNotifier",
    outputs: [
      {
        internalType: "contract IDebtNotifier",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inceptionVaultCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "inceptionVaults",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "contract IAdminInceptionVault",
            name: "adminInceptionVault",
            type: "address",
          },
          {
            internalType: "contract IInceptionVaultsCore",
            name: "inceptionVaultsCore",
            type: "address",
          },
          {
            internalType: "contract IInceptionVaultsDataProvider",
            name: "inceptionVaultsDataProvider",
            type: "address",
          },
          {
            internalType: "contract IInceptionVaultPriceFeed",
            name: "inceptionVaultPriceFeed",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isCustomPriceFeed",
            type: "bool",
          },
        ],
        internalType: "struct IInceptionVaultFactory.InceptionVault",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inceptionVaultsCoreBase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "inceptionVaultsDataProviderBase",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "mimo",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "priceFeedCount",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_priceFeed",
        type: "address",
      },
    ],
    name: "priceFeedIds",
    outputs: [
      {
        internalType: "uint16",
        name: "",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_id",
        type: "uint8",
      },
    ],
    name: "priceFeeds",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "contract IWETH",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IInceptionVaultFactory__factory {
  static readonly abi = _abi;
  static createInterface(): IInceptionVaultFactoryInterface {
    return new utils.Interface(_abi) as IInceptionVaultFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IInceptionVaultFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as IInceptionVaultFactory;
  }
}
