/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {MIMO, MIMOInterface} from "../MIMO";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGovernanceAddressProvider",
        name: "_a",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MIMO_MINTER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "contract IGovernanceAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200121a3803806200121a833981016040819052620000349162000197565b604080518082018252601e81527f4d494d4f20506172616c6c656c20476f7665726e616e636520546f6b656e00006020808301918252835180850190945260048452634d494d4f60e01b9084015281519192916200009591600391620000fb565b508051620000ab906004906020840190620000fb565b50506005805460ff19166012179055506001600160a01b038116620000cf57600080fd5b600580546001600160a01b0390921661010002610100600160a81b0319909216919091179055620001c7565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200013e57805160ff19168380011785556200016e565b828001600101855582156200016e579182015b828111156200016e57825182559160200191906001019062000151565b506200017c92915062000180565b5090565b5b808211156200017c576000815560010162000181565b600060208284031215620001a9578081fd5b81516001600160a01b0381168114620001c0578182fd5b9392505050565b61104380620001d76000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806339509351116100975780639dc29fac116100665780639dc29fac146101d5578063a457c2d7146101e8578063a9059cbb146101fb578063dd62ed3e1461020e576100f5565b8063395093511461019257806340c10f19146101a557806370a08231146101ba57806395d89b41146101cd576100f5565b806318160ddd116100d357806318160ddd1461014d578063223a5d9e1461016257806323b872dd1461016a578063313ce5671461017d576100f5565b806306fdde03146100fa578063095ea7b3146101185780630dbe671f14610138575b600080fd5b610102610221565b60405161010f9190610cd4565b60405180910390f35b61012b610126366004610c2e565b6102b7565b60405161010f9190610c95565b6101406102d4565b60405161010f9190610cc0565b6101556102e8565b60405161010f9190610ca0565b6101556102ee565b61012b610178366004610bee565b610312565b610185610399565b60405161010f9190610f52565b61012b6101a0366004610c2e565b6103a2565b6101b86101b3366004610c2e565b6103f0565b005b6101556101c8366004610b9a565b610546565b610102610561565b6101b86101e3366004610c2e565b6105c2565b61012b6101f6366004610c2e565b61070b565b61012b610209366004610c2e565b610773565b61015561021c366004610bb6565b610787565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102ad5780601f10610282576101008083540402835291602001916102ad565b820191906000526020600020905b81548152906001019060200180831161029057829003601f168201915b5050505050905090565b60006102cb6102c46107b2565b84846107b6565b50600192915050565b60055461010090046001600160a01b031681565b60025490565b7f4c29d7f5857f3c7f97c7b625940b3ccfaf84a94a4fdb2ecfd73db0fabbffd68d81565b600061031f84848461086a565b61038f8461032b6107b2565b61038a85604051806060016040528060288152602001610fc1602891396001600160a01b038a166000908152600160205260408120906103696107b2565b6001600160a01b03168152602081019190915260400160002054919061097f565b6107b6565b5060019392505050565b60055460ff1690565b60006102cb6103af6107b2565b8461038a85600160006103c06107b2565b6001600160a01b03908116825260208083019390935260409182016000908120918c1681529252902054906109ab565b600560019054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561043e57600080fd5b505afa158015610452573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104769190610c79565b6001600160a01b03166391d148547f4c29d7f5857f3c7f97c7b625940b3ccfaf84a94a4fdb2ecfd73db0fabbffd68d336040518363ffffffff1660e01b81526004016104c3929190610ca9565b60206040518083038186803b1580156104db57600080fd5b505afa1580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190610c59565b6105385760405162461bcd60e51b815260040161052f90610e1a565b60405180910390fd5b61054282826109d7565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156102ad5780601f10610282576101008083540402835291602001916102ad565b600560019054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561061057600080fd5b505afa158015610624573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106489190610c79565b6001600160a01b03166391d148547f4c29d7f5857f3c7f97c7b625940b3ccfaf84a94a4fdb2ecfd73db0fabbffd68d336040518363ffffffff1660e01b8152600401610695929190610ca9565b60206040518083038186803b1580156106ad57600080fd5b505afa1580156106c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106e59190610c59565b6107015760405162461bcd60e51b815260040161052f90610e1a565b6105428282610a97565b60006102cb6107186107b2565b8461038a85604051806060016040528060258152602001610fe960259139600160006107426107b2565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919061097f565b60006102cb6107806107b2565b848461086a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166107dc5760405162461bcd60e51b815260040161052f90610ed7565b6001600160a01b0382166108025760405162461bcd60e51b815260040161052f90610d6a565b6001600160a01b0380841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259061085d908590610ca0565b60405180910390a3505050565b6001600160a01b0383166108905760405162461bcd60e51b815260040161052f90610e92565b6001600160a01b0382166108b65760405162461bcd60e51b815260040161052f90610d27565b6108c1838383610b6d565b6108fe81604051806060016040528060268152602001610f9b602691396001600160a01b038616600090815260208190526040902054919061097f565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461092d90826109ab565b6001600160a01b0380841660008181526020819052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061085d908590610ca0565b600081848411156109a35760405162461bcd60e51b815260040161052f9190610cd4565b505050900390565b6000828201838110156109d05760405162461bcd60e51b815260040161052f90610dac565b9392505050565b6001600160a01b0382166109fd5760405162461bcd60e51b815260040161052f90610f1b565b610a0960008383610b6d565b600254610a1690826109ab565b6002556001600160a01b038216600090815260208190526040902054610a3c90826109ab565b6001600160a01b0383166000818152602081905260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a8b908590610ca0565b60405180910390a35050565b6001600160a01b038216610abd5760405162461bcd60e51b815260040161052f90610e51565b610ac982600083610b6d565b610b0681604051806060016040528060228152602001610f79602291396001600160a01b038516600090815260208190526040902054919061097f565b6001600160a01b038316600090815260208190526040902055600254610b2c9082610b72565b6002556040516000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610a8b908590610ca0565b505050565b600082821115610b945760405162461bcd60e51b815260040161052f90610de3565b50900390565b600060208284031215610bab578081fd5b81356109d081610f60565b60008060408385031215610bc8578081fd5b8235610bd381610f60565b91506020830135610be381610f60565b809150509250929050565b600080600060608486031215610c02578081fd5b8335610c0d81610f60565b92506020840135610c1d81610f60565b929592945050506040919091013590565b60008060408385031215610c40578182fd5b8235610c4b81610f60565b946020939093013593505050565b600060208284031215610c6a578081fd5b815180151581146109d0578182fd5b600060208284031215610c8a578081fd5b81516109d081610f60565b901515815260200190565b90815260200190565b9182526001600160a01b0316602082015260400190565b6001600160a01b0391909116815260200190565b6000602080835283518082850152825b81811015610d0057858101830151858201604001528201610ce4565b81811115610d115783604083870101525b50601f01601f1916929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604082015261737360f01b606082015260800190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526019908201527f43616c6c6572206973206e6f74204d494d4f204d696e74657200000000000000604082015260600190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604082015264647265737360d81b606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646040820152637265737360e01b606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b60ff91909116815260200190565b6001600160a01b0381168114610f7557600080fd5b5056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c047adbd6cb9e4ab9c7054defdaeed53c062c77f6ca170c41059280ccd8a210364736f6c634300060c0033";

type MIMOConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MIMOConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MIMO__factory extends ContractFactory {
  constructor(...args: MIMOConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _a: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<MIMO> {
    return super.deploy(_a, overrides || {}) as Promise<MIMO>;
  }
  getDeployTransaction(
    _a: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(_a, overrides || {});
  }
  attach(address: string): MIMO {
    return super.attach(address) as MIMO;
  }
  connect(signer: Signer): MIMO__factory {
    return super.connect(signer) as MIMO__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MIMOInterface {
    return new utils.Interface(_abi) as MIMOInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): MIMO {
    return new Contract(address, _abi, signerOrProvider) as MIMO;
  }
}
