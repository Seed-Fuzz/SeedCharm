/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {
  MockBalancerVault,
  MockBalancerVaultInterface,
} from "../MockBalancerVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "address[2]",
        name: "_tokens",
        type: "address[2]",
      },
      {
        internalType: "address",
        name: "_pool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "balances",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "getPool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "enum IBalancerVault.PoolSpecialization",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "poolId",
        type: "bytes32",
      },
    ],
    name: "getPoolTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "_balances",
        type: "uint256[]",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pool",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256[2]",
        name: "_balances",
        type: "uint256[2]",
      },
    ],
    name: "setBalances",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tokens",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104f53803806104f58339818101604052606081101561003357600080fd5b506040810151610046600083600261006d565b50600480546001600160a01b0319166001600160a01b0392909216919091179055506100e4565b82600281019282156100b5579160200282015b828111156100b557825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190610080565b506100c19291506100c5565b5090565b5b808211156100c15780546001600160a01b03191681556001016100c6565b610402806100f36000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806316f0115b146100675780634903b0d11461008b5780634f64b2be146100ba578063b8755b60146100d7578063f6c0092714610124578063f94d466814610172575b600080fd5b61006f61022f565b604080516001600160a01b039092168252519081900360200190f35b6100a8600480360360208110156100a157600080fd5b503561023e565b60408051918252519081900360200190f35b61006f600480360360208110156100d057600080fd5b5035610252565b610122600480360360408110156100ed57600080fd5b6040805180820182529183019291818301918390600290839083908082843760009201919091525091945061026f9350505050565b005b6101416004803603602081101561013a57600080fd5b503561027f565b60405180836001600160a01b0316815260200182600281111561016057fe5b81526020019250505060405180910390f35b61018f6004803603602081101561018857600080fd5b5035610292565b604051808060200180602001848152602001838103835286818151815260200191508051906020019060200280838360005b838110156101d95781810151838201526020016101c1565b50505050905001838103825285818151815260200191508051906020019060200280838360005b83811015610218578181015183820152602001610200565b505050509050019550505050505060405180910390f35b6004546001600160a01b031681565b6002816002811061024b57fe5b0154905081565b6000816002811061025f57fe5b01546001600160a01b0316905081565b61027b60028281610379565b5050565b6004546001600160a01b03166002915091565b6040805160028082526060828101909352829160009181602001602082028036833750506000805483519396506001600160a01b0316928692506102d257fe5b6001600160a01b03928316602091820292909201015260018054855192169185919081106102fc57fe5b6001600160a01b03929092166020928302919091018201526040805160028082526060820183529092909190830190803683370190505091506002600001548260008151811061034857fe5b60209081029190910101526002600101548260018151811061036657fe5b6020026020010181815250509193909250565b82600281019282156103a7579160200282015b828111156103a757825182559160200191906001019061038c565b506103b39291506103b7565b5090565b5b808211156103b357600081556001016103b856fea2646970667358221220c668d6fd3bdc84948879785e13d02539655fd0a8dca609637b8bbbffc27aa42c64736f6c634300060c0033";

type MockBalancerVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MockBalancerVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MockBalancerVault__factory extends ContractFactory {
  constructor(...args: MockBalancerVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _tokens: [string, string],
    _pool: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<MockBalancerVault> {
    return super.deploy(
      _tokens,
      _pool,
      overrides || {}
    ) as Promise<MockBalancerVault>;
  }
  getDeployTransaction(
    _tokens: [string, string],
    _pool: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(_tokens, _pool, overrides || {});
  }
  attach(address: string): MockBalancerVault {
    return super.attach(address) as MockBalancerVault;
  }
  connect(signer: Signer): MockBalancerVault__factory {
    return super.connect(signer) as MockBalancerVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockBalancerVaultInterface {
    return new utils.Interface(_abi) as MockBalancerVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockBalancerVault {
    return new Contract(address, _abi, signerOrProvider) as MockBalancerVault;
  }
}
