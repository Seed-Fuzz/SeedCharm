/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {RepayVault, RepayVaultInterface} from "../RepayVault";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_addresses",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "REPAY_PER_VAULT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "repay",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610c00380380610c0083398101604081905261002f91610067565b6001600160a01b03811661004257600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055610095565b600060208284031215610078578081fd5b81516001600160a01b038116811461008e578182fd5b9392505050565b610b5c806100a46000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80630dbe671f146100465780633a40386614610064578063402d888314610079575b600080fd5b61004e610083565b60405161005b919061095e565b60405180910390f35b61006c610092565b60405161005b9190610acb565b61008161009e565b005b6000546001600160a01b031681565b678ac7230489e8000081565b60008054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b1580156100ea57600080fd5b505afa1580156100fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101229190610926565b6001600160a01b03166391d1485460008054906101000a90046001600160a01b03166001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b15801561017c57600080fd5b505afa158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b49190610926565b6001600160a01b031663ec87621c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156101ec57600080fd5b505afa158015610200573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610224919061090e565b336040518363ffffffff1660e01b815260040161024292919061098b565b60206040518083038186803b15801561025a57600080fd5b505afa15801561026e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029291906108ee565b6102b75760405162461bcd60e51b81526004016102ae90610a1b565b60405180910390fd5b60008060009054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b15801561030657600080fd5b505afa15801561031a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033e9190610926565b905060008060009054906101000a90046001600160a01b03166001600160a01b03166365d552876040518163ffffffff1660e01b815260040160206040518083038186803b15801561038f57600080fd5b505afa1580156103a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c79190610926565b905060008060009054906101000a90046001600160a01b03166001600160a01b03166365d552876040518163ffffffff1660e01b815260040160206040518083038186803b15801561041857600080fd5b505afa15801561042c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104509190610926565b6001600160a01b031663a7c6a1006040518163ffffffff1660e01b815260040160206040518083038186803b15801561048857600080fd5b505afa15801561049c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c0919061090e565b905060015b8181116105ca5760405163c8c5c81560e01b81526000906001600160a01b0385169063c8c5c815906104fb908590600401610acb565b60206040518083038186803b15801561051357600080fd5b505afa158015610527573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061054b919061090e565b90508061055857506105c2565b60405163d8aed14560e01b81526001600160a01b0386169063d8aed1459061058e908590678ac7230489e8000090600401610ad4565b600060405180830381600087803b1580156105a857600080fd5b505af11580156105bc573d6000803e3d6000fd5b50505050505b6001016104c5565b5060008060009054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b815260040160206040518083038186803b15801561061a57600080fd5b505afa15801561062e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106529190610926565b90506106e533826001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610684919061095e565b60206040518083038186803b15801561069c57600080fd5b505afa1580156106b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d4919061090e565b6001600160a01b03841691906106eb565b50505050565b6107418363a9059cbb60e01b848460405160240161070a929190610972565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610746565b505050565b606061079b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107d59092919063ffffffff16565b80519091501561074157808060200190518101906107b991906108ee565b6107415760405162461bcd60e51b81526004016102ae90610a81565b60606107e484846000856107ee565b90505b9392505050565b6060824710156108105760405162461bcd60e51b81526004016102ae906109d5565b610819856108af565b6108355760405162461bcd60e51b81526004016102ae90610a4a565b60006060866001600160a01b031685876040516108529190610942565b60006040518083038185875af1925050503d806000811461088f576040519150601f19603f3d011682016040523d82523d6000602084013e610894565b606091505b50915091506108a48282866108b5565b979650505050505050565b3b151590565b606083156108c45750816107e7565b8251156108d45782518084602001fd5b8160405162461bcd60e51b81526004016102ae91906109a2565b6000602082840312156108ff578081fd5b815180151581146107e7578182fd5b60006020828403121561091f578081fd5b5051919050565b600060208284031215610937578081fd5b81516107e781610b0e565b60008251610954818460208701610ae2565b9190910192915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b9182526001600160a01b0316602082015260400190565b60006020825282518060208401526109c1816040850160208701610ae2565b601f01601f19169190910160400192915050565b60208082526026908201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6040820152651c8818d85b1b60d21b606082015260800190565b60208082526015908201527421b0b63632b91034b9903737ba1026b0b730b3b2b960591b604082015260600190565b6020808252601d908201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604082015260600190565b6020808252602a908201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6040820152691bdd081cdd58d8d9595960b21b606082015260800190565b90815260200190565b918252602082015260400190565b60005b83811015610afd578181015183820152602001610ae5565b838111156106e55750506000910152565b6001600160a01b0381168114610b2357600080fd5b5056fea26469706673582212207a25789dd98e166435da6918a8d953890be6ea198cf2b95c168e26181122c66564736f6c634300060c0033";

type RepayVaultConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: RepayVaultConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class RepayVault__factory extends ContractFactory {
  constructor(...args: RepayVaultConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _addresses: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<RepayVault> {
    return super.deploy(_addresses, overrides || {}) as Promise<RepayVault>;
  }
  getDeployTransaction(
    _addresses: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(_addresses, overrides || {});
  }
  attach(address: string): RepayVault {
    return super.attach(address) as RepayVault;
  }
  connect(signer: Signer): RepayVault__factory {
    return super.connect(signer) as RepayVault__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): RepayVaultInterface {
    return new utils.Interface(_abi) as RepayVaultInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): RepayVault {
    return new Contract(address, _abi, signerOrProvider) as RepayVault;
  }
}
