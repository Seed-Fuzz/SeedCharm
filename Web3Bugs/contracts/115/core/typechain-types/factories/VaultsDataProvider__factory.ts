/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {
  VaultsDataProvider,
  VaultsDataProviderInterface,
} from "../VaultsDataProvider";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IAddressProvider",
        name: "_addresses",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "contract IAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "baseDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralType",
        type: "address",
      },
    ],
    name: "collateralDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralType",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "createVault",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "debt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newBaseDebt",
        type: "uint256",
      },
    ],
    name: "setBaseDebt",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_balance",
        type: "uint256",
      },
    ],
    name: "setCollateralBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "vaultBaseDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "vaultCollateralBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "vaultCollateralType",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "vaultCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_vaultId",
        type: "uint256",
      },
    ],
    name: "vaultDebt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "vaultExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_collateralType",
        type: "address",
      },
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
    ],
    name: "vaultId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "vaultOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_id",
        type: "uint256",
      },
    ],
    name: "vaults",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "collateralType",
            type: "address",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "collateralBalance",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "baseDebt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "createdAt",
            type: "uint256",
          },
        ],
        internalType: "struct IVaultsDataProvider.Vault",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x6080604052600060015534801561001557600080fd5b506040516112fe3803806112fe8339810160408190526100349161006c565b6001600160a01b03811661004757600080fd5b600080546001600160a01b0319166001600160a01b039290921691909117905561009a565b60006020828403121561007d578081fd5b81516001600160a01b0381168114610093578182fd5b9392505050565b611255806100a96000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063b508bc5911610097578063cc92d31c11610066578063cc92d31c146101fa578063d310f49b1461020d578063dcd6812814610220578063ef18fcb41461024057610100565b8063b508bc59146101ac578063bd44815f146101bf578063c7eb222b146101d2578063c8c5c815146101e757610100565b80634e571cb0116100d35780634e571cb01461015e578063828f8def146101715780638c64ea4a14610184578063a7c6a100146101a457610100565b80630dbe671f146101055780630dca59c11461012357806312aa5dc6146101385780633c2ecfe51461014b575b600080fd5b61010d610253565b60405161011a919061108f565b60405180910390f35b61012b610262565b60405161011a91906111f0565b61012b610146366004610f3b565b61048c565b61010d61015936600461103e565b610696565b61012b61016c366004610f3b565b6106b4565b61012b61017f36600461103e565b6106c6565b61019761019236600461103e565b6106db565b60405161011a91906111ad565b61012b610746565b61010d6101ba36600461103e565b61074c565b61012b6101cd366004610f57565b610767565b6101e56101e036600461106e565b610793565b005b61012b6101f536600461103e565b61088a565b61012b610208366004610f57565b6108a0565b61012b61021b36600461103e565b610a58565b61023361022e36600461103e565b610ca8565b60405161011a91906110a3565b6101e561024e36600461106e565b610d16565b6000546001600160a01b031681565b60008060015b60008054906101000a90046001600160a01b03166001600160a01b03166379502c556040518163ffffffff1660e01b815260040160206040518083038186803b1580156102b457600080fd5b505afa1580156102c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102ec9190610f8f565b6001600160a01b031663d47e470d6040518163ffffffff1660e01b815260040160206040518083038186803b15801561032457600080fd5b505afa158015610338573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061035c9190611056565b81116104865760008060009054906101000a90046001600160a01b03166001600160a01b03166379502c556040518163ffffffff1660e01b815260040160206040518083038186803b1580156103b157600080fd5b505afa1580156103c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e99190610f8f565b6001600160a01b0316634a6e0dd0836040518263ffffffff1660e01b815260040161041491906111f0565b6101006040518083038186803b15801561042d57600080fd5b505afa158015610441573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104659190610fab565b51905061047b6104748261048c565b8490610ea2565b925050600101610268565b50905090565b60008060009054906101000a90046001600160a01b03166001600160a01b031663b8091c5b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104db57600080fd5b505afa1580156104ef573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105139190610f8f565b6001600160a01b038381166000908152600260209081526040808320549254815163797a759360e11b8152915195851695631c3405e295919091169263f2f4eb269260048082019391829003018186803b15801561057057600080fd5b505afa158015610584573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a89190610f8f565b6001600160a01b03166385d36cd7866040518263ffffffff1660e01b81526004016105d3919061108f565b60206040518083038186803b1580156105eb57600080fd5b505afa1580156105ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106239190611056565b6040518363ffffffff1660e01b81526004016106409291906111f9565b60206040518083038186803b15801561065857600080fd5b505afa15801561066c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106909190611056565b92915050565b6000908152600360205260409020600101546001600160a01b031690565b60026020526000908152604090205481565b60009081526003602052604090206002015490565b6106e3610eef565b6106eb610eef565b5050600090815260036020818152604092839020835160a08101855281546001600160a01b03908116825260018301541692810192909252600281015493820193909352908201546060820152600490910154608082015290565b60015481565b6000908152600360205260409020546001600160a01b031690565b6001600160a01b0380821660009081526004602090815260408083209386168352929052205492915050565b60008054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156107df57600080fd5b505afa1580156107f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108179190610f8f565b6001600160a01b0316336001600160a01b0316146108505760405162461bcd60e51b81526004016108479061111c565b60405180910390fd5b61085982610ca8565b6108755760405162461bcd60e51b815260040161084790611183565b60009182526003602052604090912060020155565b6000908152600360208190526040909120015490565b60008060009054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b1580156108ef57600080fd5b505afa158015610903573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109279190610f8f565b6001600160a01b0316336001600160a01b0316146109575760405162461bcd60e51b81526004016108479061111c565b6001600160a01b03831661096a57600080fd5b6001600160a01b03821661097d57600080fd5b600180548101908190556001600160a01b0384166109ad5760405162461bcd60e51b815260040161084790611153565b6109b5610eef565b506040805160a0810182526001600160a01b0380871680835286821660208085018281526000868801818152606088018281524260808a019081528b845260038087528b85209a518b54908b166001600160a01b0319918216178c55955160018c01805491909b16961695909517909855905160028901555191870191909155935160049586015590835292835283822090825290915220819055905092915050565b6000610a62610eef565b506000828152600360208181526040808420815160a08101835281546001600160a01b039081168252600183015481168286015260028301548285015294820154606082015260049182015460808201529454825163b8091c5b60e01b8152925194169363b8091c5b9383830193909290829003018186803b158015610ae757600080fd5b505afa158015610afb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1f9190610f8f565b6001600160a01b0316631c3405e2826060015160008054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b158015610b7e57600080fd5b505afa158015610b92573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb69190610f8f565b84516040516385d36cd760e01b81526001600160a01b0392909216916385d36cd791610be49160040161108f565b60206040518083038186803b158015610bfc57600080fd5b505afa158015610c10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c349190611056565b6040518363ffffffff1660e01b8152600401610c519291906111f9565b60206040518083038186803b158015610c6957600080fd5b505afa158015610c7d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ca19190611056565b9392505050565b6000610cb2610eef565b5050600090815260036020818152604092839020835160a08101855281546001600160a01b03908116808352600184015490911693820193909352600282015494810194909452918201546060840152600490910154608090920191909152151590565b60008054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b815260040160206040518083038186803b158015610d6257600080fd5b505afa158015610d76573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9a9190610f8f565b6001600160a01b0316336001600160a01b031614610dca5760405162461bcd60e51b81526004016108479061111c565b600082815260036020819052604090912090810154821115610e46576000610dff826003015484610ec790919063ffffffff16565b82546001600160a01b0316600090815260026020526040902054909150610e269082610ea2565b82546001600160a01b031660009081526002602052604090205550610e9b565b6003810154600090610e589084610ec7565b82546001600160a01b0316600090815260026020526040902054909150610e7f9082610ec7565b82546001600160a01b0316600090815260026020526040902055505b6003015550565b600082820183811015610ca15760405162461bcd60e51b8152600401610847906110ae565b600082821115610ee95760405162461bcd60e51b8152600401610847906110e5565b50900390565b6040518060a0016040528060006001600160a01b0316815260200160006001600160a01b031681526020016000815260200160008152602001600081525090565b805161069081611207565b600060208284031215610f4c578081fd5b8135610ca181611207565b60008060408385031215610f69578081fd5b8235610f7481611207565b91506020830135610f8481611207565b809150509250929050565b600060208284031215610fa0578081fd5b8151610ca181611207565b6000610100808385031215610fbe578182fd5b6040519081019067ffffffffffffffff82118183101715610fdd578283fd5b81604052610feb8585610f30565b81526020840151602082015260408401516040820152606084015160608201526080840151608082015260a084015160a082015260c084015160c082015260e084015160e0820152809250505092915050565b60006020828403121561104f578081fd5b5035919050565b600060208284031215611067578081fd5b5051919050565b60008060408385031215611080578182fd5b50508035926020909101359150565b6001600160a01b0391909116815260200190565b901515815260200190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b60208082526018908201527f43616c6c6572206973206e6f74205661756c7473436f72650000000000000000604082015260600190565b60208082526016908201527531b7b63630ba32b930b62a3cb832903ab735b737bbb760511b604082015260600190565b60208082526010908201526f2b30bab63a103737ba103337bab7321760811b604082015260600190565b81516001600160a01b0390811682526020808401519091169082015260408083015190820152606080830151908201526080918201519181019190915260a00190565b90815260200190565b918252602082015260400190565b6001600160a01b038116811461121c57600080fd5b5056fea26469706673582212208f23891d585ba22dcb8b665ae18be5fdf3ae6d620c500d66d9a23c60542cab1c64736f6c634300060c0033";

type VaultsDataProviderConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VaultsDataProviderConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VaultsDataProvider__factory extends ContractFactory {
  constructor(...args: VaultsDataProviderConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _addresses: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<VaultsDataProvider> {
    return super.deploy(
      _addresses,
      overrides || {}
    ) as Promise<VaultsDataProvider>;
  }
  getDeployTransaction(
    _addresses: string,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(_addresses, overrides || {});
  }
  attach(address: string): VaultsDataProvider {
    return super.attach(address) as VaultsDataProvider;
  }
  connect(signer: Signer): VaultsDataProvider__factory {
    return super.connect(signer) as VaultsDataProvider__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VaultsDataProviderInterface {
    return new utils.Interface(_abi) as VaultsDataProviderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VaultsDataProvider {
    return new Contract(address, _abi, signerOrProvider) as VaultsDataProvider;
  }
}
