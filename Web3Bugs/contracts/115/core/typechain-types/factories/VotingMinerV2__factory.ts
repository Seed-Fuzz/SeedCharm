/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {Signer, utils, Contract, ContractFactory, Overrides} from "ethers";
import {Provider, TransactionRequest} from "@ethersproject/providers";
import type {
  VotingMinerV2,
  VotingMinerV2Interface,
  BoostConfigStruct,
} from "../VotingMinerV2";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IGovernanceAddressProvider",
        name: "_addresses",
        type: "address",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "e",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBoost",
            type: "uint256",
          },
        ],
        internalType: "struct IGenericMinerV2.BoostConfig",
        name: "_boostConfig",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "e",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBoost",
            type: "uint256",
          },
        ],
        indexed: false,
        internalType: "struct IGenericMinerV2.BoostConfig",
        name: "",
        type: "tuple",
      },
    ],
    name: "BoostConfigSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "StakeDecreased",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stake",
        type: "uint256",
      },
    ],
    name: "StakeIncreased",
    type: "event",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "contract IGovernanceAddressProvider",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "boostConfig",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "e",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBoost",
            type: "uint256",
          },
        ],
        internalType: "struct IGenericMinerV2.BoostConfig",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "par",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingMIMO",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "pendingPAR",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "releaseMIMO",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "releaseRewards",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "a",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "b",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "c",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "d",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "e",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "maxBoost",
            type: "uint256",
          },
        ],
        internalType: "struct IGenericMinerV2.BoostConfig",
        name: "newBoostConfig",
        type: "tuple",
      },
    ],
    name: "setBoostConfig",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "stakeWithBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "syncStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakeWithBoost",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "updateBoost",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_user",
        type: "address",
      },
    ],
    name: "userInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "stake",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeWithBoost",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accAmountPerShare",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "accParAmountPerShare",
            type: "uint256",
          },
        ],
        internalType: "struct IGenericMinerV2.UserInfo",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162002c7038038062002c7083398101604081905262000034916200025c565b81816001600160a01b038216620000685760405162461bcd60e51b81526004016200005f90620002fa565b60405180910390fd5b816001600160a01b031660a0816001600160a01b031660601b81525050816001600160a01b0316633df06b596040518163ffffffff1660e01b815260040160206040518083038186803b158015620000bf57600080fd5b505afa158015620000d4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000fa919062000236565b6001600160a01b03166316d8a5a96040518163ffffffff1660e01b815260040160206040518083038186803b1580156200013357600080fd5b505afa15801562000148573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200016e919062000236565b60601b6001600160601b031916608052805160011180159062000195575060008160600151115b8015620001a7575060018160a0015110155b620001c65760405162461bcd60e51b81526004016200005f9062000319565b8051600090815560208201516001556040808301516002556060830151600355608083015160045560a0830151600555517fdea57d5dd436931497612044567596798f2599acfc00861392dd6c8466c8e6f191620002249162000338565b60405180910390a1505050506200038e565b60006020828403121562000248578081fd5b8151620002558162000375565b9392505050565b60008082840360e081121562000270578182fd5b83516200027d8162000375565b925060c0601f198201121562000291578182fd5b5060405160c081016001600160401b0381118282101715620002b1578283fd5b80604052506020840151815260408401516020820152606084015160408201526080840151606082015260a0840151608082015260c084015160a0820152809150509250929050565b60208082526005908201526404c4d3030360dc1b604082015260600190565b60208082526005908201526413134c0c0d60da1b604082015260600190565b815481526001820154602082015260028201546040820152600382015460608201526004820154608082015260059091015460a082015260c00190565b6001600160a01b03811681146200038b57600080fd5b50565b60805160601c60a05160601c612881620003ef6000398061022152806103bc528061082f528061093e5280610bf15280610e3652806110ac52806112d152806113c05250806102ba528061050c5280610d015280610fc652506128816000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c80638b0e9f3f11610097578063cf27596711610066578063cf275967146101dc578063d0e35e2c146101f1578063d76da20c14610204578063f5989e771461020c576100f5565b80638b0e9f3f1461019b578063a3898c07146101a3578063a91ea1ba146101b6578063be347355146101c9576100f5565b8063495d32cb116100d3578063495d32cb1461015857806360ed390a14610160578063610edec2146101755780637c284c0a14610188576100f5565b80630dbe671f146100fa5780631959a002146101185780632647620414610138575b600080fd5b61010261021f565b60405161010f91906125d8565b60405180910390f35b61012b6101263660046124f3565b610243565b60405161010f91906127ff565b61014b6101463660046124f3565b61029d565b60405161010f919061282a565b6101026102b8565b61017361016e3660046124f3565b6102dc565b005b6101736101833660046124f3565b6105b7565b61014b6101963660046124f3565b610633565b61014b610699565b61014b6101b13660046124f3565b61069f565b6101736101c43660046124f3565b6106fe565b61014b6101d73660046124f3565b61075c565b6101e461077a565b60405161010f919061277e565b6101736101ff3660046124f3565b6107bf565b61014b610827565b61017361021a366004612563565b61082d565b7f000000000000000000000000000000000000000000000000000000000000000090565b61024b612495565b506001600160a01b03811660009081526006602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460608201525b919050565b6001600160a01b031660009081526006602052604090205490565b7f000000000000000000000000000000000000000000000000000000000000000090565b6102e4612495565b506001600160a01b0381166000908152600660209081526040918290208251608081018452815481526001820154928101929092526002810154928201929092526003909101546060820152610338610be1565b600061034c82602001518360400151610e1d565b9050600061036283602001518460600151610f97565b6020840151909150156103905760095461037c9083611080565b600955600b5461038c9082611080565b600b555b61039a84846110a8565b600a546040840152600c5460608401526103b484846111da565b81156104ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636d9b18236040518163ffffffff1660e01b815260040160206040518083038186803b15801561041357600080fd5b505afa158015610427573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061044b9190612547565b6001600160a01b031663a9059cbb85846040518363ffffffff1660e01b81526004016104789291906125ec565b602060405180830381600087803b15801561049257600080fd5b505af11580156104a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ca919061250f565b6104ef5760405162461bcd60e51b81526004016104e690612721565b60405180910390fd5b80156105b15760405163a9059cbb60e01b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169063a9059cbb9061054390879085906004016125ec565b602060405180830381600087803b15801561055d57600080fd5b505af1158015610571573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610595919061250f565b6105b15760405162461bcd60e51b81526004016104e690612721565b50505050565b6105bf612495565b506001600160a01b0381166000908152600660209081526040918290208251608081018452815481526001820154928101929092526002810154928201929092526003909101546060820152610615828261126b565b600a546040820152600c54606082015261062f82826111da565b5050565b600061063d612495565b506001600160a01b038216600090815260066020908152604091829020825160808101845281548152600182015492810183905260028201549381018490526003909101546060820152916106929190610e1d565b9392505050565b60075490565b60006106a9612495565b506001600160a01b038216600090815260066020908152604091829020825160808101845281548152600182015492810183905260028201549381019390935260030154606083018190526106929190610f97565b610706612495565b506001600160a01b038116600090815260066020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015261062f82826111da565b6001600160a01b031660009081526006602052604090206001015490565b6107826124bd565b506040805160c08101825260005481526001546020820152600254918101919091526003546060820152600454608082015260055460a082015290565b6107c7612495565b506001600160a01b038116600090815260066020908152604091829020825160808101845281548152600182015492810192909252600281015492820192909252600390910154606082015261081d82826110a8565b61062f82826111da565b60085490565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633df06b596040518163ffffffff1660e01b815260040160206040518083038186803b15801561088657600080fd5b505afa15801561089a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108be9190612547565b6001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b1580156108f657600080fd5b505afa15801561090a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061092e9190612547565b6001600160a01b03166391d148547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316633df06b596040518163ffffffff1660e01b815260040160206040518083038186803b15801561099557600080fd5b505afa1580156109a9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109cd9190612547565b6001600160a01b031663f77c47916040518163ffffffff1660e01b815260040160206040518083038186803b158015610a0557600080fd5b505afa158015610a19573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a3d9190612547565b6001600160a01b031663ec87621c6040518163ffffffff1660e01b815260040160206040518083038186803b158015610a7557600080fd5b505afa158015610a89573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aad919061252f565b336040518363ffffffff1660e01b8152600401610acb929190612605565b60206040518083038186803b158015610ae357600080fd5b505afa158015610af7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1b919061250f565b610b375760405162461bcd60e51b81526004016104e690612740565b8051600111801590610b4d575060008160600151115b8015610b5e575060018160a0015110155b610b7a5760405162461bcd60e51b81526004016104e6906126c1565b8051600090815560208201516001556040808301516002556060830151600355608083015160045560a0830151600555517fdea57d5dd436931497612044567596798f2599acfc00861392dd6c8466c8e6f191610bd6916127c2565b60405180910390a150565b600754610bed57610e1b565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636d9b18236040518163ffffffff1660e01b815260040160206040518083038186803b158015610c4857600080fd5b505afa158015610c5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c809190612547565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610cab91906125d8565b60206040518083038186803b158015610cc357600080fd5b505afa158015610cd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cfb919061252f565b905060007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610d4b91906125d8565b60206040518083038186803b158015610d6357600080fd5b505afa158015610d77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9b919061252f565b90506000610db46009548461108090919063ffffffff16565b90506000610dcd600b548461108090919063ffffffff16565b6009859055600854909150610df090610de7908490611328565b600a5490611360565b600a55600b839055600854610e1390610e0a908390611328565b600c5490611360565b600c55505050505b565b600060085460001415610e3257506000610f91565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636d9b18236040518163ffffffff1660e01b815260040160206040518083038186803b158015610e8d57600080fd5b505afa158015610ea1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ec59190612547565b6001600160a01b03166370a08231306040518263ffffffff1660e01b8152600401610ef091906125d8565b60206040518083038186803b158015610f0857600080fd5b505afa158015610f1c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f40919061252f565b90506000610f596009548361108090919063ffffffff16565b90506000610f75610de76008548461132890919063ffffffff16565b9050610f8b610f848287611080565b8790611385565b93505050505b92915050565b600060085460001415610fac57506000610f91565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610ffb9030906004016125d8565b60206040518083038186803b15801561101357600080fd5b505afa158015611027573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061104b919061252f565b90506000611064600b548361108090919063ffffffff16565b90506000610f75610e0a6008548461132890919063ffffffff16565b6000828211156110a25760405162461bcd60e51b81526004016104e690612653565b50900390565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f2bfe5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561110357600080fd5b505afa158015611117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113b9190612547565b6001600160a01b03166370a08231846040518263ffffffff1660e01b815260040161116691906125d8565b60206040518083038186803b15801561117e57600080fd5b505afa158015611192573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b6919061252f565b82516007549192506111d2916111cc9084611360565b90611080565b600755905250565b6020810151156111f95760208101516008546111f591611080565b6008555b6000611204836113bb565b82519091506112139082611624565b6020830181905260085461122691611360565b600855506001600160a01b0390911660009081526006602090815260409182902083518155908301516001820155908201516002820155606090910151600390910155565b600061127f82602001518360400151610e1d565b9050600061129583602001518460600151610f97565b905061129f610be1565b6020830151156103b4576009546112b69083611080565b600955600b546112c69082611080565b600b5581156104ef577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316636d9b18236040518163ffffffff1660e01b815260040160206040518083038186803b15801561041357600080fd5b6000600282046113588361135261134b876b033b2e3c9fd0803ce800000061164f565b8490611360565b90611689565b949350505050565b6000828201838110156106925760405162461bcd60e51b81526004016104e69061261c565b60006106926b033b2e3c9fd0803ce80000006113526113a4868661164f565b60026b033b2e3c9fd0803ce80000005b0490611360565b6000807f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f2bfe5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561141757600080fd5b505afa15801561142b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144f9190612547565b6001600160a01b03166370a08231846040518263ffffffff1660e01b815260040161147a91906125d8565b60206040518083038186803b15801561149257600080fd5b505afa1580156114a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ca919061252f565b9050806114e257670de0b6b3a7640000915050610298565b600080546114ef906116bb565b905060006115016000600101546116bb565b905060006115136000600201546116bb565b905060006115256000600401546116bb565b9050600061153a670de0b6b3a76400006116bb565b60035490915060009061154e9088906116d9565b90506000611560600f83900b85611710565b9050600061157082600f0b611744565b9050600061158082600f0b611766565b90506000611592600f83900b896117bb565b905060006115b18b6115a8600f8d900b856117ee565b600f0b906117bb565b905060006115ce6115c6600f84900b8a611840565b600f0b611876565b905067ffffffffffffffff8116670de0b6b3a764000081108015906115f557506005548111155b6116115760405162461bcd60e51b81526004016104e69061275f565b9f9e505050505050505050505050505050565b6000610692670de0b6b3a764000061135261163f868661164f565b6002670de0b6b3a76400006113b4565b60008261165e57506000610f91565b8282028284828161166b57fe5b04146106925760405162461bcd60e51b81526004016104e6906126e0565b60008082116116aa5760405162461bcd60e51b81526004016104e69061268a565b8183816116b357fe5b049392505050565b6000677fffffffffffffff8211156116d257600080fd5b5060401b90565b6000816116e557600080fd5b60006116f18484611892565b905060016001607f1b036001600160801b038216111561069257600080fd5b6000600f82810b9084900b0360016001607f1b0319811280159061173b575060016001607f1b038113155b61069257600080fd5b6000600f82900b60016001607f1b0319141561175f57600080fd5b5060000390565b6000600160461b82600f0b1261177b57600080fd5b683fffffffffffffffff1982600f0b121561179857506000610298565b610f91608083600f0b700171547652b82fe1777d0ffda0d23a7d1202901d6119dc565b6000600f83810b9083900b0160016001607f1b0319811280159061173b575060016001607f1b0381131561069257600080fd5b600081600f0b6000141561180157600080fd5b600082600f0b604085600f0b901b8161181657fe5b05905060016001607f1b0319811280159061173b575060016001607f1b0381131561069257600080fd5b6000600f83810b9083900b0260401d60016001607f1b0319811280159061173b575060016001607f1b0381131561069257600080fd5b60008082600f0b121561188857600080fd5b50600f0b60401d90565b60008161189e57600080fd5b60006001600160c01b0384116118c35782604085901b816118bb57fe5b0490506119c8565b60c084811c64010000000081106118dc576020918201911c5b6201000081106118ee576010918201911c5b61010081106118ff576008918201911c5b6010811061190f576004918201911c5b6004811061191f576002918201911c5b6002811061192e576001820191505b60bf820360018603901c6001018260ff0387901b8161194957fe5b0492506001600160801b0383111561196057600080fd5b608085901c83026001600160801b038616840260c088901c604089901b8281101561198c576001820391505b608084901b929003828110156119a3576001820391505b829003608084901c82146119b357fe5b8881816119bc57fe5b04870196505050505050505b6001600160801b0381111561069257600080fd5b6000600160461b82600f0b126119f157600080fd5b683fffffffffffffffff1982600f0b1215611a0e57506000610298565b6001607f1b60006780000000000000008416600f0b1315611a405770016a09e667f3bcc908b2fb1366ea957d3e0260801c5b60008367400000000000000016600f0b1315611a6d577001306fe0a31b7152de8d5a46305c85edec0260801c5b60008367200000000000000016600f0b1315611a9a577001172b83c7d517adcdf7c8c50eb14a791f0260801c5b60008367100000000000000016600f0b1315611ac75770010b5586cf9890f6298b92b71842a983630260801c5b60008367080000000000000016600f0b1315611af4577001059b0d31585743ae7c548eb68ca417fd0260801c5b60008367040000000000000016600f0b1315611b2157700102c9a3e778060ee6f7caca4f7a29bde80260801c5b60008367020000000000000016600f0b1315611b4e5770010163da9fb33356d84a66ae336dcdfa3f0260801c5b60008367010000000000000016600f0b1315611b7b57700100b1afa5abcbed6129ab13ec11dc95430260801c5b600083668000000000000016600f0b1315611ba75770010058c86da1c09ea1ff19d294cf2f679b0260801c5b600083664000000000000016600f0b1315611bd3577001002c605e2e8cec506d21bfc89a23a00f0260801c5b600083662000000000000016600f0b1315611bff57700100162f3904051fa128bca9c55c31e5df0260801c5b600083661000000000000016600f0b1315611c2b577001000b175effdc76ba38e31671ca9397250260801c5b600083660800000000000016600f0b1315611c5757700100058ba01fb9f96d6cacd4b180917c3d0260801c5b600083660400000000000016600f0b1315611c835770010002c5cc37da9491d0985c348c68e7b30260801c5b600083660200000000000016600f0b1315611caf577001000162e525ee054754457d59952920260260801c5b600083660100000000000016600f0b1315611cdb5770010000b17255775c040618bf4a4ade83fc0260801c5b6000836580000000000016600f0b1315611d06577001000058b91b5bc9ae2eed81e9b7d4cfab0260801c5b6000836540000000000016600f0b1315611d3157700100002c5c89d5ec6ca4d7c8acc017b7c90260801c5b6000836520000000000016600f0b1315611d5c5770010000162e43f4f831060e02d839a9d16d0260801c5b6000836510000000000016600f0b1315611d8757700100000b1721bcfc99d9f890ea069117630260801c5b6000836508000000000016600f0b1315611db25770010000058b90cf1e6d97f9ca14dbcc16280260801c5b6000836504000000000016600f0b1315611ddd577001000002c5c863b73f016468f6bac5ca2b0260801c5b6000836502000000000016600f0b1315611e0857700100000162e430e5a18f6119e3c02282a50260801c5b6000836501000000000016600f0b1315611e33577001000000b1721835514b86e6d96efd1bfe0260801c5b60008364800000000016600f0b1315611e5d57700100000058b90c0b48c6be5df846c5b2ef0260801c5b60008364400000000016600f0b1315611e875770010000002c5c8601cc6b9e94213c72737a0260801c5b60008364200000000016600f0b1315611eb1577001000000162e42fff037df38aa2b219f060260801c5b60008364100000000016600f0b1315611edb5770010000000b17217fba9c739aa5819f44f90260801c5b60008364080000000016600f0b1315611f05577001000000058b90bfcdee5acd3c1cedc8230260801c5b60008364040000000016600f0b1315611f2f57700100000002c5c85fe31f35a6a30da1be500260801c5b60008364020000000016600f0b1315611f595770010000000162e42ff0999ce3541b9fffcf0260801c5b60008364010000000016600f0b1315611f8357700100000000b17217f80f4ef5aadda455540260801c5b600083638000000016600f0b1315611fac5770010000000058b90bfbf8479bd5a81b51ad0260801c5b600083634000000016600f0b1315611fd5577001000000002c5c85fdf84bd62ae30a74cc0260801c5b600083632000000016600f0b1315611ffe57700100000000162e42fefb2fed257559bdaa0260801c5b600083631000000016600f0b1315612027577001000000000b17217f7d5a7716bba4a9ae0260801c5b600083630800000016600f0b131561205057700100000000058b90bfbe9ddbac5e109cce0260801c5b600083630400000016600f0b13156120795770010000000002c5c85fdf4b15de6f17eb0d0260801c5b600083630200000016600f0b13156120a2577001000000000162e42fefa494f1478fde050260801c5b600083630100000016600f0b13156120cb5770010000000000b17217f7d20cf927c8e94c0260801c5b6000836280000016600f0b13156120f3577001000000000058b90bfbe8f71cb4e4b33d0260801c5b6000836240000016600f0b131561211b57700100000000002c5c85fdf477b662b269450260801c5b6000836220000016600f0b13156121435770010000000000162e42fefa3ae53369388c0260801c5b6000836210000016600f0b131561216b57700100000000000b17217f7d1d351a389d400260801c5b6000836208000016600f0b13156121935770010000000000058b90bfbe8e8b2d3d4ede0260801c5b6000836204000016600f0b13156121bb577001000000000002c5c85fdf4741bea6e77e0260801c5b6000836202000016600f0b13156121e357700100000000000162e42fefa39fe95583c20260801c5b6000836201000016600f0b131561220b577001000000000000b17217f7d1cfb72b45e10260801c5b60008361800016600f0b131561223257700100000000000058b90bfbe8e7cc35c3f00260801c5b60008361400016600f0b13156122595770010000000000002c5c85fdf473e242ea380260801c5b60008361200016600f0b1315612280577001000000000000162e42fefa39f02b772c0260801c5b60008361100016600f0b13156122a75770010000000000000b17217f7d1cf7d83c1a0260801c5b60008361080016600f0b13156122ce577001000000000000058b90bfbe8e7bdcbe2e0260801c5b60008361040016600f0b13156122f557700100000000000002c5c85fdf473dea871f0260801c5b60008361020016600f0b131561231c5770010000000000000162e42fefa39ef44d910260801c5b60008361010016600f0b131561234357700100000000000000b17217f7d1cf79e9490260801c5b600083608016600f0b13156123695770010000000000000058b90bfbe8e7bce5440260801c5b600083604016600f0b131561238f577001000000000000002c5c85fdf473de6eca0260801c5b600083602016600f0b13156123b557700100000000000000162e42fefa39ef366f0260801c5b600083601016600f0b13156123db577001000000000000000b17217f7d1cf79afa0260801c5b600083600816600f0b131561240157700100000000000000058b90bfbe8e7bcd6d0260801c5b600083600416600f0b13156124275770010000000000000002c5c85fdf473de6b20260801c5b600083600216600f0b131561244d577001000000000000000162e42fefa39ef3580260801c5b600083600116600f0b13156124735770010000000000000000b17217f7d1cf79ab0260801c5b600f83810b60401d603f03900b1c60016001607f1b03811115610f9157600080fd5b6040518060800160405280600081526020016000815260200160008152602001600081525090565b6040518060c001604052806000815260200160008152602001600081526020016000815260200160008152602001600081525090565b600060208284031215612504578081fd5b813561069281612833565b600060208284031215612520578081fd5b81518015158114610692578182fd5b600060208284031215612540578081fd5b5051919050565b600060208284031215612558578081fd5b815161069281612833565b600060c08284031215612574578081fd5b60405160c0810181811067ffffffffffffffff82111715612593578283fd5b8060405250823581526020830135602082015260408301356040820152606083013560608201526080830135608082015260a083013560a08201528091505092915050565b6001600160a01b0391909116815260200190565b6001600160a01b03929092168252602082015260400190565b9182526001600160a01b0316602082015260400190565b6020808252601b908201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604082015260600190565b6020808252601e908201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604082015260600190565b6020808252601a908201527f536166654d6174683a206469766973696f6e206279207a65726f000000000000604082015260600190565b60208082526005908201526413134c0c0d60da1b604082015260600190565b60208082526021908201527f536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f6040820152607760f81b606082015260800190565b60208082526005908201526404c4d3130360dc1b604082015260600190565b60208082526005908201526404c4d3031360dc1b604082015260600190565b6020808252600590820152644c4d31303360d81b604082015260600190565b600060c082019050825182526020830151602083015260408301516040830152606083015160608301526080830151608083015260a083015160a083015292915050565b815481526001820154602082015260028201546040820152600382015460608201526004820154608082015260059091015460a082015260c00190565b8151815260208083015190820152604080830151908201526060918201519181019190915260800190565b90815260200190565b6001600160a01b038116811461284857600080fd5b5056fea2646970667358221220316b0fcd5009e6cc3c7a4eac734410b44e82b7d7d46130847b611aa5ab51327364736f6c634300060c0033";

type VotingMinerV2ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VotingMinerV2ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VotingMinerV2__factory extends ContractFactory {
  constructor(...args: VotingMinerV2ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _addresses: string,
    _boostConfig: BoostConfigStruct,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): Promise<VotingMinerV2> {
    return super.deploy(
      _addresses,
      _boostConfig,
      overrides || {}
    ) as Promise<VotingMinerV2>;
  }
  getDeployTransaction(
    _addresses: string,
    _boostConfig: BoostConfigStruct,
    overrides?: Overrides & {from?: string | Promise<string>}
  ): TransactionRequest {
    return super.getDeployTransaction(
      _addresses,
      _boostConfig,
      overrides || {}
    );
  }
  attach(address: string): VotingMinerV2 {
    return super.attach(address) as VotingMinerV2;
  }
  connect(signer: Signer): VotingMinerV2__factory {
    return super.connect(signer) as VotingMinerV2__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VotingMinerV2Interface {
    return new utils.Interface(_abi) as VotingMinerV2Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VotingMinerV2 {
    return new Contract(address, _abi, signerOrProvider) as VotingMinerV2;
  }
}
