{"id":"3b3d4b595048cbda54c9c6cb0f3306ec","_format":"hh-sol-build-info-1","solcVersion":"0.8.10","solcLongVersion":"0.8.10+commit.fc410830","input":{"language":"Solidity","sources":{"@aave/core-v3/contracts/interfaces/IPool.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.8.10;\n\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\n\n/**\n * @title IPool\n * @author Aave\n * @notice Defines the basic interface for an Aave Pool.\n **/\ninterface IPool {\n  /**\n   * @dev Emitted on mintUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n   * @param amount The amount of supplied assets\n   * @param referralCode The referral code used\n   **/\n  event MintUnbacked(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on backUnbacked()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param backer The address paying for the backing\n   * @param amount The amount added as backing\n   * @param fee The amount paid in fees\n   **/\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\n\n  /**\n   * @dev Emitted on supply()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address initiating the supply\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n   * @param amount The amount supplied\n   * @param referralCode The referral code used\n   **/\n  event Supply(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on withdraw()\n   * @param reserve The address of the underlying asset being withdrawn\n   * @param user The address initiating the withdrawal, owner of aTokens\n   * @param to The address that will receive the underlying\n   * @param amount The amount to be withdrawn\n   **/\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\n\n  /**\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n   * @param reserve The address of the underlying asset being borrowed\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n   * initiator of the transaction on flashLoan()\n   * @param onBehalfOf The address that will be getting the debt\n   * @param amount The amount borrowed out\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n   * @param referralCode The referral code used\n   **/\n  event Borrow(\n    address indexed reserve,\n    address user,\n    address indexed onBehalfOf,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 borrowRate,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted on repay()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The beneficiary of the repayment, getting his debt reduced\n   * @param repayer The address of the user initiating the repay(), providing the funds\n   * @param amount The amount repaid\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\n   **/\n  event Repay(\n    address indexed reserve,\n    address indexed user,\n    address indexed repayer,\n    uint256 amount,\n    bool useATokens\n  );\n\n  /**\n   * @dev Emitted on swapBorrowRateMode()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user swapping his rate mode\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\n   **/\n  event SwapBorrowRateMode(\n    address indexed reserve,\n    address indexed user,\n    DataTypes.InterestRateMode interestRateMode\n  );\n\n  /**\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n   * @param asset The address of the underlying asset of the reserve\n   * @param totalDebt The total isolation mode debt for the reserve\n   */\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\n\n  /**\n   * @dev Emitted when the user selects a certain asset category for eMode\n   * @param user The address of the user\n   * @param categoryId The category id\n   **/\n  event UserEModeSet(address indexed user, uint8 categoryId);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on setUserUseReserveAsCollateral()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user enabling the usage as collateral\n   **/\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on rebalanceStableBorrowRate()\n   * @param reserve The address of the underlying asset of the reserve\n   * @param user The address of the user for which the rebalance has been executed\n   **/\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\n\n  /**\n   * @dev Emitted on flashLoan()\n   * @param target The address of the flash loan receiver contract\n   * @param initiator The address initiating the flash loan\n   * @param asset The address of the asset being flash borrowed\n   * @param amount The amount flash borrowed\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n   * @param premium The fee flash borrowed\n   * @param referralCode The referral code used\n   **/\n  event FlashLoan(\n    address indexed target,\n    address initiator,\n    address indexed asset,\n    uint256 amount,\n    DataTypes.InterestRateMode interestRateMode,\n    uint256 premium,\n    uint16 indexed referralCode\n  );\n\n  /**\n   * @dev Emitted when a borrower is liquidated.\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n   * @param liquidator The address of the liquidator\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  event LiquidationCall(\n    address indexed collateralAsset,\n    address indexed debtAsset,\n    address indexed user,\n    uint256 debtToCover,\n    uint256 liquidatedCollateralAmount,\n    address liquidator,\n    bool receiveAToken\n  );\n\n  /**\n   * @dev Emitted when the state of a reserve is updated.\n   * @param reserve The address of the underlying asset of the reserve\n   * @param liquidityRate The next liquidity rate\n   * @param stableBorrowRate The next stable borrow rate\n   * @param variableBorrowRate The next variable borrow rate\n   * @param liquidityIndex The next liquidity index\n   * @param variableBorrowIndex The next variable borrow index\n   **/\n  event ReserveDataUpdated(\n    address indexed reserve,\n    uint256 liquidityRate,\n    uint256 stableBorrowRate,\n    uint256 variableBorrowRate,\n    uint256 liquidityIndex,\n    uint256 variableBorrowIndex\n  );\n\n  /**\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n   * @param reserve The address of the reserve\n   * @param amountMinted The amount minted to the treasury\n   **/\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\n\n  /**\n   * @dev Mints an `amount` of aTokens to the `onBehalfOf`\n   * @param asset The address of the underlying asset to mint\n   * @param amount The amount to mint\n   * @param onBehalfOf The address that will receive the aTokens\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function mintUnbacked(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @dev Back the current unbacked underlying with `amount` and pay `fee`.\n   * @param asset The address of the underlying asset to back\n   * @param amount The amount to back\n   * @param fee The amount paid in fees\n   **/\n  function backUnbacked(\n    address asset,\n    uint256 amount,\n    uint256 fee\n  ) external;\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function supply(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   **/\n  function supplyWithPermit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external;\n\n  /**\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n   * @param asset The address of the underlying asset to withdraw\n   * @param amount The underlying amount to be withdrawn\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n   * @param to The address that will receive the underlying, same as msg.sender if the user\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   *   different wallet\n   * @return The final amount withdrawn\n   **/\n  function withdraw(\n    address asset,\n    uint256 amount,\n    address to\n  ) external returns (uint256);\n\n  /**\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n   * @param asset The address of the underlying asset to borrow\n   * @param amount The amount to be borrowed\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n   * if he has been given credit delegation allowance\n   **/\n  function borrow(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    uint16 referralCode,\n    address onBehalfOf\n  ) external;\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @return The final amount repaid\n   **/\n  function repay(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf\n  ) external returns (uint256);\n\n  /**\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\n   * other borrower whose debt should be removed\n   * @param deadline The deadline timestamp that the permit is valid\n   * @param permitV The V parameter of ERC712 permit sig\n   * @param permitR The R parameter of ERC712 permit sig\n   * @param permitS The S parameter of ERC712 permit sig\n   * @return The final amount repaid\n   **/\n  function repayWithPermit(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode,\n    address onBehalfOf,\n    uint256 deadline,\n    uint8 permitV,\n    bytes32 permitR,\n    bytes32 permitS\n  ) external returns (uint256);\n\n  /**\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n   * equivalent debt tokens\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n   * balance is not enough to cover the whole debt\n   * @param asset The address of the borrowed underlying asset previously borrowed\n   * @param amount The amount to repay\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n   * @return The final amount repaid\n   **/\n  function repayWithATokens(\n    address asset,\n    uint256 amount,\n    uint256 interestRateMode\n  ) external returns (uint256);\n\n  /**\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n   * @param asset The address of the underlying asset borrowed\n   * @param interestRateMode The rate mode that the user wants to swap to: 1 for Stable, 2 for Variable\n   **/\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\n\n  /**\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n   * - Users can be rebalanced if the following conditions are satisfied:\n   *     1. Usage ratio is above 95%\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\n   * @param asset The address of the underlying asset borrowed\n   * @param user The address of the user to be rebalanced\n   **/\n  function rebalanceStableBorrowRate(address asset, address user) external;\n\n  /**\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n   * @param asset The address of the underlying asset supplied\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\n   **/\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\n\n  /**\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n   * @param user The address of the borrower getting liquidated\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n   * to receive the underlying collateral asset directly\n   **/\n  function liquidationCall(\n    address collateralAsset,\n    address debtAsset,\n    address user,\n    uint256 debtToCover,\n    bool receiveAToken\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n   * @param assets The addresses of the assets being flash-borrowed\n   * @param amounts The amounts of the assets being flash-borrowed\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoan(\n    address receiverAddress,\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata interestRateModes,\n    address onBehalfOf,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n   * as long as the amount taken plus a fee is returned.\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n   * into consideration. For further details please visit https://developers.aave.com\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n   * @param asset The address of the asset being flash-borrowed\n   * @param amount The amount of the asset being flash-borrowed\n   * @param params Variadic packed params to pass to the receiver as extra information\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function flashLoanSimple(\n    address receiverAddress,\n    address asset,\n    uint256 amount,\n    bytes calldata params,\n    uint16 referralCode\n  ) external;\n\n  /**\n   * @notice Returns the user account data across all the reserves\n   * @param user The address of the user\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n   * @return currentLiquidationThreshold The liquidation threshold of the user\n   * @return ltv The loan to value of The user\n   * @return healthFactor The current health factor of the user\n   **/\n  function getUserAccountData(address user)\n    external\n    view\n    returns (\n      uint256 totalCollateralBase,\n      uint256 totalDebtBase,\n      uint256 availableBorrowsBase,\n      uint256 currentLiquidationThreshold,\n      uint256 ltv,\n      uint256 healthFactor\n    );\n\n  /**\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n   * interest rate strategy\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\n   **/\n  function initReserve(\n    address asset,\n    address aTokenAddress,\n    address stableDebtAddress,\n    address variableDebtAddress,\n    address interestRateStrategyAddress\n  ) external;\n\n  /**\n   * @notice Drop a reserve\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   **/\n  function dropReserve(address asset) external;\n\n  /**\n   * @notice Updates the address of the interest rate strategy contract\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param rateStrategyAddress The address of the interest rate strategy contract\n   **/\n  function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress)\n    external;\n\n  /**\n   * @notice Sets the configuration bitmap of the reserve as a whole\n   * @dev Only callable by the PoolConfigurator contract\n   * @param asset The address of the underlying asset of the reserve\n   * @param configuration The new configuration bitmap\n   **/\n  function setConfiguration(address asset, DataTypes.ReserveConfigurationMap calldata configuration)\n    external;\n\n  /**\n   * @notice Returns the configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The configuration of the reserve\n   **/\n  function getConfiguration(address asset)\n    external\n    view\n    returns (DataTypes.ReserveConfigurationMap memory);\n\n  /**\n   * @notice Returns the configuration of the user across all the reserves\n   * @param user The user address\n   * @return The configuration of the user\n   **/\n  function getUserConfiguration(address user)\n    external\n    view\n    returns (DataTypes.UserConfigurationMap memory);\n\n  /**\n   * @notice Returns the normalized income normalized income of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve's normalized income\n   */\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the normalized variable debt per unit of asset\n   * @param asset The address of the underlying asset of the reserve\n   * @return The reserve normalized variable debt\n   */\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\n\n  /**\n   * @notice Returns the state and configuration of the reserve\n   * @param asset The address of the underlying asset of the reserve\n   * @return The state and configuration data of the reserve\n   **/\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\n\n  /**\n   * @notice Validates and finalizes an aToken transfer\n   * @dev Only callable by the overlying aToken of the `asset`\n   * @param asset The address of the underlying asset of the aToken\n   * @param from The user from which the aTokens are transferred\n   * @param to The user receiving the aTokens\n   * @param amount The amount being transferred/withdrawn\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\n   */\n  function finalizeTransfer(\n    address asset,\n    address from,\n    address to,\n    uint256 amount,\n    uint256 balanceFromBefore,\n    uint256 balanceToBefore\n  ) external;\n\n  /**\n   * @notice Returns the list of the initialized reserves\n   * @dev It does not include dropped reserves\n   * @return The addresses of the reserves\n   **/\n  function getReservesList() external view returns (address[] memory);\n\n  /**\n   * @notice Returns the PoolAddressesProvider connected to this contract\n   * @return The address of the PoolAddressesProvider\n   **/\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\n\n  /**\n   * @notice Updates the protocol fee on the bridging\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\n   */\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\n\n  /**\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n   * - A part is sent to aToken holders as extra, one time accumulated interest\n   * - A part is collected by the protocol treasury\n   * @dev The total premium is calculated on the total borrowed amount\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n   * @dev Only callable by the PoolConfigurator contract\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\n   */\n  function updateFlashloanPremiums(\n    uint128 flashLoanPremiumTotal,\n    uint128 flashLoanPremiumToProtocol\n  ) external;\n\n  /**\n   * @notice Configures a new category for the eMode.\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n   * The category 0 is reserved as it's the default for volatile assets\n   * @param id The id of the category\n   * @param config The configuration of the category\n   */\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\n\n  /**\n   * @notice Returns the data of an eMode category\n   * @param id The id of the category\n   * @return The configuration data of the category\n   */\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\n\n  /**\n   * @notice Allows a user to use the protocol in eMode\n   * @param categoryId The id of the category\n   */\n  function setUserEMode(uint8 categoryId) external;\n\n  /**\n   * @notice Returns the eMode the user is using\n   * @param user The address of the user\n   * @return The eMode id\n   */\n  function getUserEMode(address user) external view returns (uint256);\n\n  /**\n   * @notice Resets the isolation mode total debt of the given asset to zero\n   * @dev It requires the given asset has zero debt ceiling\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\n   */\n  function resetIsolationModeTotalDebt(address asset) external;\n\n  /**\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n   * @return The percentage of available liquidity to borrow, expressed in bps\n   */\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\n\n  /**\n   * @notice Returns the total fee on flash loans\n   * @return The total fee on flashloans\n   */\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\n\n  /**\n   * @notice Returns the part of the bridge fees sent to protocol\n   * @return The bridge fee sent to the protocol treasury\n   */\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\n\n  /**\n   * @notice Returns the part of the flashloan fees sent to protocol\n   * @return The flashloan fee sent to the protocol treasury\n   */\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\n\n  /**\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\n   * @return The maximum number of reserves supported\n   */\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\n\n  /**\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n   * @param assets The list of reserves for which the minting needs to be executed\n   **/\n  function mintToTreasury(address[] calldata assets) external;\n\n  /**\n   * @notice Rescue and transfer tokens locked in this contract\n   * @param token The address of the token\n   * @param to The address of the recipient\n   * @param amount The amount of token to transfer\n   */\n  function rescueTokens(\n    address token,\n    address to,\n    uint256 amount\n  ) external;\n\n  /**\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n   * @dev Deprecated: Use the `supply` function instead\n   * @param asset The address of the underlying asset to supply\n   * @param amount The amount to be supplied\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   *   is a different wallet\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   *   0 if the action is executed directly by the user, without any middle-man\n   **/\n  function deposit(\n    address asset,\n    uint256 amount,\n    address onBehalfOf,\n    uint16 referralCode\n  ) external;\n}\n"},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"content":"// SPDX-License-Identifier: AGPL-3.0\npragma solidity 0.8.10;\n\n/**\n * @title IPoolAddressesProvider\n * @author Aave\n * @notice Defines the basic interface for a Pool Addresses Provider.\n **/\ninterface IPoolAddressesProvider {\n  /**\n   * @dev Emitted when the market identifier is updated.\n   * @param oldMarketId The old id of the market\n   * @param newMarketId The new id of the market\n   */\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\n\n  /**\n   * @dev Emitted when the pool is updated.\n   * @param oldAddress The old address of the Pool\n   * @param newAddress The new address of the Pool\n   */\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool configurator is updated.\n   * @param oldAddress The old address of the PoolConfigurator\n   * @param newAddress The new address of the PoolConfigurator\n   */\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle is updated.\n   * @param oldAddress The old address of the PriceOracle\n   * @param newAddress The new address of the PriceOracle\n   */\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL manager is updated.\n   * @param oldAddress The old address of the ACLManager\n   * @param newAddress The new address of the ACLManager\n   */\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the ACL admin is updated.\n   * @param oldAddress The old address of the ACLAdmin\n   * @param newAddress The new address of the ACLAdmin\n   */\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the price oracle sentinel is updated.\n   * @param oldAddress The old address of the PriceOracleSentinel\n   * @param newAddress The new address of the PriceOracleSentinel\n   */\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the pool data provider is updated.\n   * @param oldAddress The old address of the PoolDataProvider\n   * @param newAddress The new address of the PoolDataProvider\n   */\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when a new proxy is created.\n   * @param id The identifier of the proxy\n   * @param proxyAddress The address of the created proxy contract\n   * @param implementationAddress The address of the implementation contract\n   */\n  event ProxyCreated(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address indexed implementationAddress\n  );\n\n  /**\n   * @dev Emitted when a new non-proxied contract address is registered.\n   * @param id The identifier of the contract\n   * @param oldAddress The address of the old contract\n   * @param newAddress The address of the new contract\n   */\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\n\n  /**\n   * @dev Emitted when the implementation of the proxy registered with id is updated\n   * @param id The identifier of the contract\n   * @param proxyAddress The address of the proxy contract\n   * @param oldImplementationAddress The address of the old implementation contract\n   * @param newImplementationAddress The address of the new implementation contract\n   */\n  event AddressSetAsProxy(\n    bytes32 indexed id,\n    address indexed proxyAddress,\n    address oldImplementationAddress,\n    address indexed newImplementationAddress\n  );\n\n  /**\n   * @notice Returns the id of the Aave market to which this contract points to.\n   * @return The market id\n   **/\n  function getMarketId() external view returns (string memory);\n\n  /**\n   * @notice Associates an id with a specific PoolAddressesProvider.\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\n   * identify and validate multiple Aave markets.\n   * @param newMarketId The market id\n   */\n  function setMarketId(string calldata newMarketId) external;\n\n  /**\n   * @notice Returns an address by its identifier.\n   * @dev The returned address might be an EOA or a contract, potentially proxied\n   * @dev It returns ZERO if there is no registered address with the given id\n   * @param id The id\n   * @return The address of the registered for the specified id\n   */\n  function getAddress(bytes32 id) external view returns (address);\n\n  /**\n   * @notice General function to update the implementation of a proxy registered with\n   * certain `id`. If there is no proxy registered, it will instantiate one and\n   * set as implementation the `newImplementationAddress`.\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n   * setter function, in order to avoid unexpected consequences\n   * @param id The id\n   * @param newImplementationAddress The address of the new implementation\n   */\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\n\n  /**\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n   * @param id The id\n   * @param newAddress The address to set\n   */\n  function setAddress(bytes32 id, address newAddress) external;\n\n  /**\n   * @notice Returns the address of the Pool proxy.\n   * @return The Pool proxy address\n   **/\n  function getPool() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the Pool, or creates a proxy\n   * setting the new `pool` implementation when the function is called for the first time.\n   * @param newPoolImpl The new Pool implementation\n   **/\n  function setPoolImpl(address newPoolImpl) external;\n\n  /**\n   * @notice Returns the address of the PoolConfigurator proxy.\n   * @return The PoolConfigurator proxy address\n   **/\n  function getPoolConfigurator() external view returns (address);\n\n  /**\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\n   **/\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\n\n  /**\n   * @notice Returns the address of the price oracle.\n   * @return The address of the PriceOracle\n   */\n  function getPriceOracle() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle.\n   * @param newPriceOracle The address of the new PriceOracle\n   */\n  function setPriceOracle(address newPriceOracle) external;\n\n  /**\n   * @notice Returns the address of the ACL manager.\n   * @return The address of the ACLManager\n   */\n  function getACLManager() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL manager.\n   * @param newAclManager The address of the new ACLManager\n   **/\n  function setACLManager(address newAclManager) external;\n\n  /**\n   * @notice Returns the address of the ACL admin.\n   * @return The address of the ACL admin\n   */\n  function getACLAdmin() external view returns (address);\n\n  /**\n   * @notice Updates the address of the ACL admin.\n   * @param newAclAdmin The address of the new ACL admin\n   */\n  function setACLAdmin(address newAclAdmin) external;\n\n  /**\n   * @notice Returns the address of the price oracle sentinel.\n   * @return The address of the PriceOracleSentinel\n   */\n  function getPriceOracleSentinel() external view returns (address);\n\n  /**\n   * @notice Updates the address of the price oracle sentinel.\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\n   **/\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\n\n  /**\n   * @notice Returns the address of the data provider.\n   * @return The address of the DataProvider\n   */\n  function getPoolDataProvider() external view returns (address);\n\n  /**\n   * @notice Updates the address of the data provider.\n   * @param newDataProvider The address of the new DataProvider\n   **/\n  function setPoolDataProvider(address newDataProvider) external;\n}\n"},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"content":"// SPDX-License-Identifier: BUSL-1.1\npragma solidity 0.8.10;\n\nlibrary DataTypes {\n  struct ReserveData {\n    //stores the reserve configuration\n    ReserveConfigurationMap configuration;\n    //the liquidity index. Expressed in ray\n    uint128 liquidityIndex;\n    //the current supply rate. Expressed in ray\n    uint128 currentLiquidityRate;\n    //variable borrow index. Expressed in ray\n    uint128 variableBorrowIndex;\n    //the current variable borrow rate. Expressed in ray\n    uint128 currentVariableBorrowRate;\n    //the current stable borrow rate. Expressed in ray\n    uint128 currentStableBorrowRate;\n    //timestamp of last update\n    uint40 lastUpdateTimestamp;\n    //the id of the reserve. Represents the position in the list of the active reserves\n    uint16 id;\n    //aToken address\n    address aTokenAddress;\n    //stableDebtToken address\n    address stableDebtTokenAddress;\n    //variableDebtToken address\n    address variableDebtTokenAddress;\n    //address of the interest rate strategy\n    address interestRateStrategyAddress;\n    //the current treasury balance, scaled\n    uint128 accruedToTreasury;\n    //the outstanding unbacked aTokens minted through the bridging feature\n    uint128 unbacked;\n    //the outstanding debt borrowed against this asset in isolation mode\n    uint128 isolationModeTotalDebt;\n  }\n\n  struct ReserveConfigurationMap {\n    //bit 0-15: LTV\n    //bit 16-31: Liq. threshold\n    //bit 32-47: Liq. bonus\n    //bit 48-55: Decimals\n    //bit 56: reserve is active\n    //bit 57: reserve is frozen\n    //bit 58: borrowing is enabled\n    //bit 59: stable rate borrowing enabled\n    //bit 60: asset is paused\n    //bit 61: borrowing in isolation mode is enabled\n    //bit 62-63: reserved\n    //bit 64-79: reserve factor\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\n    //bit 152-167 liquidation protocol fee\n    //bit 168-175 eMode category\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\n    //bit 252-255 unused\n\n    uint256 data;\n  }\n\n  struct UserConfigurationMap {\n    /**\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\n     * asset is borrowed by the user.\n     */\n    uint256 data;\n  }\n\n  struct EModeCategory {\n    // each eMode category has a custom ltv and liquidation threshold\n    uint16 ltv;\n    uint16 liquidationThreshold;\n    uint16 liquidationBonus;\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\n    address priceSource;\n    string label;\n  }\n\n  enum InterestRateMode {\n    NONE,\n    STABLE,\n    VARIABLE\n  }\n\n  struct ReserveCache {\n    uint256 currScaledVariableDebt;\n    uint256 nextScaledVariableDebt;\n    uint256 currPrincipalStableDebt;\n    uint256 currAvgStableBorrowRate;\n    uint256 currTotalStableDebt;\n    uint256 nextAvgStableBorrowRate;\n    uint256 nextTotalStableDebt;\n    uint256 currLiquidityIndex;\n    uint256 nextLiquidityIndex;\n    uint256 currVariableBorrowIndex;\n    uint256 nextVariableBorrowIndex;\n    uint256 currLiquidityRate;\n    uint256 currVariableBorrowRate;\n    uint256 reserveFactor;\n    ReserveConfigurationMap reserveConfiguration;\n    address aTokenAddress;\n    address stableDebtTokenAddress;\n    address variableDebtTokenAddress;\n    uint40 reserveLastUpdateTimestamp;\n    uint40 stableDebtLastUpdateTimestamp;\n  }\n\n  struct ExecuteLiquidationCallParams {\n    uint256 reservesCount;\n    uint256 debtToCover;\n    address collateralAsset;\n    address debtAsset;\n    address user;\n    bool receiveAToken;\n    address priceOracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteSupplyParams {\n    address asset;\n    uint256 amount;\n    address onBehalfOf;\n    uint16 referralCode;\n  }\n\n  struct ExecuteBorrowParams {\n    address asset;\n    address user;\n    address onBehalfOf;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint16 referralCode;\n    bool releaseUnderlying;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n  }\n\n  struct ExecuteRepayParams {\n    address asset;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    address onBehalfOf;\n    bool useATokens;\n  }\n\n  struct ExecuteWithdrawParams {\n    address asset;\n    uint256 amount;\n    address to;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ExecuteSetUserEModeParams {\n    uint256 reservesCount;\n    address oracle;\n    uint8 categoryId;\n  }\n\n  struct FinalizeTransferParams {\n    address asset;\n    address from;\n    address to;\n    uint256 amount;\n    uint256 balanceFromBefore;\n    uint256 balanceToBefore;\n    uint256 reservesCount;\n    address oracle;\n    uint8 fromEModeCategory;\n  }\n\n  struct FlashloanParams {\n    address receiverAddress;\n    address[] assets;\n    uint256[] amounts;\n    uint256[] interestRateModes;\n    address onBehalfOf;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n    uint256 maxStableRateBorrowSizePercent;\n    uint256 reservesCount;\n    address addressesProvider;\n    uint8 userEModeCategory;\n    bool isAuthorizedFlashBorrower;\n  }\n\n  struct FlashloanSimpleParams {\n    address receiverAddress;\n    address asset;\n    uint256 amount;\n    bytes params;\n    uint16 referralCode;\n    uint256 flashLoanPremiumToProtocol;\n    uint256 flashLoanPremiumTotal;\n  }\n\n  struct FlashLoanRepaymentParams {\n    uint256 amount;\n    uint256 totalPremium;\n    uint256 flashLoanPremiumToProtocol;\n    address asset;\n    address receiverAddress;\n    uint16 referralCode;\n  }\n\n  struct CalculateUserAccountDataParams {\n    UserConfigurationMap userConfig;\n    uint256 reservesCount;\n    address user;\n    address oracle;\n    uint8 userEModeCategory;\n  }\n\n  struct ValidateBorrowParams {\n    ReserveCache reserveCache;\n    UserConfigurationMap userConfig;\n    address asset;\n    address userAddress;\n    uint256 amount;\n    InterestRateMode interestRateMode;\n    uint256 maxStableLoanPercent;\n    uint256 reservesCount;\n    address oracle;\n    uint8 userEModeCategory;\n    address priceOracleSentinel;\n    bool isolationModeActive;\n    address isolationModeCollateralAddress;\n    uint256 isolationModeDebtCeiling;\n  }\n\n  struct ValidateLiquidationCallParams {\n    ReserveCache debtReserveCache;\n    uint256 totalDebt;\n    uint256 healthFactor;\n    address priceOracleSentinel;\n  }\n\n  struct CalculateInterestRatesParams {\n    uint256 unbacked;\n    uint256 liquidityAdded;\n    uint256 liquidityTaken;\n    uint256 totalStableDebt;\n    uint256 totalVariableDebt;\n    uint256 averageStableBorrowRate;\n    uint256 reserveFactor;\n    address reserve;\n    address aToken;\n  }\n\n  struct InitReserveParams {\n    address asset;\n    address aTokenAddress;\n    address stableDebtAddress;\n    address variableDebtAddress;\n    address interestRateStrategyAddress;\n    uint16 reservesCount;\n    uint16 maxNumberReserves;\n  }\n}\n"},"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role, _msgSender());\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(uint160(account), 20),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/proxy/Clones.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (proxy/Clones.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n * deploying minimal proxy contracts, also known as \"clones\".\n *\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n *\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n * deterministic method.\n *\n * _Available since v3.4._\n */\nlibrary Clones {\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create opcode, which should never revert.\n     */\n    function clone(address implementation) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create(0, ptr, 0x37)\n        }\n        require(instance != address(0), \"ERC1167: create failed\");\n    }\n\n    /**\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n     *\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\n     * the clones cannot be deployed twice at the same address.\n     */\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n            instance := create2(0, ptr, 0x37, salt)\n        }\n        require(instance != address(0), \"ERC1167: create2 failed\");\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(\n        address implementation,\n        bytes32 salt,\n        address deployer\n    ) internal pure returns (address predicted) {\n        assembly {\n            let ptr := mload(0x40)\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\n            mstore(add(ptr, 0x4c), salt)\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\n            predicted := keccak256(add(ptr, 0x37), 0x55)\n        }\n    }\n\n    /**\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\n     */\n    function predictDeterministicAddress(address implementation, bytes32 salt)\n        internal\n        view\n        returns (address predicted)\n    {\n        return predictDeterministicAddress(implementation, salt, address(this));\n    }\n}\n"},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/Address.sol\";\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() initializer {}\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Indicates that the contract has been initialized.\n     */\n    bool private _initialized;\n\n    /**\n     * @dev Indicates that the contract is in the process of being initialized.\n     */\n    bool private _initializing;\n\n    /**\n     * @dev Modifier to protect an initializer function from being invoked twice.\n     */\n    modifier initializer() {\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\n        // contract may have been reentered.\n        require(_initializing ? _isConstructor() : !_initialized, \"Initializable: contract is already initialized\");\n\n        bool isTopLevelCall = !_initializing;\n        if (isTopLevelCall) {\n            _initializing = true;\n            _initialized = true;\n        }\n\n        _;\n\n        if (isTopLevelCall) {\n            _initializing = false;\n        }\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} modifier, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        require(_initializing, \"Initializable: contract is not initializing\");\n        _;\n    }\n\n    function _isConstructor() private view returns (bool) {\n        return !Address.isContract(address(this));\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\n\npragma solidity ^0.8.0;\n\n// CAUTION\n// This version of SafeMath should only be used with Solidity 0.8 or later,\n// because it relies on the compiler's built in overflow checks.\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations.\n *\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n * now has built in overflow checking.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a + b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a * b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator.\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b <= a, errorMessage);\n            return a - b;\n        }\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a / b;\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(\n        uint256 a,\n        uint256 b,\n        string memory errorMessage\n    ) internal pure returns (uint256) {\n        unchecked {\n            require(b > 0, errorMessage);\n            return a % b;\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _HEX_SYMBOLS = \"0123456789abcdef\";\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        // Inspired by OraclizeAPI's implementation - MIT licence\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\n\n        if (value == 0) {\n            return \"0\";\n        }\n        uint256 temp = value;\n        uint256 digits;\n        while (temp != 0) {\n            digits++;\n            temp /= 10;\n        }\n        bytes memory buffer = new bytes(digits);\n        while (value != 0) {\n            digits -= 1;\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\n            value /= 10;\n        }\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        if (value == 0) {\n            return \"0x00\";\n        }\n        uint256 temp = value;\n        uint256 length = 0;\n        while (temp != 0) {\n            length++;\n            temp >>= 8;\n        }\n        return toHexString(value, length);\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n}\n"},"contracts/interfaces/IAddressProvider.sol":{"content":"// SPDX-License-Identifier: MIT\npragma experimental ABIEncoderV2;\npragma solidity 0.8.10;\n\nimport \"./IVaultsCore.sol\";\nimport \"./IPriceFeed.sol\";\nimport \"./IVaultsDataProvider.sol\";\n\ninterface IAddressProvider {\n  function core() external view returns (IVaultsCore);\n\n  function priceFeed() external view returns (IPriceFeed);\n\n  function vaultsData() external view returns (IVaultsDataProvider);\n\n  function stablex() external view returns (address);\n}\n"},"contracts/interfaces/IDexAddressProvider.sol":{"content":"// SPDX-License-Identifier: MIT\npragma experimental ABIEncoderV2;\npragma solidity 0.8.10;\n\nimport \"./IAddressProvider.sol\";\n\ninterface IDexAddressProvider {\n  event DexSet(uint8);\n\n  struct Dex {\n    address proxy;\n    address router;\n  }\n\n  function setDexMapping(\n    uint256 _index,\n    address _proxy,\n    address _dex\n  ) external;\n\n  function parallel() external view returns (IAddressProvider);\n\n  function dexMapping(uint256 index) external view returns (address, address);\n}\n"},"contracts/interfaces/IGenericMiner.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma experimental ABIEncoderV2;\npragma solidity 0.8.10;\n\nimport \"./IGovernanceAddressProvider.sol\";\n\ninterface IGenericMiner {\n  function a() external view returns (IGovernanceAddressProvider);\n\n  function releaseMIMO(address _user) external;\n}\n"},"contracts/interfaces/IGovernanceAddressProvider.sol":{"content":"// SPDX-License-Identifier: MIT\npragma experimental ABIEncoderV2;\n\npragma solidity 0.8.10;\n\nimport \"./IMIMO.sol\";\n\ninterface IGovernanceAddressProvider {\n  function mimo() external view returns (IMIMO);\n}\n"},"contracts/interfaces/IMIMO.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\ninterface IMIMO is IERC20 {\n  function burn(address account, uint256 amount) external;\n\n  function mint(address account, uint256 amount) external;\n}\n"},"contracts/interfaces/IPriceFeed.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\ninterface IPriceFeed {\n  event OracleUpdated(address indexed asset, address oracle, address sender);\n  event EurOracleUpdated(address oracle, address sender);\n\n  function setAssetOracle(address _asset, address _oracle) external;\n\n  function setEurOracle(address _oracle) external;\n\n  function getAssetPrice(address _asset) external view returns (uint256);\n\n  function convertFrom(address _asset, uint256 _amount) external view returns (uint256);\n\n  function convertTo(address _asset, uint256 _amount) external view returns (uint256);\n}\n"},"contracts/interfaces/IVaultsCore.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma experimental ABIEncoderV2;\npragma solidity 0.8.10;\n\ninterface IVaultsCore {\n  event Opened(uint256 indexed vaultId, address indexed collateralType, address indexed owner);\n  event Deposited(uint256 indexed vaultId, uint256 amount, address indexed sender);\n  event Withdrawn(uint256 indexed vaultId, uint256 amount, address indexed sender);\n  event Borrowed(uint256 indexed vaultId, uint256 amount, address indexed sender);\n  event Repaid(uint256 indexed vaultId, uint256 amount, address indexed sender);\n  event Liquidated(\n    uint256 indexed vaultId,\n    uint256 debtRepaid,\n    uint256 collateralLiquidated,\n    address indexed owner,\n    address indexed sender\n  );\n\n  event InsurancePaid(uint256 indexed vaultId, uint256 insuranceAmount, address indexed sender);\n\n  function deposit(address _collateralType, uint256 _amount) external;\n\n  function depositETH() external payable;\n\n  function depositByVaultId(uint256 _vaultId, uint256 _amount) external;\n\n  function depositETHByVaultId(uint256 _vaultId) external payable;\n\n  function depositAndBorrow(\n    address _collateralType,\n    uint256 _depositAmount,\n    uint256 _borrowAmount\n  ) external;\n\n  function depositETHAndBorrow(uint256 _borrowAmount) external payable;\n\n  function withdraw(uint256 _vaultId, uint256 _amount) external;\n\n  function withdrawETH(uint256 _vaultId, uint256 _amount) external;\n\n  function borrow(uint256 _vaultId, uint256 _amount) external;\n\n  function repayAll(uint256 _vaultId) external;\n\n  function repay(uint256 _vaultId, uint256 _amount) external;\n\n  function liquidate(uint256 _vaultId) external;\n\n  function liquidatePartial(uint256 _vaultId, uint256 _amount) external;\n\n  function upgrade(address payable _newVaultsCore) external;\n\n  function acceptUpgrade(address payable _oldVaultsCore) external;\n\n  function cumulativeRates(address _collateralType) external view returns (uint256);\n}\n"},"contracts/interfaces/IVaultsDataProvider.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma experimental ABIEncoderV2;\npragma solidity 0.8.10;\nimport \"../interfaces/IAddressProvider.sol\";\n\ninterface IVaultsDataProvider {\n  struct Vault {\n    // borrowedType support USDX / PAR\n    address collateralType;\n    address owner;\n    uint256 collateralBalance;\n    uint256 baseDebt;\n    uint256 createdAt;\n  }\n\n  //Write\n  function createVault(address _collateralType, address _owner) external returns (uint256);\n\n  function setCollateralBalance(uint256 _id, uint256 _balance) external;\n\n  function setBaseDebt(uint256 _id, uint256 _newBaseDebt) external;\n\n  // Read\n  function a() external view returns (IAddressProvider);\n\n  function baseDebt(address _collateralType) external view returns (uint256);\n\n  function vaultCount() external view returns (uint256);\n\n  function vaults(uint256 _id) external view returns (Vault memory);\n\n  function vaultOwner(uint256 _id) external view returns (address);\n\n  function vaultCollateralType(uint256 _id) external view returns (address);\n\n  function vaultCollateralBalance(uint256 _id) external view returns (uint256);\n\n  function vaultBaseDebt(uint256 _id) external view returns (uint256);\n\n  function vaultId(address _collateralType, address _owner) external view returns (uint256);\n\n  function vaultExists(uint256 _id) external view returns (bool);\n\n  function vaultDebt(uint256 _vaultId) external view returns (uint256);\n\n  function debt() external view returns (uint256);\n\n  function collateralDebt(address _collateralType) external view returns (uint256);\n}\n"},"contracts/interfaces/IWETH.sol":{"content":"pragma solidity 0.8.10;\n\ninterface IWETH {\n  function balanceOf(address user) external view returns (uint256);\n\n  function deposit() external payable;\n\n  function transfer(address to, uint256 value) external returns (bool);\n\n  function approve(address to, uint256 value) external returns (bool);\n\n  function withdraw(uint256) external;\n\n  function transferFrom(\n    address sender,\n    address recipient,\n    uint256 amount\n  ) external returns (bool);\n}\n"},"contracts/MathPow.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\n\nlibrary MathPow {\n  function pow(uint256 x, uint256 n) internal pure returns (uint256 z) {\n    z = n % 2 != 0 ? x : 1;\n\n    for (n /= 2; n != 0; n /= 2) {\n      x = x*x; \n\n      if (n % 2 != 0) {\n        z = z*x;\n      }\n    }\n  }\n}\n"},"contracts/SuperVault.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma experimental ABIEncoderV2;\npragma solidity 0.8.10;\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\";\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\nimport \"@openzeppelin/contracts/proxy/utils/Initializable.sol\";\nimport { IPool } from \"@aave/core-v3/contracts/interfaces/IPool.sol\";\n\nimport \"./interfaces/IAddressProvider.sol\";\nimport \"./interfaces/IGovernanceAddressProvider.sol\";\nimport \"./interfaces/IVaultsCore.sol\";\nimport \"./interfaces/IGenericMiner.sol\";\nimport \"./interfaces/IDexAddressProvider.sol\";\n\n/// @title A parallel protocol vault with added functionality\n/// @notice You can use this for collateral rebalancing\n/// @dev This contract should be cloned and initialized with a SuperVaultFactory contract\ncontract SuperVault is AccessControl, Initializable {\n  enum Operation {\n    LEVERAGE,\n    REBALANCE,\n    EMPTY\n  }\n\n  struct AggregatorRequest {\n    uint256 parToSell;\n    bytes dexTxData;\n    uint dexIndex;\n  }\n\n  IAddressProvider public a;\n  IGovernanceAddressProvider public ga;\n  IPool public lendingPool;\n  IDexAddressProvider internal _dexAP;\n\n  modifier onlyOwner() {\n    require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \"SV001\");\n    _;\n  }\n\n  ///@notice Initializes the Supervault contract\n  ///@dev This replaces the constructor function as in the factory design pattern\n  ///@param _a The address of the protocol's AddressProvider\n  ///@param _ga The address of the protocol's GovernanceAddressProvider\n  ///@param _lendingPool The address of the lendingPool from where flashLoans are taken\n  ///@param _owner The owner of this SuperVault contract\n  function initialize(\n    IAddressProvider _a,\n    IGovernanceAddressProvider _ga,\n    IPool _lendingPool,\n    address _owner,\n    IDexAddressProvider dexAP\n  ) external initializer {\n    require(address(_a) != address(0));\n    require(address(_ga) != address(0));\n    require(address(_lendingPool) != address(0));\n    require(address(dexAP) != address(0));\n\n    a = _a;\n    ga = _ga;\n    lendingPool = _lendingPool;\n    _dexAP = dexAP;\n\n    _setupRole(DEFAULT_ADMIN_ROLE, _owner);\n  }\n\n  ///@notice Routes a call from a flashloan pool to a leverage or rebalance operation\n  ///@dev This Integrates with AAVE V2 flashLoans\n  ///@dev This function is called by the lendingPool during execution of the leverage function\n  ///@param assets An address array with one element corresponding to the address of the leveraged or rebalanced asset\n  ///@param amounts A uint array with one element corresponding to the amount of the leveraged or rebalanced asset\n  ///@param premiums A uint array with one element corresponding to the flashLoan fees\n  ///@param params Bytes sent by the leverage or rebalance function that contains information on the aggregator swap\n  function executeOperation(\n    address[] calldata assets,\n    uint256[] calldata amounts,\n    uint256[] calldata premiums,\n    address,\n    bytes calldata params\n  ) external returns (bool) {\n    require(msg.sender == address(lendingPool), \"SV002\");\n    (Operation operation, bytes memory operationParams) = abi.decode(params, (Operation, bytes));\n    IERC20 asset = IERC20(assets[0]);\n    uint256 flashloanRepayAmount = amounts[0] + premiums[0];\n    if (operation == Operation.LEVERAGE) {\n      leverageOperation(asset, flashloanRepayAmount, operationParams);\n    }\n    if (operation == Operation.REBALANCE) {\n      rebalanceOperation(asset, amounts[0], flashloanRepayAmount, operationParams);\n    }\n    if (operation == Operation.EMPTY) {\n      emptyVaultOperation(asset, amounts[0], flashloanRepayAmount, operationParams);\n    }\n\n    asset.approve(address(lendingPool), flashloanRepayAmount);\n    return true;\n  }\n\n  ///@notice Used by executeOperation to call an aggregator to swap and deposit the swapped asset into a vault\n  function leverageOperation(\n    IERC20 token,\n    uint256 flashloanRepayAmount,\n    bytes memory params\n  ) internal {\n    leverageSwap(params, token);\n\n    require(token.balanceOf(address(this)) >= flashloanRepayAmount, \"SV101\");\n    a.core().deposit(address(token), token.balanceOf(address(this)) - flashloanRepayAmount);\n  }\n\n  ///@notice Leverage an asset using a flashloan to balance collateral\n  ///@dev This uses an AAVE V2 flashLoan that will call executeOperation\n  ///@param asset The address of the asset to leverage\n  ///@param depositAmount The initial starting amount, e.g. 1 ETH\n  ///@param borrowAmount The amount to be borrowed, e.g. 2 ETH, bringing the total to 3 ETH\n  ///@param parToSell The amount of PAR we'll borrow so we can repay the leverage\n  ///@param dexTxData Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\n  ///@param dexIndex DexAddressProvider index of the aggregator to be used for selling PAR, either OneInch or Paraswap\n  function leverage(\n    address asset,\n    uint256 depositAmount, //\n    uint256 borrowAmount, //\n    uint256 parToSell, //\n    bytes calldata dexTxData,\n    uint dexIndex \n  ) external onlyOwner {\n    IERC20(asset).transferFrom(msg.sender, address(this), depositAmount);\n    bytes memory leverageParams = abi.encode(parToSell, dexTxData, dexIndex);\n    bytes memory params = abi.encode(Operation.LEVERAGE, leverageParams);\n    takeFlashLoan(asset, borrowAmount, params);\n    checkAndSendMIMO();\n  }\n\n  ///@notice Used by executeOperation to flashloan an asset, call an aggregator to swap for toAsset, and then rebalance the vault\n  function rebalanceOperation(\n    IERC20 fromCollateral,\n    uint256 amount,\n    uint256 flashloanRepayAmount,\n    bytes memory params\n  ) internal {\n    (uint256 vaultId, address toCollateral, uint256 parAmount, bytes memory dexTxData, uint dexIndex) = abi\n      .decode(params, (uint256, address, uint256, bytes, uint ));\n    aggregatorSwap(dexIndex, fromCollateral, amount, dexTxData);\n\n    uint256 depositAmount = IERC20(toCollateral).balanceOf(address(this));\n\n    IERC20(toCollateral).approve(address(a.core()), depositAmount);\n\n    a.core().depositAndBorrow(toCollateral, depositAmount, parAmount);\n    a.core().repay(vaultId, parAmount);\n\n    a.core().withdraw(vaultId, flashloanRepayAmount);\n\n    require(fromCollateral.balanceOf(address(this)) >= flashloanRepayAmount, \"SV101\");\n  }\n\n  ///@notice Uses a flashloan to exchange one collateral type for another, e.g. to hold less volatile collateral\n  ///@notice Both collateral vaults must have been created by this contract using the depositToVault or depositAndBorrowFromVault functions\n  ///@dev This uses an AAVE V2 flashLoan that will call executeOperation\n  ///@param vaultId The Id of the vault to reduce the collateral of\n  ///@param toCollateral Address of the collateral to rebalance to\n  ///@param fromCollateral Address of the starting collateral that will be reduced\n  ///@param fromCollateralAmount Amount of starting collateral to deleverage\n  ///@param parAmount Amount of par that will be deposited to exchange for\n  ///@param dexTxData Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\n  ///@param dexIndex DexAddressProvider index representing the aggregator to be used for selling PAR, either OneInch or Paraswap\n  function rebalance(\n    uint256 vaultId, // vaultId to deleverage\n    address toCollateral,\n    address fromCollateral, // save some gas by just passing in collateral type instead of querying VaultsDataProvider for it\n    uint256 fromCollateralAmount, // amount of collateral to reduce in main vault and borrow from Aave first\n    uint256 parAmount, // amount of PAR to repay and deleverage\n    bytes calldata dexTxData,\n    uint dexIndex \n  ) external onlyOwner {\n    bytes memory rebalanceParams = abi.encode(vaultId, toCollateral, parAmount, dexTxData, dexIndex);\n    bytes memory params = abi.encode(Operation.REBALANCE, rebalanceParams);\n\n    takeFlashLoan(fromCollateral, fromCollateralAmount, params);\n    checkAndSendMIMO();\n  }\n\n  ///@notice Used by executeOperation to repay all debt for a vault, withdraw collateral from the vault, and send the collateral back to the user\n  ///@notice There will likely be some leftover par after repaying the loan; that will also be sent back to the user\n  function emptyVaultOperation(\n    IERC20 vaultCollateral,\n    uint256 amount,\n    uint256 flashloanRepayAmount,\n    bytes memory params\n  ) internal {\n    // Use par to repay debt\n    (uint256 vaultId, bytes memory dexTxData, uint dexIndex) = abi.decode(params, (uint256, bytes, uint));\n\n    aggregatorSwap(dexIndex, vaultCollateral, amount, dexTxData); // swap assets for par to repay back loan\n\n    IERC20 par = IERC20(a.stablex());\n    par.approve(address(a.core()), par.balanceOf(address(this)));\n\n    // Repay the par debt\n    a.core().repayAll(vaultId);\n    uint256 vaultBalance = a.vaultsData().vaultCollateralBalance(vaultId);\n    // Withdraw all collateral\n    a.core().withdraw(vaultId, vaultBalance);\n\n    require(vaultCollateral.balanceOf(address(this)) >= flashloanRepayAmount, \"SV101\");\n  }\n\n  ///@notice Uses a flashloan to repay all debts for a vault and send all collateral in the vault to the owner\n  ///@notice This vault must have been created by this contract\n  ///@dev This uses an AAVE V2 flashLoan that will call executeOperation\n  ///@param vaultId The Id of the vault to empty\n  ///@param collateralType Address of the collateral of the vault\n  ///@param repayAmount Amount of par that needs to be repaid before all collateral can be withdrawn\n  ///@param dexTxData Bytes that contain the low-level call to swap the vault asset for par to repay the vault loan\n  ///@param dexIndex Index to use for swapping the vault collateral for par\n  function emptyVault(\n    uint256 vaultId,\n    address collateralType,\n    uint256 repayAmount, // Amount, in collateral type, needed to borrow to repay current vault debt\n    bytes calldata dexTxData,\n    uint dexIndex \n  ) external onlyOwner {\n    // Flashloan collateral and swap for par to repay any outstanding vault debt\n    bytes memory emptyVaultParams = abi.encode(vaultId, dexTxData, dexIndex);\n    bytes memory params = abi.encode(Operation.EMPTY, emptyVaultParams);\n    takeFlashLoan(collateralType, repayAmount, params);\n\n    checkAndSendMIMO();\n\n    // Send remaining par, mimo, and collateral back to the owner\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this))));\n    checkAndSendMIMO();\n\n    IERC20 collateral = IERC20(collateralType);\n    collateral.transfer(msg.sender, collateral.balanceOf(address(this)));\n  }\n\n  ///@notice Withdraw collateral from a vault\n  ///@notice Vault must have been created through leverage, depositToVault, or depositAndBorrowFromVault from this contract\n  ///@param vaultId The ID of the vault to withdraw from\n  ///@param amount The amount of collateral to withdraw\n  function withdrawFromVault(uint256 vaultId, uint256 amount) external onlyOwner {\n    a.core().withdraw(vaultId, amount);\n    IERC20 asset = IERC20(a.vaultsData().vaultCollateralType(vaultId));\n    require(asset.transfer(msg.sender, amount));\n  }\n\n  ///@notice Borrow PAR from a vault\n  ///@param vaultId The ID of the vault to borrow from\n  ///@param amount The amount of PAR to borrow\n  function borrowFromVault(uint256 vaultId, uint256 amount) external onlyOwner {\n    a.core().borrow(vaultId, amount);\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this))));\n    checkAndSendMIMO();\n  }\n\n  ///@notice Withdraw all of one type of collateral from this contract\n  ///@notice Can only be used on vaults which have been created by this contract\n  ///@param asset The address of the collateral type\n  function withdrawAsset(address asset) external onlyOwner {\n    IERC20 token = IERC20(asset);\n    require(token.transfer(msg.sender, token.balanceOf(address(this))));\n  }\n\n  ///@notice Deposit collateral into a vault\n  ///@notice Requires approval of asset for amount before calling\n  ///@param asset Address of the collateral type\n  ///@param amount Amount to deposit\n  function depositToVault(address asset, uint256 amount) external {\n    IERC20 token = IERC20(asset);\n    token.approve(address(a.core()), amount);\n    token.transferFrom(msg.sender, address(this), amount);\n    a.core().deposit(asset, amount);\n  }\n\n  ///@notice Deposit collateral into a vault and borrow PAR\n  ///@notice Requires approval of asset for amount before calling\n  ///@param asset Address of the collateral type\n  ///@param depositAmount Amount to deposit\n  ///@param borrowAmount Amount of PAR to borrow after depositing\n  function depositAndBorrowFromVault(\n    address asset,\n    uint256 depositAmount,\n    uint256 borrowAmount\n  ) external onlyOwner {\n    IERC20 token = IERC20(asset);\n    token.approve(address(a.core()), depositAmount);\n    token.transferFrom(msg.sender, address(this), depositAmount);\n    a.core().depositAndBorrow(asset, depositAmount, borrowAmount);\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this)))); //par\n    checkAndSendMIMO();\n  }\n\n  ///@notice Release MIMO from a MIMO miner to the owner\n  ///@param minerAddress The address of the MIMO miner\n  function releaseMIMO(address minerAddress) external payable onlyOwner {\n    IGenericMiner miner = IGenericMiner(minerAddress);\n    miner.releaseMIMO(address(this));\n    checkAndSendMIMO();\n  }\n\n  ///@notice Wrap ETH and deposit WETH as collateral into a vault\n  function depositETHToVault() external payable {\n    a.core().depositETH{ value: msg.value }();\n  }\n\n  ///@notice Wrap ETH and deposit WETH as collateral into a vault, then borrow PAR from vault\n  ///@param borrowAmount The amount of PAR to borrow after depositing ETH\n  function depositETHAndBorrowFromVault(uint256 borrowAmount) external payable onlyOwner {\n    a.core().depositETHAndBorrow{ value: msg.value }(borrowAmount);\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this)))); //par\n    checkAndSendMIMO();\n  }\n\n  ///@notice Helper function to call an aggregator to swap PAR for a leveraged asset\n  ///@dev This helper function is used to limit the number of local variables in the leverageOperation function\n  ///@param params The params passed from the leverageOperation function for the aggregator call\n  ///@param token The leveraged asset to swap PAR for\n  function leverageSwap(bytes memory params, IERC20 token) internal {\n    (uint256 parToSell, bytes memory dexTxData, uint dexIndex) = abi.decode(\n      params,\n      (uint256, bytes, uint )\n    );\n    token.approve(address(a.core()), 2**256 - 1);\n    a.core().depositAndBorrow(address(token), token.balanceOf(address(this)), parToSell);\n    IERC20 par = IERC20(a.stablex());\n    aggregatorSwap(dexIndex, par, parToSell, dexTxData);\n  }\n\n  ///@notice Helper function to approve and swap an asset using an aggregator\n  ///@param dexIndex The DexAddressProvider index of aggregator to use to swap\n  ///@param token The starting token to swap for another asset\n  ///@param amount The amount of starting token to swap for\n  ///@param dexTxData The low-level data to call the aggregator with\n  function aggregatorSwap(\n    uint256 dexIndex,\n    IERC20 token,\n    uint256 amount,\n    bytes memory dexTxData\n  ) internal {\n    (address proxy, address router) = _dexAP.dexMapping(dexIndex);\n    require(proxy != address(0) && router != address(0), \"SV201\"); \n    token.approve(proxy, amount);\n    router.call(dexTxData);\n  }\n\n  ///@notice Helper function to format arguments to take a flashloan\n  ///@dev The flashloan call will call the executeOperation function on this contract\n  ///@param asset The address of the asset to loan\n  ///@param amount The amount to borrow\n  ///@param params The params that will be sent to executeOperation after the asset is borrowed\n  function takeFlashLoan(\n    address asset,\n    uint256 amount,\n    bytes memory params\n  ) internal {\n    uint8 referralCode;\n    address[] memory assets = new address[](1);\n    uint256[] memory amounts = new uint256[](1);\n    uint256[] memory modes = new uint256[](1);\n    (assets[0], amounts[0]) = (asset, amount);\n    lendingPool.flashLoan(address(this), assets, amounts, modes, address(this), params, referralCode);\n  }\n\n  ///@notice Helper function to transfer all MIMO owned by this contract to the Owner\n  function checkAndSendMIMO() internal {\n    if (ga.mimo().balanceOf(address(this)) > 0) {\n      require(ga.mimo().transfer(msg.sender, ga.mimo().balanceOf(address(this))));\n    }\n  }\n}\n"},"contracts/SuperVaultFactory.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma experimental ABIEncoderV2;\npragma solidity 0.8.10;\n\nimport \"@openzeppelin/contracts/proxy/Clones.sol\";\nimport \"@openzeppelin/contracts/utils/Address.sol\";\n\ncontract SuperVaultFactory {\n  using Address for address;\n  using Clones for address;\n\n  event NewSuperVaultContract(address indexed owner, address superVaultContract);\n\n  address public base;\n\n  constructor(address _base) public {\n    require(address(_base) != address(0));\n\n    base = _base;\n  }\n\n  function clone(bytes calldata _initdata) public {\n    address superVaultContract = base.clone();\n    superVaultContract.functionCall(_initdata);\n  \n    emit NewSuperVaultContract(msg.sender, superVaultContract);\n  }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":3000},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/interfaces/IWETH.sol\n\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IWETH.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"9302","formattedMessage":"Warning: Return value of low-level calls not used.\n   --> contracts/SuperVault.sol:346:5:\n    |\n346 |     router.call(dexTxData);\n    |     ^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Return value of low-level calls not used.","severity":"warning","sourceLocation":{"end":15507,"file":"contracts/SuperVault.sol","start":15485},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n  --> contracts/SuperVaultFactory.sol:17:3:\n   |\n17 |   constructor(address _base) public {\n   |   ^ (Relevant source part starts here and spans across multiple lines).\n\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":493,"file":"contracts/SuperVaultFactory.sol","start":392},"type":"Warning"}],"sources":{"@aave/core-v3/contracts/interfaces/IPool.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IPool.sol","exportedSymbols":{"DataTypes":[1189],"IPool":[628],"IPoolAddressesProvider":[837]},"id":629,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"37:23:0"},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","file":"./IPoolAddressesProvider.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":629,"sourceUnit":838,"src":"62:68:0","symbolAliases":[{"foreign":{"id":2,"name":"IPoolAddressesProvider","nodeType":"Identifier","overloadedDeclarations":[],"src":"70:22:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","file":"../protocol/libraries/types/DataTypes.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":629,"sourceUnit":1190,"src":"131:68:0","symbolAliases":[{"foreign":{"id":4,"name":"DataTypes","nodeType":"Identifier","overloadedDeclarations":[],"src":"139:9:0","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IPool","contractDependencies":[],"contractKind":"interface","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"201:97:0","text":" @title IPool\n @author Aave\n @notice Defines the basic interface for an Aave Pool.*"},"fullyImplemented":false,"id":628,"linearizedBaseContracts":[628],"name":"IPool","nameLocation":"309:5:0","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"319:350:0","text":" @dev Emitted on mintUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\n @param amount The amount of supplied assets\n @param referralCode The referral code used*"},"id":19,"name":"MintUnbacked","nameLocation":"678:12:0","nodeType":"EventDefinition","parameters":{"id":18,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"712:7:0","nodeType":"VariableDeclaration","scope":19,"src":"696:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"696:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"733:4:0","nodeType":"VariableDeclaration","scope":19,"src":"725:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"725:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":13,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"759:10:0","nodeType":"VariableDeclaration","scope":19,"src":"743:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"743:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":15,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"783:6:0","nodeType":"VariableDeclaration","scope":19,"src":"775:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":14,"name":"uint256","nodeType":"ElementaryTypeName","src":"775:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":17,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"810:12:0","nodeType":"VariableDeclaration","scope":19,"src":"795:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":16,"name":"uint16","nodeType":"ElementaryTypeName","src":"795:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"690:136:0"},"src":"672:155:0"},{"anonymous":false,"documentation":{"id":20,"nodeType":"StructuredDocumentation","src":"831:258:0","text":" @dev Emitted on backUnbacked()\n @param reserve The address of the underlying asset of the reserve\n @param backer The address paying for the backing\n @param amount The amount added as backing\n @param fee The amount paid in fees*"},"id":30,"name":"BackUnbacked","nameLocation":"1098:12:0","nodeType":"EventDefinition","parameters":{"id":29,"nodeType":"ParameterList","parameters":[{"constant":false,"id":22,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1127:7:0","nodeType":"VariableDeclaration","scope":30,"src":"1111:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":21,"name":"address","nodeType":"ElementaryTypeName","src":"1111:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":24,"indexed":true,"mutability":"mutable","name":"backer","nameLocation":"1152:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1136:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":23,"name":"address","nodeType":"ElementaryTypeName","src":"1136:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":26,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1168:6:0","nodeType":"VariableDeclaration","scope":30,"src":"1160:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":25,"name":"uint256","nodeType":"ElementaryTypeName","src":"1160:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":28,"indexed":false,"mutability":"mutable","name":"fee","nameLocation":"1184:3:0","nodeType":"VariableDeclaration","scope":30,"src":"1176:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1110:78:0"},"src":"1092:97:0"},{"anonymous":false,"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"1193:325:0","text":" @dev Emitted on supply()\n @param reserve The address of the underlying asset of the reserve\n @param user The address initiating the supply\n @param onBehalfOf The beneficiary of the supply, receiving the aTokens\n @param amount The amount supplied\n @param referralCode The referral code used*"},"id":43,"name":"Supply","nameLocation":"1527:6:0","nodeType":"EventDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"1555:7:0","nodeType":"VariableDeclaration","scope":43,"src":"1539:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1539:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"1576:4:0","nodeType":"VariableDeclaration","scope":43,"src":"1568:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1568:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":37,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"1602:10:0","nodeType":"VariableDeclaration","scope":43,"src":"1586:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":36,"name":"address","nodeType":"ElementaryTypeName","src":"1586:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":39,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1626:6:0","nodeType":"VariableDeclaration","scope":43,"src":"1618:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":38,"name":"uint256","nodeType":"ElementaryTypeName","src":"1618:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":41,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"1653:12:0","nodeType":"VariableDeclaration","scope":43,"src":"1638:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":40,"name":"uint16","nodeType":"ElementaryTypeName","src":"1638:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"1533:136:0"},"src":"1521:149:0"},{"anonymous":false,"documentation":{"id":44,"nodeType":"StructuredDocumentation","src":"1674:293:0","text":" @dev Emitted on withdraw()\n @param reserve The address of the underlying asset being withdrawn\n @param user The address initiating the withdrawal, owner of aTokens\n @param to The address that will receive the underlying\n @param amount The amount to be withdrawn*"},"id":54,"name":"Withdraw","nameLocation":"1976:8:0","nodeType":"EventDefinition","parameters":{"id":53,"nodeType":"ParameterList","parameters":[{"constant":false,"id":46,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2001:7:0","nodeType":"VariableDeclaration","scope":54,"src":"1985:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":45,"name":"address","nodeType":"ElementaryTypeName","src":"1985:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":48,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2026:4:0","nodeType":"VariableDeclaration","scope":54,"src":"2010:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":47,"name":"address","nodeType":"ElementaryTypeName","src":"2010:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":50,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2048:2:0","nodeType":"VariableDeclaration","scope":54,"src":"2032:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":49,"name":"address","nodeType":"ElementaryTypeName","src":"2032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":52,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2060:6:0","nodeType":"VariableDeclaration","scope":54,"src":"2052:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":51,"name":"uint256","nodeType":"ElementaryTypeName","src":"2052:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1984:83:0"},"src":"1970:98:0"},{"anonymous":false,"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"2072:629:0","text":" @dev Emitted on borrow() and flashLoan() when debt needs to be opened\n @param reserve The address of the underlying asset being borrowed\n @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\n initiator of the transaction on flashLoan()\n @param onBehalfOf The address that will be getting the debt\n @param amount The amount borrowed out\n @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\n @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\n @param referralCode The referral code used*"},"id":72,"name":"Borrow","nameLocation":"2710:6:0","nodeType":"EventDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"2738:7:0","nodeType":"VariableDeclaration","scope":72,"src":"2722:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":56,"name":"address","nodeType":"ElementaryTypeName","src":"2722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":59,"indexed":false,"mutability":"mutable","name":"user","nameLocation":"2759:4:0","nodeType":"VariableDeclaration","scope":72,"src":"2751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":58,"name":"address","nodeType":"ElementaryTypeName","src":"2751:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":61,"indexed":true,"mutability":"mutable","name":"onBehalfOf","nameLocation":"2785:10:0","nodeType":"VariableDeclaration","scope":72,"src":"2769:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":60,"name":"address","nodeType":"ElementaryTypeName","src":"2769:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":63,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2809:6:0","nodeType":"VariableDeclaration","scope":72,"src":"2801:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":62,"name":"uint256","nodeType":"ElementaryTypeName","src":"2801:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":66,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"2848:16:0","nodeType":"VariableDeclaration","scope":72,"src":"2821:43:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":65,"nodeType":"UserDefinedTypeName","pathNode":{"id":64,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":893,"src":"2821:26:0"},"referencedDeclaration":893,"src":"2821:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":68,"indexed":false,"mutability":"mutable","name":"borrowRate","nameLocation":"2878:10:0","nodeType":"VariableDeclaration","scope":72,"src":"2870:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":67,"name":"uint256","nodeType":"ElementaryTypeName","src":"2870:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":70,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"2909:12:0","nodeType":"VariableDeclaration","scope":72,"src":"2894:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":69,"name":"uint16","nodeType":"ElementaryTypeName","src":"2894:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"2716:209:0"},"src":"2704:222:0"},{"anonymous":false,"documentation":{"id":73,"nodeType":"StructuredDocumentation","src":"2930:426:0","text":" @dev Emitted on repay()\n @param reserve The address of the underlying asset of the reserve\n @param user The beneficiary of the repayment, getting his debt reduced\n @param repayer The address of the user initiating the repay(), providing the funds\n @param amount The amount repaid\n @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly*"},"id":85,"name":"Repay","nameLocation":"3365:5:0","nodeType":"EventDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":75,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3392:7:0","nodeType":"VariableDeclaration","scope":85,"src":"3376:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":74,"name":"address","nodeType":"ElementaryTypeName","src":"3376:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":77,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3421:4:0","nodeType":"VariableDeclaration","scope":85,"src":"3405:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":76,"name":"address","nodeType":"ElementaryTypeName","src":"3405:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":79,"indexed":true,"mutability":"mutable","name":"repayer","nameLocation":"3447:7:0","nodeType":"VariableDeclaration","scope":85,"src":"3431:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"3431:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":81,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"3468:6:0","nodeType":"VariableDeclaration","scope":85,"src":"3460:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":80,"name":"uint256","nodeType":"ElementaryTypeName","src":"3460:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":83,"indexed":false,"mutability":"mutable","name":"useATokens","nameLocation":"3485:10:0","nodeType":"VariableDeclaration","scope":85,"src":"3480:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":82,"name":"bool","nodeType":"ElementaryTypeName","src":"3480:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3370:129:0"},"src":"3359:141:0"},{"anonymous":false,"documentation":{"id":86,"nodeType":"StructuredDocumentation","src":"3504:307:0","text":" @dev Emitted on swapBorrowRateMode()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user swapping his rate mode\n @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable*"},"id":95,"name":"SwapBorrowRateMode","nameLocation":"3820:18:0","nodeType":"EventDefinition","parameters":{"id":94,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"3860:7:0","nodeType":"VariableDeclaration","scope":95,"src":"3844:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":87,"name":"address","nodeType":"ElementaryTypeName","src":"3844:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":90,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"3889:4:0","nodeType":"VariableDeclaration","scope":95,"src":"3873:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":89,"name":"address","nodeType":"ElementaryTypeName","src":"3873:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":93,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"3926:16:0","nodeType":"VariableDeclaration","scope":95,"src":"3899:43:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":92,"nodeType":"UserDefinedTypeName","pathNode":{"id":91,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":893,"src":"3899:26:0"},"referencedDeclaration":893,"src":"3899:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"}],"src":"3838:108:0"},"src":"3814:133:0"},{"anonymous":false,"documentation":{"id":96,"nodeType":"StructuredDocumentation","src":"3951:234:0","text":" @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\n @param asset The address of the underlying asset of the reserve\n @param totalDebt The total isolation mode debt for the reserve"},"id":102,"name":"IsolationModeTotalDebtUpdated","nameLocation":"4194:29:0","nodeType":"EventDefinition","parameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":98,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"4240:5:0","nodeType":"VariableDeclaration","scope":102,"src":"4224:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"4224:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":100,"indexed":false,"mutability":"mutable","name":"totalDebt","nameLocation":"4255:9:0","nodeType":"VariableDeclaration","scope":102,"src":"4247:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":99,"name":"uint256","nodeType":"ElementaryTypeName","src":"4247:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4223:42:0"},"src":"4188:78:0"},{"anonymous":false,"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"4270:165:0","text":" @dev Emitted when the user selects a certain asset category for eMode\n @param user The address of the user\n @param categoryId The category id*"},"id":109,"name":"UserEModeSet","nameLocation":"4444:12:0","nodeType":"EventDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":105,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4473:4:0","nodeType":"VariableDeclaration","scope":109,"src":"4457:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":104,"name":"address","nodeType":"ElementaryTypeName","src":"4457:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":107,"indexed":false,"mutability":"mutable","name":"categoryId","nameLocation":"4485:10:0","nodeType":"VariableDeclaration","scope":109,"src":"4479:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":106,"name":"uint8","nodeType":"ElementaryTypeName","src":"4479:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"4456:40:0"},"src":"4438:59:0"},{"anonymous":false,"documentation":{"id":110,"nodeType":"StructuredDocumentation","src":"4501:208:0","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"id":116,"name":"ReserveUsedAsCollateralEnabled","nameLocation":"4718:30:0","nodeType":"EventDefinition","parameters":{"id":115,"nodeType":"ParameterList","parameters":[{"constant":false,"id":112,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"4765:7:0","nodeType":"VariableDeclaration","scope":116,"src":"4749:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":111,"name":"address","nodeType":"ElementaryTypeName","src":"4749:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":114,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"4790:4:0","nodeType":"VariableDeclaration","scope":116,"src":"4774:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":113,"name":"address","nodeType":"ElementaryTypeName","src":"4774:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4748:47:0"},"src":"4712:84:0"},{"anonymous":false,"documentation":{"id":117,"nodeType":"StructuredDocumentation","src":"4800:208:0","text":" @dev Emitted on setUserUseReserveAsCollateral()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user enabling the usage as collateral*"},"id":123,"name":"ReserveUsedAsCollateralDisabled","nameLocation":"5017:31:0","nodeType":"EventDefinition","parameters":{"id":122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":119,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5065:7:0","nodeType":"VariableDeclaration","scope":123,"src":"5049:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":118,"name":"address","nodeType":"ElementaryTypeName","src":"5049:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":121,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5090:4:0","nodeType":"VariableDeclaration","scope":123,"src":"5074:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":120,"name":"address","nodeType":"ElementaryTypeName","src":"5074:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5048:47:0"},"src":"5011:85:0"},{"anonymous":false,"documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"5100:213:0","text":" @dev Emitted on rebalanceStableBorrowRate()\n @param reserve The address of the underlying asset of the reserve\n @param user The address of the user for which the rebalance has been executed*"},"id":130,"name":"RebalanceStableBorrowRate","nameLocation":"5322:25:0","nodeType":"EventDefinition","parameters":{"id":129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":126,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"5364:7:0","nodeType":"VariableDeclaration","scope":130,"src":"5348:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":125,"name":"address","nodeType":"ElementaryTypeName","src":"5348:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":128,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"5389:4:0","nodeType":"VariableDeclaration","scope":130,"src":"5373:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":127,"name":"address","nodeType":"ElementaryTypeName","src":"5373:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5347:47:0"},"src":"5316:79:0"},{"anonymous":false,"documentation":{"id":131,"nodeType":"StructuredDocumentation","src":"5399:483:0","text":" @dev Emitted on flashLoan()\n @param target The address of the flash loan receiver contract\n @param initiator The address initiating the flash loan\n @param asset The address of the asset being flash borrowed\n @param amount The amount flash borrowed\n @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\n @param premium The fee flash borrowed\n @param referralCode The referral code used*"},"id":148,"name":"FlashLoan","nameLocation":"5891:9:0","nodeType":"EventDefinition","parameters":{"id":147,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"indexed":true,"mutability":"mutable","name":"target","nameLocation":"5922:6:0","nodeType":"VariableDeclaration","scope":148,"src":"5906:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":132,"name":"address","nodeType":"ElementaryTypeName","src":"5906:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":135,"indexed":false,"mutability":"mutable","name":"initiator","nameLocation":"5942:9:0","nodeType":"VariableDeclaration","scope":148,"src":"5934:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":134,"name":"address","nodeType":"ElementaryTypeName","src":"5934:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":137,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"5973:5:0","nodeType":"VariableDeclaration","scope":148,"src":"5957:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":136,"name":"address","nodeType":"ElementaryTypeName","src":"5957:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":139,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"5992:6:0","nodeType":"VariableDeclaration","scope":148,"src":"5984:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":138,"name":"uint256","nodeType":"ElementaryTypeName","src":"5984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":142,"indexed":false,"mutability":"mutable","name":"interestRateMode","nameLocation":"6031:16:0","nodeType":"VariableDeclaration","scope":148,"src":"6004:43:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":141,"nodeType":"UserDefinedTypeName","pathNode":{"id":140,"name":"DataTypes.InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":893,"src":"6004:26:0"},"referencedDeclaration":893,"src":"6004:26:0","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":144,"indexed":false,"mutability":"mutable","name":"premium","nameLocation":"6061:7:0","nodeType":"VariableDeclaration","scope":148,"src":"6053:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":143,"name":"uint256","nodeType":"ElementaryTypeName","src":"6053:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":146,"indexed":true,"mutability":"mutable","name":"referralCode","nameLocation":"6089:12:0","nodeType":"VariableDeclaration","scope":148,"src":"6074:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":145,"name":"uint16","nodeType":"ElementaryTypeName","src":"6074:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"5900:205:0"},"src":"5885:221:0"},{"anonymous":false,"documentation":{"id":149,"nodeType":"StructuredDocumentation","src":"6110:750:0","text":" @dev Emitted when a borrower is liquidated.\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param liquidatedCollateralAmount The amount of collateral received by the liquidator\n @param liquidator The address of the liquidator\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"id":165,"name":"LiquidationCall","nameLocation":"6869:15:0","nodeType":"EventDefinition","parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"indexed":true,"mutability":"mutable","name":"collateralAsset","nameLocation":"6906:15:0","nodeType":"VariableDeclaration","scope":165,"src":"6890:31:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"6890:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":153,"indexed":true,"mutability":"mutable","name":"debtAsset","nameLocation":"6943:9:0","nodeType":"VariableDeclaration","scope":165,"src":"6927:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":152,"name":"address","nodeType":"ElementaryTypeName","src":"6927:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":155,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"6974:4:0","nodeType":"VariableDeclaration","scope":165,"src":"6958:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":154,"name":"address","nodeType":"ElementaryTypeName","src":"6958:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":157,"indexed":false,"mutability":"mutable","name":"debtToCover","nameLocation":"6992:11:0","nodeType":"VariableDeclaration","scope":165,"src":"6984:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":156,"name":"uint256","nodeType":"ElementaryTypeName","src":"6984:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":159,"indexed":false,"mutability":"mutable","name":"liquidatedCollateralAmount","nameLocation":"7017:26:0","nodeType":"VariableDeclaration","scope":165,"src":"7009:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":158,"name":"uint256","nodeType":"ElementaryTypeName","src":"7009:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":161,"indexed":false,"mutability":"mutable","name":"liquidator","nameLocation":"7057:10:0","nodeType":"VariableDeclaration","scope":165,"src":"7049:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"7049:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"indexed":false,"mutability":"mutable","name":"receiveAToken","nameLocation":"7078:13:0","nodeType":"VariableDeclaration","scope":165,"src":"7073:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":162,"name":"bool","nodeType":"ElementaryTypeName","src":"7073:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6884:211:0"},"src":"6863:233:0"},{"anonymous":false,"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"7100:422:0","text":" @dev Emitted when the state of a reserve is updated.\n @param reserve The address of the underlying asset of the reserve\n @param liquidityRate The next liquidity rate\n @param stableBorrowRate The next stable borrow rate\n @param variableBorrowRate The next variable borrow rate\n @param liquidityIndex The next liquidity index\n @param variableBorrowIndex The next variable borrow index*"},"id":180,"name":"ReserveDataUpdated","nameLocation":"7531:18:0","nodeType":"EventDefinition","parameters":{"id":179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"7571:7:0","nodeType":"VariableDeclaration","scope":180,"src":"7555:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":167,"name":"address","nodeType":"ElementaryTypeName","src":"7555:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"liquidityRate","nameLocation":"7592:13:0","nodeType":"VariableDeclaration","scope":180,"src":"7584:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":169,"name":"uint256","nodeType":"ElementaryTypeName","src":"7584:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"stableBorrowRate","nameLocation":"7619:16:0","nodeType":"VariableDeclaration","scope":180,"src":"7611:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":171,"name":"uint256","nodeType":"ElementaryTypeName","src":"7611:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":174,"indexed":false,"mutability":"mutable","name":"variableBorrowRate","nameLocation":"7649:18:0","nodeType":"VariableDeclaration","scope":180,"src":"7641:26:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":173,"name":"uint256","nodeType":"ElementaryTypeName","src":"7641:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":176,"indexed":false,"mutability":"mutable","name":"liquidityIndex","nameLocation":"7681:14:0","nodeType":"VariableDeclaration","scope":180,"src":"7673:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":175,"name":"uint256","nodeType":"ElementaryTypeName","src":"7673:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":178,"indexed":false,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"7709:19:0","nodeType":"VariableDeclaration","scope":180,"src":"7701:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":177,"name":"uint256","nodeType":"ElementaryTypeName","src":"7701:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7549:183:0"},"src":"7525:208:0"},{"anonymous":false,"documentation":{"id":181,"nodeType":"StructuredDocumentation","src":"7737:212:0","text":" @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\n @param reserve The address of the reserve\n @param amountMinted The amount minted to the treasury*"},"id":187,"name":"MintedToTreasury","nameLocation":"7958:16:0","nodeType":"EventDefinition","parameters":{"id":186,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"indexed":true,"mutability":"mutable","name":"reserve","nameLocation":"7991:7:0","nodeType":"VariableDeclaration","scope":187,"src":"7975:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"7975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"amountMinted","nameLocation":"8008:12:0","nodeType":"VariableDeclaration","scope":187,"src":"8000:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"8000:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7974:47:0"},"src":"7952:70:0"},{"documentation":{"id":188,"nodeType":"StructuredDocumentation","src":"8026:426:0","text":" @dev Mints an `amount` of aTokens to the `onBehalfOf`\n @param asset The address of the underlying asset to mint\n @param amount The amount to mint\n @param onBehalfOf The address that will receive the aTokens\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"69a933a5","id":199,"implemented":false,"kind":"function","modifiers":[],"name":"mintUnbacked","nameLocation":"8464:12:0","nodeType":"FunctionDefinition","parameters":{"id":197,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"asset","nameLocation":"8490:5:0","nodeType":"VariableDeclaration","scope":199,"src":"8482:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":189,"name":"address","nodeType":"ElementaryTypeName","src":"8482:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"amount","nameLocation":"8509:6:0","nodeType":"VariableDeclaration","scope":199,"src":"8501:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"8501:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"onBehalfOf","nameLocation":"8529:10:0","nodeType":"VariableDeclaration","scope":199,"src":"8521:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":193,"name":"address","nodeType":"ElementaryTypeName","src":"8521:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":196,"mutability":"mutable","name":"referralCode","nameLocation":"8552:12:0","nodeType":"VariableDeclaration","scope":199,"src":"8545:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":195,"name":"uint16","nodeType":"ElementaryTypeName","src":"8545:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"8476:92:0"},"returnParameters":{"id":198,"nodeType":"ParameterList","parameters":[],"src":"8577:0:0"},"scope":628,"src":"8455:123:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":200,"nodeType":"StructuredDocumentation","src":"8582:226:0","text":" @dev Back the current unbacked underlying with `amount` and pay `fee`.\n @param asset The address of the underlying asset to back\n @param amount The amount to back\n @param fee The amount paid in fees*"},"functionSelector":"d65dc7a1","id":209,"implemented":false,"kind":"function","modifiers":[],"name":"backUnbacked","nameLocation":"8820:12:0","nodeType":"FunctionDefinition","parameters":{"id":207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":202,"mutability":"mutable","name":"asset","nameLocation":"8846:5:0","nodeType":"VariableDeclaration","scope":209,"src":"8838:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":201,"name":"address","nodeType":"ElementaryTypeName","src":"8838:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":204,"mutability":"mutable","name":"amount","nameLocation":"8865:6:0","nodeType":"VariableDeclaration","scope":209,"src":"8857:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":203,"name":"uint256","nodeType":"ElementaryTypeName","src":"8857:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":206,"mutability":"mutable","name":"fee","nameLocation":"8885:3:0","nodeType":"VariableDeclaration","scope":209,"src":"8877:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":205,"name":"uint256","nodeType":"ElementaryTypeName","src":"8877:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8832:60:0"},"returnParameters":{"id":208,"nodeType":"ParameterList","parameters":[],"src":"8901:0:0"},"scope":628,"src":"8811:91:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"8906:713:0","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"617ba037","id":221,"implemented":false,"kind":"function","modifiers":[],"name":"supply","nameLocation":"9631:6:0","nodeType":"FunctionDefinition","parameters":{"id":219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"asset","nameLocation":"9651:5:0","nodeType":"VariableDeclaration","scope":221,"src":"9643:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":211,"name":"address","nodeType":"ElementaryTypeName","src":"9643:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"amount","nameLocation":"9670:6:0","nodeType":"VariableDeclaration","scope":221,"src":"9662:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":213,"name":"uint256","nodeType":"ElementaryTypeName","src":"9662:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"onBehalfOf","nameLocation":"9690:10:0","nodeType":"VariableDeclaration","scope":221,"src":"9682:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":215,"name":"address","nodeType":"ElementaryTypeName","src":"9682:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"referralCode","nameLocation":"9713:12:0","nodeType":"VariableDeclaration","scope":221,"src":"9706:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":217,"name":"uint16","nodeType":"ElementaryTypeName","src":"9706:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"9637:92:0"},"returnParameters":{"id":220,"nodeType":"ParameterList","parameters":[],"src":"9738:0:0"},"scope":628,"src":"9622:117:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":222,"nodeType":"StructuredDocumentation","src":"9743:963:0","text":" @notice Supply with transfer approval of asset to be supplied done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param deadline The deadline timestamp that the permit is valid\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig*"},"functionSelector":"02c205f0","id":241,"implemented":false,"kind":"function","modifiers":[],"name":"supplyWithPermit","nameLocation":"10718:16:0","nodeType":"FunctionDefinition","parameters":{"id":239,"nodeType":"ParameterList","parameters":[{"constant":false,"id":224,"mutability":"mutable","name":"asset","nameLocation":"10748:5:0","nodeType":"VariableDeclaration","scope":241,"src":"10740:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":223,"name":"address","nodeType":"ElementaryTypeName","src":"10740:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":226,"mutability":"mutable","name":"amount","nameLocation":"10767:6:0","nodeType":"VariableDeclaration","scope":241,"src":"10759:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"10759:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"onBehalfOf","nameLocation":"10787:10:0","nodeType":"VariableDeclaration","scope":241,"src":"10779:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":227,"name":"address","nodeType":"ElementaryTypeName","src":"10779:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"referralCode","nameLocation":"10810:12:0","nodeType":"VariableDeclaration","scope":241,"src":"10803:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":229,"name":"uint16","nodeType":"ElementaryTypeName","src":"10803:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"deadline","nameLocation":"10836:8:0","nodeType":"VariableDeclaration","scope":241,"src":"10828:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":231,"name":"uint256","nodeType":"ElementaryTypeName","src":"10828:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"permitV","nameLocation":"10856:7:0","nodeType":"VariableDeclaration","scope":241,"src":"10850:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":233,"name":"uint8","nodeType":"ElementaryTypeName","src":"10850:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"permitR","nameLocation":"10877:7:0","nodeType":"VariableDeclaration","scope":241,"src":"10869:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":235,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10869:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"permitS","nameLocation":"10898:7:0","nodeType":"VariableDeclaration","scope":241,"src":"10890:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":237,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10890:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"10734:175:0"},"returnParameters":{"id":240,"nodeType":"ParameterList","parameters":[],"src":"10918:0:0"},"scope":628,"src":"10709:210:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":242,"nodeType":"StructuredDocumentation","src":"10923:672:0","text":" @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\n E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\n @param asset The address of the underlying asset to withdraw\n @param amount The underlying amount to be withdrawn\n   - Send the value type(uint256).max in order to withdraw the whole aToken balance\n @param to The address that will receive the underlying, same as msg.sender if the user\n   wants to receive it on his own wallet, or a different address if the beneficiary is a\n   different wallet\n @return The final amount withdrawn*"},"functionSelector":"69328dec","id":253,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"11607:8:0","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":244,"mutability":"mutable","name":"asset","nameLocation":"11629:5:0","nodeType":"VariableDeclaration","scope":253,"src":"11621:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":243,"name":"address","nodeType":"ElementaryTypeName","src":"11621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":246,"mutability":"mutable","name":"amount","nameLocation":"11648:6:0","nodeType":"VariableDeclaration","scope":253,"src":"11640:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":245,"name":"uint256","nodeType":"ElementaryTypeName","src":"11640:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":248,"mutability":"mutable","name":"to","nameLocation":"11668:2:0","nodeType":"VariableDeclaration","scope":253,"src":"11660:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":247,"name":"address","nodeType":"ElementaryTypeName","src":"11660:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11615:59:0"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":253,"src":"11693:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":250,"name":"uint256","nodeType":"ElementaryTypeName","src":"11693:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11692:9:0"},"scope":628,"src":"11598:104:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":254,"nodeType":"StructuredDocumentation","src":"11706:1199:0","text":" @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\n already supplied enough collateral, or he was given enough allowance by a credit delegator on the\n corresponding debt token (StableDebtToken or VariableDebtToken)\n - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\n   and 100 stable/variable debt tokens, depending on the `interestRateMode`\n @param asset The address of the underlying asset to borrow\n @param amount The amount to be borrowed\n @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man\n @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\n calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\n if he has been given credit delegation allowance*"},"functionSelector":"a415bcad","id":267,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"12917:6:0","nodeType":"FunctionDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":256,"mutability":"mutable","name":"asset","nameLocation":"12937:5:0","nodeType":"VariableDeclaration","scope":267,"src":"12929:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"12929:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":258,"mutability":"mutable","name":"amount","nameLocation":"12956:6:0","nodeType":"VariableDeclaration","scope":267,"src":"12948:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":257,"name":"uint256","nodeType":"ElementaryTypeName","src":"12948:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"interestRateMode","nameLocation":"12976:16:0","nodeType":"VariableDeclaration","scope":267,"src":"12968:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"12968:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":262,"mutability":"mutable","name":"referralCode","nameLocation":"13005:12:0","nodeType":"VariableDeclaration","scope":267,"src":"12998:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":261,"name":"uint16","nodeType":"ElementaryTypeName","src":"12998:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":264,"mutability":"mutable","name":"onBehalfOf","nameLocation":"13031:10:0","nodeType":"VariableDeclaration","scope":267,"src":"13023:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":263,"name":"address","nodeType":"ElementaryTypeName","src":"13023:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"12923:122:0"},"returnParameters":{"id":266,"nodeType":"ParameterList","parameters":[],"src":"13054:0:0"},"scope":628,"src":"12908:147:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":268,"nodeType":"StructuredDocumentation","src":"13059:874:0","text":" @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\n - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @return The final amount repaid*"},"functionSelector":"573ade81","id":281,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nameLocation":"13945:5:0","nodeType":"FunctionDefinition","parameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"asset","nameLocation":"13964:5:0","nodeType":"VariableDeclaration","scope":281,"src":"13956:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"13956:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"amount","nameLocation":"13983:6:0","nodeType":"VariableDeclaration","scope":281,"src":"13975:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"13975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"interestRateMode","nameLocation":"14003:16:0","nodeType":"VariableDeclaration","scope":281,"src":"13995:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"13995:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"onBehalfOf","nameLocation":"14033:10:0","nodeType":"VariableDeclaration","scope":281,"src":"14025:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":275,"name":"address","nodeType":"ElementaryTypeName","src":"14025:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13950:97:0"},"returnParameters":{"id":280,"nodeType":"ParameterList","parameters":[{"constant":false,"id":279,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":281,"src":"14066:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":278,"name":"uint256","nodeType":"ElementaryTypeName","src":"14066:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14065:9:0"},"scope":628,"src":"13936:139:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":282,"nodeType":"StructuredDocumentation","src":"14079:1086:0","text":" @notice Repay with transfer approval of asset to be repaid done via permit function\n see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\n user calling the function if he wants to reduce/remove his own debt, or the address of any other\n other borrower whose debt should be removed\n @param deadline The deadline timestamp that the permit is valid\n @param permitV The V parameter of ERC712 permit sig\n @param permitR The R parameter of ERC712 permit sig\n @param permitS The S parameter of ERC712 permit sig\n @return The final amount repaid*"},"functionSelector":"ee3e210b","id":303,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithPermit","nameLocation":"15177:15:0","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":284,"mutability":"mutable","name":"asset","nameLocation":"15206:5:0","nodeType":"VariableDeclaration","scope":303,"src":"15198:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":283,"name":"address","nodeType":"ElementaryTypeName","src":"15198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":286,"mutability":"mutable","name":"amount","nameLocation":"15225:6:0","nodeType":"VariableDeclaration","scope":303,"src":"15217:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":285,"name":"uint256","nodeType":"ElementaryTypeName","src":"15217:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"interestRateMode","nameLocation":"15245:16:0","nodeType":"VariableDeclaration","scope":303,"src":"15237:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"15237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"onBehalfOf","nameLocation":"15275:10:0","nodeType":"VariableDeclaration","scope":303,"src":"15267:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":289,"name":"address","nodeType":"ElementaryTypeName","src":"15267:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"deadline","nameLocation":"15299:8:0","nodeType":"VariableDeclaration","scope":303,"src":"15291:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"15291:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":294,"mutability":"mutable","name":"permitV","nameLocation":"15319:7:0","nodeType":"VariableDeclaration","scope":303,"src":"15313:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":293,"name":"uint8","nodeType":"ElementaryTypeName","src":"15313:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":296,"mutability":"mutable","name":"permitR","nameLocation":"15340:7:0","nodeType":"VariableDeclaration","scope":303,"src":"15332:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15332:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":298,"mutability":"mutable","name":"permitS","nameLocation":"15361:7:0","nodeType":"VariableDeclaration","scope":303,"src":"15353:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":297,"name":"bytes32","nodeType":"ElementaryTypeName","src":"15353:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"15192:180:0"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":303,"src":"15391:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"15391:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15390:9:0"},"scope":628,"src":"15168:232:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"15404:780:0","text":" @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\n equivalent debt tokens\n - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\n @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\n balance is not enough to cover the whole debt\n @param asset The address of the borrowed underlying asset previously borrowed\n @param amount The amount to repay\n - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\n @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\n @return The final amount repaid*"},"functionSelector":"2dad97d4","id":315,"implemented":false,"kind":"function","modifiers":[],"name":"repayWithATokens","nameLocation":"16196:16:0","nodeType":"FunctionDefinition","parameters":{"id":311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"asset","nameLocation":"16226:5:0","nodeType":"VariableDeclaration","scope":315,"src":"16218:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":305,"name":"address","nodeType":"ElementaryTypeName","src":"16218:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"amount","nameLocation":"16245:6:0","nodeType":"VariableDeclaration","scope":315,"src":"16237:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"16237:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":310,"mutability":"mutable","name":"interestRateMode","nameLocation":"16265:16:0","nodeType":"VariableDeclaration","scope":315,"src":"16257:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":309,"name":"uint256","nodeType":"ElementaryTypeName","src":"16257:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16212:73:0"},"returnParameters":{"id":314,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":315,"src":"16304:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":312,"name":"uint256","nodeType":"ElementaryTypeName","src":"16304:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16303:9:0"},"scope":628,"src":"16187:126:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":316,"nodeType":"StructuredDocumentation","src":"16317:273:0","text":" @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\n @param asset The address of the underlying asset borrowed\n @param interestRateMode The rate mode that the user wants to swap to: 1 for Stable, 2 for Variable*"},"functionSelector":"94ba89a2","id":323,"implemented":false,"kind":"function","modifiers":[],"name":"swapBorrowRateMode","nameLocation":"16602:18:0","nodeType":"FunctionDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[{"constant":false,"id":318,"mutability":"mutable","name":"asset","nameLocation":"16629:5:0","nodeType":"VariableDeclaration","scope":323,"src":"16621:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":317,"name":"address","nodeType":"ElementaryTypeName","src":"16621:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":320,"mutability":"mutable","name":"interestRateMode","nameLocation":"16644:16:0","nodeType":"VariableDeclaration","scope":323,"src":"16636:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":319,"name":"uint256","nodeType":"ElementaryTypeName","src":"16636:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16620:41:0"},"returnParameters":{"id":322,"nodeType":"ParameterList","parameters":[],"src":"16670:0:0"},"scope":628,"src":"16593:78:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":324,"nodeType":"StructuredDocumentation","src":"16675:554:0","text":" @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\n - Users can be rebalanced if the following conditions are satisfied:\n     1. Usage ratio is above 95%\n     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\n        much has been borrowed at a stable rate and suppliers are not earning enough\n @param asset The address of the underlying asset borrowed\n @param user The address of the user to be rebalanced*"},"functionSelector":"cd112382","id":331,"implemented":false,"kind":"function","modifiers":[],"name":"rebalanceStableBorrowRate","nameLocation":"17241:25:0","nodeType":"FunctionDefinition","parameters":{"id":329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"asset","nameLocation":"17275:5:0","nodeType":"VariableDeclaration","scope":331,"src":"17267:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"17267:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":328,"mutability":"mutable","name":"user","nameLocation":"17290:4:0","nodeType":"VariableDeclaration","scope":331,"src":"17282:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":327,"name":"address","nodeType":"ElementaryTypeName","src":"17282:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"17266:29:0"},"returnParameters":{"id":330,"nodeType":"ParameterList","parameters":[],"src":"17304:0:0"},"scope":628,"src":"17232:73:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":332,"nodeType":"StructuredDocumentation","src":"17309:261:0","text":" @notice Allows suppliers to enable/disable a specific supplied asset as collateral\n @param asset The address of the underlying asset supplied\n @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise*"},"functionSelector":"5a3b74b9","id":339,"implemented":false,"kind":"function","modifiers":[],"name":"setUserUseReserveAsCollateral","nameLocation":"17582:29:0","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"mutability":"mutable","name":"asset","nameLocation":"17620:5:0","nodeType":"VariableDeclaration","scope":339,"src":"17612:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"17612:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"useAsCollateral","nameLocation":"17632:15:0","nodeType":"VariableDeclaration","scope":339,"src":"17627:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":335,"name":"bool","nodeType":"ElementaryTypeName","src":"17627:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"17611:37:0"},"returnParameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"17657:0:0"},"scope":628,"src":"17573:85:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":340,"nodeType":"StructuredDocumentation","src":"17662:861:0","text":" @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\n - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\n   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\n @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\n @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\n @param user The address of the borrower getting liquidated\n @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\n @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\n to receive the underlying collateral asset directly*"},"functionSelector":"00a718a9","id":353,"implemented":false,"kind":"function","modifiers":[],"name":"liquidationCall","nameLocation":"18535:15:0","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":342,"mutability":"mutable","name":"collateralAsset","nameLocation":"18564:15:0","nodeType":"VariableDeclaration","scope":353,"src":"18556:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":341,"name":"address","nodeType":"ElementaryTypeName","src":"18556:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"debtAsset","nameLocation":"18593:9:0","nodeType":"VariableDeclaration","scope":353,"src":"18585:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":343,"name":"address","nodeType":"ElementaryTypeName","src":"18585:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"user","nameLocation":"18616:4:0","nodeType":"VariableDeclaration","scope":353,"src":"18608:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"18608:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"debtToCover","nameLocation":"18634:11:0","nodeType":"VariableDeclaration","scope":353,"src":"18626:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"18626:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"receiveAToken","nameLocation":"18656:13:0","nodeType":"VariableDeclaration","scope":353,"src":"18651:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":349,"name":"bool","nodeType":"ElementaryTypeName","src":"18651:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"18550:123:0"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[],"src":"18682:0:0"},"scope":628,"src":"18526:157:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":354,"nodeType":"StructuredDocumentation","src":"18687:1402:0","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\n @param assets The addresses of the assets being flash-borrowed\n @param amounts The amounts of the assets being flash-borrowed\n @param interestRateModes Types of the debt to open if the flash loan is not returned:\n   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\n   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\n @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"ab9c4b5d","id":374,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoan","nameLocation":"20101:9:0","nodeType":"FunctionDefinition","parameters":{"id":372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":356,"mutability":"mutable","name":"receiverAddress","nameLocation":"20124:15:0","nodeType":"VariableDeclaration","scope":374,"src":"20116:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":355,"name":"address","nodeType":"ElementaryTypeName","src":"20116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"assets","nameLocation":"20164:6:0","nodeType":"VariableDeclaration","scope":374,"src":"20145:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":357,"name":"address","nodeType":"ElementaryTypeName","src":"20145:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":358,"nodeType":"ArrayTypeName","src":"20145:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"amounts","nameLocation":"20195:7:0","nodeType":"VariableDeclaration","scope":374,"src":"20176:26:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":360,"name":"uint256","nodeType":"ElementaryTypeName","src":"20176:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":361,"nodeType":"ArrayTypeName","src":"20176:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":365,"mutability":"mutable","name":"interestRateModes","nameLocation":"20227:17:0","nodeType":"VariableDeclaration","scope":374,"src":"20208:36:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"20208:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":364,"nodeType":"ArrayTypeName","src":"20208:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":367,"mutability":"mutable","name":"onBehalfOf","nameLocation":"20258:10:0","nodeType":"VariableDeclaration","scope":374,"src":"20250:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":366,"name":"address","nodeType":"ElementaryTypeName","src":"20250:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":369,"mutability":"mutable","name":"params","nameLocation":"20289:6:0","nodeType":"VariableDeclaration","scope":374,"src":"20274:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":368,"name":"bytes","nodeType":"ElementaryTypeName","src":"20274:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":371,"mutability":"mutable","name":"referralCode","nameLocation":"20308:12:0","nodeType":"VariableDeclaration","scope":374,"src":"20301:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":370,"name":"uint16","nodeType":"ElementaryTypeName","src":"20301:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"20110:214:0"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[],"src":"20333:0:0"},"scope":628,"src":"20092:242:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"20338:897:0","text":" @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\n as long as the amount taken plus a fee is returned.\n @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\n into consideration. For further details please visit https://developers.aave.com\n @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\n @param asset The address of the asset being flash-borrowed\n @param amount The amount of the asset being flash-borrowed\n @param params Variadic packed params to pass to the receiver as extra information\n @param referralCode The code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"42b0b77c","id":388,"implemented":false,"kind":"function","modifiers":[],"name":"flashLoanSimple","nameLocation":"21247:15:0","nodeType":"FunctionDefinition","parameters":{"id":386,"nodeType":"ParameterList","parameters":[{"constant":false,"id":377,"mutability":"mutable","name":"receiverAddress","nameLocation":"21276:15:0","nodeType":"VariableDeclaration","scope":388,"src":"21268:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":376,"name":"address","nodeType":"ElementaryTypeName","src":"21268:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"mutability":"mutable","name":"asset","nameLocation":"21305:5:0","nodeType":"VariableDeclaration","scope":388,"src":"21297:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":378,"name":"address","nodeType":"ElementaryTypeName","src":"21297:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":381,"mutability":"mutable","name":"amount","nameLocation":"21324:6:0","nodeType":"VariableDeclaration","scope":388,"src":"21316:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":380,"name":"uint256","nodeType":"ElementaryTypeName","src":"21316:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"params","nameLocation":"21351:6:0","nodeType":"VariableDeclaration","scope":388,"src":"21336:21:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":382,"name":"bytes","nodeType":"ElementaryTypeName","src":"21336:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":385,"mutability":"mutable","name":"referralCode","nameLocation":"21370:12:0","nodeType":"VariableDeclaration","scope":388,"src":"21363:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":384,"name":"uint16","nodeType":"ElementaryTypeName","src":"21363:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"21262:124:0"},"returnParameters":{"id":387,"nodeType":"ParameterList","parameters":[],"src":"21395:0:0"},"scope":628,"src":"21238:158:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":389,"nodeType":"StructuredDocumentation","src":"21400:631:0","text":" @notice Returns the user account data across all the reserves\n @param user The address of the user\n @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\n @return totalDebtBase The total debt of the user in the base currency used by the price feed\n @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\n @return currentLiquidationThreshold The liquidation threshold of the user\n @return ltv The loan to value of The user\n @return healthFactor The current health factor of the user*"},"functionSelector":"bf92857c","id":406,"implemented":false,"kind":"function","modifiers":[],"name":"getUserAccountData","nameLocation":"22043:18:0","nodeType":"FunctionDefinition","parameters":{"id":392,"nodeType":"ParameterList","parameters":[{"constant":false,"id":391,"mutability":"mutable","name":"user","nameLocation":"22070:4:0","nodeType":"VariableDeclaration","scope":406,"src":"22062:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":390,"name":"address","nodeType":"ElementaryTypeName","src":"22062:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22061:14:0"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":394,"mutability":"mutable","name":"totalCollateralBase","nameLocation":"22126:19:0","nodeType":"VariableDeclaration","scope":406,"src":"22118:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":393,"name":"uint256","nodeType":"ElementaryTypeName","src":"22118:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"totalDebtBase","nameLocation":"22161:13:0","nodeType":"VariableDeclaration","scope":406,"src":"22153:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":395,"name":"uint256","nodeType":"ElementaryTypeName","src":"22153:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"availableBorrowsBase","nameLocation":"22190:20:0","nodeType":"VariableDeclaration","scope":406,"src":"22182:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"22182:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"currentLiquidationThreshold","nameLocation":"22226:27:0","nodeType":"VariableDeclaration","scope":406,"src":"22218:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":399,"name":"uint256","nodeType":"ElementaryTypeName","src":"22218:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"ltv","nameLocation":"22269:3:0","nodeType":"VariableDeclaration","scope":406,"src":"22261:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"22261:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":404,"mutability":"mutable","name":"healthFactor","nameLocation":"22288:12:0","nodeType":"VariableDeclaration","scope":406,"src":"22280:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":403,"name":"uint256","nodeType":"ElementaryTypeName","src":"22280:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"22110:196:0"},"scope":628,"src":"22034:273:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":407,"nodeType":"StructuredDocumentation","src":"22311:646:0","text":" @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\n interest rate strategy\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param aTokenAddress The address of the aToken that will be assigned to the reserve\n @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\n @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\n @param interestRateStrategyAddress The address of the interest rate strategy contract*"},"functionSelector":"7a708e92","id":420,"implemented":false,"kind":"function","modifiers":[],"name":"initReserve","nameLocation":"22969:11:0","nodeType":"FunctionDefinition","parameters":{"id":418,"nodeType":"ParameterList","parameters":[{"constant":false,"id":409,"mutability":"mutable","name":"asset","nameLocation":"22994:5:0","nodeType":"VariableDeclaration","scope":420,"src":"22986:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":408,"name":"address","nodeType":"ElementaryTypeName","src":"22986:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":411,"mutability":"mutable","name":"aTokenAddress","nameLocation":"23013:13:0","nodeType":"VariableDeclaration","scope":420,"src":"23005:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":410,"name":"address","nodeType":"ElementaryTypeName","src":"23005:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":413,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"23040:17:0","nodeType":"VariableDeclaration","scope":420,"src":"23032:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":412,"name":"address","nodeType":"ElementaryTypeName","src":"23032:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":415,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"23071:19:0","nodeType":"VariableDeclaration","scope":420,"src":"23063:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":414,"name":"address","nodeType":"ElementaryTypeName","src":"23063:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":417,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"23104:27:0","nodeType":"VariableDeclaration","scope":420,"src":"23096:35:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":416,"name":"address","nodeType":"ElementaryTypeName","src":"23096:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"22980:155:0"},"returnParameters":{"id":419,"nodeType":"ParameterList","parameters":[],"src":"23144:0:0"},"scope":628,"src":"22960:185:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"23149:164:0","text":" @notice Drop a reserve\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve*"},"functionSelector":"63c9b860","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"dropReserve","nameLocation":"23325:11:0","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"asset","nameLocation":"23345:5:0","nodeType":"VariableDeclaration","scope":426,"src":"23337:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":422,"name":"address","nodeType":"ElementaryTypeName","src":"23337:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23336:15:0"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[],"src":"23360:0:0"},"scope":628,"src":"23316:45:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"23365:291:0","text":" @notice Updates the address of the interest rate strategy contract\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param rateStrategyAddress The address of the interest rate strategy contract*"},"functionSelector":"1d2118f9","id":434,"implemented":false,"kind":"function","modifiers":[],"name":"setReserveInterestRateStrategyAddress","nameLocation":"23668:37:0","nodeType":"FunctionDefinition","parameters":{"id":432,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"asset","nameLocation":"23714:5:0","nodeType":"VariableDeclaration","scope":434,"src":"23706:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"23706:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":431,"mutability":"mutable","name":"rateStrategyAddress","nameLocation":"23729:19:0","nodeType":"VariableDeclaration","scope":434,"src":"23721:27:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":430,"name":"address","nodeType":"ElementaryTypeName","src":"23721:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"23705:44:0"},"returnParameters":{"id":433,"nodeType":"ParameterList","parameters":[],"src":"23762:0:0"},"scope":628,"src":"23659:104:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":435,"nodeType":"StructuredDocumentation","src":"23767:260:0","text":" @notice Sets the configuration bitmap of the reserve as a whole\n @dev Only callable by the PoolConfigurator contract\n @param asset The address of the underlying asset of the reserve\n @param configuration The new configuration bitmap*"},"functionSelector":"f51e435b","id":443,"implemented":false,"kind":"function","modifiers":[],"name":"setConfiguration","nameLocation":"24039:16:0","nodeType":"FunctionDefinition","parameters":{"id":441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"asset","nameLocation":"24064:5:0","nodeType":"VariableDeclaration","scope":443,"src":"24056:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":436,"name":"address","nodeType":"ElementaryTypeName","src":"24056:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":440,"mutability":"mutable","name":"configuration","nameLocation":"24114:13:0","nodeType":"VariableDeclaration","scope":443,"src":"24071:56:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_calldata_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":439,"nodeType":"UserDefinedTypeName","pathNode":{"id":438,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":874,"src":"24071:33:0"},"referencedDeclaration":874,"src":"24071:33:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"24055:73:0"},"returnParameters":{"id":442,"nodeType":"ParameterList","parameters":[],"src":"24141:0:0"},"scope":628,"src":"24030:112:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"24146:179:0","text":" @notice Returns the configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The configuration of the reserve*"},"functionSelector":"c44b11f7","id":452,"implemented":false,"kind":"function","modifiers":[],"name":"getConfiguration","nameLocation":"24337:16:0","nodeType":"FunctionDefinition","parameters":{"id":447,"nodeType":"ParameterList","parameters":[{"constant":false,"id":446,"mutability":"mutable","name":"asset","nameLocation":"24362:5:0","nodeType":"VariableDeclaration","scope":452,"src":"24354:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"24354:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24353:15:0"},"returnParameters":{"id":451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":450,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":452,"src":"24404:40:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_memory_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":449,"nodeType":"UserDefinedTypeName","pathNode":{"id":448,"name":"DataTypes.ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":874,"src":"24404:33:0"},"referencedDeclaration":874,"src":"24404:33:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"}],"src":"24403:42:0"},"scope":628,"src":"24328:118:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":453,"nodeType":"StructuredDocumentation","src":"24450:162:0","text":" @notice Returns the configuration of the user across all the reserves\n @param user The user address\n @return The configuration of the user*"},"functionSelector":"4417a583","id":461,"implemented":false,"kind":"function","modifiers":[],"name":"getUserConfiguration","nameLocation":"24624:20:0","nodeType":"FunctionDefinition","parameters":{"id":456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":455,"mutability":"mutable","name":"user","nameLocation":"24653:4:0","nodeType":"VariableDeclaration","scope":461,"src":"24645:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":454,"name":"address","nodeType":"ElementaryTypeName","src":"24645:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24644:14:0"},"returnParameters":{"id":460,"nodeType":"ParameterList","parameters":[{"constant":false,"id":459,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":461,"src":"24694:37:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$878_memory_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":458,"nodeType":"UserDefinedTypeName","pathNode":{"id":457,"name":"DataTypes.UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":878,"src":"24694:30:0"},"referencedDeclaration":878,"src":"24694:30:0","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$878_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"}],"src":"24693:39:0"},"scope":628,"src":"24615:118:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":462,"nodeType":"StructuredDocumentation","src":"24737:199:0","text":" @notice Returns the normalized income normalized income of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The reserve's normalized income"},"functionSelector":"d15e0053","id":469,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedIncome","nameLocation":"24948:26:0","nodeType":"FunctionDefinition","parameters":{"id":465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":464,"mutability":"mutable","name":"asset","nameLocation":"24983:5:0","nodeType":"VariableDeclaration","scope":469,"src":"24975:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":463,"name":"address","nodeType":"ElementaryTypeName","src":"24975:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24974:15:0"},"returnParameters":{"id":468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":467,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":469,"src":"25013:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":466,"name":"uint256","nodeType":"ElementaryTypeName","src":"25013:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25012:9:0"},"scope":628,"src":"24939:83:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":470,"nodeType":"StructuredDocumentation","src":"25026:196:0","text":" @notice Returns the normalized variable debt per unit of asset\n @param asset The address of the underlying asset of the reserve\n @return The reserve normalized variable debt"},"functionSelector":"386497fd","id":477,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveNormalizedVariableDebt","nameLocation":"25234:32:0","nodeType":"FunctionDefinition","parameters":{"id":473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":472,"mutability":"mutable","name":"asset","nameLocation":"25275:5:0","nodeType":"VariableDeclaration","scope":477,"src":"25267:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":471,"name":"address","nodeType":"ElementaryTypeName","src":"25267:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25266:15:0"},"returnParameters":{"id":476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":477,"src":"25305:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":474,"name":"uint256","nodeType":"ElementaryTypeName","src":"25305:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"25304:9:0"},"scope":628,"src":"25225:89:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":478,"nodeType":"StructuredDocumentation","src":"25318:204:0","text":" @notice Returns the state and configuration of the reserve\n @param asset The address of the underlying asset of the reserve\n @return The state and configuration data of the reserve*"},"functionSelector":"35ea6a75","id":486,"implemented":false,"kind":"function","modifiers":[],"name":"getReserveData","nameLocation":"25534:14:0","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":480,"mutability":"mutable","name":"asset","nameLocation":"25557:5:0","nodeType":"VariableDeclaration","scope":486,"src":"25549:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":479,"name":"address","nodeType":"ElementaryTypeName","src":"25549:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"25548:15:0"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":486,"src":"25587:28:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$871_memory_ptr","typeString":"struct DataTypes.ReserveData"},"typeName":{"id":483,"nodeType":"UserDefinedTypeName","pathNode":{"id":482,"name":"DataTypes.ReserveData","nodeType":"IdentifierPath","referencedDeclaration":871,"src":"25587:21:0"},"referencedDeclaration":871,"src":"25587:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveData_$871_storage_ptr","typeString":"struct DataTypes.ReserveData"}},"visibility":"internal"}],"src":"25586:30:0"},"scope":628,"src":"25525:92:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":487,"nodeType":"StructuredDocumentation","src":"25621:537:0","text":" @notice Validates and finalizes an aToken transfer\n @dev Only callable by the overlying aToken of the `asset`\n @param asset The address of the underlying asset of the aToken\n @param from The user from which the aTokens are transferred\n @param to The user receiving the aTokens\n @param amount The amount being transferred/withdrawn\n @param balanceFromBefore The aToken balance of the `from` user before the transfer\n @param balanceToBefore The aToken balance of the `to` user before the transfer"},"functionSelector":"d5ed3933","id":502,"implemented":false,"kind":"function","modifiers":[],"name":"finalizeTransfer","nameLocation":"26170:16:0","nodeType":"FunctionDefinition","parameters":{"id":500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":489,"mutability":"mutable","name":"asset","nameLocation":"26200:5:0","nodeType":"VariableDeclaration","scope":502,"src":"26192:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":488,"name":"address","nodeType":"ElementaryTypeName","src":"26192:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":491,"mutability":"mutable","name":"from","nameLocation":"26219:4:0","nodeType":"VariableDeclaration","scope":502,"src":"26211:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":490,"name":"address","nodeType":"ElementaryTypeName","src":"26211:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":493,"mutability":"mutable","name":"to","nameLocation":"26237:2:0","nodeType":"VariableDeclaration","scope":502,"src":"26229:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":492,"name":"address","nodeType":"ElementaryTypeName","src":"26229:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":495,"mutability":"mutable","name":"amount","nameLocation":"26253:6:0","nodeType":"VariableDeclaration","scope":502,"src":"26245:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":494,"name":"uint256","nodeType":"ElementaryTypeName","src":"26245:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":497,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"26273:17:0","nodeType":"VariableDeclaration","scope":502,"src":"26265:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":496,"name":"uint256","nodeType":"ElementaryTypeName","src":"26265:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":499,"mutability":"mutable","name":"balanceToBefore","nameLocation":"26304:15:0","nodeType":"VariableDeclaration","scope":502,"src":"26296:23:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":498,"name":"uint256","nodeType":"ElementaryTypeName","src":"26296:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26186:137:0"},"returnParameters":{"id":501,"nodeType":"ParameterList","parameters":[],"src":"26332:0:0"},"scope":628,"src":"26161:172:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":503,"nodeType":"StructuredDocumentation","src":"26337:158:0","text":" @notice Returns the list of the initialized reserves\n @dev It does not include dropped reserves\n @return The addresses of the reserves*"},"functionSelector":"d1946dbc","id":509,"implemented":false,"kind":"function","modifiers":[],"name":"getReservesList","nameLocation":"26507:15:0","nodeType":"FunctionDefinition","parameters":{"id":504,"nodeType":"ParameterList","parameters":[],"src":"26522:2:0"},"returnParameters":{"id":508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":507,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":509,"src":"26548:16:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"26548:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":506,"nodeType":"ArrayTypeName","src":"26548:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"26547:18:0"},"scope":628,"src":"26498:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":510,"nodeType":"StructuredDocumentation","src":"26570:138:0","text":" @notice Returns the PoolAddressesProvider connected to this contract\n @return The address of the PoolAddressesProvider*"},"functionSelector":"0542975c","id":516,"implemented":false,"kind":"function","modifiers":[],"name":"ADDRESSES_PROVIDER","nameLocation":"26720:18:0","nodeType":"FunctionDefinition","parameters":{"id":511,"nodeType":"ParameterList","parameters":[],"src":"26738:2:0"},"returnParameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":516,"src":"26764:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$837","typeString":"contract IPoolAddressesProvider"},"typeName":{"id":513,"nodeType":"UserDefinedTypeName","pathNode":{"id":512,"name":"IPoolAddressesProvider","nodeType":"IdentifierPath","referencedDeclaration":837,"src":"26764:22:0"},"referencedDeclaration":837,"src":"26764:22:0","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolAddressesProvider_$837","typeString":"contract IPoolAddressesProvider"}},"visibility":"internal"}],"src":"26763:24:0"},"scope":628,"src":"26711:77:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":517,"nodeType":"StructuredDocumentation","src":"26792:147:0","text":" @notice Updates the protocol fee on the bridging\n @param bridgeProtocolFee The part of the premium sent to the protocol treasury"},"functionSelector":"3036b439","id":522,"implemented":false,"kind":"function","modifiers":[],"name":"updateBridgeProtocolFee","nameLocation":"26951:23:0","nodeType":"FunctionDefinition","parameters":{"id":520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":519,"mutability":"mutable","name":"bridgeProtocolFee","nameLocation":"26983:17:0","nodeType":"VariableDeclaration","scope":522,"src":"26975:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":518,"name":"uint256","nodeType":"ElementaryTypeName","src":"26975:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"26974:27:0"},"returnParameters":{"id":521,"nodeType":"ParameterList","parameters":[],"src":"27010:0:0"},"scope":628,"src":"26942:69:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":523,"nodeType":"StructuredDocumentation","src":"27015:650:0","text":" @notice Updates flash loan premiums. Flash loan premium consists of two parts:\n - A part is sent to aToken holders as extra, one time accumulated interest\n - A part is collected by the protocol treasury\n @dev The total premium is calculated on the total borrowed amount\n @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\n @dev Only callable by the PoolConfigurator contract\n @param flashLoanPremiumTotal The total premium, expressed in bps\n @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps"},"functionSelector":"bcb6e522","id":530,"implemented":false,"kind":"function","modifiers":[],"name":"updateFlashloanPremiums","nameLocation":"27677:23:0","nodeType":"FunctionDefinition","parameters":{"id":528,"nodeType":"ParameterList","parameters":[{"constant":false,"id":525,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"27714:21:0","nodeType":"VariableDeclaration","scope":530,"src":"27706:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":524,"name":"uint128","nodeType":"ElementaryTypeName","src":"27706:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":527,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"27749:26:0","nodeType":"VariableDeclaration","scope":530,"src":"27741:34:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":526,"name":"uint128","nodeType":"ElementaryTypeName","src":"27741:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"27700:79:0"},"returnParameters":{"id":529,"nodeType":"ParameterList","parameters":[],"src":"27788:0:0"},"scope":628,"src":"27668:121:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":531,"nodeType":"StructuredDocumentation","src":"27793:331:0","text":" @notice Configures a new category for the eMode.\n @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\n The category 0 is reserved as it's the default for volatile assets\n @param id The id of the category\n @param config The configuration of the category"},"functionSelector":"d579ea7d","id":539,"implemented":false,"kind":"function","modifiers":[],"name":"configureEModeCategory","nameLocation":"28136:22:0","nodeType":"FunctionDefinition","parameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"id","nameLocation":"28165:2:0","nodeType":"VariableDeclaration","scope":539,"src":"28159:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":532,"name":"uint8","nodeType":"ElementaryTypeName","src":"28159:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":536,"mutability":"mutable","name":"config","nameLocation":"28200:6:0","nodeType":"VariableDeclaration","scope":539,"src":"28169:37:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$889_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":535,"nodeType":"UserDefinedTypeName","pathNode":{"id":534,"name":"DataTypes.EModeCategory","nodeType":"IdentifierPath","referencedDeclaration":889,"src":"28169:23:0"},"referencedDeclaration":889,"src":"28169:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$889_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"28158:49:0"},"returnParameters":{"id":538,"nodeType":"ParameterList","parameters":[],"src":"28216:0:0"},"scope":628,"src":"28127:90:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"28221:150:0","text":" @notice Returns the data of an eMode category\n @param id The id of the category\n @return The configuration data of the category"},"functionSelector":"6c6f6ae1","id":548,"implemented":false,"kind":"function","modifiers":[],"name":"getEModeCategoryData","nameLocation":"28383:20:0","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"id","nameLocation":"28410:2:0","nodeType":"VariableDeclaration","scope":548,"src":"28404:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":541,"name":"uint8","nodeType":"ElementaryTypeName","src":"28404:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"28403:10:0"},"returnParameters":{"id":547,"nodeType":"ParameterList","parameters":[{"constant":false,"id":546,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":548,"src":"28437:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$889_memory_ptr","typeString":"struct DataTypes.EModeCategory"},"typeName":{"id":545,"nodeType":"UserDefinedTypeName","pathNode":{"id":544,"name":"DataTypes.EModeCategory","nodeType":"IdentifierPath","referencedDeclaration":889,"src":"28437:23:0"},"referencedDeclaration":889,"src":"28437:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_EModeCategory_$889_storage_ptr","typeString":"struct DataTypes.EModeCategory"}},"visibility":"internal"}],"src":"28436:32:0"},"scope":628,"src":"28374:95:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":549,"nodeType":"StructuredDocumentation","src":"28473:111:0","text":" @notice Allows a user to use the protocol in eMode\n @param categoryId The id of the category"},"functionSelector":"28530a47","id":554,"implemented":false,"kind":"function","modifiers":[],"name":"setUserEMode","nameLocation":"28596:12:0","nodeType":"FunctionDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"categoryId","nameLocation":"28615:10:0","nodeType":"VariableDeclaration","scope":554,"src":"28609:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":550,"name":"uint8","nodeType":"ElementaryTypeName","src":"28609:5:0","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"28608:18:0"},"returnParameters":{"id":553,"nodeType":"ParameterList","parameters":[],"src":"28635:0:0"},"scope":628,"src":"28587:49:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":555,"nodeType":"StructuredDocumentation","src":"28640:125:0","text":" @notice Returns the eMode the user is using\n @param user The address of the user\n @return The eMode id"},"functionSelector":"eddf1b79","id":562,"implemented":false,"kind":"function","modifiers":[],"name":"getUserEMode","nameLocation":"28777:12:0","nodeType":"FunctionDefinition","parameters":{"id":558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":557,"mutability":"mutable","name":"user","nameLocation":"28798:4:0","nodeType":"VariableDeclaration","scope":562,"src":"28790:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":556,"name":"address","nodeType":"ElementaryTypeName","src":"28790:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"28789:14:0"},"returnParameters":{"id":561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":560,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":562,"src":"28827:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"28827:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"28826:9:0"},"scope":628,"src":"28768:68:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":563,"nodeType":"StructuredDocumentation","src":"28840:236:0","text":" @notice Resets the isolation mode total debt of the given asset to zero\n @dev It requires the given asset has zero debt ceiling\n @param asset The address of the underlying asset to reset the isolationModeTotalDebt"},"functionSelector":"e43e88a1","id":568,"implemented":false,"kind":"function","modifiers":[],"name":"resetIsolationModeTotalDebt","nameLocation":"29088:27:0","nodeType":"FunctionDefinition","parameters":{"id":566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":565,"mutability":"mutable","name":"asset","nameLocation":"29124:5:0","nodeType":"VariableDeclaration","scope":568,"src":"29116:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":564,"name":"address","nodeType":"ElementaryTypeName","src":"29116:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"29115:15:0"},"returnParameters":{"id":567,"nodeType":"ParameterList","parameters":[],"src":"29139:0:0"},"scope":628,"src":"29079:61:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":569,"nodeType":"StructuredDocumentation","src":"29144:191:0","text":" @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\n @return The percentage of available liquidity to borrow, expressed in bps"},"functionSelector":"e82fec2f","id":574,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","nameLocation":"29347:35:0","nodeType":"FunctionDefinition","parameters":{"id":570,"nodeType":"ParameterList","parameters":[],"src":"29382:2:0"},"returnParameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":574,"src":"29408:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"29408:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29407:9:0"},"scope":628,"src":"29338:79:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":575,"nodeType":"StructuredDocumentation","src":"29421:100:0","text":" @notice Returns the total fee on flash loans\n @return The total fee on flashloans"},"functionSelector":"074b2e43","id":580,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TOTAL","nameLocation":"29533:23:0","nodeType":"FunctionDefinition","parameters":{"id":576,"nodeType":"ParameterList","parameters":[],"src":"29556:2:0"},"returnParameters":{"id":579,"nodeType":"ParameterList","parameters":[{"constant":false,"id":578,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":580,"src":"29582:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":577,"name":"uint128","nodeType":"ElementaryTypeName","src":"29582:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"29581:9:0"},"scope":628,"src":"29524:67:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":581,"nodeType":"StructuredDocumentation","src":"29595:133:0","text":" @notice Returns the part of the bridge fees sent to protocol\n @return The bridge fee sent to the protocol treasury"},"functionSelector":"272d9072","id":586,"implemented":false,"kind":"function","modifiers":[],"name":"BRIDGE_PROTOCOL_FEE","nameLocation":"29740:19:0","nodeType":"FunctionDefinition","parameters":{"id":582,"nodeType":"ParameterList","parameters":[],"src":"29759:2:0"},"returnParameters":{"id":585,"nodeType":"ParameterList","parameters":[{"constant":false,"id":584,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"29785:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":583,"name":"uint256","nodeType":"ElementaryTypeName","src":"29785:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"29784:9:0"},"scope":628,"src":"29731:63:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"29798:139:0","text":" @notice Returns the part of the flashloan fees sent to protocol\n @return The flashloan fee sent to the protocol treasury"},"functionSelector":"6a99c036","id":592,"implemented":false,"kind":"function","modifiers":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","nameLocation":"29949:29:0","nodeType":"FunctionDefinition","parameters":{"id":588,"nodeType":"ParameterList","parameters":[],"src":"29978:2:0"},"returnParameters":{"id":591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":592,"src":"30004:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":589,"name":"uint128","nodeType":"ElementaryTypeName","src":"30004:7:0","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"30003:9:0"},"scope":628,"src":"29940:73:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":593,"nodeType":"StructuredDocumentation","src":"30017:151:0","text":" @notice Returns the maximum number of reserves supported to be listed in this Pool\n @return The maximum number of reserves supported"},"functionSelector":"f8119d51","id":598,"implemented":false,"kind":"function","modifiers":[],"name":"MAX_NUMBER_RESERVES","nameLocation":"30180:19:0","nodeType":"FunctionDefinition","parameters":{"id":594,"nodeType":"ParameterList","parameters":[],"src":"30199:2:0"},"returnParameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":596,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":598,"src":"30225:6:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":595,"name":"uint16","nodeType":"ElementaryTypeName","src":"30225:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"30224:8:0"},"scope":628,"src":"30171:62:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":599,"nodeType":"StructuredDocumentation","src":"30237:197:0","text":" @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\n @param assets The list of reserves for which the minting needs to be executed*"},"functionSelector":"9cd19996","id":605,"implemented":false,"kind":"function","modifiers":[],"name":"mintToTreasury","nameLocation":"30446:14:0","nodeType":"FunctionDefinition","parameters":{"id":603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":602,"mutability":"mutable","name":"assets","nameLocation":"30480:6:0","nodeType":"VariableDeclaration","scope":605,"src":"30461:25:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":600,"name":"address","nodeType":"ElementaryTypeName","src":"30461:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":601,"nodeType":"ArrayTypeName","src":"30461:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"30460:27:0"},"returnParameters":{"id":604,"nodeType":"ParameterList","parameters":[],"src":"30496:0:0"},"scope":628,"src":"30437:60:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":606,"nodeType":"StructuredDocumentation","src":"30501:211:0","text":" @notice Rescue and transfer tokens locked in this contract\n @param token The address of the token\n @param to The address of the recipient\n @param amount The amount of token to transfer"},"functionSelector":"cea9d26f","id":615,"implemented":false,"kind":"function","modifiers":[],"name":"rescueTokens","nameLocation":"30724:12:0","nodeType":"FunctionDefinition","parameters":{"id":613,"nodeType":"ParameterList","parameters":[{"constant":false,"id":608,"mutability":"mutable","name":"token","nameLocation":"30750:5:0","nodeType":"VariableDeclaration","scope":615,"src":"30742:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":607,"name":"address","nodeType":"ElementaryTypeName","src":"30742:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":610,"mutability":"mutable","name":"to","nameLocation":"30769:2:0","nodeType":"VariableDeclaration","scope":615,"src":"30761:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":609,"name":"address","nodeType":"ElementaryTypeName","src":"30761:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":612,"mutability":"mutable","name":"amount","nameLocation":"30785:6:0","nodeType":"VariableDeclaration","scope":615,"src":"30777:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":611,"name":"uint256","nodeType":"ElementaryTypeName","src":"30777:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"30736:59:0"},"returnParameters":{"id":614,"nodeType":"ParameterList","parameters":[],"src":"30804:0:0"},"scope":628,"src":"30715:90:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":616,"nodeType":"StructuredDocumentation","src":"30809:769:0","text":" @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\n - E.g. User supplies 100 USDC and gets in return 100 aUSDC\n @dev Deprecated: Use the `supply` function instead\n @param asset The address of the underlying asset to supply\n @param amount The amount to be supplied\n @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\n   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\n   is a different wallet\n @param referralCode Code used to register the integrator originating the operation, for potential rewards.\n   0 if the action is executed directly by the user, without any middle-man*"},"functionSelector":"e8eda9df","id":627,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"31590:7:0","nodeType":"FunctionDefinition","parameters":{"id":625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":618,"mutability":"mutable","name":"asset","nameLocation":"31611:5:0","nodeType":"VariableDeclaration","scope":627,"src":"31603:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"31603:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"amount","nameLocation":"31630:6:0","nodeType":"VariableDeclaration","scope":627,"src":"31622:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"31622:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":622,"mutability":"mutable","name":"onBehalfOf","nameLocation":"31650:10:0","nodeType":"VariableDeclaration","scope":627,"src":"31642:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":621,"name":"address","nodeType":"ElementaryTypeName","src":"31642:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":624,"mutability":"mutable","name":"referralCode","nameLocation":"31673:12:0","nodeType":"VariableDeclaration","scope":627,"src":"31666:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":623,"name":"uint16","nodeType":"ElementaryTypeName","src":"31666:6:0","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"31597:92:0"},"returnParameters":{"id":626,"nodeType":"ParameterList","parameters":[],"src":"31698:0:0"},"scope":628,"src":"31581:118:0","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":629,"src":"299:31402:0","usedErrors":[]}],"src":"37:31665:0"},"id":0},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol","exportedSymbols":{"IPoolAddressesProvider":[837]},"id":838,"license":"AGPL-3.0","nodeType":"SourceUnit","nodes":[{"id":630,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"37:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IPoolAddressesProvider","contractDependencies":[],"contractKind":"interface","documentation":{"id":631,"nodeType":"StructuredDocumentation","src":"62:127:1","text":" @title IPoolAddressesProvider\n @author Aave\n @notice Defines the basic interface for a Pool Addresses Provider.*"},"fullyImplemented":false,"id":837,"linearizedBaseContracts":[837],"name":"IPoolAddressesProvider","nameLocation":"200:22:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":632,"nodeType":"StructuredDocumentation","src":"227:164:1","text":" @dev Emitted when the market identifier is updated.\n @param oldMarketId The old id of the market\n @param newMarketId The new id of the market"},"id":638,"name":"MarketIdSet","nameLocation":"400:11:1","nodeType":"EventDefinition","parameters":{"id":637,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"indexed":true,"mutability":"mutable","name":"oldMarketId","nameLocation":"427:11:1","nodeType":"VariableDeclaration","scope":638,"src":"412:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":633,"name":"string","nodeType":"ElementaryTypeName","src":"412:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":636,"indexed":true,"mutability":"mutable","name":"newMarketId","nameLocation":"455:11:1","nodeType":"VariableDeclaration","scope":638,"src":"440:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":635,"name":"string","nodeType":"ElementaryTypeName","src":"440:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"411:56:1"},"src":"394:74:1"},{"anonymous":false,"documentation":{"id":639,"nodeType":"StructuredDocumentation","src":"472:155:1","text":" @dev Emitted when the pool is updated.\n @param oldAddress The old address of the Pool\n @param newAddress The new address of the Pool"},"id":645,"name":"PoolUpdated","nameLocation":"636:11:1","nodeType":"EventDefinition","parameters":{"id":644,"nodeType":"ParameterList","parameters":[{"constant":false,"id":641,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"664:10:1","nodeType":"VariableDeclaration","scope":645,"src":"648:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":640,"name":"address","nodeType":"ElementaryTypeName","src":"648:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":643,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"692:10:1","nodeType":"VariableDeclaration","scope":645,"src":"676:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":642,"name":"address","nodeType":"ElementaryTypeName","src":"676:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"647:56:1"},"src":"630:74:1"},{"anonymous":false,"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"708:192:1","text":" @dev Emitted when the pool configurator is updated.\n @param oldAddress The old address of the PoolConfigurator\n @param newAddress The new address of the PoolConfigurator"},"id":652,"name":"PoolConfiguratorUpdated","nameLocation":"909:23:1","nodeType":"EventDefinition","parameters":{"id":651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"949:10:1","nodeType":"VariableDeclaration","scope":652,"src":"933:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":647,"name":"address","nodeType":"ElementaryTypeName","src":"933:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":650,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"977:10:1","nodeType":"VariableDeclaration","scope":652,"src":"961:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":649,"name":"address","nodeType":"ElementaryTypeName","src":"961:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"932:56:1"},"src":"903:86:1"},{"anonymous":false,"documentation":{"id":653,"nodeType":"StructuredDocumentation","src":"993:177:1","text":" @dev Emitted when the price oracle is updated.\n @param oldAddress The old address of the PriceOracle\n @param newAddress The new address of the PriceOracle"},"id":659,"name":"PriceOracleUpdated","nameLocation":"1179:18:1","nodeType":"EventDefinition","parameters":{"id":658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":655,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1214:10:1","nodeType":"VariableDeclaration","scope":659,"src":"1198:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"1198:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":657,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1242:10:1","nodeType":"VariableDeclaration","scope":659,"src":"1226:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":656,"name":"address","nodeType":"ElementaryTypeName","src":"1226:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1197:56:1"},"src":"1173:81:1"},{"anonymous":false,"documentation":{"id":660,"nodeType":"StructuredDocumentation","src":"1258:174:1","text":" @dev Emitted when the ACL manager is updated.\n @param oldAddress The old address of the ACLManager\n @param newAddress The new address of the ACLManager"},"id":666,"name":"ACLManagerUpdated","nameLocation":"1441:17:1","nodeType":"EventDefinition","parameters":{"id":665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":662,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1475:10:1","nodeType":"VariableDeclaration","scope":666,"src":"1459:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":661,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":664,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1503:10:1","nodeType":"VariableDeclaration","scope":666,"src":"1487:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":663,"name":"address","nodeType":"ElementaryTypeName","src":"1487:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1458:56:1"},"src":"1435:80:1"},{"anonymous":false,"documentation":{"id":667,"nodeType":"StructuredDocumentation","src":"1519:168:1","text":" @dev Emitted when the ACL admin is updated.\n @param oldAddress The old address of the ACLAdmin\n @param newAddress The new address of the ACLAdmin"},"id":673,"name":"ACLAdminUpdated","nameLocation":"1696:15:1","nodeType":"EventDefinition","parameters":{"id":672,"nodeType":"ParameterList","parameters":[{"constant":false,"id":669,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"1728:10:1","nodeType":"VariableDeclaration","scope":673,"src":"1712:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":668,"name":"address","nodeType":"ElementaryTypeName","src":"1712:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":671,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"1756:10:1","nodeType":"VariableDeclaration","scope":673,"src":"1740:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"1740:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1711:56:1"},"src":"1690:78:1"},{"anonymous":false,"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"1772:202:1","text":" @dev Emitted when the price oracle sentinel is updated.\n @param oldAddress The old address of the PriceOracleSentinel\n @param newAddress The new address of the PriceOracleSentinel"},"id":680,"name":"PriceOracleSentinelUpdated","nameLocation":"1983:26:1","nodeType":"EventDefinition","parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2026:10:1","nodeType":"VariableDeclaration","scope":680,"src":"2010:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"2010:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2054:10:1","nodeType":"VariableDeclaration","scope":680,"src":"2038:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":677,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2009:56:1"},"src":"1977:89:1"},{"anonymous":false,"documentation":{"id":681,"nodeType":"StructuredDocumentation","src":"2070:193:1","text":" @dev Emitted when the pool data provider is updated.\n @param oldAddress The old address of the PoolDataProvider\n @param newAddress The new address of the PoolDataProvider"},"id":687,"name":"PoolDataProviderUpdated","nameLocation":"2272:23:1","nodeType":"EventDefinition","parameters":{"id":686,"nodeType":"ParameterList","parameters":[{"constant":false,"id":683,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"2312:10:1","nodeType":"VariableDeclaration","scope":687,"src":"2296:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":682,"name":"address","nodeType":"ElementaryTypeName","src":"2296:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":685,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"2340:10:1","nodeType":"VariableDeclaration","scope":687,"src":"2324:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":684,"name":"address","nodeType":"ElementaryTypeName","src":"2324:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2295:56:1"},"src":"2266:86:1"},{"anonymous":false,"documentation":{"id":688,"nodeType":"StructuredDocumentation","src":"2356:243:1","text":" @dev Emitted when a new proxy is created.\n @param id The identifier of the proxy\n @param proxyAddress The address of the created proxy contract\n @param implementationAddress The address of the implementation contract"},"id":696,"name":"ProxyCreated","nameLocation":"2608:12:1","nodeType":"EventDefinition","parameters":{"id":695,"nodeType":"ParameterList","parameters":[{"constant":false,"id":690,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"2642:2:1","nodeType":"VariableDeclaration","scope":696,"src":"2626:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":689,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2626:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":692,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"2666:12:1","nodeType":"VariableDeclaration","scope":696,"src":"2650:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":691,"name":"address","nodeType":"ElementaryTypeName","src":"2650:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":694,"indexed":true,"mutability":"mutable","name":"implementationAddress","nameLocation":"2700:21:1","nodeType":"VariableDeclaration","scope":696,"src":"2684:37:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":693,"name":"address","nodeType":"ElementaryTypeName","src":"2684:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2620:105:1"},"src":"2602:124:1"},{"anonymous":false,"documentation":{"id":697,"nodeType":"StructuredDocumentation","src":"2730:238:1","text":" @dev Emitted when a new non-proxied contract address is registered.\n @param id The identifier of the contract\n @param oldAddress The address of the old contract\n @param newAddress The address of the new contract"},"id":705,"name":"AddressSet","nameLocation":"2977:10:1","nodeType":"EventDefinition","parameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3004:2:1","nodeType":"VariableDeclaration","scope":705,"src":"2988:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2988:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":701,"indexed":true,"mutability":"mutable","name":"oldAddress","nameLocation":"3024:10:1","nodeType":"VariableDeclaration","scope":705,"src":"3008:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":700,"name":"address","nodeType":"ElementaryTypeName","src":"3008:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":703,"indexed":true,"mutability":"mutable","name":"newAddress","nameLocation":"3052:10:1","nodeType":"VariableDeclaration","scope":705,"src":"3036:26:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":702,"name":"address","nodeType":"ElementaryTypeName","src":"3036:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2987:76:1"},"src":"2971:93:1"},{"anonymous":false,"documentation":{"id":706,"nodeType":"StructuredDocumentation","src":"3068:367:1","text":" @dev Emitted when the implementation of the proxy registered with id is updated\n @param id The identifier of the contract\n @param proxyAddress The address of the proxy contract\n @param oldImplementationAddress The address of the old implementation contract\n @param newImplementationAddress The address of the new implementation contract"},"id":716,"name":"AddressSetAsProxy","nameLocation":"3444:17:1","nodeType":"EventDefinition","parameters":{"id":715,"nodeType":"ParameterList","parameters":[{"constant":false,"id":708,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"3483:2:1","nodeType":"VariableDeclaration","scope":716,"src":"3467:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":707,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3467:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":710,"indexed":true,"mutability":"mutable","name":"proxyAddress","nameLocation":"3507:12:1","nodeType":"VariableDeclaration","scope":716,"src":"3491:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":709,"name":"address","nodeType":"ElementaryTypeName","src":"3491:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":712,"indexed":false,"mutability":"mutable","name":"oldImplementationAddress","nameLocation":"3533:24:1","nodeType":"VariableDeclaration","scope":716,"src":"3525:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"3525:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":714,"indexed":true,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"3579:24:1","nodeType":"VariableDeclaration","scope":716,"src":"3563:40:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":713,"name":"address","nodeType":"ElementaryTypeName","src":"3563:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3461:146:1"},"src":"3438:170:1"},{"documentation":{"id":717,"nodeType":"StructuredDocumentation","src":"3612:118:1","text":" @notice Returns the id of the Aave market to which this contract points to.\n @return The market id*"},"functionSelector":"568ef470","id":722,"implemented":false,"kind":"function","modifiers":[],"name":"getMarketId","nameLocation":"3742:11:1","nodeType":"FunctionDefinition","parameters":{"id":718,"nodeType":"ParameterList","parameters":[],"src":"3753:2:1"},"returnParameters":{"id":721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":722,"src":"3779:13:1","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":719,"name":"string","nodeType":"ElementaryTypeName","src":"3779:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3778:15:1"},"scope":837,"src":"3733:61:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":723,"nodeType":"StructuredDocumentation","src":"3798:252:1","text":" @notice Associates an id with a specific PoolAddressesProvider.\n @dev This can be used to create an onchain registry of PoolAddressesProviders to\n identify and validate multiple Aave markets.\n @param newMarketId The market id"},"functionSelector":"f67b1847","id":728,"implemented":false,"kind":"function","modifiers":[],"name":"setMarketId","nameLocation":"4062:11:1","nodeType":"FunctionDefinition","parameters":{"id":726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":725,"mutability":"mutable","name":"newMarketId","nameLocation":"4090:11:1","nodeType":"VariableDeclaration","scope":728,"src":"4074:27:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":724,"name":"string","nodeType":"ElementaryTypeName","src":"4074:6:1","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4073:29:1"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[],"src":"4111:0:1"},"scope":837,"src":"4053:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":729,"nodeType":"StructuredDocumentation","src":"4116:306:1","text":" @notice Returns an address by its identifier.\n @dev The returned address might be an EOA or a contract, potentially proxied\n @dev It returns ZERO if there is no registered address with the given id\n @param id The id\n @return The address of the registered for the specified id"},"functionSelector":"21f8a721","id":736,"implemented":false,"kind":"function","modifiers":[],"name":"getAddress","nameLocation":"4434:10:1","nodeType":"FunctionDefinition","parameters":{"id":732,"nodeType":"ParameterList","parameters":[{"constant":false,"id":731,"mutability":"mutable","name":"id","nameLocation":"4453:2:1","nodeType":"VariableDeclaration","scope":736,"src":"4445:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":730,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4445:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4444:12:1"},"returnParameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":734,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":736,"src":"4480:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":733,"name":"address","nodeType":"ElementaryTypeName","src":"4480:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4479:9:1"},"scope":837,"src":"4425:64:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":737,"nodeType":"StructuredDocumentation","src":"4493:485:1","text":" @notice General function to update the implementation of a proxy registered with\n certain `id`. If there is no proxy registered, it will instantiate one and\n set as implementation the `newImplementationAddress`.\n @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\n setter function, in order to avoid unexpected consequences\n @param id The id\n @param newImplementationAddress The address of the new implementation"},"functionSelector":"5dcc528c","id":744,"implemented":false,"kind":"function","modifiers":[],"name":"setAddressAsProxy","nameLocation":"4990:17:1","nodeType":"FunctionDefinition","parameters":{"id":742,"nodeType":"ParameterList","parameters":[{"constant":false,"id":739,"mutability":"mutable","name":"id","nameLocation":"5016:2:1","nodeType":"VariableDeclaration","scope":744,"src":"5008:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":738,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5008:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"newImplementationAddress","nameLocation":"5028:24:1","nodeType":"VariableDeclaration","scope":744,"src":"5020:32:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"5020:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5007:46:1"},"returnParameters":{"id":743,"nodeType":"ParameterList","parameters":[],"src":"5062:0:1"},"scope":837,"src":"4981:82:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":745,"nodeType":"StructuredDocumentation","src":"5067:244:1","text":" @notice Sets an address for an id replacing the address saved in the addresses map.\n @dev IMPORTANT Use this function carefully, as it will do a hard replacement\n @param id The id\n @param newAddress The address to set"},"functionSelector":"ca446dd9","id":752,"implemented":false,"kind":"function","modifiers":[],"name":"setAddress","nameLocation":"5323:10:1","nodeType":"FunctionDefinition","parameters":{"id":750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":747,"mutability":"mutable","name":"id","nameLocation":"5342:2:1","nodeType":"VariableDeclaration","scope":752,"src":"5334:10:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":746,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5334:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":749,"mutability":"mutable","name":"newAddress","nameLocation":"5354:10:1","nodeType":"VariableDeclaration","scope":752,"src":"5346:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":748,"name":"address","nodeType":"ElementaryTypeName","src":"5346:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5333:32:1"},"returnParameters":{"id":751,"nodeType":"ParameterList","parameters":[],"src":"5374:0:1"},"scope":837,"src":"5314:61:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":753,"nodeType":"StructuredDocumentation","src":"5379:98:1","text":" @notice Returns the address of the Pool proxy.\n @return The Pool proxy address*"},"functionSelector":"026b1d5f","id":758,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nameLocation":"5489:7:1","nodeType":"FunctionDefinition","parameters":{"id":754,"nodeType":"ParameterList","parameters":[],"src":"5496:2:1"},"returnParameters":{"id":757,"nodeType":"ParameterList","parameters":[{"constant":false,"id":756,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":758,"src":"5522:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":755,"name":"address","nodeType":"ElementaryTypeName","src":"5522:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5521:9:1"},"scope":837,"src":"5480:51:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":759,"nodeType":"StructuredDocumentation","src":"5535:225:1","text":" @notice Updates the implementation of the Pool, or creates a proxy\n setting the new `pool` implementation when the function is called for the first time.\n @param newPoolImpl The new Pool implementation*"},"functionSelector":"a1564406","id":764,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolImpl","nameLocation":"5772:11:1","nodeType":"FunctionDefinition","parameters":{"id":762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":761,"mutability":"mutable","name":"newPoolImpl","nameLocation":"5792:11:1","nodeType":"VariableDeclaration","scope":764,"src":"5784:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":760,"name":"address","nodeType":"ElementaryTypeName","src":"5784:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5783:21:1"},"returnParameters":{"id":763,"nodeType":"ParameterList","parameters":[],"src":"5813:0:1"},"scope":837,"src":"5763:51:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":765,"nodeType":"StructuredDocumentation","src":"5818:122:1","text":" @notice Returns the address of the PoolConfigurator proxy.\n @return The PoolConfigurator proxy address*"},"functionSelector":"631adfca","id":770,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolConfigurator","nameLocation":"5952:19:1","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[],"src":"5971:2:1"},"returnParameters":{"id":769,"nodeType":"ParameterList","parameters":[{"constant":false,"id":768,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"5997:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":767,"name":"address","nodeType":"ElementaryTypeName","src":"5997:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5996:9:1"},"scope":837,"src":"5943:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"6010:273:1","text":" @notice Updates the implementation of the PoolConfigurator, or creates a proxy\n setting the new `PoolConfigurator` implementation when the function is called for the first time.\n @param newPoolConfiguratorImpl The new PoolConfigurator implementation*"},"functionSelector":"e4ca28b7","id":776,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolConfiguratorImpl","nameLocation":"6295:23:1","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"newPoolConfiguratorImpl","nameLocation":"6327:23:1","nodeType":"VariableDeclaration","scope":776,"src":"6319:31:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"6319:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6318:33:1"},"returnParameters":{"id":775,"nodeType":"ParameterList","parameters":[],"src":"6360:0:1"},"scope":837,"src":"6286:75:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":777,"nodeType":"StructuredDocumentation","src":"6365:107:1","text":" @notice Returns the address of the price oracle.\n @return The address of the PriceOracle"},"functionSelector":"fca513a8","id":782,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracle","nameLocation":"6484:14:1","nodeType":"FunctionDefinition","parameters":{"id":778,"nodeType":"ParameterList","parameters":[],"src":"6498:2:1"},"returnParameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":780,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":782,"src":"6524:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":779,"name":"address","nodeType":"ElementaryTypeName","src":"6524:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6523:9:1"},"scope":837,"src":"6475:58:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"6537:125:1","text":" @notice Updates the address of the price oracle.\n @param newPriceOracle The address of the new PriceOracle"},"functionSelector":"530e784f","id":788,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracle","nameLocation":"6674:14:1","nodeType":"FunctionDefinition","parameters":{"id":786,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"mutability":"mutable","name":"newPriceOracle","nameLocation":"6697:14:1","nodeType":"VariableDeclaration","scope":788,"src":"6689:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"6689:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6688:24:1"},"returnParameters":{"id":787,"nodeType":"ParameterList","parameters":[],"src":"6721:0:1"},"scope":837,"src":"6665:57:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":789,"nodeType":"StructuredDocumentation","src":"6726:105:1","text":" @notice Returns the address of the ACL manager.\n @return The address of the ACLManager"},"functionSelector":"707cd716","id":794,"implemented":false,"kind":"function","modifiers":[],"name":"getACLManager","nameLocation":"6843:13:1","nodeType":"FunctionDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[],"src":"6856:2:1"},"returnParameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":792,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":794,"src":"6882:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":791,"name":"address","nodeType":"ElementaryTypeName","src":"6882:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6881:9:1"},"scope":837,"src":"6834:57:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":795,"nodeType":"StructuredDocumentation","src":"6895:123:1","text":" @notice Updates the address of the ACL manager.\n @param newAclManager The address of the new ACLManager*"},"functionSelector":"ed301ca9","id":800,"implemented":false,"kind":"function","modifiers":[],"name":"setACLManager","nameLocation":"7030:13:1","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"newAclManager","nameLocation":"7052:13:1","nodeType":"VariableDeclaration","scope":800,"src":"7044:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"7044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7043:23:1"},"returnParameters":{"id":799,"nodeType":"ParameterList","parameters":[],"src":"7075:0:1"},"scope":837,"src":"7021:55:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"7080:102:1","text":" @notice Returns the address of the ACL admin.\n @return The address of the ACL admin"},"functionSelector":"0e67178c","id":806,"implemented":false,"kind":"function","modifiers":[],"name":"getACLAdmin","nameLocation":"7194:11:1","nodeType":"FunctionDefinition","parameters":{"id":802,"nodeType":"ParameterList","parameters":[],"src":"7205:2:1"},"returnParameters":{"id":805,"nodeType":"ParameterList","parameters":[{"constant":false,"id":804,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":806,"src":"7231:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":803,"name":"address","nodeType":"ElementaryTypeName","src":"7231:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7230:9:1"},"scope":837,"src":"7185:55:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":807,"nodeType":"StructuredDocumentation","src":"7244:117:1","text":" @notice Updates the address of the ACL admin.\n @param newAclAdmin The address of the new ACL admin"},"functionSelector":"76d84ffc","id":812,"implemented":false,"kind":"function","modifiers":[],"name":"setACLAdmin","nameLocation":"7373:11:1","nodeType":"FunctionDefinition","parameters":{"id":810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":809,"mutability":"mutable","name":"newAclAdmin","nameLocation":"7393:11:1","nodeType":"VariableDeclaration","scope":812,"src":"7385:19:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":808,"name":"address","nodeType":"ElementaryTypeName","src":"7385:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7384:21:1"},"returnParameters":{"id":811,"nodeType":"ParameterList","parameters":[],"src":"7414:0:1"},"scope":837,"src":"7364:51:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":813,"nodeType":"StructuredDocumentation","src":"7419:124:1","text":" @notice Returns the address of the price oracle sentinel.\n @return The address of the PriceOracleSentinel"},"functionSelector":"5eb88d3d","id":818,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceOracleSentinel","nameLocation":"7555:22:1","nodeType":"FunctionDefinition","parameters":{"id":814,"nodeType":"ParameterList","parameters":[],"src":"7577:2:1"},"returnParameters":{"id":817,"nodeType":"ParameterList","parameters":[{"constant":false,"id":816,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":818,"src":"7603:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":815,"name":"address","nodeType":"ElementaryTypeName","src":"7603:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7602:9:1"},"scope":837,"src":"7546:66:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":819,"nodeType":"StructuredDocumentation","src":"7616:151:1","text":" @notice Updates the address of the price oracle sentinel.\n @param newPriceOracleSentinel The address of the new PriceOracleSentinel*"},"functionSelector":"74944cec","id":824,"implemented":false,"kind":"function","modifiers":[],"name":"setPriceOracleSentinel","nameLocation":"7779:22:1","nodeType":"FunctionDefinition","parameters":{"id":822,"nodeType":"ParameterList","parameters":[{"constant":false,"id":821,"mutability":"mutable","name":"newPriceOracleSentinel","nameLocation":"7810:22:1","nodeType":"VariableDeclaration","scope":824,"src":"7802:30:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"7802:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7801:32:1"},"returnParameters":{"id":823,"nodeType":"ParameterList","parameters":[],"src":"7842:0:1"},"scope":837,"src":"7770:73:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":825,"nodeType":"StructuredDocumentation","src":"7847:109:1","text":" @notice Returns the address of the data provider.\n @return The address of the DataProvider"},"functionSelector":"e860accb","id":830,"implemented":false,"kind":"function","modifiers":[],"name":"getPoolDataProvider","nameLocation":"7968:19:1","nodeType":"FunctionDefinition","parameters":{"id":826,"nodeType":"ParameterList","parameters":[],"src":"7987:2:1"},"returnParameters":{"id":829,"nodeType":"ParameterList","parameters":[{"constant":false,"id":828,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":830,"src":"8013:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":827,"name":"address","nodeType":"ElementaryTypeName","src":"8013:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8012:9:1"},"scope":837,"src":"7959:63:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":831,"nodeType":"StructuredDocumentation","src":"8026:129:1","text":" @notice Updates the address of the data provider.\n @param newDataProvider The address of the new DataProvider*"},"functionSelector":"e44e9ed1","id":836,"implemented":false,"kind":"function","modifiers":[],"name":"setPoolDataProvider","nameLocation":"8167:19:1","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":833,"mutability":"mutable","name":"newDataProvider","nameLocation":"8195:15:1","nodeType":"VariableDeclaration","scope":836,"src":"8187:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":832,"name":"address","nodeType":"ElementaryTypeName","src":"8187:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8186:25:1"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"8220:0:1"},"scope":837,"src":"8158:63:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":838,"src":"190:8033:1","usedErrors":[]}],"src":"37:8187:1"},"id":1},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"ast":{"absolutePath":"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol","exportedSymbols":{"DataTypes":[1189]},"id":1190,"license":"BUSL-1.1","nodeType":"SourceUnit","nodes":[{"id":839,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"37:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"DataTypes","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":1189,"linearizedBaseContracts":[1189],"name":"DataTypes","nameLocation":"70:9:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"DataTypes.ReserveData","id":871,"members":[{"constant":false,"id":842,"mutability":"mutable","name":"configuration","nameLocation":"172:13:2","nodeType":"VariableDeclaration","scope":871,"src":"148:37:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":841,"nodeType":"UserDefinedTypeName","pathNode":{"id":840,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":874,"src":"148:23:2"},"referencedDeclaration":874,"src":"148:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":844,"mutability":"mutable","name":"liquidityIndex","nameLocation":"243:14:2","nodeType":"VariableDeclaration","scope":871,"src":"235:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":843,"name":"uint128","nodeType":"ElementaryTypeName","src":"235:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":846,"mutability":"mutable","name":"currentLiquidityRate","nameLocation":"319:20:2","nodeType":"VariableDeclaration","scope":871,"src":"311:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":845,"name":"uint128","nodeType":"ElementaryTypeName","src":"311:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"variableBorrowIndex","nameLocation":"399:19:2","nodeType":"VariableDeclaration","scope":871,"src":"391:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":847,"name":"uint128","nodeType":"ElementaryTypeName","src":"391:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":850,"mutability":"mutable","name":"currentVariableBorrowRate","nameLocation":"489:25:2","nodeType":"VariableDeclaration","scope":871,"src":"481:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":849,"name":"uint128","nodeType":"ElementaryTypeName","src":"481:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":852,"mutability":"mutable","name":"currentStableBorrowRate","nameLocation":"583:23:2","nodeType":"VariableDeclaration","scope":871,"src":"575:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":851,"name":"uint128","nodeType":"ElementaryTypeName","src":"575:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":854,"mutability":"mutable","name":"lastUpdateTimestamp","nameLocation":"650:19:2","nodeType":"VariableDeclaration","scope":871,"src":"643:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":853,"name":"uint40","nodeType":"ElementaryTypeName","src":"643:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":856,"mutability":"mutable","name":"id","nameLocation":"770:2:2","nodeType":"VariableDeclaration","scope":871,"src":"763:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":855,"name":"uint16","nodeType":"ElementaryTypeName","src":"763:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"aTokenAddress","nameLocation":"807:13:2","nodeType":"VariableDeclaration","scope":871,"src":"799:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":857,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":860,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"864:22:2","nodeType":"VariableDeclaration","scope":871,"src":"856:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":859,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":862,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"932:24:2","nodeType":"VariableDeclaration","scope":871,"src":"924:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":861,"name":"address","nodeType":"ElementaryTypeName","src":"924:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"1014:27:2","nodeType":"VariableDeclaration","scope":871,"src":"1006:35:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":863,"name":"address","nodeType":"ElementaryTypeName","src":"1006:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"accruedToTreasury","nameLocation":"1098:17:2","nodeType":"VariableDeclaration","scope":871,"src":"1090:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":865,"name":"uint128","nodeType":"ElementaryTypeName","src":"1090:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":868,"mutability":"mutable","name":"unbacked","nameLocation":"1204:8:2","nodeType":"VariableDeclaration","scope":871,"src":"1196:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":867,"name":"uint128","nodeType":"ElementaryTypeName","src":"1196:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":870,"mutability":"mutable","name":"isolationModeTotalDebt","nameLocation":"1299:22:2","nodeType":"VariableDeclaration","scope":871,"src":"1291:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":869,"name":"uint128","nodeType":"ElementaryTypeName","src":"1291:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"ReserveData","nameLocation":"91:11:2","nodeType":"StructDefinition","scope":1189,"src":"84:1242:2","visibility":"public"},{"canonicalName":"DataTypes.ReserveConfigurationMap","id":874,"members":[{"constant":false,"id":873,"mutability":"mutable","name":"data","nameLocation":"2212:4:2","nodeType":"VariableDeclaration","scope":874,"src":"2204:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ReserveConfigurationMap","nameLocation":"1337:23:2","nodeType":"StructDefinition","scope":1189,"src":"1330:891:2","visibility":"public"},{"canonicalName":"DataTypes.UserConfigurationMap","id":878,"members":[{"constant":false,"id":877,"mutability":"mutable","name":"data","nameLocation":"2530:4:2","nodeType":"VariableDeclaration","scope":878,"src":"2522:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"2522:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserConfigurationMap","nameLocation":"2232:20:2","nodeType":"StructDefinition","scope":1189,"src":"2225:314:2","visibility":"public"},{"canonicalName":"DataTypes.EModeCategory","id":889,"members":[{"constant":false,"id":880,"mutability":"mutable","name":"ltv","nameLocation":"2647:3:2","nodeType":"VariableDeclaration","scope":889,"src":"2640:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":879,"name":"uint16","nodeType":"ElementaryTypeName","src":"2640:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"liquidationThreshold","nameLocation":"2663:20:2","nodeType":"VariableDeclaration","scope":889,"src":"2656:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":881,"name":"uint16","nodeType":"ElementaryTypeName","src":"2656:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"liquidationBonus","nameLocation":"2696:16:2","nodeType":"VariableDeclaration","scope":889,"src":"2689:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":883,"name":"uint16","nodeType":"ElementaryTypeName","src":"2689:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"priceSource","nameLocation":"2837:11:2","nodeType":"VariableDeclaration","scope":889,"src":"2829:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":885,"name":"address","nodeType":"ElementaryTypeName","src":"2829:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"label","nameLocation":"2861:5:2","nodeType":"VariableDeclaration","scope":889,"src":"2854:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":887,"name":"string","nodeType":"ElementaryTypeName","src":"2854:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"name":"EModeCategory","nameLocation":"2550:13:2","nodeType":"StructDefinition","scope":1189,"src":"2543:328:2","visibility":"public"},{"canonicalName":"DataTypes.InterestRateMode","id":893,"members":[{"id":890,"name":"NONE","nameLocation":"2903:4:2","nodeType":"EnumValue","src":"2903:4:2"},{"id":891,"name":"STABLE","nameLocation":"2913:6:2","nodeType":"EnumValue","src":"2913:6:2"},{"id":892,"name":"VARIABLE","nameLocation":"2925:8:2","nodeType":"EnumValue","src":"2925:8:2"}],"name":"InterestRateMode","nameLocation":"2880:16:2","nodeType":"EnumDefinition","src":"2875:62:2"},{"canonicalName":"DataTypes.ReserveCache","id":935,"members":[{"constant":false,"id":895,"mutability":"mutable","name":"currScaledVariableDebt","nameLocation":"2975:22:2","nodeType":"VariableDeclaration","scope":935,"src":"2967:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":894,"name":"uint256","nodeType":"ElementaryTypeName","src":"2967:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":897,"mutability":"mutable","name":"nextScaledVariableDebt","nameLocation":"3011:22:2","nodeType":"VariableDeclaration","scope":935,"src":"3003:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":896,"name":"uint256","nodeType":"ElementaryTypeName","src":"3003:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":899,"mutability":"mutable","name":"currPrincipalStableDebt","nameLocation":"3047:23:2","nodeType":"VariableDeclaration","scope":935,"src":"3039:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint256","nodeType":"ElementaryTypeName","src":"3039:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":901,"mutability":"mutable","name":"currAvgStableBorrowRate","nameLocation":"3084:23:2","nodeType":"VariableDeclaration","scope":935,"src":"3076:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":900,"name":"uint256","nodeType":"ElementaryTypeName","src":"3076:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":903,"mutability":"mutable","name":"currTotalStableDebt","nameLocation":"3121:19:2","nodeType":"VariableDeclaration","scope":935,"src":"3113:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"3113:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":905,"mutability":"mutable","name":"nextAvgStableBorrowRate","nameLocation":"3154:23:2","nodeType":"VariableDeclaration","scope":935,"src":"3146:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":904,"name":"uint256","nodeType":"ElementaryTypeName","src":"3146:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":907,"mutability":"mutable","name":"nextTotalStableDebt","nameLocation":"3191:19:2","nodeType":"VariableDeclaration","scope":935,"src":"3183:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":906,"name":"uint256","nodeType":"ElementaryTypeName","src":"3183:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":909,"mutability":"mutable","name":"currLiquidityIndex","nameLocation":"3224:18:2","nodeType":"VariableDeclaration","scope":935,"src":"3216:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":908,"name":"uint256","nodeType":"ElementaryTypeName","src":"3216:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":911,"mutability":"mutable","name":"nextLiquidityIndex","nameLocation":"3256:18:2","nodeType":"VariableDeclaration","scope":935,"src":"3248:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"3248:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"mutability":"mutable","name":"currVariableBorrowIndex","nameLocation":"3288:23:2","nodeType":"VariableDeclaration","scope":935,"src":"3280:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":912,"name":"uint256","nodeType":"ElementaryTypeName","src":"3280:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":915,"mutability":"mutable","name":"nextVariableBorrowIndex","nameLocation":"3325:23:2","nodeType":"VariableDeclaration","scope":935,"src":"3317:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"3317:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"mutability":"mutable","name":"currLiquidityRate","nameLocation":"3362:17:2","nodeType":"VariableDeclaration","scope":935,"src":"3354:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"3354:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":919,"mutability":"mutable","name":"currVariableBorrowRate","nameLocation":"3393:22:2","nodeType":"VariableDeclaration","scope":935,"src":"3385:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":918,"name":"uint256","nodeType":"ElementaryTypeName","src":"3385:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":921,"mutability":"mutable","name":"reserveFactor","nameLocation":"3429:13:2","nodeType":"VariableDeclaration","scope":935,"src":"3421:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":920,"name":"uint256","nodeType":"ElementaryTypeName","src":"3421:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":924,"mutability":"mutable","name":"reserveConfiguration","nameLocation":"3472:20:2","nodeType":"VariableDeclaration","scope":935,"src":"3448:44:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"},"typeName":{"id":923,"nodeType":"UserDefinedTypeName","pathNode":{"id":922,"name":"ReserveConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":874,"src":"3448:23:2"},"referencedDeclaration":874,"src":"3448:23:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveConfigurationMap_$874_storage_ptr","typeString":"struct DataTypes.ReserveConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":926,"mutability":"mutable","name":"aTokenAddress","nameLocation":"3506:13:2","nodeType":"VariableDeclaration","scope":935,"src":"3498:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"3498:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":928,"mutability":"mutable","name":"stableDebtTokenAddress","nameLocation":"3533:22:2","nodeType":"VariableDeclaration","scope":935,"src":"3525:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":927,"name":"address","nodeType":"ElementaryTypeName","src":"3525:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":930,"mutability":"mutable","name":"variableDebtTokenAddress","nameLocation":"3569:24:2","nodeType":"VariableDeclaration","scope":935,"src":"3561:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":929,"name":"address","nodeType":"ElementaryTypeName","src":"3561:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":932,"mutability":"mutable","name":"reserveLastUpdateTimestamp","nameLocation":"3606:26:2","nodeType":"VariableDeclaration","scope":935,"src":"3599:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":931,"name":"uint40","nodeType":"ElementaryTypeName","src":"3599:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"},{"constant":false,"id":934,"mutability":"mutable","name":"stableDebtLastUpdateTimestamp","nameLocation":"3645:29:2","nodeType":"VariableDeclaration","scope":935,"src":"3638:36:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":933,"name":"uint40","nodeType":"ElementaryTypeName","src":"3638:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"name":"ReserveCache","nameLocation":"2948:12:2","nodeType":"StructDefinition","scope":1189,"src":"2941:738:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteLiquidationCallParams","id":954,"members":[{"constant":false,"id":937,"mutability":"mutable","name":"reservesCount","nameLocation":"3733:13:2","nodeType":"VariableDeclaration","scope":954,"src":"3725:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":936,"name":"uint256","nodeType":"ElementaryTypeName","src":"3725:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":939,"mutability":"mutable","name":"debtToCover","nameLocation":"3760:11:2","nodeType":"VariableDeclaration","scope":954,"src":"3752:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":938,"name":"uint256","nodeType":"ElementaryTypeName","src":"3752:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":941,"mutability":"mutable","name":"collateralAsset","nameLocation":"3785:15:2","nodeType":"VariableDeclaration","scope":954,"src":"3777:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":940,"name":"address","nodeType":"ElementaryTypeName","src":"3777:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":943,"mutability":"mutable","name":"debtAsset","nameLocation":"3814:9:2","nodeType":"VariableDeclaration","scope":954,"src":"3806:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":942,"name":"address","nodeType":"ElementaryTypeName","src":"3806:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":945,"mutability":"mutable","name":"user","nameLocation":"3837:4:2","nodeType":"VariableDeclaration","scope":954,"src":"3829:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":944,"name":"address","nodeType":"ElementaryTypeName","src":"3829:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"receiveAToken","nameLocation":"3852:13:2","nodeType":"VariableDeclaration","scope":954,"src":"3847:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":946,"name":"bool","nodeType":"ElementaryTypeName","src":"3847:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":949,"mutability":"mutable","name":"priceOracle","nameLocation":"3879:11:2","nodeType":"VariableDeclaration","scope":954,"src":"3871:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":948,"name":"address","nodeType":"ElementaryTypeName","src":"3871:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":951,"mutability":"mutable","name":"userEModeCategory","nameLocation":"3902:17:2","nodeType":"VariableDeclaration","scope":954,"src":"3896:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":950,"name":"uint8","nodeType":"ElementaryTypeName","src":"3896:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":953,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"3933:19:2","nodeType":"VariableDeclaration","scope":954,"src":"3925:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":952,"name":"address","nodeType":"ElementaryTypeName","src":"3925:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteLiquidationCallParams","nameLocation":"3690:28:2","nodeType":"StructDefinition","scope":1189,"src":"3683:274:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSupplyParams","id":963,"members":[{"constant":false,"id":956,"mutability":"mutable","name":"asset","nameLocation":"4002:5:2","nodeType":"VariableDeclaration","scope":963,"src":"3994:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":955,"name":"address","nodeType":"ElementaryTypeName","src":"3994:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":958,"mutability":"mutable","name":"amount","nameLocation":"4021:6:2","nodeType":"VariableDeclaration","scope":963,"src":"4013:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":957,"name":"uint256","nodeType":"ElementaryTypeName","src":"4013:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":960,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4041:10:2","nodeType":"VariableDeclaration","scope":963,"src":"4033:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":959,"name":"address","nodeType":"ElementaryTypeName","src":"4033:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":962,"mutability":"mutable","name":"referralCode","nameLocation":"4064:12:2","nodeType":"VariableDeclaration","scope":963,"src":"4057:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":961,"name":"uint16","nodeType":"ElementaryTypeName","src":"4057:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"ExecuteSupplyParams","nameLocation":"3968:19:2","nodeType":"StructDefinition","scope":1189,"src":"3961:120:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteBorrowParams","id":989,"members":[{"constant":false,"id":965,"mutability":"mutable","name":"asset","nameLocation":"4126:5:2","nodeType":"VariableDeclaration","scope":989,"src":"4118:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":964,"name":"address","nodeType":"ElementaryTypeName","src":"4118:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":967,"mutability":"mutable","name":"user","nameLocation":"4145:4:2","nodeType":"VariableDeclaration","scope":989,"src":"4137:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":966,"name":"address","nodeType":"ElementaryTypeName","src":"4137:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":969,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4163:10:2","nodeType":"VariableDeclaration","scope":989,"src":"4155:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":968,"name":"address","nodeType":"ElementaryTypeName","src":"4155:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":971,"mutability":"mutable","name":"amount","nameLocation":"4187:6:2","nodeType":"VariableDeclaration","scope":989,"src":"4179:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":970,"name":"uint256","nodeType":"ElementaryTypeName","src":"4179:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":974,"mutability":"mutable","name":"interestRateMode","nameLocation":"4216:16:2","nodeType":"VariableDeclaration","scope":989,"src":"4199:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":973,"nodeType":"UserDefinedTypeName","pathNode":{"id":972,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":893,"src":"4199:16:2"},"referencedDeclaration":893,"src":"4199:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":976,"mutability":"mutable","name":"referralCode","nameLocation":"4245:12:2","nodeType":"VariableDeclaration","scope":989,"src":"4238:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":975,"name":"uint16","nodeType":"ElementaryTypeName","src":"4238:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":978,"mutability":"mutable","name":"releaseUnderlying","nameLocation":"4268:17:2","nodeType":"VariableDeclaration","scope":989,"src":"4263:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":977,"name":"bool","nodeType":"ElementaryTypeName","src":"4263:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":980,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"4299:30:2","nodeType":"VariableDeclaration","scope":989,"src":"4291:38:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":979,"name":"uint256","nodeType":"ElementaryTypeName","src":"4291:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"reservesCount","nameLocation":"4343:13:2","nodeType":"VariableDeclaration","scope":989,"src":"4335:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"4335:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"oracle","nameLocation":"4370:6:2","nodeType":"VariableDeclaration","scope":989,"src":"4362:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":983,"name":"address","nodeType":"ElementaryTypeName","src":"4362:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":986,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4388:17:2","nodeType":"VariableDeclaration","scope":989,"src":"4382:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":985,"name":"uint8","nodeType":"ElementaryTypeName","src":"4382:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":988,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"4419:19:2","nodeType":"VariableDeclaration","scope":989,"src":"4411:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":987,"name":"address","nodeType":"ElementaryTypeName","src":"4411:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ExecuteBorrowParams","nameLocation":"4092:19:2","nodeType":"StructDefinition","scope":1189,"src":"4085:358:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteRepayParams","id":1001,"members":[{"constant":false,"id":991,"mutability":"mutable","name":"asset","nameLocation":"4487:5:2","nodeType":"VariableDeclaration","scope":1001,"src":"4479:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":990,"name":"address","nodeType":"ElementaryTypeName","src":"4479:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":993,"mutability":"mutable","name":"amount","nameLocation":"4506:6:2","nodeType":"VariableDeclaration","scope":1001,"src":"4498:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":992,"name":"uint256","nodeType":"ElementaryTypeName","src":"4498:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":996,"mutability":"mutable","name":"interestRateMode","nameLocation":"4535:16:2","nodeType":"VariableDeclaration","scope":1001,"src":"4518:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":995,"nodeType":"UserDefinedTypeName","pathNode":{"id":994,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":893,"src":"4518:16:2"},"referencedDeclaration":893,"src":"4518:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":998,"mutability":"mutable","name":"onBehalfOf","nameLocation":"4565:10:2","nodeType":"VariableDeclaration","scope":1001,"src":"4557:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"4557:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"useATokens","nameLocation":"4586:10:2","nodeType":"VariableDeclaration","scope":1001,"src":"4581:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":999,"name":"bool","nodeType":"ElementaryTypeName","src":"4581:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"ExecuteRepayParams","nameLocation":"4454:18:2","nodeType":"StructDefinition","scope":1189,"src":"4447:154:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteWithdrawParams","id":1014,"members":[{"constant":false,"id":1003,"mutability":"mutable","name":"asset","nameLocation":"4648:5:2","nodeType":"VariableDeclaration","scope":1014,"src":"4640:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1002,"name":"address","nodeType":"ElementaryTypeName","src":"4640:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1005,"mutability":"mutable","name":"amount","nameLocation":"4667:6:2","nodeType":"VariableDeclaration","scope":1014,"src":"4659:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"4659:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1007,"mutability":"mutable","name":"to","nameLocation":"4687:2:2","nodeType":"VariableDeclaration","scope":1014,"src":"4679:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1006,"name":"address","nodeType":"ElementaryTypeName","src":"4679:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1009,"mutability":"mutable","name":"reservesCount","nameLocation":"4703:13:2","nodeType":"VariableDeclaration","scope":1014,"src":"4695:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"4695:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1011,"mutability":"mutable","name":"oracle","nameLocation":"4730:6:2","nodeType":"VariableDeclaration","scope":1014,"src":"4722:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1010,"name":"address","nodeType":"ElementaryTypeName","src":"4722:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1013,"mutability":"mutable","name":"userEModeCategory","nameLocation":"4748:17:2","nodeType":"VariableDeclaration","scope":1014,"src":"4742:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1012,"name":"uint8","nodeType":"ElementaryTypeName","src":"4742:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteWithdrawParams","nameLocation":"4612:21:2","nodeType":"StructDefinition","scope":1189,"src":"4605:165:2","visibility":"public"},{"canonicalName":"DataTypes.ExecuteSetUserEModeParams","id":1021,"members":[{"constant":false,"id":1016,"mutability":"mutable","name":"reservesCount","nameLocation":"4821:13:2","nodeType":"VariableDeclaration","scope":1021,"src":"4813:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1015,"name":"uint256","nodeType":"ElementaryTypeName","src":"4813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1018,"mutability":"mutable","name":"oracle","nameLocation":"4848:6:2","nodeType":"VariableDeclaration","scope":1021,"src":"4840:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1017,"name":"address","nodeType":"ElementaryTypeName","src":"4840:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1020,"mutability":"mutable","name":"categoryId","nameLocation":"4866:10:2","nodeType":"VariableDeclaration","scope":1021,"src":"4860:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1019,"name":"uint8","nodeType":"ElementaryTypeName","src":"4860:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"ExecuteSetUserEModeParams","nameLocation":"4781:25:2","nodeType":"StructDefinition","scope":1189,"src":"4774:107:2","visibility":"public"},{"canonicalName":"DataTypes.FinalizeTransferParams","id":1040,"members":[{"constant":false,"id":1023,"mutability":"mutable","name":"asset","nameLocation":"4929:5:2","nodeType":"VariableDeclaration","scope":1040,"src":"4921:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"4921:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"from","nameLocation":"4948:4:2","nodeType":"VariableDeclaration","scope":1040,"src":"4940:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"4940:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"to","nameLocation":"4966:2:2","nodeType":"VariableDeclaration","scope":1040,"src":"4958:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"4958:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"amount","nameLocation":"4982:6:2","nodeType":"VariableDeclaration","scope":1040,"src":"4974:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4974:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1031,"mutability":"mutable","name":"balanceFromBefore","nameLocation":"5002:17:2","nodeType":"VariableDeclaration","scope":1040,"src":"4994:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1030,"name":"uint256","nodeType":"ElementaryTypeName","src":"4994:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1033,"mutability":"mutable","name":"balanceToBefore","nameLocation":"5033:15:2","nodeType":"VariableDeclaration","scope":1040,"src":"5025:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"5025:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1035,"mutability":"mutable","name":"reservesCount","nameLocation":"5062:13:2","nodeType":"VariableDeclaration","scope":1040,"src":"5054:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1034,"name":"uint256","nodeType":"ElementaryTypeName","src":"5054:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"oracle","nameLocation":"5089:6:2","nodeType":"VariableDeclaration","scope":1040,"src":"5081:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1036,"name":"address","nodeType":"ElementaryTypeName","src":"5081:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"fromEModeCategory","nameLocation":"5107:17:2","nodeType":"VariableDeclaration","scope":1040,"src":"5101:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1038,"name":"uint8","nodeType":"ElementaryTypeName","src":"5101:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"FinalizeTransferParams","nameLocation":"4892:22:2","nodeType":"StructDefinition","scope":1189,"src":"4885:244:2","visibility":"public"},{"canonicalName":"DataTypes.FlashloanParams","id":1072,"members":[{"constant":false,"id":1042,"mutability":"mutable","name":"receiverAddress","nameLocation":"5170:15:2","nodeType":"VariableDeclaration","scope":1072,"src":"5162:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1041,"name":"address","nodeType":"ElementaryTypeName","src":"5162:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1045,"mutability":"mutable","name":"assets","nameLocation":"5201:6:2","nodeType":"VariableDeclaration","scope":1072,"src":"5191:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1043,"name":"address","nodeType":"ElementaryTypeName","src":"5191:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1044,"nodeType":"ArrayTypeName","src":"5191:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1048,"mutability":"mutable","name":"amounts","nameLocation":"5223:7:2","nodeType":"VariableDeclaration","scope":1072,"src":"5213:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1046,"name":"uint256","nodeType":"ElementaryTypeName","src":"5213:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1047,"nodeType":"ArrayTypeName","src":"5213:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1051,"mutability":"mutable","name":"interestRateModes","nameLocation":"5246:17:2","nodeType":"VariableDeclaration","scope":1072,"src":"5236:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1049,"name":"uint256","nodeType":"ElementaryTypeName","src":"5236:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1050,"nodeType":"ArrayTypeName","src":"5236:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1053,"mutability":"mutable","name":"onBehalfOf","nameLocation":"5277:10:2","nodeType":"VariableDeclaration","scope":1072,"src":"5269:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1052,"name":"address","nodeType":"ElementaryTypeName","src":"5269:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1055,"mutability":"mutable","name":"params","nameLocation":"5299:6:2","nodeType":"VariableDeclaration","scope":1072,"src":"5293:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1054,"name":"bytes","nodeType":"ElementaryTypeName","src":"5293:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"referralCode","nameLocation":"5318:12:2","nodeType":"VariableDeclaration","scope":1072,"src":"5311:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1056,"name":"uint16","nodeType":"ElementaryTypeName","src":"5311:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5344:26:2","nodeType":"VariableDeclaration","scope":1072,"src":"5336:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"5336:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5384:21:2","nodeType":"VariableDeclaration","scope":1072,"src":"5376:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1060,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1063,"mutability":"mutable","name":"maxStableRateBorrowSizePercent","nameLocation":"5419:30:2","nodeType":"VariableDeclaration","scope":1072,"src":"5411:38:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1062,"name":"uint256","nodeType":"ElementaryTypeName","src":"5411:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1065,"mutability":"mutable","name":"reservesCount","nameLocation":"5463:13:2","nodeType":"VariableDeclaration","scope":1072,"src":"5455:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1064,"name":"uint256","nodeType":"ElementaryTypeName","src":"5455:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1067,"mutability":"mutable","name":"addressesProvider","nameLocation":"5490:17:2","nodeType":"VariableDeclaration","scope":1072,"src":"5482:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1066,"name":"address","nodeType":"ElementaryTypeName","src":"5482:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1069,"mutability":"mutable","name":"userEModeCategory","nameLocation":"5519:17:2","nodeType":"VariableDeclaration","scope":1072,"src":"5513:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1068,"name":"uint8","nodeType":"ElementaryTypeName","src":"5513:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1071,"mutability":"mutable","name":"isAuthorizedFlashBorrower","nameLocation":"5547:25:2","nodeType":"VariableDeclaration","scope":1072,"src":"5542:30:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1070,"name":"bool","nodeType":"ElementaryTypeName","src":"5542:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"FlashloanParams","nameLocation":"5140:15:2","nodeType":"StructDefinition","scope":1189,"src":"5133:444:2","visibility":"public"},{"canonicalName":"DataTypes.FlashloanSimpleParams","id":1087,"members":[{"constant":false,"id":1074,"mutability":"mutable","name":"receiverAddress","nameLocation":"5624:15:2","nodeType":"VariableDeclaration","scope":1087,"src":"5616:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1073,"name":"address","nodeType":"ElementaryTypeName","src":"5616:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1076,"mutability":"mutable","name":"asset","nameLocation":"5653:5:2","nodeType":"VariableDeclaration","scope":1087,"src":"5645:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1075,"name":"address","nodeType":"ElementaryTypeName","src":"5645:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1078,"mutability":"mutable","name":"amount","nameLocation":"5672:6:2","nodeType":"VariableDeclaration","scope":1087,"src":"5664:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1077,"name":"uint256","nodeType":"ElementaryTypeName","src":"5664:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1080,"mutability":"mutable","name":"params","nameLocation":"5690:6:2","nodeType":"VariableDeclaration","scope":1087,"src":"5684:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":1079,"name":"bytes","nodeType":"ElementaryTypeName","src":"5684:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1082,"mutability":"mutable","name":"referralCode","nameLocation":"5709:12:2","nodeType":"VariableDeclaration","scope":1087,"src":"5702:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1081,"name":"uint16","nodeType":"ElementaryTypeName","src":"5702:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1084,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5735:26:2","nodeType":"VariableDeclaration","scope":1087,"src":"5727:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1083,"name":"uint256","nodeType":"ElementaryTypeName","src":"5727:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1086,"mutability":"mutable","name":"flashLoanPremiumTotal","nameLocation":"5775:21:2","nodeType":"VariableDeclaration","scope":1087,"src":"5767:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1085,"name":"uint256","nodeType":"ElementaryTypeName","src":"5767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"FlashloanSimpleParams","nameLocation":"5588:21:2","nodeType":"StructDefinition","scope":1189,"src":"5581:220:2","visibility":"public"},{"canonicalName":"DataTypes.FlashLoanRepaymentParams","id":1100,"members":[{"constant":false,"id":1089,"mutability":"mutable","name":"amount","nameLocation":"5851:6:2","nodeType":"VariableDeclaration","scope":1100,"src":"5843:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1088,"name":"uint256","nodeType":"ElementaryTypeName","src":"5843:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1091,"mutability":"mutable","name":"totalPremium","nameLocation":"5871:12:2","nodeType":"VariableDeclaration","scope":1100,"src":"5863:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1090,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1093,"mutability":"mutable","name":"flashLoanPremiumToProtocol","nameLocation":"5897:26:2","nodeType":"VariableDeclaration","scope":1100,"src":"5889:34:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1092,"name":"uint256","nodeType":"ElementaryTypeName","src":"5889:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1095,"mutability":"mutable","name":"asset","nameLocation":"5937:5:2","nodeType":"VariableDeclaration","scope":1100,"src":"5929:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"5929:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1097,"mutability":"mutable","name":"receiverAddress","nameLocation":"5956:15:2","nodeType":"VariableDeclaration","scope":1100,"src":"5948:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1096,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"referralCode","nameLocation":"5984:12:2","nodeType":"VariableDeclaration","scope":1100,"src":"5977:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1098,"name":"uint16","nodeType":"ElementaryTypeName","src":"5977:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"FlashLoanRepaymentParams","nameLocation":"5812:24:2","nodeType":"StructDefinition","scope":1189,"src":"5805:196:2","visibility":"public"},{"canonicalName":"DataTypes.CalculateUserAccountDataParams","id":1112,"members":[{"constant":false,"id":1103,"mutability":"mutable","name":"userConfig","nameLocation":"6070:10:2","nodeType":"VariableDeclaration","scope":1112,"src":"6049:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$878_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":1102,"nodeType":"UserDefinedTypeName","pathNode":{"id":1101,"name":"UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":878,"src":"6049:20:2"},"referencedDeclaration":878,"src":"6049:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$878_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"reservesCount","nameLocation":"6094:13:2","nodeType":"VariableDeclaration","scope":1112,"src":"6086:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1104,"name":"uint256","nodeType":"ElementaryTypeName","src":"6086:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"user","nameLocation":"6121:4:2","nodeType":"VariableDeclaration","scope":1112,"src":"6113:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1106,"name":"address","nodeType":"ElementaryTypeName","src":"6113:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1109,"mutability":"mutable","name":"oracle","nameLocation":"6139:6:2","nodeType":"VariableDeclaration","scope":1112,"src":"6131:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1108,"name":"address","nodeType":"ElementaryTypeName","src":"6131:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1111,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6157:17:2","nodeType":"VariableDeclaration","scope":1112,"src":"6151:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1110,"name":"uint8","nodeType":"ElementaryTypeName","src":"6151:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"name":"CalculateUserAccountDataParams","nameLocation":"6012:30:2","nodeType":"StructDefinition","scope":1189,"src":"6005:174:2","visibility":"public"},{"canonicalName":"DataTypes.ValidateBorrowParams","id":1144,"members":[{"constant":false,"id":1115,"mutability":"mutable","name":"reserveCache","nameLocation":"6230:12:2","nodeType":"VariableDeclaration","scope":1144,"src":"6217:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$935_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":1114,"nodeType":"UserDefinedTypeName","pathNode":{"id":1113,"name":"ReserveCache","nodeType":"IdentifierPath","referencedDeclaration":935,"src":"6217:12:2"},"referencedDeclaration":935,"src":"6217:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$935_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":1118,"mutability":"mutable","name":"userConfig","nameLocation":"6269:10:2","nodeType":"VariableDeclaration","scope":1144,"src":"6248:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$878_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"},"typeName":{"id":1117,"nodeType":"UserDefinedTypeName","pathNode":{"id":1116,"name":"UserConfigurationMap","nodeType":"IdentifierPath","referencedDeclaration":878,"src":"6248:20:2"},"referencedDeclaration":878,"src":"6248:20:2","typeDescriptions":{"typeIdentifier":"t_struct$_UserConfigurationMap_$878_storage_ptr","typeString":"struct DataTypes.UserConfigurationMap"}},"visibility":"internal"},{"constant":false,"id":1120,"mutability":"mutable","name":"asset","nameLocation":"6293:5:2","nodeType":"VariableDeclaration","scope":1144,"src":"6285:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1119,"name":"address","nodeType":"ElementaryTypeName","src":"6285:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1122,"mutability":"mutable","name":"userAddress","nameLocation":"6312:11:2","nodeType":"VariableDeclaration","scope":1144,"src":"6304:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"6304:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"amount","nameLocation":"6337:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"6329:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1123,"name":"uint256","nodeType":"ElementaryTypeName","src":"6329:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1127,"mutability":"mutable","name":"interestRateMode","nameLocation":"6366:16:2","nodeType":"VariableDeclaration","scope":1144,"src":"6349:33:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"},"typeName":{"id":1126,"nodeType":"UserDefinedTypeName","pathNode":{"id":1125,"name":"InterestRateMode","nodeType":"IdentifierPath","referencedDeclaration":893,"src":"6349:16:2"},"referencedDeclaration":893,"src":"6349:16:2","typeDescriptions":{"typeIdentifier":"t_enum$_InterestRateMode_$893","typeString":"enum DataTypes.InterestRateMode"}},"visibility":"internal"},{"constant":false,"id":1129,"mutability":"mutable","name":"maxStableLoanPercent","nameLocation":"6396:20:2","nodeType":"VariableDeclaration","scope":1144,"src":"6388:28:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1128,"name":"uint256","nodeType":"ElementaryTypeName","src":"6388:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1131,"mutability":"mutable","name":"reservesCount","nameLocation":"6430:13:2","nodeType":"VariableDeclaration","scope":1144,"src":"6422:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1130,"name":"uint256","nodeType":"ElementaryTypeName","src":"6422:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1133,"mutability":"mutable","name":"oracle","nameLocation":"6457:6:2","nodeType":"VariableDeclaration","scope":1144,"src":"6449:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1132,"name":"address","nodeType":"ElementaryTypeName","src":"6449:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1135,"mutability":"mutable","name":"userEModeCategory","nameLocation":"6475:17:2","nodeType":"VariableDeclaration","scope":1144,"src":"6469:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1134,"name":"uint8","nodeType":"ElementaryTypeName","src":"6469:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1137,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6506:19:2","nodeType":"VariableDeclaration","scope":1144,"src":"6498:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1136,"name":"address","nodeType":"ElementaryTypeName","src":"6498:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1139,"mutability":"mutable","name":"isolationModeActive","nameLocation":"6536:19:2","nodeType":"VariableDeclaration","scope":1144,"src":"6531:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"6531:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"isolationModeCollateralAddress","nameLocation":"6569:30:2","nodeType":"VariableDeclaration","scope":1144,"src":"6561:38:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1140,"name":"address","nodeType":"ElementaryTypeName","src":"6561:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1143,"mutability":"mutable","name":"isolationModeDebtCeiling","nameLocation":"6613:24:2","nodeType":"VariableDeclaration","scope":1144,"src":"6605:32:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1142,"name":"uint256","nodeType":"ElementaryTypeName","src":"6605:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ValidateBorrowParams","nameLocation":"6190:20:2","nodeType":"StructDefinition","scope":1189,"src":"6183:459:2","visibility":"public"},{"canonicalName":"DataTypes.ValidateLiquidationCallParams","id":1154,"members":[{"constant":false,"id":1147,"mutability":"mutable","name":"debtReserveCache","nameLocation":"6702:16:2","nodeType":"VariableDeclaration","scope":1154,"src":"6689:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$935_storage_ptr","typeString":"struct DataTypes.ReserveCache"},"typeName":{"id":1146,"nodeType":"UserDefinedTypeName","pathNode":{"id":1145,"name":"ReserveCache","nodeType":"IdentifierPath","referencedDeclaration":935,"src":"6689:12:2"},"referencedDeclaration":935,"src":"6689:12:2","typeDescriptions":{"typeIdentifier":"t_struct$_ReserveCache_$935_storage_ptr","typeString":"struct DataTypes.ReserveCache"}},"visibility":"internal"},{"constant":false,"id":1149,"mutability":"mutable","name":"totalDebt","nameLocation":"6732:9:2","nodeType":"VariableDeclaration","scope":1154,"src":"6724:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1148,"name":"uint256","nodeType":"ElementaryTypeName","src":"6724:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1151,"mutability":"mutable","name":"healthFactor","nameLocation":"6755:12:2","nodeType":"VariableDeclaration","scope":1154,"src":"6747:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1150,"name":"uint256","nodeType":"ElementaryTypeName","src":"6747:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1153,"mutability":"mutable","name":"priceOracleSentinel","nameLocation":"6781:19:2","nodeType":"VariableDeclaration","scope":1154,"src":"6773:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1152,"name":"address","nodeType":"ElementaryTypeName","src":"6773:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"ValidateLiquidationCallParams","nameLocation":"6653:29:2","nodeType":"StructDefinition","scope":1189,"src":"6646:159:2","visibility":"public"},{"canonicalName":"DataTypes.CalculateInterestRatesParams","id":1173,"members":[{"constant":false,"id":1156,"mutability":"mutable","name":"unbacked","nameLocation":"6859:8:2","nodeType":"VariableDeclaration","scope":1173,"src":"6851:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1155,"name":"uint256","nodeType":"ElementaryTypeName","src":"6851:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"liquidityAdded","nameLocation":"6881:14:2","nodeType":"VariableDeclaration","scope":1173,"src":"6873:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1157,"name":"uint256","nodeType":"ElementaryTypeName","src":"6873:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"liquidityTaken","nameLocation":"6909:14:2","nodeType":"VariableDeclaration","scope":1173,"src":"6901:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"6901:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1162,"mutability":"mutable","name":"totalStableDebt","nameLocation":"6937:15:2","nodeType":"VariableDeclaration","scope":1173,"src":"6929:23:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1161,"name":"uint256","nodeType":"ElementaryTypeName","src":"6929:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1164,"mutability":"mutable","name":"totalVariableDebt","nameLocation":"6966:17:2","nodeType":"VariableDeclaration","scope":1173,"src":"6958:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1163,"name":"uint256","nodeType":"ElementaryTypeName","src":"6958:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1166,"mutability":"mutable","name":"averageStableBorrowRate","nameLocation":"6997:23:2","nodeType":"VariableDeclaration","scope":1173,"src":"6989:31:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1165,"name":"uint256","nodeType":"ElementaryTypeName","src":"6989:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1168,"mutability":"mutable","name":"reserveFactor","nameLocation":"7034:13:2","nodeType":"VariableDeclaration","scope":1173,"src":"7026:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7026:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1170,"mutability":"mutable","name":"reserve","nameLocation":"7061:7:2","nodeType":"VariableDeclaration","scope":1173,"src":"7053:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"7053:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"aToken","nameLocation":"7082:6:2","nodeType":"VariableDeclaration","scope":1173,"src":"7074:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"7074:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"CalculateInterestRatesParams","nameLocation":"6816:28:2","nodeType":"StructDefinition","scope":1189,"src":"6809:284:2","visibility":"public"},{"canonicalName":"DataTypes.InitReserveParams","id":1188,"members":[{"constant":false,"id":1175,"mutability":"mutable","name":"asset","nameLocation":"7136:5:2","nodeType":"VariableDeclaration","scope":1188,"src":"7128:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1174,"name":"address","nodeType":"ElementaryTypeName","src":"7128:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1177,"mutability":"mutable","name":"aTokenAddress","nameLocation":"7155:13:2","nodeType":"VariableDeclaration","scope":1188,"src":"7147:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1176,"name":"address","nodeType":"ElementaryTypeName","src":"7147:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1179,"mutability":"mutable","name":"stableDebtAddress","nameLocation":"7182:17:2","nodeType":"VariableDeclaration","scope":1188,"src":"7174:25:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"7174:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"variableDebtAddress","nameLocation":"7213:19:2","nodeType":"VariableDeclaration","scope":1188,"src":"7205:27:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1180,"name":"address","nodeType":"ElementaryTypeName","src":"7205:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1183,"mutability":"mutable","name":"interestRateStrategyAddress","nameLocation":"7246:27:2","nodeType":"VariableDeclaration","scope":1188,"src":"7238:35:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1182,"name":"address","nodeType":"ElementaryTypeName","src":"7238:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1185,"mutability":"mutable","name":"reservesCount","nameLocation":"7286:13:2","nodeType":"VariableDeclaration","scope":1188,"src":"7279:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1184,"name":"uint16","nodeType":"ElementaryTypeName","src":"7279:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1187,"mutability":"mutable","name":"maxNumberReserves","nameLocation":"7312:17:2","nodeType":"VariableDeclaration","scope":1188,"src":"7305:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1186,"name":"uint16","nodeType":"ElementaryTypeName","src":"7305:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"name":"InitReserveParams","nameLocation":"7104:17:2","nodeType":"StructDefinition","scope":1189,"src":"7097:237:2","visibility":"public"}],"scope":1190,"src":"62:7274:2","usedErrors":[]}],"src":"37:7300:2"},"id":2},"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[1498],"Context":[2120],"ERC165":[2347],"IAccessControl":[1571],"IERC165":[2359],"Strings":[2323]},"id":1499,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1191,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:3"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":1192,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":1572,"src":"133:30:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":1193,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":2121,"src":"164:30:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":1194,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":2324,"src":"195:30:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":1195,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1499,"sourceUnit":2348,"src":"226:43:3","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1197,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":2120,"src":"1841:7:3"},"id":1198,"nodeType":"InheritanceSpecifier","src":"1841:7:3"},{"baseName":{"id":1199,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":1571,"src":"1850:14:3"},"id":1200,"nodeType":"InheritanceSpecifier","src":"1850:14:3"},{"baseName":{"id":1201,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":2347,"src":"1866:6:3"},"id":1202,"nodeType":"InheritanceSpecifier","src":"1866:6:3"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":1196,"nodeType":"StructuredDocumentation","src":"271:1534:3","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":1498,"linearizedBaseContracts":[1498,2347,2359,1571,2120],"name":"AccessControl","nameLocation":"1824:13:3","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":1209,"members":[{"constant":false,"id":1206,"mutability":"mutable","name":"members","nameLocation":"1930:7:3","nodeType":"VariableDeclaration","scope":1209,"src":"1905:32:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":1205,"keyType":{"id":1203,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":1204,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":1208,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:3","nodeType":"VariableDeclaration","scope":1209,"src":"1947:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:3","nodeType":"StructDefinition","scope":1498,"src":"1879:92:3","visibility":"public"},{"constant":false,"id":1214,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:3","nodeType":"VariableDeclaration","scope":1498,"src":"1977:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$1209_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":1213,"keyType":{"id":1210,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$1209_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":1212,"nodeType":"UserDefinedTypeName","pathNode":{"id":1211,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":1209,"src":"1996:8:3"},"referencedDeclaration":1209,"src":"1996:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$1209_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":1217,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:3","nodeType":"VariableDeclaration","scope":1498,"src":"2027:49:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1215,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":1216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":1229,"nodeType":"Block","src":"2495:58:3","statements":[{"expression":{"arguments":[{"id":1223,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"2516:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1224,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"2522:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1225,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2522:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1222,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1314,"src":"2505:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:30:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1227,"nodeType":"ExpressionStatement","src":"2505:30:3"},{"id":1228,"nodeType":"PlaceholderStatement","src":"2545:1:3"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"2083:375:3","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":1230,"name":"onlyRole","nameLocation":"2472:8:3","nodeType":"ModifierDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"role","nameLocation":"2489:4:3","nodeType":"VariableDeclaration","scope":1230,"src":"2481:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1219,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:3"},"src":"2463:90:3","virtual":false,"visibility":"internal"},{"baseFunctions":[2346],"body":{"id":1251,"nodeType":"Block","src":"2711:111:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1244,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1239,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2728:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1241,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"2748:14:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1571_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$1571_$","typeString":"type(contract IAccessControl)"}],"id":1240,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2743:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1242,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2743:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$1571","typeString":"type(contract IAccessControl)"}},"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2743:32:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2728:47:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":1247,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1233,"src":"2803:11:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":1245,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2779:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$1498_$","typeString":"type(contract super AccessControl)"}},"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":2346,"src":"2779:23:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":1248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2779:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2728:87:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1238,"id":1250,"nodeType":"Return","src":"2721:94:3"}]},"documentation":{"id":1231,"nodeType":"StructuredDocumentation","src":"2559:56:3","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1252,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2629:17:3","nodeType":"FunctionDefinition","overrides":{"id":1235,"nodeType":"OverrideSpecifier","overrides":[],"src":"2687:8:3"},"parameters":{"id":1234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1233,"mutability":"mutable","name":"interfaceId","nameLocation":"2654:11:3","nodeType":"VariableDeclaration","scope":1252,"src":"2647:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1232,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2647:6:3","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2646:20:3"},"returnParameters":{"id":1238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1237,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"2705:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1236,"name":"bool","nodeType":"ElementaryTypeName","src":"2705:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2704:6:3"},"scope":1498,"src":"2620:202:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1538],"body":{"id":1270,"nodeType":"Block","src":"3001:53:3","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":1263,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"3018:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$1209_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1265,"indexExpression":{"id":1264,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1255,"src":"3025:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3018:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$1209_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1266,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"3018:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1268,"indexExpression":{"id":1267,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1257,"src":"3039:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3018:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1262,"id":1269,"nodeType":"Return","src":"3011:36:3"}]},"documentation":{"id":1253,"nodeType":"StructuredDocumentation","src":"2828:76:3","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2918:7:3","nodeType":"FunctionDefinition","overrides":{"id":1259,"nodeType":"OverrideSpecifier","overrides":[],"src":"2977:8:3"},"parameters":{"id":1258,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1255,"mutability":"mutable","name":"role","nameLocation":"2934:4:3","nodeType":"VariableDeclaration","scope":1271,"src":"2926:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1254,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2926:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1257,"mutability":"mutable","name":"account","nameLocation":"2948:7:3","nodeType":"VariableDeclaration","scope":1271,"src":"2940:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1256,"name":"address","nodeType":"ElementaryTypeName","src":"2940:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2925:31:3"},"returnParameters":{"id":1262,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"2995:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1260,"name":"bool","nodeType":"ElementaryTypeName","src":"2995:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2994:6:3"},"scope":1498,"src":"2909:145:3","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":1313,"nodeType":"Block","src":"3408:419:3","statements":[{"condition":{"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3422:23:3","subExpression":{"arguments":[{"id":1280,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3431:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1281,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3437:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1279,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"3423:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3423:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1312,"nodeType":"IfStatement","src":"3418:403:3","trueBody":{"id":1311,"nodeType":"Block","src":"3447:374:3","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":1289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3555:25:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"arguments":[{"id":1294,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"3634:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1293,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3626:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1292,"name":"uint160","nodeType":"ElementaryTypeName","src":"3626:7:3","typeDescriptions":{}}},"id":1295,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3626:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"hexValue":"3230","id":1296,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3644:2:3","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"},{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"}],"expression":{"id":1290,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3606:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2323_$","typeString":"type(library Strings)"}},"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"3606:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3606:41:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3673:19:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":1303,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"3746:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1302,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3738:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1301,"name":"uint256","nodeType":"ElementaryTypeName","src":"3738:7:3","typeDescriptions":{}}},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3738:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3753:2:3","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":1299,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2323,"src":"3718:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$2323_$","typeString":"type(library Strings)"}},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":2322,"src":"3718:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3718:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":1287,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3513:3:3","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3513:16:3","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3513:265:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3485:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1285,"name":"string","nodeType":"ElementaryTypeName","src":"3485:6:3","typeDescriptions":{}}},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3485:311:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1284,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3461:6:3","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3461:349:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1310,"nodeType":"ExpressionStatement","src":"3461:349:3"}]}}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"3060:270:3","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":1314,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3344:10:3","nodeType":"FunctionDefinition","parameters":{"id":1277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"role","nameLocation":"3363:4:3","nodeType":"VariableDeclaration","scope":1314,"src":"3355:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1273,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3355:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1276,"mutability":"mutable","name":"account","nameLocation":"3377:7:3","nodeType":"VariableDeclaration","scope":1314,"src":"3369:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"3369:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3354:31:3"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[],"src":"3408:0:3"},"scope":1498,"src":"3335:492:3","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[1546],"body":{"id":1328,"nodeType":"Block","src":"4091:46:3","statements":[{"expression":{"expression":{"baseExpression":{"id":1323,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"4108:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$1209_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1325,"indexExpression":{"id":1324,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1317,"src":"4115:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4108:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$1209_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1326,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"4108:22:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":1322,"id":1327,"nodeType":"Return","src":"4101:29:3"}]},"documentation":{"id":1315,"nodeType":"StructuredDocumentation","src":"3833:170:3","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1329,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4017:12:3","nodeType":"FunctionDefinition","overrides":{"id":1319,"nodeType":"OverrideSpecifier","overrides":[],"src":"4064:8:3"},"parameters":{"id":1318,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1317,"mutability":"mutable","name":"role","nameLocation":"4038:4:3","nodeType":"VariableDeclaration","scope":1329,"src":"4030:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1316,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4030:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4029:14:3"},"returnParameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1321,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1329,"src":"4082:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4082:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4081:9:3"},"scope":1498,"src":"4008:129:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1554],"body":{"id":1348,"nodeType":"Block","src":"4490:42:3","statements":[{"expression":{"arguments":[{"id":1344,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"4511:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1345,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1334,"src":"4517:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1343,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"4500:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4500:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1347,"nodeType":"ExpressionStatement","src":"4500:25:3"}]},"documentation":{"id":1330,"nodeType":"StructuredDocumentation","src":"4143:239:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1349,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":1339,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1332,"src":"4483:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1338,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"4470:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4470:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1341,"kind":"modifierInvocation","modifierName":{"id":1337,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":1230,"src":"4461:8:3"},"nodeType":"ModifierInvocation","src":"4461:28:3"}],"name":"grantRole","nameLocation":"4396:9:3","nodeType":"FunctionDefinition","overrides":{"id":1336,"nodeType":"OverrideSpecifier","overrides":[],"src":"4452:8:3"},"parameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1332,"mutability":"mutable","name":"role","nameLocation":"4414:4:3","nodeType":"VariableDeclaration","scope":1349,"src":"4406:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1331,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4406:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1334,"mutability":"mutable","name":"account","nameLocation":"4428:7:3","nodeType":"VariableDeclaration","scope":1349,"src":"4420:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4405:31:3"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"4490:0:3"},"scope":1498,"src":"4387:145:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1562],"body":{"id":1368,"nodeType":"Block","src":"4870:43:3","statements":[{"expression":{"arguments":[{"id":1364,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4892:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1365,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1354,"src":"4898:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1363,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"4880:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4880:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1367,"nodeType":"ExpressionStatement","src":"4880:26:3"}]},"documentation":{"id":1350,"nodeType":"StructuredDocumentation","src":"4538:223:3","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1369,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":1359,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1352,"src":"4863:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1358,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"4850:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4850:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":1361,"kind":"modifierInvocation","modifierName":{"id":1357,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":1230,"src":"4841:8:3"},"nodeType":"ModifierInvocation","src":"4841:28:3"}],"name":"revokeRole","nameLocation":"4775:10:3","nodeType":"FunctionDefinition","overrides":{"id":1356,"nodeType":"OverrideSpecifier","overrides":[],"src":"4832:8:3"},"parameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1352,"mutability":"mutable","name":"role","nameLocation":"4794:4:3","nodeType":"VariableDeclaration","scope":1369,"src":"4786:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1351,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4786:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1354,"mutability":"mutable","name":"account","nameLocation":"4808:7:3","nodeType":"VariableDeclaration","scope":1369,"src":"4800:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"4800:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4785:31:3"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[],"src":"4870:0:3"},"scope":1498,"src":"4766:147:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1570],"body":{"id":1391,"nodeType":"Block","src":"5481:137:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1379,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"5499:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1380,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"5510:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5510:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5499:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":1383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5524:49:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":1378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5491:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5491:83:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1385,"nodeType":"ExpressionStatement","src":"5491:83:3"},{"expression":{"arguments":[{"id":1387,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1372,"src":"5597:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1388,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1374,"src":"5603:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1386,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1497,"src":"5585:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1389,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5585:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1390,"nodeType":"ExpressionStatement","src":"5585:26:3"}]},"documentation":{"id":1370,"nodeType":"StructuredDocumentation","src":"4919:480:3","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":1392,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5413:12:3","nodeType":"FunctionDefinition","overrides":{"id":1376,"nodeType":"OverrideSpecifier","overrides":[],"src":"5472:8:3"},"parameters":{"id":1375,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1372,"mutability":"mutable","name":"role","nameLocation":"5434:4:3","nodeType":"VariableDeclaration","scope":1392,"src":"5426:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1371,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5426:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1374,"mutability":"mutable","name":"account","nameLocation":"5448:7:3","nodeType":"VariableDeclaration","scope":1392,"src":"5440:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1373,"name":"address","nodeType":"ElementaryTypeName","src":"5440:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5425:31:3"},"returnParameters":{"id":1377,"nodeType":"ParameterList","parameters":[],"src":"5481:0:3"},"scope":1498,"src":"5404:214:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":1405,"nodeType":"Block","src":"6325:42:3","statements":[{"expression":{"arguments":[{"id":1401,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1395,"src":"6346:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1402,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"6352:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1400,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"6335:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":1403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6335:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1404,"nodeType":"ExpressionStatement","src":"6335:25:3"}]},"documentation":{"id":1393,"nodeType":"StructuredDocumentation","src":"5624:628:3","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":1406,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6266:10:3","nodeType":"FunctionDefinition","parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1395,"mutability":"mutable","name":"role","nameLocation":"6285:4:3","nodeType":"VariableDeclaration","scope":1406,"src":"6277:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1394,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6277:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1397,"mutability":"mutable","name":"account","nameLocation":"6299:7:3","nodeType":"VariableDeclaration","scope":1406,"src":"6291:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1396,"name":"address","nodeType":"ElementaryTypeName","src":"6291:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6276:31:3"},"returnParameters":{"id":1399,"nodeType":"ParameterList","parameters":[],"src":"6325:0:3"},"scope":1498,"src":"6257:110:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1433,"nodeType":"Block","src":"6565:174:3","statements":[{"assignments":[1415],"declarations":[{"constant":false,"id":1415,"mutability":"mutable","name":"previousAdminRole","nameLocation":"6583:17:3","nodeType":"VariableDeclaration","scope":1433,"src":"6575:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1414,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6575:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1419,"initialValue":{"arguments":[{"id":1417,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"6616:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1416,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1329,"src":"6603:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":1418,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6603:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6575:46:3"},{"expression":{"id":1425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1420,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"6631:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$1209_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1422,"indexExpression":{"id":1421,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"6638:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6631:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$1209_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1423,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":1208,"src":"6631:22:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1424,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6656:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6631:34:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1426,"nodeType":"ExpressionStatement","src":"6631:34:3"},{"eventCall":{"arguments":[{"id":1428,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1409,"src":"6697:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1429,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1415,"src":"6703:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1430,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1411,"src":"6722:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":1427,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1510,"src":"6680:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":1431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6680:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1432,"nodeType":"EmitStatement","src":"6675:57:3"}]},"documentation":{"id":1407,"nodeType":"StructuredDocumentation","src":"6373:114:3","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":1434,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"6501:13:3","nodeType":"FunctionDefinition","parameters":{"id":1412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1409,"mutability":"mutable","name":"role","nameLocation":"6523:4:3","nodeType":"VariableDeclaration","scope":1434,"src":"6515:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1408,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6515:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1411,"mutability":"mutable","name":"adminRole","nameLocation":"6537:9:3","nodeType":"VariableDeclaration","scope":1434,"src":"6529:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1410,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6529:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6514:33:3"},"returnParameters":{"id":1413,"nodeType":"ParameterList","parameters":[],"src":"6565:0:3"},"scope":1498,"src":"6492:247:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1465,"nodeType":"Block","src":"6929:165:3","statements":[{"condition":{"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6943:23:3","subExpression":{"arguments":[{"id":1443,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"6952:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1444,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"6958:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1442,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"6944:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6944:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1464,"nodeType":"IfStatement","src":"6939:149:3","trueBody":{"id":1463,"nodeType":"Block","src":"6968:120:3","statements":[{"expression":{"id":1454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":1447,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"6982:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$1209_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1449,"indexExpression":{"id":1448,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"6989:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6982:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$1209_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1450,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"6982:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1452,"indexExpression":{"id":1451,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"7003:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6982:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7014:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6982:36:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1455,"nodeType":"ExpressionStatement","src":"6982:36:3"},{"eventCall":{"arguments":[{"id":1457,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1437,"src":"7049:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1458,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1439,"src":"7055:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1459,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"7064:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7064:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1456,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"7037:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7037:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1462,"nodeType":"EmitStatement","src":"7032:45:3"}]}}]},"documentation":{"id":1435,"nodeType":"StructuredDocumentation","src":"6745:111:3","text":" @dev Grants `role` to `account`.\n Internal function without access restriction."},"id":1466,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"6870:10:3","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1437,"mutability":"mutable","name":"role","nameLocation":"6889:4:3","nodeType":"VariableDeclaration","scope":1466,"src":"6881:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1436,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6881:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1439,"mutability":"mutable","name":"account","nameLocation":"6903:7:3","nodeType":"VariableDeclaration","scope":1466,"src":"6895:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1438,"name":"address","nodeType":"ElementaryTypeName","src":"6895:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6880:31:3"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[],"src":"6929:0:3"},"scope":1498,"src":"6861:233:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1496,"nodeType":"Block","src":"7288:165:3","statements":[{"condition":{"arguments":[{"id":1475,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"7310:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1476,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"7316:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1474,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"7302:7:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":1477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7302:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1495,"nodeType":"IfStatement","src":"7298:149:3","trueBody":{"id":1494,"nodeType":"Block","src":"7326:121:3","statements":[{"expression":{"id":1485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":1478,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1214,"src":"7340:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$1209_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":1480,"indexExpression":{"id":1479,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"7347:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7340:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$1209_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":1481,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":1206,"src":"7340:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1483,"indexExpression":{"id":1482,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"7361:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7340:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7372:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7340:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1486,"nodeType":"ExpressionStatement","src":"7340:37:3"},{"eventCall":{"arguments":[{"id":1488,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1469,"src":"7408:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1489,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1471,"src":"7414:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":1490,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2110,"src":"7423:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7423:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1487,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"7396:11:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7396:40:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1493,"nodeType":"EmitStatement","src":"7391:45:3"}]}}]},"documentation":{"id":1467,"nodeType":"StructuredDocumentation","src":"7100:114:3","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction."},"id":1497,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7228:11:3","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"role","nameLocation":"7248:4:3","nodeType":"VariableDeclaration","scope":1497,"src":"7240:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1468,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7240:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"account","nameLocation":"7262:7:3","nodeType":"VariableDeclaration","scope":1497,"src":"7254:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1470,"name":"address","nodeType":"ElementaryTypeName","src":"7254:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7239:31:3"},"returnParameters":{"id":1473,"nodeType":"ParameterList","parameters":[],"src":"7288:0:3"},"scope":1498,"src":"7219:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1499,"src":"1806:5649:3","usedErrors":[]}],"src":"108:7348:3"},"id":3},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[1571]},"id":1572,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1500,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":1501,"nodeType":"StructuredDocumentation","src":"119:89:4","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":1571,"linearizedBaseContracts":[1571],"name":"IAccessControl","nameLocation":"219:14:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1502,"nodeType":"StructuredDocumentation","src":"240:292:4","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":1510,"name":"RoleAdminChanged","nameLocation":"543:16:4","nodeType":"EventDefinition","parameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1504,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:4","nodeType":"VariableDeclaration","scope":1510,"src":"560:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1503,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1506,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:4","nodeType":"VariableDeclaration","scope":1510,"src":"582:33:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1505,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1508,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:4","nodeType":"VariableDeclaration","scope":1510,"src":"617:28:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1507,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:4"},"src":"537:110:4"},{"anonymous":false,"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"653:212:4","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":1519,"name":"RoleGranted","nameLocation":"876:11:4","nodeType":"EventDefinition","parameters":{"id":1518,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:4","nodeType":"VariableDeclaration","scope":1519,"src":"888:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1512,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1515,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:4","nodeType":"VariableDeclaration","scope":1519,"src":"910:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1514,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1517,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:4","nodeType":"VariableDeclaration","scope":1519,"src":"935:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1516,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:4"},"src":"870:89:4"},{"anonymous":false,"documentation":{"id":1520,"nodeType":"StructuredDocumentation","src":"965:275:4","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":1528,"name":"RoleRevoked","nameLocation":"1251:11:4","nodeType":"EventDefinition","parameters":{"id":1527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:4","nodeType":"VariableDeclaration","scope":1528,"src":"1263:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1521,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1524,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:4","nodeType":"VariableDeclaration","scope":1528,"src":"1285:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1523,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1526,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:4","nodeType":"VariableDeclaration","scope":1528,"src":"1310:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:4"},"src":"1245:89:4"},{"documentation":{"id":1529,"nodeType":"StructuredDocumentation","src":"1340:76:4","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":1538,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:4","nodeType":"FunctionDefinition","parameters":{"id":1534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1531,"mutability":"mutable","name":"role","nameLocation":"1446:4:4","nodeType":"VariableDeclaration","scope":1538,"src":"1438:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1530,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1533,"mutability":"mutable","name":"account","nameLocation":"1460:7:4","nodeType":"VariableDeclaration","scope":1538,"src":"1452:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1532,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:4"},"returnParameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1538,"src":"1492:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1535,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:4"},"scope":1571,"src":"1421:77:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1539,"nodeType":"StructuredDocumentation","src":"1504:184:4","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":1546,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:4","nodeType":"FunctionDefinition","parameters":{"id":1542,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1541,"mutability":"mutable","name":"role","nameLocation":"1723:4:4","nodeType":"VariableDeclaration","scope":1546,"src":"1715:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1540,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:4"},"returnParameters":{"id":1545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1544,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1546,"src":"1752:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1543,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:4"},"scope":1571,"src":"1693:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1547,"nodeType":"StructuredDocumentation","src":"1767:239:4","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":1554,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:4","nodeType":"FunctionDefinition","parameters":{"id":1552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1549,"mutability":"mutable","name":"role","nameLocation":"2038:4:4","nodeType":"VariableDeclaration","scope":1554,"src":"2030:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1548,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1551,"mutability":"mutable","name":"account","nameLocation":"2052:7:4","nodeType":"VariableDeclaration","scope":1554,"src":"2044:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1550,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:4"},"returnParameters":{"id":1553,"nodeType":"ParameterList","parameters":[],"src":"2069:0:4"},"scope":1571,"src":"2011:59:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1555,"nodeType":"StructuredDocumentation","src":"2076:223:4","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":1562,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:4","nodeType":"FunctionDefinition","parameters":{"id":1560,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"role","nameLocation":"2332:4:4","nodeType":"VariableDeclaration","scope":1562,"src":"2324:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1556,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"account","nameLocation":"2346:7:4","nodeType":"VariableDeclaration","scope":1562,"src":"2338:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1558,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:4"},"returnParameters":{"id":1561,"nodeType":"ParameterList","parameters":[],"src":"2363:0:4"},"scope":1571,"src":"2304:60:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"2370:480:4","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":1570,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:4","nodeType":"FunctionDefinition","parameters":{"id":1568,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"role","nameLocation":"2885:4:4","nodeType":"VariableDeclaration","scope":1570,"src":"2877:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1564,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1567,"mutability":"mutable","name":"account","nameLocation":"2899:7:4","nodeType":"VariableDeclaration","scope":1570,"src":"2891:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1566,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:4"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[],"src":"2916:0:4"},"scope":1571,"src":"2855:62:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1572,"src":"209:2710:4","usedErrors":[]}],"src":"94:2826:4"},"id":4},"@openzeppelin/contracts/proxy/Clones.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","exportedSymbols":{"Clones":[1651]},"id":1652,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1573,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"85:23:5"},{"abstract":false,"baseContracts":[],"canonicalName":"Clones","contractDependencies":[],"contractKind":"library","documentation":{"id":1574,"nodeType":"StructuredDocumentation","src":"110:629:5","text":" @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\n deploying minimal proxy contracts, also known as \"clones\".\n > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\n > a minimal bytecode implementation that delegates all calls to a known, fixed address.\n The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\n (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\n deterministic method.\n _Available since v3.4._"},"fullyImplemented":true,"id":1651,"linearizedBaseContracts":[1651],"name":"Clones","nameLocation":"748:6:5","nodeType":"ContractDefinition","nodes":[{"body":{"id":1593,"nodeType":"Block","src":"1033:440:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1052:348:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1066:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1083:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1077:5:5"},"nodeType":"YulFunctionCall","src":"1077:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1070:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1108:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1113:66:5","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1101:6:5"},"nodeType":"YulFunctionCall","src":"1101:79:5"},"nodeType":"YulExpressionStatement","src":"1101:79:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1204:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1209:4:5","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1200:3:5"},"nodeType":"YulFunctionCall","src":"1200:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1220:4:5","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"1226:14:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"1216:3:5"},"nodeType":"YulFunctionCall","src":"1216:25:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1193:6:5"},"nodeType":"YulFunctionCall","src":"1193:49:5"},"nodeType":"YulExpressionStatement","src":"1193:49:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"1266:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1271:4:5","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1262:3:5"},"nodeType":"YulFunctionCall","src":"1262:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"1278:66:5","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1255:6:5"},"nodeType":"YulFunctionCall","src":"1255:90:5"},"nodeType":"YulExpressionStatement","src":"1255:90:5"},{"nodeType":"YulAssignment","src":"1358:32:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1377:1:5","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"1380:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"1385:4:5","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"1370:6:5"},"nodeType":"YulFunctionCall","src":"1370:20:5"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"1358:8:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1577,"isOffset":false,"isSlot":false,"src":"1226:14:5","valueSize":1},{"declaration":1580,"isOffset":false,"isSlot":false,"src":"1358:8:5","valueSize":1}],"id":1582,"nodeType":"InlineAssembly","src":"1043:357:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1589,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1584,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1580,"src":"1417:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1587,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1437:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1586,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1429:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1585,"name":"address","nodeType":"ElementaryTypeName","src":"1429:7:5","typeDescriptions":{}}},"id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1429:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1417:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a20637265617465206661696c6564","id":1590,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1441:24:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""},"value":"ERC1167: create failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335","typeString":"literal_string \"ERC1167: create failed\""}],"id":1583,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1409:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1409:57:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1592,"nodeType":"ExpressionStatement","src":"1409:57:5"}]},"documentation":{"id":1575,"nodeType":"StructuredDocumentation","src":"761:192:5","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create opcode, which should never revert."},"id":1594,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"967:5:5","nodeType":"FunctionDefinition","parameters":{"id":1578,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1577,"mutability":"mutable","name":"implementation","nameLocation":"981:14:5","nodeType":"VariableDeclaration","scope":1594,"src":"973:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1576,"name":"address","nodeType":"ElementaryTypeName","src":"973:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"972:24:5"},"returnParameters":{"id":1581,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1580,"mutability":"mutable","name":"instance","nameLocation":"1023:8:5","nodeType":"VariableDeclaration","scope":1594,"src":"1015:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1579,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1014:18:5"},"scope":1651,"src":"958:515:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1615,"nodeType":"Block","src":"1950:448:5","statements":[{"AST":{"nodeType":"YulBlock","src":"1969:355:5","statements":[{"nodeType":"YulVariableDeclaration","src":"1983:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2000:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1994:5:5"},"nodeType":"YulFunctionCall","src":"1994:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"1987:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2025:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2030:66:5","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2018:6:5"},"nodeType":"YulFunctionCall","src":"2018:79:5"},"nodeType":"YulExpressionStatement","src":"2018:79:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2121:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2126:4:5","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2117:3:5"},"nodeType":"YulFunctionCall","src":"2117:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2137:4:5","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2143:14:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2133:3:5"},"nodeType":"YulFunctionCall","src":"2133:25:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2110:6:5"},"nodeType":"YulFunctionCall","src":"2110:49:5"},"nodeType":"YulExpressionStatement","src":"2110:49:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2183:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2188:4:5","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2179:3:5"},"nodeType":"YulFunctionCall","src":"2179:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"2195:66:5","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2172:6:5"},"nodeType":"YulFunctionCall","src":"2172:90:5"},"nodeType":"YulExpressionStatement","src":"2172:90:5"},{"nodeType":"YulAssignment","src":"2275:39:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2295:1:5","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"2298:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2303:4:5","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"2309:4:5"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"2287:7:5"},"nodeType":"YulFunctionCall","src":"2287:27:5"},"variableNames":[{"name":"instance","nodeType":"YulIdentifier","src":"2275:8:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1597,"isOffset":false,"isSlot":false,"src":"2143:14:5","valueSize":1},{"declaration":1602,"isOffset":false,"isSlot":false,"src":"2275:8:5","valueSize":1},{"declaration":1599,"isOffset":false,"isSlot":false,"src":"2309:4:5","valueSize":1}],"id":1604,"nodeType":"InlineAssembly","src":"1960:364:5"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1606,"name":"instance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1602,"src":"2341:8:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2361:1:5","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1608,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2353:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1607,"name":"address","nodeType":"ElementaryTypeName","src":"2353:7:5","typeDescriptions":{}}},"id":1610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2353:10:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2341:22:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455243313136373a2063726561746532206661696c6564","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2365:25:5","typeDescriptions":{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""},"value":"ERC1167: create2 failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4ec050e530ce66e7658278ab7a4e4a2f19225159c48fc52eb249bd268e755d73","typeString":"literal_string \"ERC1167: create2 failed\""}],"id":1605,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2333:7:5","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2333:58:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1614,"nodeType":"ExpressionStatement","src":"2333:58:5"}]},"documentation":{"id":1595,"nodeType":"StructuredDocumentation","src":"1479:364:5","text":" @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\n This function uses the create2 opcode and a `salt` to deterministically deploy\n the clone. Using the same `implementation` and `salt` multiple time will revert, since\n the clones cannot be deployed twice at the same address."},"id":1616,"implemented":true,"kind":"function","modifiers":[],"name":"cloneDeterministic","nameLocation":"1857:18:5","nodeType":"FunctionDefinition","parameters":{"id":1600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1597,"mutability":"mutable","name":"implementation","nameLocation":"1884:14:5","nodeType":"VariableDeclaration","scope":1616,"src":"1876:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1596,"name":"address","nodeType":"ElementaryTypeName","src":"1876:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1599,"mutability":"mutable","name":"salt","nameLocation":"1908:4:5","nodeType":"VariableDeclaration","scope":1616,"src":"1900:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1598,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1900:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1875:38:5"},"returnParameters":{"id":1603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1602,"mutability":"mutable","name":"instance","nameLocation":"1940:8:5","nodeType":"VariableDeclaration","scope":1616,"src":"1932:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1601,"name":"address","nodeType":"ElementaryTypeName","src":"1932:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1931:18:5"},"scope":1651,"src":"1848:550:5","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1629,"nodeType":"Block","src":"2673:539:5","statements":[{"AST":{"nodeType":"YulBlock","src":"2692:514:5","statements":[{"nodeType":"YulVariableDeclaration","src":"2706:22:5","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2723:4:5","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2717:5:5"},"nodeType":"YulFunctionCall","src":"2717:11:5"},"variables":[{"name":"ptr","nodeType":"YulTypedName","src":"2710:3:5","type":""}]},{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2748:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2753:66:5","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2741:6:5"},"nodeType":"YulFunctionCall","src":"2741:79:5"},"nodeType":"YulExpressionStatement","src":"2741:79:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2844:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2849:4:5","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2840:3:5"},"nodeType":"YulFunctionCall","src":"2840:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2860:4:5","type":"","value":"0x60"},{"name":"implementation","nodeType":"YulIdentifier","src":"2866:14:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2856:3:5"},"nodeType":"YulFunctionCall","src":"2856:25:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2833:6:5"},"nodeType":"YulFunctionCall","src":"2833:49:5"},"nodeType":"YulExpressionStatement","src":"2833:49:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2906:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"2911:4:5","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2902:3:5"},"nodeType":"YulFunctionCall","src":"2902:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"2918:66:5","type":"","value":"0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2895:6:5"},"nodeType":"YulFunctionCall","src":"2895:90:5"},"nodeType":"YulExpressionStatement","src":"2895:90:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3009:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3014:4:5","type":"","value":"0x38"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3005:3:5"},"nodeType":"YulFunctionCall","src":"3005:14:5"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3025:4:5","type":"","value":"0x60"},{"name":"deployer","nodeType":"YulIdentifier","src":"3031:8:5"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"3021:3:5"},"nodeType":"YulFunctionCall","src":"3021:19:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2998:6:5"},"nodeType":"YulFunctionCall","src":"2998:43:5"},"nodeType":"YulExpressionStatement","src":"2998:43:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3065:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3070:4:5","type":"","value":"0x4c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3061:3:5"},"nodeType":"YulFunctionCall","src":"3061:14:5"},{"name":"salt","nodeType":"YulIdentifier","src":"3077:4:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3054:6:5"},"nodeType":"YulFunctionCall","src":"3054:28:5"},"nodeType":"YulExpressionStatement","src":"3054:28:5"},{"expression":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3106:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3111:4:5","type":"","value":"0x6c"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3102:3:5"},"nodeType":"YulFunctionCall","src":"3102:14:5"},{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3128:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3133:4:5","type":"","value":"0x37"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3118:9:5"},"nodeType":"YulFunctionCall","src":"3118:20:5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3095:6:5"},"nodeType":"YulFunctionCall","src":"3095:44:5"},"nodeType":"YulExpressionStatement","src":"3095:44:5"},{"nodeType":"YulAssignment","src":"3152:44:5","value":{"arguments":[{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3179:3:5"},{"kind":"number","nodeType":"YulLiteral","src":"3184:4:5","type":"","value":"0x37"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3175:3:5"},"nodeType":"YulFunctionCall","src":"3175:14:5"},{"kind":"number","nodeType":"YulLiteral","src":"3191:4:5","type":"","value":"0x55"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"3165:9:5"},"nodeType":"YulFunctionCall","src":"3165:31:5"},"variableNames":[{"name":"predicted","nodeType":"YulIdentifier","src":"3152:9:5"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1623,"isOffset":false,"isSlot":false,"src":"3031:8:5","valueSize":1},{"declaration":1619,"isOffset":false,"isSlot":false,"src":"2866:14:5","valueSize":1},{"declaration":1626,"isOffset":false,"isSlot":false,"src":"3152:9:5","valueSize":1},{"declaration":1621,"isOffset":false,"isSlot":false,"src":"3077:4:5","valueSize":1}],"id":1628,"nodeType":"InlineAssembly","src":"2683:523:5"}]},"documentation":{"id":1617,"nodeType":"StructuredDocumentation","src":"2404:99:5","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":1630,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"2517:27:5","nodeType":"FunctionDefinition","parameters":{"id":1624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1619,"mutability":"mutable","name":"implementation","nameLocation":"2562:14:5","nodeType":"VariableDeclaration","scope":1630,"src":"2554:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1618,"name":"address","nodeType":"ElementaryTypeName","src":"2554:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1621,"mutability":"mutable","name":"salt","nameLocation":"2594:4:5","nodeType":"VariableDeclaration","scope":1630,"src":"2586:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1620,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2586:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1623,"mutability":"mutable","name":"deployer","nameLocation":"2616:8:5","nodeType":"VariableDeclaration","scope":1630,"src":"2608:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1622,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2544:86:5"},"returnParameters":{"id":1627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1626,"mutability":"mutable","name":"predicted","nameLocation":"2662:9:5","nodeType":"VariableDeclaration","scope":1630,"src":"2654:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1625,"name":"address","nodeType":"ElementaryTypeName","src":"2654:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2653:19:5"},"scope":1651,"src":"2508:704:5","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1649,"nodeType":"Block","src":"3467:88:5","statements":[{"expression":{"arguments":[{"id":1641,"name":"implementation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1633,"src":"3512:14:5","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1642,"name":"salt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1635,"src":"3528:4:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"id":1645,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3542:4:5","typeDescriptions":{"typeIdentifier":"t_contract$_Clones_$1651","typeString":"library Clones"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Clones_$1651","typeString":"library Clones"}],"id":1644,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3534:7:5","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1643,"name":"address","nodeType":"ElementaryTypeName","src":"3534:7:5","typeDescriptions":{}}},"id":1646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3534:13:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1640,"name":"predictDeterministicAddress","nodeType":"Identifier","overloadedDeclarations":[1630,1650],"referencedDeclaration":1630,"src":"3484:27:5","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$_t_bytes32_$_t_address_$returns$_t_address_$","typeString":"function (address,bytes32,address) pure returns (address)"}},"id":1647,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3484:64:5","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1639,"id":1648,"nodeType":"Return","src":"3477:71:5"}]},"documentation":{"id":1631,"nodeType":"StructuredDocumentation","src":"3218:99:5","text":" @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}."},"id":1650,"implemented":true,"kind":"function","modifiers":[],"name":"predictDeterministicAddress","nameLocation":"3331:27:5","nodeType":"FunctionDefinition","parameters":{"id":1636,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1633,"mutability":"mutable","name":"implementation","nameLocation":"3367:14:5","nodeType":"VariableDeclaration","scope":1650,"src":"3359:22:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1632,"name":"address","nodeType":"ElementaryTypeName","src":"3359:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1635,"mutability":"mutable","name":"salt","nameLocation":"3391:4:5","nodeType":"VariableDeclaration","scope":1650,"src":"3383:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1634,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3383:7:5","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3358:38:5"},"returnParameters":{"id":1639,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1638,"mutability":"mutable","name":"predicted","nameLocation":"3452:9:5","nodeType":"VariableDeclaration","scope":1650,"src":"3444:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1637,"name":"address","nodeType":"ElementaryTypeName","src":"3444:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3443:19:5"},"scope":1651,"src":"3322:233:5","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":1652,"src":"740:2817:5","usedErrors":[]}],"src":"85:3473:5"},"id":5},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","exportedSymbols":{"Address":[2098],"Initializable":[1725]},"id":1726,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1653,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"113:23:6"},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":1654,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1726,"sourceUnit":2099,"src":"138:33:6","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[],"canonicalName":"Initializable","contractDependencies":[],"contractKind":"contract","documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"173:1497:6","text":" @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\n initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() initializer {}\n ```\n ===="},"fullyImplemented":true,"id":1725,"linearizedBaseContracts":[1725],"name":"Initializable","nameLocation":"1689:13:6","nodeType":"ContractDefinition","nodes":[{"constant":false,"documentation":{"id":1656,"nodeType":"StructuredDocumentation","src":"1709:73:6","text":" @dev Indicates that the contract has been initialized."},"id":1658,"mutability":"mutable","name":"_initialized","nameLocation":"1800:12:6","nodeType":"VariableDeclaration","scope":1725,"src":"1787:25:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1657,"name":"bool","nodeType":"ElementaryTypeName","src":"1787:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"constant":false,"documentation":{"id":1659,"nodeType":"StructuredDocumentation","src":"1819:91:6","text":" @dev Indicates that the contract is in the process of being initialized."},"id":1661,"mutability":"mutable","name":"_initializing","nameLocation":"1928:13:6","nodeType":"VariableDeclaration","scope":1725,"src":"1915:26:6","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1660,"name":"bool","nodeType":"ElementaryTypeName","src":"1915:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"private"},{"body":{"id":1698,"nodeType":"Block","src":"2069:637:6","statements":[{"expression":{"arguments":[{"condition":{"id":1665,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2358:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1669,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2393:13:6","subExpression":{"id":1668,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2394:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"2358:48:6","trueExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1666,"name":"_isConstructor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"2374:14:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_bool_$","typeString":"function () view returns (bool)"}},"id":1667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2374:16:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a6564","id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2408:48:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""},"value":"Initializable: contract is already initialized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759","typeString":"literal_string \"Initializable: contract is already initialized\""}],"id":1664,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2350:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2350:107:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1673,"nodeType":"ExpressionStatement","src":"2350:107:6"},{"assignments":[1675],"declarations":[{"constant":false,"id":1675,"mutability":"mutable","name":"isTopLevelCall","nameLocation":"2473:14:6","nodeType":"VariableDeclaration","scope":1698,"src":"2468:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1674,"name":"bool","nodeType":"ElementaryTypeName","src":"2468:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":1678,"initialValue":{"id":1677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2490:14:6","subExpression":{"id":1676,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2491:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"VariableDeclarationStatement","src":"2468:36:6"},{"condition":{"id":1679,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"2518:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1689,"nodeType":"IfStatement","src":"2514:98:6","trueBody":{"id":1688,"nodeType":"Block","src":"2534:78:6","statements":[{"expression":{"id":1682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1680,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2548:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1681,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2564:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2548:20:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1683,"nodeType":"ExpressionStatement","src":"2548:20:6"},{"expression":{"id":1686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1684,"name":"_initialized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1658,"src":"2582:12:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2597:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"2582:19:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1687,"nodeType":"ExpressionStatement","src":"2582:19:6"}]}},{"id":1690,"nodeType":"PlaceholderStatement","src":"2622:1:6"},{"condition":{"id":1691,"name":"isTopLevelCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1675,"src":"2638:14:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1697,"nodeType":"IfStatement","src":"2634:66:6","trueBody":{"id":1696,"nodeType":"Block","src":"2654:46:6","statements":[{"expression":{"id":1694,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1692,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2668:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1693,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2684:5:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"2668:21:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"ExpressionStatement","src":"2668:21:6"}]}}]},"documentation":{"id":1662,"nodeType":"StructuredDocumentation","src":"1948:93:6","text":" @dev Modifier to protect an initializer function from being invoked twice."},"id":1699,"name":"initializer","nameLocation":"2055:11:6","nodeType":"ModifierDefinition","parameters":{"id":1663,"nodeType":"ParameterList","parameters":[],"src":"2066:2:6"},"src":"2046:660:6","virtual":false,"visibility":"internal"},{"body":{"id":1708,"nodeType":"Block","src":"2923:97:6","statements":[{"expression":{"arguments":[{"id":1703,"name":"_initializing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1661,"src":"2941:13:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e697469616c697a61626c653a20636f6e7472616374206973206e6f7420696e697469616c697a696e67","id":1704,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2956:45:6","typeDescriptions":{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""},"value":"Initializable: contract is not initializing"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d688db918bb9dd50354922faa108595679886fe9ff08046ad1ffe30aaea55f8b","typeString":"literal_string \"Initializable: contract is not initializing\""}],"id":1702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2933:7:6","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2933:69:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1706,"nodeType":"ExpressionStatement","src":"2933:69:6"},{"id":1707,"nodeType":"PlaceholderStatement","src":"3012:1:6"}]},"documentation":{"id":1700,"nodeType":"StructuredDocumentation","src":"2712:178:6","text":" @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} modifier, directly or indirectly."},"id":1709,"name":"onlyInitializing","nameLocation":"2904:16:6","nodeType":"ModifierDefinition","parameters":{"id":1701,"nodeType":"ParameterList","parameters":[],"src":"2920:2:6"},"src":"2895:125:6","virtual":false,"visibility":"internal"},{"body":{"id":1723,"nodeType":"Block","src":"3080:58:6","statements":[{"expression":{"id":1721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3097:34:6","subExpression":{"arguments":[{"arguments":[{"id":1718,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3125:4:6","typeDescriptions":{"typeIdentifier":"t_contract$_Initializable_$1725","typeString":"contract Initializable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Initializable_$1725","typeString":"contract Initializable"}],"id":1717,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3117:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1716,"name":"address","nodeType":"ElementaryTypeName","src":"3117:7:6","typeDescriptions":{}}},"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3117:13:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1714,"name":"Address","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2098,"src":"3098:7:6","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Address_$2098_$","typeString":"type(library Address)"}},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"isContract","nodeType":"MemberAccess","referencedDeclaration":1821,"src":"3098:18:6","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1720,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3098:33:6","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1713,"id":1722,"nodeType":"Return","src":"3090:41:6"}]},"id":1724,"implemented":true,"kind":"function","modifiers":[],"name":"_isConstructor","nameLocation":"3035:14:6","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[],"src":"3049:2:6"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1712,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1724,"src":"3074:4:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1711,"name":"bool","nodeType":"ElementaryTypeName","src":"3074:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3073:6:6"},"scope":1725,"src":"3026:112:6","stateMutability":"view","virtual":false,"visibility":"private"}],"scope":1726,"src":"1671:1469:6","usedErrors":[]}],"src":"113:3028:6"},"id":6},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1803]},"id":1804,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1727,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:7"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1728,"nodeType":"StructuredDocumentation","src":"131:70:7","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1803,"linearizedBaseContracts":[1803],"name":"IERC20","nameLocation":"212:6:7","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1729,"nodeType":"StructuredDocumentation","src":"225:66:7","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1734,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"305:11:7","nodeType":"FunctionDefinition","parameters":{"id":1730,"nodeType":"ParameterList","parameters":[],"src":"316:2:7"},"returnParameters":{"id":1733,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1732,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1734,"src":"342:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1731,"name":"uint256","nodeType":"ElementaryTypeName","src":"342:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"341:9:7"},"scope":1803,"src":"296:55:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1735,"nodeType":"StructuredDocumentation","src":"357:72:7","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1742,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"443:9:7","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1737,"mutability":"mutable","name":"account","nameLocation":"461:7:7","nodeType":"VariableDeclaration","scope":1742,"src":"453:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1736,"name":"address","nodeType":"ElementaryTypeName","src":"453:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"452:17:7"},"returnParameters":{"id":1741,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1742,"src":"493:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1739,"name":"uint256","nodeType":"ElementaryTypeName","src":"493:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"492:9:7"},"scope":1803,"src":"434:68:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1743,"nodeType":"StructuredDocumentation","src":"508:202:7","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1752,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"724:8:7","nodeType":"FunctionDefinition","parameters":{"id":1748,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1745,"mutability":"mutable","name":"to","nameLocation":"741:2:7","nodeType":"VariableDeclaration","scope":1752,"src":"733:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1744,"name":"address","nodeType":"ElementaryTypeName","src":"733:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1747,"mutability":"mutable","name":"amount","nameLocation":"753:6:7","nodeType":"VariableDeclaration","scope":1752,"src":"745:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1746,"name":"uint256","nodeType":"ElementaryTypeName","src":"745:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"732:28:7"},"returnParameters":{"id":1751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1750,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1752,"src":"779:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1749,"name":"bool","nodeType":"ElementaryTypeName","src":"779:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"778:6:7"},"scope":1803,"src":"715:70:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1753,"nodeType":"StructuredDocumentation","src":"791:264:7","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1762,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1069:9:7","nodeType":"FunctionDefinition","parameters":{"id":1758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1755,"mutability":"mutable","name":"owner","nameLocation":"1087:5:7","nodeType":"VariableDeclaration","scope":1762,"src":"1079:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1754,"name":"address","nodeType":"ElementaryTypeName","src":"1079:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1757,"mutability":"mutable","name":"spender","nameLocation":"1102:7:7","nodeType":"VariableDeclaration","scope":1762,"src":"1094:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1756,"name":"address","nodeType":"ElementaryTypeName","src":"1094:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1078:32:7"},"returnParameters":{"id":1761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1762,"src":"1134:7:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1759,"name":"uint256","nodeType":"ElementaryTypeName","src":"1134:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1133:9:7"},"scope":1803,"src":"1060:83:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1763,"nodeType":"StructuredDocumentation","src":"1149:642:7","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1772,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"1805:7:7","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1765,"mutability":"mutable","name":"spender","nameLocation":"1821:7:7","nodeType":"VariableDeclaration","scope":1772,"src":"1813:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1764,"name":"address","nodeType":"ElementaryTypeName","src":"1813:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1767,"mutability":"mutable","name":"amount","nameLocation":"1838:6:7","nodeType":"VariableDeclaration","scope":1772,"src":"1830:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1766,"name":"uint256","nodeType":"ElementaryTypeName","src":"1830:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:33:7"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1772,"src":"1864:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1769,"name":"bool","nodeType":"ElementaryTypeName","src":"1864:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1863:6:7"},"scope":1803,"src":"1796:74:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"1876:287:7","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1784,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2177:12:7","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1775,"mutability":"mutable","name":"from","nameLocation":"2207:4:7","nodeType":"VariableDeclaration","scope":1784,"src":"2199:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1774,"name":"address","nodeType":"ElementaryTypeName","src":"2199:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1777,"mutability":"mutable","name":"to","nameLocation":"2229:2:7","nodeType":"VariableDeclaration","scope":1784,"src":"2221:10:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1776,"name":"address","nodeType":"ElementaryTypeName","src":"2221:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1779,"mutability":"mutable","name":"amount","nameLocation":"2249:6:7","nodeType":"VariableDeclaration","scope":1784,"src":"2241:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1778,"name":"uint256","nodeType":"ElementaryTypeName","src":"2241:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2189:72:7"},"returnParameters":{"id":1783,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1784,"src":"2280:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1781,"name":"bool","nodeType":"ElementaryTypeName","src":"2280:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2279:6:7"},"scope":1803,"src":"2168:118:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":1785,"nodeType":"StructuredDocumentation","src":"2292:158:7","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1793,"name":"Transfer","nameLocation":"2461:8:7","nodeType":"EventDefinition","parameters":{"id":1792,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1787,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"2486:4:7","nodeType":"VariableDeclaration","scope":1793,"src":"2470:20:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1786,"name":"address","nodeType":"ElementaryTypeName","src":"2470:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1789,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"2508:2:7","nodeType":"VariableDeclaration","scope":1793,"src":"2492:18:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1788,"name":"address","nodeType":"ElementaryTypeName","src":"2492:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1791,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2520:5:7","nodeType":"VariableDeclaration","scope":1793,"src":"2512:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1790,"name":"uint256","nodeType":"ElementaryTypeName","src":"2512:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2469:57:7"},"src":"2455:72:7"},{"anonymous":false,"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"2533:148:7","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1802,"name":"Approval","nameLocation":"2692:8:7","nodeType":"EventDefinition","parameters":{"id":1801,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2717:5:7","nodeType":"VariableDeclaration","scope":1802,"src":"2701:21:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1795,"name":"address","nodeType":"ElementaryTypeName","src":"2701:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1798,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"2740:7:7","nodeType":"VariableDeclaration","scope":1802,"src":"2724:23:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1797,"name":"address","nodeType":"ElementaryTypeName","src":"2724:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1800,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"2757:5:7","nodeType":"VariableDeclaration","scope":1802,"src":"2749:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1799,"name":"uint256","nodeType":"ElementaryTypeName","src":"2749:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2700:63:7"},"src":"2686:78:7"}],"scope":1804,"src":"202:2564:7","usedErrors":[]}],"src":"106:2661:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[2098]},"id":2099,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1805,"literals":["solidity","^","0.8",".1"],"nodeType":"PragmaDirective","src":"101:23:8"},{"abstract":false,"baseContracts":[],"canonicalName":"Address","contractDependencies":[],"contractKind":"library","documentation":{"id":1806,"nodeType":"StructuredDocumentation","src":"126:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":2098,"linearizedBaseContracts":[2098],"name":"Address","nameLocation":"202:7:8","nodeType":"ContractDefinition","nodes":[{"body":{"id":1820,"nodeType":"Block","src":"1241:254:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1818,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":1814,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"1465:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"code","nodeType":"MemberAccess","src":"1465:12:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"1465:19:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1487:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1465:23:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1813,"id":1819,"nodeType":"Return","src":"1458:30:8"}]},"documentation":{"id":1807,"nodeType":"StructuredDocumentation","src":"216:954:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="},"id":1821,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nameLocation":"1184:10:8","nodeType":"FunctionDefinition","parameters":{"id":1810,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1809,"mutability":"mutable","name":"account","nameLocation":"1203:7:8","nodeType":"VariableDeclaration","scope":1821,"src":"1195:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1808,"name":"address","nodeType":"ElementaryTypeName","src":"1195:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1194:17:8"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1812,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1821,"src":"1235:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1811,"name":"bool","nodeType":"ElementaryTypeName","src":"1235:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1234:6:8"},"scope":2098,"src":"1175:320:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1854,"nodeType":"Block","src":"2483:241:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1832,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2509:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2098","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2098","typeString":"library Address"}],"id":1831,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2501:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1830,"name":"address","nodeType":"ElementaryTypeName","src":"2501:7:8","typeDescriptions":{}}},"id":1833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2501:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2501:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1835,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2526:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2501:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":1837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2534:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":1829,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2493:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1838,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2493:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1839,"nodeType":"ExpressionStatement","src":"2493:73:8"},{"assignments":[1841,null],"declarations":[{"constant":false,"id":1841,"mutability":"mutable","name":"success","nameLocation":"2583:7:8","nodeType":"VariableDeclaration","scope":1854,"src":"2578:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1840,"name":"bool","nodeType":"ElementaryTypeName","src":"2578:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":1848,"initialValue":{"arguments":[{"hexValue":"","id":1846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2626:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":1842,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1824,"src":"2596:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2596:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1844,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1826,"src":"2618:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2596:29:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2596:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2577:52:8"},{"expression":{"arguments":[{"id":1850,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1841,"src":"2647:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2656:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":1849,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2639:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2639:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1853,"nodeType":"ExpressionStatement","src":"2639:78:8"}]},"documentation":{"id":1822,"nodeType":"StructuredDocumentation","src":"1501:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":1855,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nameLocation":"2421:9:8","nodeType":"FunctionDefinition","parameters":{"id":1827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1824,"mutability":"mutable","name":"recipient","nameLocation":"2447:9:8","nodeType":"VariableDeclaration","scope":1855,"src":"2431:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1823,"name":"address","nodeType":"ElementaryTypeName","src":"2431:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":1826,"mutability":"mutable","name":"amount","nameLocation":"2466:6:8","nodeType":"VariableDeclaration","scope":1855,"src":"2458:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1825,"name":"uint256","nodeType":"ElementaryTypeName","src":"2458:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2430:43:8"},"returnParameters":{"id":1828,"nodeType":"ParameterList","parameters":[],"src":"2483:0:8"},"scope":2098,"src":"2412:312:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1871,"nodeType":"Block","src":"3555:84:8","statements":[{"expression":{"arguments":[{"id":1866,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3585:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1867,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1860,"src":"3593:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1868,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3599:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1865,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1872,1892],"referencedDeclaration":1892,"src":"3572:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3572:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1864,"id":1870,"nodeType":"Return","src":"3565:67:8"}]},"documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"2730:731:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1872,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3475:12:8","nodeType":"FunctionDefinition","parameters":{"id":1861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1858,"mutability":"mutable","name":"target","nameLocation":"3496:6:8","nodeType":"VariableDeclaration","scope":1872,"src":"3488:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1857,"name":"address","nodeType":"ElementaryTypeName","src":"3488:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1860,"mutability":"mutable","name":"data","nameLocation":"3517:4:8","nodeType":"VariableDeclaration","scope":1872,"src":"3504:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1859,"name":"bytes","nodeType":"ElementaryTypeName","src":"3504:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3487:35:8"},"returnParameters":{"id":1864,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1863,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1872,"src":"3541:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1862,"name":"bytes","nodeType":"ElementaryTypeName","src":"3541:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3540:14:8"},"scope":2098,"src":"3466:173:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1891,"nodeType":"Block","src":"4008:76:8","statements":[{"expression":{"arguments":[{"id":1885,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1875,"src":"4047:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1886,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"4055:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4061:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1888,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1879,"src":"4064:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1884,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1912,1962],"referencedDeclaration":1962,"src":"4025:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4025:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1883,"id":1890,"nodeType":"Return","src":"4018:59:8"}]},"documentation":{"id":1873,"nodeType":"StructuredDocumentation","src":"3645:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1892,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nameLocation":"3870:12:8","nodeType":"FunctionDefinition","parameters":{"id":1880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1875,"mutability":"mutable","name":"target","nameLocation":"3900:6:8","nodeType":"VariableDeclaration","scope":1892,"src":"3892:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1874,"name":"address","nodeType":"ElementaryTypeName","src":"3892:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1877,"mutability":"mutable","name":"data","nameLocation":"3929:4:8","nodeType":"VariableDeclaration","scope":1892,"src":"3916:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1876,"name":"bytes","nodeType":"ElementaryTypeName","src":"3916:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1879,"mutability":"mutable","name":"errorMessage","nameLocation":"3957:12:8","nodeType":"VariableDeclaration","scope":1892,"src":"3943:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1878,"name":"string","nodeType":"ElementaryTypeName","src":"3943:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3882:93:8"},"returnParameters":{"id":1883,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1882,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1892,"src":"3994:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1881,"name":"bytes","nodeType":"ElementaryTypeName","src":"3994:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3993:14:8"},"scope":2098,"src":"3861:223:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1911,"nodeType":"Block","src":"4589:111:8","statements":[{"expression":{"arguments":[{"id":1905,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1895,"src":"4628:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1906,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1897,"src":"4636:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1907,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1899,"src":"4642:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4649:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1904,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1912,1962],"referencedDeclaration":1962,"src":"4606:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1909,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4606:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1903,"id":1910,"nodeType":"Return","src":"4599:94:8"}]},"documentation":{"id":1893,"nodeType":"StructuredDocumentation","src":"4090:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1912,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4455:21:8","nodeType":"FunctionDefinition","parameters":{"id":1900,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1895,"mutability":"mutable","name":"target","nameLocation":"4494:6:8","nodeType":"VariableDeclaration","scope":1912,"src":"4486:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1894,"name":"address","nodeType":"ElementaryTypeName","src":"4486:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1897,"mutability":"mutable","name":"data","nameLocation":"4523:4:8","nodeType":"VariableDeclaration","scope":1912,"src":"4510:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1896,"name":"bytes","nodeType":"ElementaryTypeName","src":"4510:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1899,"mutability":"mutable","name":"value","nameLocation":"4545:5:8","nodeType":"VariableDeclaration","scope":1912,"src":"4537:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1898,"name":"uint256","nodeType":"ElementaryTypeName","src":"4537:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4476:80:8"},"returnParameters":{"id":1903,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1902,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1912,"src":"4575:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1901,"name":"bytes","nodeType":"ElementaryTypeName","src":"4575:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4574:14:8"},"scope":2098,"src":"4446:254:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1961,"nodeType":"Block","src":"5127:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1929,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5153:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$2098","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$2098","typeString":"library Address"}],"id":1928,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5145:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1927,"name":"address","nodeType":"ElementaryTypeName","src":"5145:7:8","typeDescriptions":{}}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5145:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"5145:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1932,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"5170:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5145:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1926,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5137:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5137:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1936,"nodeType":"ExpressionStatement","src":"5137:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1939,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5247:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1938,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"5236:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5236:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5256:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5228:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5228:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1943,"nodeType":"ExpressionStatement","src":"5228:60:8"},{"assignments":[1945,1947],"declarations":[{"constant":false,"id":1945,"mutability":"mutable","name":"success","nameLocation":"5305:7:8","nodeType":"VariableDeclaration","scope":1961,"src":"5300:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1944,"name":"bool","nodeType":"ElementaryTypeName","src":"5300:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1947,"mutability":"mutable","name":"returndata","nameLocation":"5327:10:8","nodeType":"VariableDeclaration","scope":1961,"src":"5314:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1946,"name":"bytes","nodeType":"ElementaryTypeName","src":"5314:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1954,"initialValue":{"arguments":[{"id":1952,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1917,"src":"5367:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1948,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"5341:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1949,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5341:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1950,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1919,"src":"5360:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5341:25:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5341:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5299:73:8"},{"expression":{"arguments":[{"id":1956,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1945,"src":"5406:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1957,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1947,"src":"5415:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1958,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1921,"src":"5427:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1955,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"5389:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5389:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1925,"id":1960,"nodeType":"Return","src":"5382:58:8"}]},"documentation":{"id":1913,"nodeType":"StructuredDocumentation","src":"4706:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1962,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nameLocation":"4957:21:8","nodeType":"FunctionDefinition","parameters":{"id":1922,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1915,"mutability":"mutable","name":"target","nameLocation":"4996:6:8","nodeType":"VariableDeclaration","scope":1962,"src":"4988:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1914,"name":"address","nodeType":"ElementaryTypeName","src":"4988:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1917,"mutability":"mutable","name":"data","nameLocation":"5025:4:8","nodeType":"VariableDeclaration","scope":1962,"src":"5012:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1916,"name":"bytes","nodeType":"ElementaryTypeName","src":"5012:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1919,"mutability":"mutable","name":"value","nameLocation":"5047:5:8","nodeType":"VariableDeclaration","scope":1962,"src":"5039:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1918,"name":"uint256","nodeType":"ElementaryTypeName","src":"5039:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1921,"mutability":"mutable","name":"errorMessage","nameLocation":"5076:12:8","nodeType":"VariableDeclaration","scope":1962,"src":"5062:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1920,"name":"string","nodeType":"ElementaryTypeName","src":"5062:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4978:116:8"},"returnParameters":{"id":1925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1924,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1962,"src":"5113:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1923,"name":"bytes","nodeType":"ElementaryTypeName","src":"5113:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5112:14:8"},"scope":2098,"src":"4948:499:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1978,"nodeType":"Block","src":"5724:97:8","statements":[{"expression":{"arguments":[{"id":1973,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1965,"src":"5760:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1974,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"5768:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1975,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5774:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1972,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1979,2014],"referencedDeclaration":2014,"src":"5741:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5741:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1971,"id":1977,"nodeType":"Return","src":"5734:80:8"}]},"documentation":{"id":1963,"nodeType":"StructuredDocumentation","src":"5453:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1979,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"5633:18:8","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1965,"mutability":"mutable","name":"target","nameLocation":"5660:6:8","nodeType":"VariableDeclaration","scope":1979,"src":"5652:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1964,"name":"address","nodeType":"ElementaryTypeName","src":"5652:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"data","nameLocation":"5681:4:8","nodeType":"VariableDeclaration","scope":1979,"src":"5668:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1966,"name":"bytes","nodeType":"ElementaryTypeName","src":"5668:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5651:35:8"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1979,"src":"5710:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1969,"name":"bytes","nodeType":"ElementaryTypeName","src":"5710:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5709:14:8"},"scope":2098,"src":"5624:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2013,"nodeType":"Block","src":"6163:228:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1993,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6192:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1992,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"6181:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6181:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6201:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1991,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6173:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6173:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1997,"nodeType":"ExpressionStatement","src":"6173:67:8"},{"assignments":[1999,2001],"declarations":[{"constant":false,"id":1999,"mutability":"mutable","name":"success","nameLocation":"6257:7:8","nodeType":"VariableDeclaration","scope":2013,"src":"6252:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1998,"name":"bool","nodeType":"ElementaryTypeName","src":"6252:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"returndata","nameLocation":"6279:10:8","nodeType":"VariableDeclaration","scope":2013,"src":"6266:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2000,"name":"bytes","nodeType":"ElementaryTypeName","src":"6266:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2006,"initialValue":{"arguments":[{"id":2004,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1984,"src":"6311:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2002,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1982,"src":"6293:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6293:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":2005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6293:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6251:65:8"},{"expression":{"arguments":[{"id":2008,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"6350:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2009,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"6359:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2010,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1986,"src":"6371:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2007,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"6333:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6333:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1990,"id":2012,"nodeType":"Return","src":"6326:58:8"}]},"documentation":{"id":1980,"nodeType":"StructuredDocumentation","src":"5827:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":2014,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nameLocation":"6014:18:8","nodeType":"FunctionDefinition","parameters":{"id":1987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1982,"mutability":"mutable","name":"target","nameLocation":"6050:6:8","nodeType":"VariableDeclaration","scope":2014,"src":"6042:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1981,"name":"address","nodeType":"ElementaryTypeName","src":"6042:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1984,"mutability":"mutable","name":"data","nameLocation":"6079:4:8","nodeType":"VariableDeclaration","scope":2014,"src":"6066:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1983,"name":"bytes","nodeType":"ElementaryTypeName","src":"6066:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1986,"mutability":"mutable","name":"errorMessage","nameLocation":"6107:12:8","nodeType":"VariableDeclaration","scope":2014,"src":"6093:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1985,"name":"string","nodeType":"ElementaryTypeName","src":"6093:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6032:93:8"},"returnParameters":{"id":1990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1989,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2014,"src":"6149:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1988,"name":"bytes","nodeType":"ElementaryTypeName","src":"6149:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6148:14:8"},"scope":2098,"src":"6005:386:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2030,"nodeType":"Block","src":"6667:101:8","statements":[{"expression":{"arguments":[{"id":2025,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2017,"src":"6705:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2026,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2019,"src":"6713:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6719:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":2024,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[2031,2066],"referencedDeclaration":2066,"src":"6684:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":2028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6684:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2023,"id":2029,"nodeType":"Return","src":"6677:84:8"}]},"documentation":{"id":2015,"nodeType":"StructuredDocumentation","src":"6397:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2031,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6579:20:8","nodeType":"FunctionDefinition","parameters":{"id":2020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2017,"mutability":"mutable","name":"target","nameLocation":"6608:6:8","nodeType":"VariableDeclaration","scope":2031,"src":"6600:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2016,"name":"address","nodeType":"ElementaryTypeName","src":"6600:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2019,"mutability":"mutable","name":"data","nameLocation":"6629:4:8","nodeType":"VariableDeclaration","scope":2031,"src":"6616:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2018,"name":"bytes","nodeType":"ElementaryTypeName","src":"6616:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6599:35:8"},"returnParameters":{"id":2023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2022,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2031,"src":"6653:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2021,"name":"bytes","nodeType":"ElementaryTypeName","src":"6653:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6652:14:8"},"scope":2098,"src":"6570:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2065,"nodeType":"Block","src":"7109:232:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":2045,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"7138:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2044,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1821,"src":"7127:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":2046,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7127:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":2047,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7147:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":2043,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7119:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2048,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7119:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2049,"nodeType":"ExpressionStatement","src":"7119:69:8"},{"assignments":[2051,2053],"declarations":[{"constant":false,"id":2051,"mutability":"mutable","name":"success","nameLocation":"7205:7:8","nodeType":"VariableDeclaration","scope":2065,"src":"7200:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2050,"name":"bool","nodeType":"ElementaryTypeName","src":"7200:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2053,"mutability":"mutable","name":"returndata","nameLocation":"7227:10:8","nodeType":"VariableDeclaration","scope":2065,"src":"7214:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2052,"name":"bytes","nodeType":"ElementaryTypeName","src":"7214:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2058,"initialValue":{"arguments":[{"id":2056,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2036,"src":"7261:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":2054,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2034,"src":"7241:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"7241:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7241:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"7199:67:8"},{"expression":{"arguments":[{"id":2060,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2051,"src":"7300:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2061,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2053,"src":"7309:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":2062,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2038,"src":"7321:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2059,"name":"verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2097,"src":"7283:16:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":2063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7283:51:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2042,"id":2064,"nodeType":"Return","src":"7276:58:8"}]},"documentation":{"id":2032,"nodeType":"StructuredDocumentation","src":"6774:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":2066,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nameLocation":"6963:20:8","nodeType":"FunctionDefinition","parameters":{"id":2039,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2034,"mutability":"mutable","name":"target","nameLocation":"7001:6:8","nodeType":"VariableDeclaration","scope":2066,"src":"6993:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2033,"name":"address","nodeType":"ElementaryTypeName","src":"6993:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2036,"mutability":"mutable","name":"data","nameLocation":"7030:4:8","nodeType":"VariableDeclaration","scope":2066,"src":"7017:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2035,"name":"bytes","nodeType":"ElementaryTypeName","src":"7017:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2038,"mutability":"mutable","name":"errorMessage","nameLocation":"7058:12:8","nodeType":"VariableDeclaration","scope":2066,"src":"7044:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2037,"name":"string","nodeType":"ElementaryTypeName","src":"7044:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6983:93:8"},"returnParameters":{"id":2042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2041,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2066,"src":"7095:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2040,"name":"bytes","nodeType":"ElementaryTypeName","src":"7095:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7094:14:8"},"scope":2098,"src":"6954:387:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2096,"nodeType":"Block","src":"7721:532:8","statements":[{"condition":{"id":2078,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2069,"src":"7735:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2094,"nodeType":"Block","src":"7792:455:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2085,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2082,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"7876:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7876:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7896:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7876:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2092,"nodeType":"Block","src":"8184:53:8","statements":[{"expression":{"arguments":[{"id":2089,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2073,"src":"8209:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2088,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"8202:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8202:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2091,"nodeType":"ExpressionStatement","src":"8202:20:8"}]},"id":2093,"nodeType":"IfStatement","src":"7872:365:8","trueBody":{"id":2087,"nodeType":"Block","src":"7899:279:8","statements":[{"AST":{"nodeType":"YulBlock","src":"8019:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"8041:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"8070:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8064:5:8"},"nodeType":"YulFunctionCall","src":"8064:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"8045:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8113:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"8117:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8109:3:8"},"nodeType":"YulFunctionCall","src":"8109:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"8130:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8102:6:8"},"nodeType":"YulFunctionCall","src":"8102:44:8"},"nodeType":"YulExpressionStatement","src":"8102:44:8"}]},"evmVersion":"london","externalReferences":[{"declaration":2071,"isOffset":false,"isSlot":false,"src":"8070:10:8","valueSize":1},{"declaration":2071,"isOffset":false,"isSlot":false,"src":"8117:10:8","valueSize":1}],"id":2086,"nodeType":"InlineAssembly","src":"8010:154:8"}]}}]},"id":2095,"nodeType":"IfStatement","src":"7731:516:8","trueBody":{"id":2081,"nodeType":"Block","src":"7744:42:8","statements":[{"expression":{"id":2079,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2071,"src":"7765:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":2077,"id":2080,"nodeType":"Return","src":"7758:17:8"}]}}]},"documentation":{"id":2067,"nodeType":"StructuredDocumentation","src":"7347:209:8","text":" @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason using the provided one.\n _Available since v4.3._"},"id":2097,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCallResult","nameLocation":"7570:16:8","nodeType":"FunctionDefinition","parameters":{"id":2074,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2069,"mutability":"mutable","name":"success","nameLocation":"7601:7:8","nodeType":"VariableDeclaration","scope":2097,"src":"7596:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2068,"name":"bool","nodeType":"ElementaryTypeName","src":"7596:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2071,"mutability":"mutable","name":"returndata","nameLocation":"7631:10:8","nodeType":"VariableDeclaration","scope":2097,"src":"7618:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2070,"name":"bytes","nodeType":"ElementaryTypeName","src":"7618:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2073,"mutability":"mutable","name":"errorMessage","nameLocation":"7665:12:8","nodeType":"VariableDeclaration","scope":2097,"src":"7651:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2072,"name":"string","nodeType":"ElementaryTypeName","src":"7651:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7586:97:8"},"returnParameters":{"id":2077,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2076,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2097,"src":"7707:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2075,"name":"bytes","nodeType":"ElementaryTypeName","src":"7707:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7706:14:8"},"scope":2098,"src":"7561:692:8","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2099,"src":"194:8061:8","usedErrors":[]}],"src":"101:8155:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[2120]},"id":2121,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2100,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:9"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":2101,"nodeType":"StructuredDocumentation","src":"111:496:9","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":2120,"linearizedBaseContracts":[2120],"name":"Context","nameLocation":"626:7:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":2109,"nodeType":"Block","src":"702:34:9","statements":[{"expression":{"expression":{"id":2106,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2105,"id":2108,"nodeType":"Return","src":"712:17:9"}]},"id":2110,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:9","nodeType":"FunctionDefinition","parameters":{"id":2102,"nodeType":"ParameterList","parameters":[],"src":"659:2:9"},"returnParameters":{"id":2105,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2104,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2110,"src":"693:7:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2103,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:9"},"scope":2120,"src":"640:96:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":2118,"nodeType":"Block","src":"809:32:9","statements":[{"expression":{"expression":{"id":2115,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":2114,"id":2117,"nodeType":"Return","src":"819:15:9"}]},"id":2119,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:9","nodeType":"FunctionDefinition","parameters":{"id":2111,"nodeType":"ParameterList","parameters":[],"src":"759:2:9"},"returnParameters":{"id":2114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2119,"src":"793:14:9","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2112,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:9"},"scope":2120,"src":"742:99:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":2121,"src":"608:235:9","usedErrors":[]}],"src":"86:758:9"},"id":9},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Strings":[2323]},"id":2324,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2122,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":2123,"nodeType":"StructuredDocumentation","src":"111:34:10","text":" @dev String operations."},"fullyImplemented":true,"id":2323,"linearizedBaseContracts":[2323],"name":"Strings","nameLocation":"154:7:10","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2126,"mutability":"constant","name":"_HEX_SYMBOLS","nameLocation":"193:12:10","nodeType":"VariableDeclaration","scope":2323,"src":"168:58:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":2124,"name":"bytes16","nodeType":"ElementaryTypeName","src":"168:7:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":2125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"208:18:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"body":{"id":2204,"nodeType":"Block","src":"399:632:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2134,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"601:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"610:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"601:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2140,"nodeType":"IfStatement","src":"597:51:10","trueBody":{"id":2139,"nodeType":"Block","src":"613:35:10","statements":[{"expression":{"hexValue":"30","id":2137,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"634:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"functionReturnParameters":2133,"id":2138,"nodeType":"Return","src":"627:10:10"}]}},{"assignments":[2142],"declarations":[{"constant":false,"id":2142,"mutability":"mutable","name":"temp","nameLocation":"665:4:10","nodeType":"VariableDeclaration","scope":2204,"src":"657:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2141,"name":"uint256","nodeType":"ElementaryTypeName","src":"657:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2144,"initialValue":{"id":2143,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"657:20:10"},{"assignments":[2146],"declarations":[{"constant":false,"id":2146,"mutability":"mutable","name":"digits","nameLocation":"695:6:10","nodeType":"VariableDeclaration","scope":2204,"src":"687:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2145,"name":"uint256","nodeType":"ElementaryTypeName","src":"687:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2147,"nodeType":"VariableDeclarationStatement","src":"687:14:10"},{"body":{"id":2158,"nodeType":"Block","src":"729:57:10","statements":[{"expression":{"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"743:8:10","subExpression":{"id":2151,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"743:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2153,"nodeType":"ExpressionStatement","src":"743:8:10"},{"expression":{"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2154,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"765:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"773:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"765:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2157,"nodeType":"ExpressionStatement","src":"765:10:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2148,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2142,"src":"718:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"726:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"718:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2159,"nodeType":"WhileStatement","src":"711:75:10"},{"assignments":[2161],"declarations":[{"constant":false,"id":2161,"mutability":"mutable","name":"buffer","nameLocation":"808:6:10","nodeType":"VariableDeclaration","scope":2204,"src":"795:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2160,"name":"bytes","nodeType":"ElementaryTypeName","src":"795:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2166,"initialValue":{"arguments":[{"id":2164,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"827:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"817:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2162,"name":"bytes","nodeType":"ElementaryTypeName","src":"821:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2165,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"817:17:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"795:39:10"},{"body":{"id":2197,"nodeType":"Block","src":"863:131:10","statements":[{"expression":{"id":2172,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2170,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"877:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"hexValue":"31","id":2171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"887:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"877:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2173,"nodeType":"ExpressionStatement","src":"877:11:10"},{"expression":{"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2174,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"902:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2176,"indexExpression":{"id":2175,"name":"digits","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2146,"src":"909:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"902:14:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3438","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"932:2:10","typeDescriptions":{"typeIdentifier":"t_rational_48_by_1","typeString":"int_const 48"},"value":"48"},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2184,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"945:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"3130","id":2185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"953:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"945:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2183,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"937:7:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2182,"name":"uint256","nodeType":"ElementaryTypeName","src":"937:7:10","typeDescriptions":{}}},"id":2187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"937:19:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"932:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2180,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"926:5:10","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":2179,"name":"uint8","nodeType":"ElementaryTypeName","src":"926:5:10","typeDescriptions":{}}},"id":2189,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"926:31:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":2178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"919:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes1_$","typeString":"type(bytes1)"},"typeName":{"id":2177,"name":"bytes1","nodeType":"ElementaryTypeName","src":"919:6:10","typeDescriptions":{}}},"id":2190,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"919:39:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"902:56:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2192,"nodeType":"ExpressionStatement","src":"902:56:10"},{"expression":{"id":2195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2193,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"972:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":2194,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"981:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"972:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2196,"nodeType":"ExpressionStatement","src":"972:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2167,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"851:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"860:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"851:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2198,"nodeType":"WhileStatement","src":"844:150:10"},{"expression":{"arguments":[{"id":2201,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2161,"src":"1017:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2200,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1010:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2199,"name":"string","nodeType":"ElementaryTypeName","src":"1010:6:10","typeDescriptions":{}}},"id":2202,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1010:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2133,"id":2203,"nodeType":"Return","src":"1003:21:10"}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"233:90:10","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":2205,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"337:8:10","nodeType":"FunctionDefinition","parameters":{"id":2130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"value","nameLocation":"354:5:10","nodeType":"VariableDeclaration","scope":2205,"src":"346:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"346:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"345:15:10"},"returnParameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2132,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2205,"src":"384:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2131,"name":"string","nodeType":"ElementaryTypeName","src":"384:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"383:15:10"},"scope":2323,"src":"328:703:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2245,"nodeType":"Block","src":"1210:255:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2213,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1224:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1233:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1224:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2219,"nodeType":"IfStatement","src":"1220:54:10","trueBody":{"id":2218,"nodeType":"Block","src":"1236:38:10","statements":[{"expression":{"hexValue":"30783030","id":2216,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1257:6:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_27489e20a0060b723a1748bdff5e44570ee9fae64141728105692eac6031e8a4","typeString":"literal_string \"0x00\""},"value":"0x00"},"functionReturnParameters":2212,"id":2217,"nodeType":"Return","src":"1250:13:10"}]}},{"assignments":[2221],"declarations":[{"constant":false,"id":2221,"mutability":"mutable","name":"temp","nameLocation":"1291:4:10","nodeType":"VariableDeclaration","scope":2245,"src":"1283:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2220,"name":"uint256","nodeType":"ElementaryTypeName","src":"1283:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2223,"initialValue":{"id":2222,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1298:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1283:20:10"},{"assignments":[2225],"declarations":[{"constant":false,"id":2225,"mutability":"mutable","name":"length","nameLocation":"1321:6:10","nodeType":"VariableDeclaration","scope":2245,"src":"1313:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2224,"name":"uint256","nodeType":"ElementaryTypeName","src":"1313:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2227,"initialValue":{"hexValue":"30","id":2226,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1313:18:10"},{"body":{"id":2238,"nodeType":"Block","src":"1359:57:10","statements":[{"expression":{"id":2232,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"1373:8:10","subExpression":{"id":2231,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1373:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2233,"nodeType":"ExpressionStatement","src":"1373:8:10"},{"expression":{"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2234,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1395:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1404:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"1395:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2237,"nodeType":"ExpressionStatement","src":"1395:10:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2228,"name":"temp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2221,"src":"1348:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1356:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1348:9:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2239,"nodeType":"WhileStatement","src":"1341:75:10"},{"expression":{"arguments":[{"id":2241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2208,"src":"1444:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2242,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2225,"src":"1451:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2240,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[2246,2322],"referencedDeclaration":2322,"src":"1432:11:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1432:26:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2212,"id":2244,"nodeType":"Return","src":"1425:33:10"}]},"documentation":{"id":2206,"nodeType":"StructuredDocumentation","src":"1037:94:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":2246,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1145:11:10","nodeType":"FunctionDefinition","parameters":{"id":2209,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2208,"mutability":"mutable","name":"value","nameLocation":"1165:5:10","nodeType":"VariableDeclaration","scope":2246,"src":"1157:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2207,"name":"uint256","nodeType":"ElementaryTypeName","src":"1157:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1156:15:10"},"returnParameters":{"id":2212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2211,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2246,"src":"1195:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2210,"name":"string","nodeType":"ElementaryTypeName","src":"1195:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1194:15:10"},"scope":2323,"src":"1136:329:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2321,"nodeType":"Block","src":"1678:351:10","statements":[{"assignments":[2257],"declarations":[{"constant":false,"id":2257,"mutability":"mutable","name":"buffer","nameLocation":"1701:6:10","nodeType":"VariableDeclaration","scope":2321,"src":"1688:19:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2256,"name":"bytes","nodeType":"ElementaryTypeName","src":"1688:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2266,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1720:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2261,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1720:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":2263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1733:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1720:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1710:9:10","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":2258,"name":"bytes","nodeType":"ElementaryTypeName","src":"1714:5:10","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1710:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1688:47:10"},{"expression":{"id":2271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2267,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"1745:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2269,"indexExpression":{"hexValue":"30","id":2268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1752:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1745:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":2270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1757:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1745:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2272,"nodeType":"ExpressionStatement","src":"1745:15:10"},{"expression":{"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2273,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"1770:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2275,"indexExpression":{"hexValue":"31","id":2274,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1777:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1770:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":2276,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1782:3:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1770:15:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2278,"nodeType":"ExpressionStatement","src":"1770:15:10"},{"body":{"id":2307,"nodeType":"Block","src":"1840:87:10","statements":[{"expression":{"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":2293,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"1854:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":2295,"indexExpression":{"id":2294,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1861:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1854:9:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":2296,"name":"_HEX_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2126,"src":"1866:12:10","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":2300,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1879:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1887:3:10","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1879:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1866:25:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1854:37:10","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":2302,"nodeType":"ExpressionStatement","src":"1854:37:10"},{"expression":{"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1905:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":2304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1905:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2306,"nodeType":"ExpressionStatement","src":"1905:11:10"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2289,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2287,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1828:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":2288,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1832:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1828:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2308,"initializationExpression":{"assignments":[2280],"declarations":[{"constant":false,"id":2280,"mutability":"mutable","name":"i","nameLocation":"1808:1:10","nodeType":"VariableDeclaration","scope":2308,"src":"1800:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2279,"name":"uint256","nodeType":"ElementaryTypeName","src":"1800:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2286,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2283,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1812:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2282,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"1816:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1812:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":2284,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1825:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1812:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1800:26:10"},"loopExpression":{"expression":{"id":2291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1835:3:10","subExpression":{"id":2290,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2280,"src":"1837:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2292,"nodeType":"ExpressionStatement","src":"1835:3:10"},"nodeType":"ForStatement","src":"1795:132:10"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2310,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2249,"src":"1944:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1953:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1944:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":2313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1956:34:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":2309,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1936:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1936:55:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2315,"nodeType":"ExpressionStatement","src":"1936:55:10"},{"expression":{"arguments":[{"id":2318,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2257,"src":"2015:6:10","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2008:6:10","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":2316,"name":"string","nodeType":"ElementaryTypeName","src":"2008:6:10","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2008:14:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":2255,"id":2320,"nodeType":"Return","src":"2001:21:10"}]},"documentation":{"id":2247,"nodeType":"StructuredDocumentation","src":"1471:112:10","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":2322,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1597:11:10","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2249,"mutability":"mutable","name":"value","nameLocation":"1617:5:10","nodeType":"VariableDeclaration","scope":2322,"src":"1609:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2248,"name":"uint256","nodeType":"ElementaryTypeName","src":"1609:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2251,"mutability":"mutable","name":"length","nameLocation":"1632:6:10","nodeType":"VariableDeclaration","scope":2322,"src":"1624:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"1624:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1608:31:10"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2322,"src":"1663:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2253,"name":"string","nodeType":"ElementaryTypeName","src":"1663:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1662:15:10"},"scope":2323,"src":"1588:441:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2324,"src":"146:1885:10","usedErrors":[]}],"src":"86:1946:10"},"id":10},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[2347],"IERC165":[2359]},"id":2348,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2325,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:11"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":2326,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2348,"sourceUnit":2360,"src":"124:23:11","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":2328,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":2359,"src":"754:7:11"},"id":2329,"nodeType":"InheritanceSpecifier","src":"754:7:11"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":2327,"nodeType":"StructuredDocumentation","src":"149:576:11","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":2347,"linearizedBaseContracts":[2347,2359],"name":"ERC165","nameLocation":"744:6:11","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[2358],"body":{"id":2345,"nodeType":"Block","src":"920:64:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":2343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2338,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2332,"src":"937:11:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":2340,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"957:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$2359_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$2359_$","typeString":"type(contract IERC165)"}],"id":2339,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:11","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2341,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$2359","typeString":"type(contract IERC165)"}},"id":2342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2337,"id":2344,"nodeType":"Return","src":"930:47:11"}]},"documentation":{"id":2330,"nodeType":"StructuredDocumentation","src":"768:56:11","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":2346,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:11","nodeType":"FunctionDefinition","overrides":{"id":2334,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:11"},"parameters":{"id":2333,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2332,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:11","nodeType":"VariableDeclaration","scope":2346,"src":"856:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2331,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:11","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:11"},"returnParameters":{"id":2337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2336,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2346,"src":"914:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2335,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:11"},"scope":2347,"src":"829:155:11","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":2348,"src":"726:260:11","usedErrors":[]}],"src":"99:888:11"},"id":11},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[2359]},"id":2360,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2349,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:12"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":2350,"nodeType":"StructuredDocumentation","src":"125:279:12","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":2359,"linearizedBaseContracts":[2359],"name":"IERC165","nameLocation":"415:7:12","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2351,"nodeType":"StructuredDocumentation","src":"429:340:12","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":2358,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:12","nodeType":"FunctionDefinition","parameters":{"id":2354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2353,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:12","nodeType":"VariableDeclaration","scope":2358,"src":"801:18:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":2352,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:12","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:12"},"returnParameters":{"id":2357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2356,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2358,"src":"844:4:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2355,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:12","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:12"},"scope":2359,"src":"774:76:12","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2360,"src":"405:447:12","usedErrors":[]}],"src":"100:753:12"},"id":12},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","exportedSymbols":{"SafeMath":[2671]},"id":2672,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2361,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"92:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeMath","contractDependencies":[],"contractKind":"library","documentation":{"id":2362,"nodeType":"StructuredDocumentation","src":"270:196:13","text":" @dev Wrappers over Solidity's arithmetic operations.\n NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\n now has built in overflow checking."},"fullyImplemented":true,"id":2671,"linearizedBaseContracts":[2671],"name":"SafeMath","nameLocation":"475:8:13","nodeType":"ContractDefinition","nodes":[{"body":{"id":2393,"nodeType":"Block","src":"702:140:13","statements":[{"id":2392,"nodeType":"UncheckedBlock","src":"712:124:13","statements":[{"assignments":[2375],"declarations":[{"constant":false,"id":2375,"mutability":"mutable","name":"c","nameLocation":"744:1:13","nodeType":"VariableDeclaration","scope":2392,"src":"736:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2374,"name":"uint256","nodeType":"ElementaryTypeName","src":"736:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2379,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"748:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2367,"src":"752:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"748:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"736:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2380,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"771:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2381,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2365,"src":"775:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"771:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2387,"nodeType":"IfStatement","src":"767:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"786:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2384,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"793:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2385,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"785:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2373,"id":2386,"nodeType":"Return","src":"778:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"817:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2389,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"823:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2390,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"816:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2373,"id":2391,"nodeType":"Return","src":"809:16:13"}]}]},"documentation":{"id":2363,"nodeType":"StructuredDocumentation","src":"490:131:13","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":2394,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nameLocation":"635:6:13","nodeType":"FunctionDefinition","parameters":{"id":2368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2365,"mutability":"mutable","name":"a","nameLocation":"650:1:13","nodeType":"VariableDeclaration","scope":2394,"src":"642:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2364,"name":"uint256","nodeType":"ElementaryTypeName","src":"642:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2367,"mutability":"mutable","name":"b","nameLocation":"661:1:13","nodeType":"VariableDeclaration","scope":2394,"src":"653:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2366,"name":"uint256","nodeType":"ElementaryTypeName","src":"653:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"641:22:13"},"returnParameters":{"id":2373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2370,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"687:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2369,"name":"bool","nodeType":"ElementaryTypeName","src":"687:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2372,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2394,"src":"693:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2371,"name":"uint256","nodeType":"ElementaryTypeName","src":"693:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"686:15:13"},"scope":2671,"src":"626:216:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2421,"nodeType":"Block","src":"1064:113:13","statements":[{"id":2420,"nodeType":"UncheckedBlock","src":"1074:97:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2406,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"1102:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2407,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"1106:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1102:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2413,"nodeType":"IfStatement","src":"1098:28:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2409,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1117:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1124:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2411,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1116:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2405,"id":2412,"nodeType":"Return","src":"1109:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1148:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2415,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2397,"src":"1154:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2399,"src":"1158:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1154:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2418,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1147:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2405,"id":2419,"nodeType":"Return","src":"1140:20:13"}]}]},"documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"848:135:13","text":" @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":2422,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nameLocation":"997:6:13","nodeType":"FunctionDefinition","parameters":{"id":2400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2397,"mutability":"mutable","name":"a","nameLocation":"1012:1:13","nodeType":"VariableDeclaration","scope":2422,"src":"1004:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2396,"name":"uint256","nodeType":"ElementaryTypeName","src":"1004:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2399,"mutability":"mutable","name":"b","nameLocation":"1023:1:13","nodeType":"VariableDeclaration","scope":2422,"src":"1015:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1015:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1003:22:13"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2402,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"1049:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2401,"name":"bool","nodeType":"ElementaryTypeName","src":"1049:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2404,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2422,"src":"1055:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1048:15:13"},"scope":2671,"src":"988:189:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2463,"nodeType":"Block","src":"1401:417:13","statements":[{"id":2462,"nodeType":"UncheckedBlock","src":"1411:401:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2434,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1669:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2435,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1674:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1669:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2441,"nodeType":"IfStatement","src":"1665:28:13","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":2437,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1685:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":2438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1691:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2439,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1684:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2433,"id":2440,"nodeType":"Return","src":"1677:16:13"}},{"assignments":[2443],"declarations":[{"constant":false,"id":2443,"mutability":"mutable","name":"c","nameLocation":"1715:1:13","nodeType":"VariableDeclaration","scope":2462,"src":"1707:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2442,"name":"uint256","nodeType":"ElementaryTypeName","src":"1707:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2447,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1719:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1723:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1719:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1707:17:13"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2452,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2448,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"1742:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2449,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2425,"src":"1746:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1742:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2451,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2427,"src":"1751:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1742:10:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2457,"nodeType":"IfStatement","src":"1738:33:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1762:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2454,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1769:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1761:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2433,"id":2456,"nodeType":"Return","src":"1754:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1793:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":2459,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2443,"src":"1799:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2460,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1792:9:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2433,"id":2461,"nodeType":"Return","src":"1785:16:13"}]}]},"documentation":{"id":2423,"nodeType":"StructuredDocumentation","src":"1183:137:13","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":2464,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nameLocation":"1334:6:13","nodeType":"FunctionDefinition","parameters":{"id":2428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2425,"mutability":"mutable","name":"a","nameLocation":"1349:1:13","nodeType":"VariableDeclaration","scope":2464,"src":"1341:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2424,"name":"uint256","nodeType":"ElementaryTypeName","src":"1341:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2427,"mutability":"mutable","name":"b","nameLocation":"1360:1:13","nodeType":"VariableDeclaration","scope":2464,"src":"1352:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2426,"name":"uint256","nodeType":"ElementaryTypeName","src":"1352:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1340:22:13"},"returnParameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"1386:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2429,"name":"bool","nodeType":"ElementaryTypeName","src":"1386:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2464,"src":"1392:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2431,"name":"uint256","nodeType":"ElementaryTypeName","src":"1392:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1385:15:13"},"scope":2671,"src":"1325:493:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2491,"nodeType":"Block","src":"2043:114:13","statements":[{"id":2490,"nodeType":"UncheckedBlock","src":"2053:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2476,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2081:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2086:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2081:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2483,"nodeType":"IfStatement","src":"2077:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2479,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2097:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2104:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2481,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2096:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2475,"id":2482,"nodeType":"Return","src":"2089:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2484,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2128:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2485,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2467,"src":"2134:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2486,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2469,"src":"2138:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2134:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2488,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2127:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2475,"id":2489,"nodeType":"Return","src":"2120:20:13"}]}]},"documentation":{"id":2465,"nodeType":"StructuredDocumentation","src":"1824:138:13","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":2492,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nameLocation":"1976:6:13","nodeType":"FunctionDefinition","parameters":{"id":2470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2467,"mutability":"mutable","name":"a","nameLocation":"1991:1:13","nodeType":"VariableDeclaration","scope":2492,"src":"1983:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2466,"name":"uint256","nodeType":"ElementaryTypeName","src":"1983:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2469,"mutability":"mutable","name":"b","nameLocation":"2002:1:13","nodeType":"VariableDeclaration","scope":2492,"src":"1994:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2468,"name":"uint256","nodeType":"ElementaryTypeName","src":"1994:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1982:22:13"},"returnParameters":{"id":2475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2472,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2492,"src":"2028:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2471,"name":"bool","nodeType":"ElementaryTypeName","src":"2028:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2474,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2492,"src":"2034:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2473,"name":"uint256","nodeType":"ElementaryTypeName","src":"2034:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2027:15:13"},"scope":2671,"src":"1967:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2519,"nodeType":"Block","src":"2392:114:13","statements":[{"id":2518,"nodeType":"UncheckedBlock","src":"2402:98:13","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2504,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"2430:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2435:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2430:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2511,"nodeType":"IfStatement","src":"2426:29:13","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":2507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2446:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":2508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2453:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":2509,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2445:10:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":2503,"id":2510,"nodeType":"Return","src":"2438:17:13"}},{"expression":{"components":[{"hexValue":"74727565","id":2512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2477:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2513,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2495,"src":"2483:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2514,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2497,"src":"2487:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2483:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2516,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2476:13:13","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":2503,"id":2517,"nodeType":"Return","src":"2469:20:13"}]}]},"documentation":{"id":2493,"nodeType":"StructuredDocumentation","src":"2163:148:13","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":2520,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nameLocation":"2325:6:13","nodeType":"FunctionDefinition","parameters":{"id":2498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2495,"mutability":"mutable","name":"a","nameLocation":"2340:1:13","nodeType":"VariableDeclaration","scope":2520,"src":"2332:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2494,"name":"uint256","nodeType":"ElementaryTypeName","src":"2332:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"b","nameLocation":"2351:1:13","nodeType":"VariableDeclaration","scope":2520,"src":"2343:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2496,"name":"uint256","nodeType":"ElementaryTypeName","src":"2343:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2331:22:13"},"returnParameters":{"id":2503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2500,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2520,"src":"2377:4:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2499,"name":"bool","nodeType":"ElementaryTypeName","src":"2377:4:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2502,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2520,"src":"2383:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2501,"name":"uint256","nodeType":"ElementaryTypeName","src":"2383:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2376:15:13"},"scope":2671,"src":"2316:190:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2534,"nodeType":"Block","src":"2808:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2532,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2530,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2523,"src":"2825:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":2531,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2525,"src":"2829:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2825:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2529,"id":2533,"nodeType":"Return","src":"2818:12:13"}]},"documentation":{"id":2521,"nodeType":"StructuredDocumentation","src":"2512:224:13","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":2535,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"2750:3:13","nodeType":"FunctionDefinition","parameters":{"id":2526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2523,"mutability":"mutable","name":"a","nameLocation":"2762:1:13","nodeType":"VariableDeclaration","scope":2535,"src":"2754:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"2754:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"b","nameLocation":"2773:1:13","nodeType":"VariableDeclaration","scope":2535,"src":"2765:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"2765:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2753:22:13"},"returnParameters":{"id":2529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2535,"src":"2799:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2799:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2798:9:13"},"scope":2671,"src":"2741:96:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2549,"nodeType":"Block","src":"3175:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2547,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2545,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2538,"src":"3192:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2546,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2540,"src":"3196:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3192:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2544,"id":2548,"nodeType":"Return","src":"3185:12:13"}]},"documentation":{"id":2536,"nodeType":"StructuredDocumentation","src":"2843:260:13","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":2550,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"3117:3:13","nodeType":"FunctionDefinition","parameters":{"id":2541,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"a","nameLocation":"3129:1:13","nodeType":"VariableDeclaration","scope":2550,"src":"3121:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"3121:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"b","nameLocation":"3140:1:13","nodeType":"VariableDeclaration","scope":2550,"src":"3132:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2539,"name":"uint256","nodeType":"ElementaryTypeName","src":"3132:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3120:22:13"},"returnParameters":{"id":2544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2543,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2550,"src":"3166:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2542,"name":"uint256","nodeType":"ElementaryTypeName","src":"3166:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3165:9:13"},"scope":2671,"src":"3108:96:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2564,"nodeType":"Block","src":"3518:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2560,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2553,"src":"3535:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2561,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2555,"src":"3539:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3535:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2559,"id":2563,"nodeType":"Return","src":"3528:12:13"}]},"documentation":{"id":2551,"nodeType":"StructuredDocumentation","src":"3210:236:13","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":2565,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nameLocation":"3460:3:13","nodeType":"FunctionDefinition","parameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2553,"mutability":"mutable","name":"a","nameLocation":"3472:1:13","nodeType":"VariableDeclaration","scope":2565,"src":"3464:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2552,"name":"uint256","nodeType":"ElementaryTypeName","src":"3464:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2555,"mutability":"mutable","name":"b","nameLocation":"3483:1:13","nodeType":"VariableDeclaration","scope":2565,"src":"3475:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"3475:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3463:22:13"},"returnParameters":{"id":2559,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2558,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2565,"src":"3509:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"3509:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3508:9:13"},"scope":2671,"src":"3451:96:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2579,"nodeType":"Block","src":"3903:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2575,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2568,"src":"3920:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2576,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2570,"src":"3924:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3920:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2574,"id":2578,"nodeType":"Return","src":"3913:12:13"}]},"documentation":{"id":2566,"nodeType":"StructuredDocumentation","src":"3553:278:13","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator.\n Requirements:\n - The divisor cannot be zero."},"id":2580,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"3845:3:13","nodeType":"FunctionDefinition","parameters":{"id":2571,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2568,"mutability":"mutable","name":"a","nameLocation":"3857:1:13","nodeType":"VariableDeclaration","scope":2580,"src":"3849:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2567,"name":"uint256","nodeType":"ElementaryTypeName","src":"3849:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2570,"mutability":"mutable","name":"b","nameLocation":"3868:1:13","nodeType":"VariableDeclaration","scope":2580,"src":"3860:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2569,"name":"uint256","nodeType":"ElementaryTypeName","src":"3860:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3848:22:13"},"returnParameters":{"id":2574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2573,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2580,"src":"3894:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"3894:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3893:9:13"},"scope":2671,"src":"3836:96:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2594,"nodeType":"Block","src":"4452:29:13","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2590,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2583,"src":"4469:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2591,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"4473:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4469:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2589,"id":2593,"nodeType":"Return","src":"4462:12:13"}]},"documentation":{"id":2581,"nodeType":"StructuredDocumentation","src":"3938:442:13","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":2595,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"4394:3:13","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2583,"mutability":"mutable","name":"a","nameLocation":"4406:1:13","nodeType":"VariableDeclaration","scope":2595,"src":"4398:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2582,"name":"uint256","nodeType":"ElementaryTypeName","src":"4398:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2585,"mutability":"mutable","name":"b","nameLocation":"4417:1:13","nodeType":"VariableDeclaration","scope":2595,"src":"4409:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2584,"name":"uint256","nodeType":"ElementaryTypeName","src":"4409:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4397:22:13"},"returnParameters":{"id":2589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2595,"src":"4443:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"4443:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4442:9:13"},"scope":2671,"src":"4385:96:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2619,"nodeType":"Block","src":"5070:106:13","statements":[{"id":2618,"nodeType":"UncheckedBlock","src":"5080:90:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2608,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5112:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2609,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"5117:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5112:6:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2611,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2602,"src":"5120:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2607,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5104:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5104:29:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2613,"nodeType":"ExpressionStatement","src":"5104:29:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2614,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2598,"src":"5154:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2615,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2600,"src":"5158:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5154:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2606,"id":2617,"nodeType":"Return","src":"5147:12:13"}]}]},"documentation":{"id":2596,"nodeType":"StructuredDocumentation","src":"4487:453:13","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":2620,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nameLocation":"4954:3:13","nodeType":"FunctionDefinition","parameters":{"id":2603,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2598,"mutability":"mutable","name":"a","nameLocation":"4975:1:13","nodeType":"VariableDeclaration","scope":2620,"src":"4967:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2597,"name":"uint256","nodeType":"ElementaryTypeName","src":"4967:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"b","nameLocation":"4994:1:13","nodeType":"VariableDeclaration","scope":2620,"src":"4986:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2599,"name":"uint256","nodeType":"ElementaryTypeName","src":"4986:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2602,"mutability":"mutable","name":"errorMessage","nameLocation":"5019:12:13","nodeType":"VariableDeclaration","scope":2620,"src":"5005:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2601,"name":"string","nodeType":"ElementaryTypeName","src":"5005:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4957:80:13"},"returnParameters":{"id":2606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2605,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2620,"src":"5061:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2604,"name":"uint256","nodeType":"ElementaryTypeName","src":"5061:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5060:9:13"},"scope":2671,"src":"4945:231:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2644,"nodeType":"Block","src":"5785:105:13","statements":[{"id":2643,"nodeType":"UncheckedBlock","src":"5795:89:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2633,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"5827:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2634,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5831:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5827:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2636,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2627,"src":"5834:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2632,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5819:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5819:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2638,"nodeType":"ExpressionStatement","src":"5819:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2639,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2623,"src":"5868:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2640,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2625,"src":"5872:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5868:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2631,"id":2642,"nodeType":"Return","src":"5861:12:13"}]}]},"documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"5182:473:13","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":2645,"implemented":true,"kind":"function","modifiers":[],"name":"div","nameLocation":"5669:3:13","nodeType":"FunctionDefinition","parameters":{"id":2628,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2623,"mutability":"mutable","name":"a","nameLocation":"5690:1:13","nodeType":"VariableDeclaration","scope":2645,"src":"5682:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2622,"name":"uint256","nodeType":"ElementaryTypeName","src":"5682:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2625,"mutability":"mutable","name":"b","nameLocation":"5709:1:13","nodeType":"VariableDeclaration","scope":2645,"src":"5701:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2624,"name":"uint256","nodeType":"ElementaryTypeName","src":"5701:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2627,"mutability":"mutable","name":"errorMessage","nameLocation":"5734:12:13","nodeType":"VariableDeclaration","scope":2645,"src":"5720:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2626,"name":"string","nodeType":"ElementaryTypeName","src":"5720:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5672:80:13"},"returnParameters":{"id":2631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2630,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2645,"src":"5776:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2629,"name":"uint256","nodeType":"ElementaryTypeName","src":"5776:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5775:9:13"},"scope":2671,"src":"5660:230:13","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2669,"nodeType":"Block","src":"6661:105:13","statements":[{"id":2668,"nodeType":"UncheckedBlock","src":"6671:89:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2658,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6703:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6707:1:13","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6703:5:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":2661,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2652,"src":"6710:12:13","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":2657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6695:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6695:28:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2663,"nodeType":"ExpressionStatement","src":"6695:28:13"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2664,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"6744:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":2665,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2650,"src":"6748:1:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6744:5:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2656,"id":2667,"nodeType":"Return","src":"6737:12:13"}]}]},"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"5896:635:13","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":2670,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nameLocation":"6545:3:13","nodeType":"FunctionDefinition","parameters":{"id":2653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2648,"mutability":"mutable","name":"a","nameLocation":"6566:1:13","nodeType":"VariableDeclaration","scope":2670,"src":"6558:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2647,"name":"uint256","nodeType":"ElementaryTypeName","src":"6558:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2650,"mutability":"mutable","name":"b","nameLocation":"6585:1:13","nodeType":"VariableDeclaration","scope":2670,"src":"6577:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2649,"name":"uint256","nodeType":"ElementaryTypeName","src":"6577:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2652,"mutability":"mutable","name":"errorMessage","nameLocation":"6610:12:13","nodeType":"VariableDeclaration","scope":2670,"src":"6596:26:13","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2651,"name":"string","nodeType":"ElementaryTypeName","src":"6596:6:13","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6548:80:13"},"returnParameters":{"id":2656,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2655,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2670,"src":"6652:7:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2654,"name":"uint256","nodeType":"ElementaryTypeName","src":"6652:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6651:9:13"},"scope":2671,"src":"6536:230:13","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2672,"src":"467:6301:13","usedErrors":[]}],"src":"92:6677:13"},"id":13},"contracts/MathPow.sol":{"ast":{"absolutePath":"contracts/MathPow.sol","exportedSymbols":{"MathPow":[2728],"SafeMath":[2671]},"id":2729,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2673,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"33:23:14"},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2674,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2729,"sourceUnit":2672,"src":"58:57:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"MathPow","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":2728,"linearizedBaseContracts":[2728],"name":"MathPow","nameLocation":"125:7:14","nodeType":"ContractDefinition","nodes":[{"body":{"id":2726,"nodeType":"Block","src":"206:141:14","statements":[{"expression":{"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2683,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"212:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2684,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"216:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"220:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"216:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2687,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"225:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"216:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":2690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"233:1:14","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"216:18:14","trueExpression":{"id":2689,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"229:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"212:22:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2693,"nodeType":"ExpressionStatement","src":"212:22:14"},{"body":{"id":2724,"nodeType":"Block","src":"270:73:14","statements":[{"expression":{"id":2709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2705,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"278:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2706,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"282:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2707,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"284:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"282:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"278:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2710,"nodeType":"ExpressionStatement","src":"278:7:14"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2711,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"299:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"hexValue":"32","id":2712,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"303:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"299:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"308:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"299:10:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2723,"nodeType":"IfStatement","src":"295:42:14","trueBody":{"id":2722,"nodeType":"Block","src":"311:26:14","statements":[{"expression":{"id":2720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2716,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"321:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2717,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2681,"src":"325:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":2718,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2676,"src":"327:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"325:3:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"321:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2721,"nodeType":"ExpressionStatement","src":"321:7:14"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2700,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2698,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"254:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2699,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"259:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"254:6:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2725,"initializationExpression":{"expression":{"id":2696,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2694,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"246:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":2695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"251:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"246:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2697,"nodeType":"ExpressionStatement","src":"246:6:14"},"loopExpression":{"expression":{"id":2703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2701,"name":"n","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2678,"src":"262:1:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"32","id":2702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"267:1:14","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"262:6:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2704,"nodeType":"ExpressionStatement","src":"262:6:14"},"nodeType":"ForStatement","src":"241:102:14"}]},"id":2727,"implemented":true,"kind":"function","modifiers":[],"name":"pow","nameLocation":"146:3:14","nodeType":"FunctionDefinition","parameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"x","nameLocation":"158:1:14","nodeType":"VariableDeclaration","scope":2727,"src":"150:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2675,"name":"uint256","nodeType":"ElementaryTypeName","src":"150:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2678,"mutability":"mutable","name":"n","nameLocation":"169:1:14","nodeType":"VariableDeclaration","scope":2727,"src":"161:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2677,"name":"uint256","nodeType":"ElementaryTypeName","src":"161:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"149:22:14"},"returnParameters":{"id":2682,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2681,"mutability":"mutable","name":"z","nameLocation":"203:1:14","nodeType":"VariableDeclaration","scope":2727,"src":"195:9:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2680,"name":"uint256","nodeType":"ElementaryTypeName","src":"195:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"194:11:14"},"scope":2728,"src":"137:210:14","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2729,"src":"117:232:14","usedErrors":[]}],"src":"33:317:14"},"id":14},"contracts/SuperVault.sol":{"ast":{"absolutePath":"contracts/SuperVault.sol","exportedSymbols":{"AccessControl":[1498],"Address":[2098],"Context":[2120],"ERC165":[2347],"IAccessControl":[1571],"IAddressProvider":[4138],"IDexAddressProvider":[4176],"IERC165":[2359],"IERC20":[1803],"IGenericMiner":[4192],"IGovernanceAddressProvider":[4203],"IMIMO":[4223],"IPool":[628],"IPriceFeed":[4277],"IVaultsCore":[4439],"IVaultsDataProvider":[4567],"Initializable":[1725],"SafeMath":[2671],"Strings":[2323],"SuperVault":[4042]},"id":4043,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2730,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"33:33:15"},{"id":2731,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"67:23:15"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":1804,"src":"91:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeMath.sol","file":"@openzeppelin/contracts/utils/math/SafeMath.sol","id":2733,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":2672,"src":"148:57:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":2734,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":1499,"src":"206:58:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/proxy/utils/Initializable.sol","file":"@openzeppelin/contracts/proxy/utils/Initializable.sol","id":2735,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":1726,"src":"265:63:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@aave/core-v3/contracts/interfaces/IPool.sol","file":"@aave/core-v3/contracts/interfaces/IPool.sol","id":2737,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":629,"src":"329:69:15","symbolAliases":[{"foreign":{"id":2736,"name":"IPool","nodeType":"Identifier","overloadedDeclarations":[],"src":"338:5:15","typeDescriptions":{}},"nameLocation":"-1:-1:-1"}],"unitAlias":""},{"absolutePath":"contracts/interfaces/IAddressProvider.sol","file":"./interfaces/IAddressProvider.sol","id":2738,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":4139,"src":"400:43:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGovernanceAddressProvider.sol","file":"./interfaces/IGovernanceAddressProvider.sol","id":2739,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":4204,"src":"444:53:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IVaultsCore.sol","file":"./interfaces/IVaultsCore.sol","id":2740,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":4440,"src":"498:38:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IGenericMiner.sol","file":"./interfaces/IGenericMiner.sol","id":2741,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":4193,"src":"537:40:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IDexAddressProvider.sol","file":"./interfaces/IDexAddressProvider.sol","id":2742,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4043,"sourceUnit":4177,"src":"578:46:15","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2744,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":1498,"src":"857:13:15"},"id":2745,"nodeType":"InheritanceSpecifier","src":"857:13:15"},{"baseName":{"id":2746,"name":"Initializable","nodeType":"IdentifierPath","referencedDeclaration":1725,"src":"872:13:15"},"id":2747,"nodeType":"InheritanceSpecifier","src":"872:13:15"}],"canonicalName":"SuperVault","contractDependencies":[],"contractKind":"contract","documentation":{"id":2743,"nodeType":"StructuredDocumentation","src":"626:208:15","text":"@title A parallel protocol vault with added functionality\n @notice You can use this for collateral rebalancing\n @dev This contract should be cloned and initialized with a SuperVaultFactory contract"},"fullyImplemented":true,"id":4042,"linearizedBaseContracts":[4042,1725,1498,2347,2359,1571,2120],"name":"SuperVault","nameLocation":"843:10:15","nodeType":"ContractDefinition","nodes":[{"canonicalName":"SuperVault.Operation","id":2751,"members":[{"id":2748,"name":"LEVERAGE","nameLocation":"911:8:15","nodeType":"EnumValue","src":"911:8:15"},{"id":2749,"name":"REBALANCE","nameLocation":"925:9:15","nodeType":"EnumValue","src":"925:9:15"},{"id":2750,"name":"EMPTY","nameLocation":"940:5:15","nodeType":"EnumValue","src":"940:5:15"}],"name":"Operation","nameLocation":"895:9:15","nodeType":"EnumDefinition","src":"890:59:15"},{"canonicalName":"SuperVault.AggregatorRequest","id":2758,"members":[{"constant":false,"id":2753,"mutability":"mutable","name":"parToSell","nameLocation":"992:9:15","nodeType":"VariableDeclaration","scope":2758,"src":"984:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2755,"mutability":"mutable","name":"dexTxData","nameLocation":"1013:9:15","nodeType":"VariableDeclaration","scope":2758,"src":"1007:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2754,"name":"bytes","nodeType":"ElementaryTypeName","src":"1007:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2757,"mutability":"mutable","name":"dexIndex","nameLocation":"1033:8:15","nodeType":"VariableDeclaration","scope":2758,"src":"1028:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2756,"name":"uint","nodeType":"ElementaryTypeName","src":"1028:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"AggregatorRequest","nameLocation":"960:17:15","nodeType":"StructDefinition","scope":4042,"src":"953:93:15","visibility":"public"},{"constant":false,"functionSelector":"0dbe671f","id":2761,"mutability":"mutable","name":"a","nameLocation":"1074:1:15","nodeType":"VariableDeclaration","scope":4042,"src":"1050:25:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"},"typeName":{"id":2760,"nodeType":"UserDefinedTypeName","pathNode":{"id":2759,"name":"IAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4138,"src":"1050:16:15"},"referencedDeclaration":4138,"src":"1050:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"visibility":"public"},{"constant":false,"functionSelector":"bedc4066","id":2764,"mutability":"mutable","name":"ga","nameLocation":"1113:2:15","nodeType":"VariableDeclaration","scope":4042,"src":"1079:36:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"},"typeName":{"id":2763,"nodeType":"UserDefinedTypeName","pathNode":{"id":2762,"name":"IGovernanceAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4203,"src":"1079:26:15"},"referencedDeclaration":4203,"src":"1079:26:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"visibility":"public"},{"constant":false,"functionSelector":"a59a9973","id":2767,"mutability":"mutable","name":"lendingPool","nameLocation":"1132:11:15","nodeType":"VariableDeclaration","scope":4042,"src":"1119:24:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"},"typeName":{"id":2766,"nodeType":"UserDefinedTypeName","pathNode":{"id":2765,"name":"IPool","nodeType":"IdentifierPath","referencedDeclaration":628,"src":"1119:5:15"},"referencedDeclaration":628,"src":"1119:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}},"visibility":"public"},{"constant":false,"id":2770,"mutability":"mutable","name":"_dexAP","nameLocation":"1176:6:15","nodeType":"VariableDeclaration","scope":4042,"src":"1147:35:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"},"typeName":{"id":2769,"nodeType":"UserDefinedTypeName","pathNode":{"id":2768,"name":"IDexAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4176,"src":"1147:19:15"},"referencedDeclaration":4176,"src":"1147:19:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}},"visibility":"internal"},{"body":{"id":2782,"nodeType":"Block","src":"1208:75:15","statements":[{"expression":{"arguments":[{"arguments":[{"id":2774,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"1230:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":2775,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1250:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1250:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2773,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1222:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":2777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1222:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5356303031","id":2778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1263:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_985b8f506bc1b9daee5c456197edebf8bf9a5eb98683f22dba958debb0fdd634","typeString":"literal_string \"SV001\""},"value":"SV001"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_985b8f506bc1b9daee5c456197edebf8bf9a5eb98683f22dba958debb0fdd634","typeString":"literal_string \"SV001\""}],"id":2772,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1214:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1214:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2780,"nodeType":"ExpressionStatement","src":"1214:57:15"},{"id":2781,"nodeType":"PlaceholderStatement","src":"1277:1:15"}]},"id":2783,"name":"onlyOwner","nameLocation":"1196:9:15","nodeType":"ModifierDefinition","parameters":{"id":2771,"nodeType":"ParameterList","parameters":[],"src":"1205:2:15"},"src":"1187:96:15","virtual":false,"visibility":"internal"},{"body":{"id":2872,"nodeType":"Block","src":"1877:303:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2806,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"1899:2:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}],"id":2805,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1891:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2804,"name":"address","nodeType":"ElementaryTypeName","src":"1891:7:15","typeDescriptions":{}}},"id":2807,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1891:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2810,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1914:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1906:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2808,"name":"address","nodeType":"ElementaryTypeName","src":"1906:7:15","typeDescriptions":{}}},"id":2811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1906:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1891:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1883:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1883:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2814,"nodeType":"ExpressionStatement","src":"1883:34:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2818,"name":"_ga","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"1939:3:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}],"id":2817,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1931:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2816,"name":"address","nodeType":"ElementaryTypeName","src":"1931:7:15","typeDescriptions":{}}},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1931:12:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1955:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2821,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1947:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2820,"name":"address","nodeType":"ElementaryTypeName","src":"1947:7:15","typeDescriptions":{}}},"id":2823,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1947:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1931:26:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2815,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1923:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1923:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2826,"nodeType":"ExpressionStatement","src":"1923:35:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2836,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2830,"name":"_lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"1980:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}],"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1972:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2828,"name":"address","nodeType":"ElementaryTypeName","src":"1972:7:15","typeDescriptions":{}}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1972:21:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2005:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1997:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2832,"name":"address","nodeType":"ElementaryTypeName","src":"1997:7:15","typeDescriptions":{}}},"id":2835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1997:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1972:35:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2827,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1964:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1964:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2838,"nodeType":"ExpressionStatement","src":"1964:44:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2842,"name":"dexAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2030:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}],"id":2841,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2022:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2840,"name":"address","nodeType":"ElementaryTypeName","src":"2022:7:15","typeDescriptions":{}}},"id":2843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2022:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":2846,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2048:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":2845,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2040:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2844,"name":"address","nodeType":"ElementaryTypeName","src":"2040:7:15","typeDescriptions":{}}},"id":2847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2040:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2022:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2839,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2014:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2849,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2014:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2850,"nodeType":"ExpressionStatement","src":"2014:37:15"},{"expression":{"id":2853,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2851,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"2058:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2852,"name":"_a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2787,"src":"2062:2:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"src":"2058:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":2854,"nodeType":"ExpressionStatement","src":"2058:6:15"},{"expression":{"id":2857,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2855,"name":"ga","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"2070:2:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2856,"name":"_ga","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2790,"src":"2075:3:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"src":"2070:8:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"id":2858,"nodeType":"ExpressionStatement","src":"2070:8:15"},{"expression":{"id":2861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2859,"name":"lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"2084:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2860,"name":"_lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2793,"src":"2098:12:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}},"src":"2084:26:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}},"id":2862,"nodeType":"ExpressionStatement","src":"2084:26:15"},{"expression":{"id":2865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2863,"name":"_dexAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"2116:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2864,"name":"dexAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"2125:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}},"src":"2116:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}},"id":2866,"nodeType":"ExpressionStatement","src":"2116:14:15"},{"expression":{"arguments":[{"id":2868,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1217,"src":"2148:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2869,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2795,"src":"2168:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":2867,"name":"_setupRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1406,"src":"2137:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":2870,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2137:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2871,"nodeType":"ExpressionStatement","src":"2137:38:15"}]},"documentation":{"id":2784,"nodeType":"StructuredDocumentation","src":"1287:406:15","text":"@notice Initializes the Supervault contract\n@dev This replaces the constructor function as in the factory design pattern\n@param _a The address of the protocol's AddressProvider\n@param _ga The address of the protocol's GovernanceAddressProvider\n@param _lendingPool The address of the lendingPool from where flashLoans are taken\n@param _owner The owner of this SuperVault contract"},"functionSelector":"1459457a","id":2873,"implemented":true,"kind":"function","modifiers":[{"id":2801,"kind":"modifierInvocation","modifierName":{"id":2800,"name":"initializer","nodeType":"IdentifierPath","referencedDeclaration":1699,"src":"1865:11:15"},"nodeType":"ModifierInvocation","src":"1865:11:15"}],"name":"initialize","nameLocation":"1705:10:15","nodeType":"FunctionDefinition","parameters":{"id":2799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2787,"mutability":"mutable","name":"_a","nameLocation":"1738:2:15","nodeType":"VariableDeclaration","scope":2873,"src":"1721:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"},"typeName":{"id":2786,"nodeType":"UserDefinedTypeName","pathNode":{"id":2785,"name":"IAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4138,"src":"1721:16:15"},"referencedDeclaration":4138,"src":"1721:16:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"visibility":"internal"},{"constant":false,"id":2790,"mutability":"mutable","name":"_ga","nameLocation":"1773:3:15","nodeType":"VariableDeclaration","scope":2873,"src":"1746:30:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"},"typeName":{"id":2789,"nodeType":"UserDefinedTypeName","pathNode":{"id":2788,"name":"IGovernanceAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4203,"src":"1746:26:15"},"referencedDeclaration":4203,"src":"1746:26:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"visibility":"internal"},{"constant":false,"id":2793,"mutability":"mutable","name":"_lendingPool","nameLocation":"1788:12:15","nodeType":"VariableDeclaration","scope":2873,"src":"1782:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"},"typeName":{"id":2792,"nodeType":"UserDefinedTypeName","pathNode":{"id":2791,"name":"IPool","nodeType":"IdentifierPath","referencedDeclaration":628,"src":"1782:5:15"},"referencedDeclaration":628,"src":"1782:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}},"visibility":"internal"},{"constant":false,"id":2795,"mutability":"mutable","name":"_owner","nameLocation":"1814:6:15","nodeType":"VariableDeclaration","scope":2873,"src":"1806:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2794,"name":"address","nodeType":"ElementaryTypeName","src":"1806:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2798,"mutability":"mutable","name":"dexAP","nameLocation":"1846:5:15","nodeType":"VariableDeclaration","scope":2873,"src":"1826:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"},"typeName":{"id":2797,"nodeType":"UserDefinedTypeName","pathNode":{"id":2796,"name":"IDexAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4176,"src":"1826:19:15"},"referencedDeclaration":4176,"src":"1826:19:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}},"visibility":"internal"}],"src":"1715:140:15"},"returnParameters":{"id":2802,"nodeType":"ParameterList","parameters":[],"src":"1877:0:15"},"scope":4042,"src":"1696:484:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2990,"nodeType":"Block","src":"3043:726:15","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2899,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2893,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3057:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3057:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":2897,"name":"lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3079:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}],"id":2896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3071:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2895,"name":"address","nodeType":"ElementaryTypeName","src":"3071:7:15","typeDescriptions":{}}},"id":2898,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3071:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3057:34:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5356303032","id":2900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3093:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_4103a63670b349a9676cf644fe9c35170cd4d1b9ec6099358c4cf84fece51732","typeString":"literal_string \"SV002\""},"value":"SV002"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4103a63670b349a9676cf644fe9c35170cd4d1b9ec6099358c4cf84fece51732","typeString":"literal_string \"SV002\""}],"id":2892,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3049:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3049:52:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2902,"nodeType":"ExpressionStatement","src":"3049:52:15"},{"assignments":[2905,2907],"declarations":[{"constant":false,"id":2905,"mutability":"mutable","name":"operation","nameLocation":"3118:9:15","nodeType":"VariableDeclaration","scope":2990,"src":"3108:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"},"typeName":{"id":2904,"nodeType":"UserDefinedTypeName","pathNode":{"id":2903,"name":"Operation","nodeType":"IdentifierPath","referencedDeclaration":2751,"src":"3108:9:15"},"referencedDeclaration":2751,"src":"3108:9:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},"visibility":"internal"},{"constant":false,"id":2907,"mutability":"mutable","name":"operationParams","nameLocation":"3142:15:15","nodeType":"VariableDeclaration","scope":2990,"src":"3129:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2906,"name":"bytes","nodeType":"ElementaryTypeName","src":"3129:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":2916,"initialValue":{"arguments":[{"id":2910,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2887,"src":"3172:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"components":[{"id":2911,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"3181:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2751_$","typeString":"type(enum SuperVault.Operation)"}},{"id":2913,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3192:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":2912,"name":"bytes","nodeType":"ElementaryTypeName","src":"3192:5:15","typeDescriptions":{}}}],"id":2914,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3180:18:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_enum$_Operation_$2751_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(enum SuperVault.Operation),type(bytes storage pointer))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_tuple$_t_type$_t_enum$_Operation_$2751_$_$_t_type$_t_bytes_storage_ptr_$_$","typeString":"tuple(type(enum SuperVault.Operation),type(bytes storage pointer))"}],"expression":{"id":2908,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3161:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3161:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":2915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3161:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_enum$_Operation_$2751_$_t_bytes_memory_ptr_$","typeString":"tuple(enum SuperVault.Operation,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"3107:92:15"},{"assignments":[2919],"declarations":[{"constant":false,"id":2919,"mutability":"mutable","name":"asset","nameLocation":"3212:5:15","nodeType":"VariableDeclaration","scope":2990,"src":"3205:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":2918,"nodeType":"UserDefinedTypeName","pathNode":{"id":2917,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"3205:6:15"},"referencedDeclaration":1803,"src":"3205:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":2925,"initialValue":{"arguments":[{"baseExpression":{"id":2921,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2877,"src":"3227:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":2923,"indexExpression":{"hexValue":"30","id":2922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3234:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3227:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2920,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"3220:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":2924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3220:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"3205:32:15"},{"assignments":[2927],"declarations":[{"constant":false,"id":2927,"mutability":"mutable","name":"flashloanRepayAmount","nameLocation":"3251:20:15","nodeType":"VariableDeclaration","scope":2990,"src":"3243:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2926,"name":"uint256","nodeType":"ElementaryTypeName","src":"3243:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2935,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2934,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":2928,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"3274:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2930,"indexExpression":{"hexValue":"30","id":2929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3282:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3274:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"baseExpression":{"id":2931,"name":"premiums","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2883,"src":"3287:8:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2933,"indexExpression":{"hexValue":"30","id":2932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3296:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3287:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3274:24:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3243:55:15"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"},"id":2939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2936,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3308:9:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2937,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"3321:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2751_$","typeString":"type(enum SuperVault.Operation)"}},"id":2938,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LEVERAGE","nodeType":"MemberAccess","referencedDeclaration":2748,"src":"3321:18:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},"src":"3308:31:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2947,"nodeType":"IfStatement","src":"3304:115:15","trueBody":{"id":2946,"nodeType":"Block","src":"3341:78:15","statements":[{"expression":{"arguments":[{"id":2941,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3367:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},{"id":2942,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3374:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2943,"name":"operationParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3396:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2940,"name":"leverageOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3041,"src":"3349:17:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1803_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,uint256,bytes memory)"}},"id":2944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3349:63:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2945,"nodeType":"ExpressionStatement","src":"3349:63:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2948,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3428:9:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2949,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"3441:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2751_$","typeString":"type(enum SuperVault.Operation)"}},"id":2950,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"REBALANCE","nodeType":"MemberAccess","referencedDeclaration":2749,"src":"3441:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},"src":"3428:32:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2962,"nodeType":"IfStatement","src":"3424:129:15","trueBody":{"id":2961,"nodeType":"Block","src":"3462:91:15","statements":[{"expression":{"arguments":[{"id":2953,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3489:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},{"baseExpression":{"id":2954,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"3496:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2956,"indexExpression":{"hexValue":"30","id":2955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3504:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3496:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2957,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3508:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2958,"name":"operationParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3530:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2952,"name":"rebalanceOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"3470:18:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1803_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,uint256,uint256,bytes memory)"}},"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3470:76:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2960,"nodeType":"ExpressionStatement","src":"3470:76:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2963,"name":"operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2905,"src":"3562:9:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2964,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"3575:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2751_$","typeString":"type(enum SuperVault.Operation)"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"EMPTY","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"3575:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},"src":"3562:28:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2977,"nodeType":"IfStatement","src":"3558:126:15","trueBody":{"id":2976,"nodeType":"Block","src":"3592:92:15","statements":[{"expression":{"arguments":[{"id":2968,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3620:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},{"baseExpression":{"id":2969,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2880,"src":"3627:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":2971,"indexExpression":{"hexValue":"30","id":2970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3635:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3627:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2972,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3639:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2973,"name":"operationParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2907,"src":"3661:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2967,"name":"emptyVaultOperation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"3600:19:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$1803_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,uint256,uint256,bytes memory)"}},"id":2974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3600:77:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2975,"nodeType":"ExpressionStatement","src":"3600:77:15"}]}},{"expression":{"arguments":[{"arguments":[{"id":2983,"name":"lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"3712:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}],"id":2982,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3704:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2981,"name":"address","nodeType":"ElementaryTypeName","src":"3704:7:15","typeDescriptions":{}}},"id":2984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3704:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2985,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2927,"src":"3726:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2978,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2919,"src":"3690:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":2980,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"3690:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":2986,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3690:57:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2987,"nodeType":"ExpressionStatement","src":"3690:57:15"},{"expression":{"hexValue":"74727565","id":2988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3760:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2891,"id":2989,"nodeType":"Return","src":"3753:11:15"}]},"documentation":{"id":2874,"nodeType":"StructuredDocumentation","src":"2184:666:15","text":"@notice Routes a call from a flashloan pool to a leverage or rebalance operation\n@dev This Integrates with AAVE V2 flashLoans\n@dev This function is called by the lendingPool during execution of the leverage function\n@param assets An address array with one element corresponding to the address of the leveraged or rebalanced asset\n@param amounts A uint array with one element corresponding to the amount of the leveraged or rebalanced asset\n@param premiums A uint array with one element corresponding to the flashLoan fees\n@param params Bytes sent by the leverage or rebalance function that contains information on the aggregator swap"},"functionSelector":"920f5c84","id":2991,"implemented":true,"kind":"function","modifiers":[],"name":"executeOperation","nameLocation":"2862:16:15","nodeType":"FunctionDefinition","parameters":{"id":2888,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2877,"mutability":"mutable","name":"assets","nameLocation":"2903:6:15","nodeType":"VariableDeclaration","scope":2991,"src":"2884:25:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2875,"name":"address","nodeType":"ElementaryTypeName","src":"2884:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2876,"nodeType":"ArrayTypeName","src":"2884:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":2880,"mutability":"mutable","name":"amounts","nameLocation":"2934:7:15","nodeType":"VariableDeclaration","scope":2991,"src":"2915:26:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2878,"name":"uint256","nodeType":"ElementaryTypeName","src":"2915:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2879,"nodeType":"ArrayTypeName","src":"2915:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2883,"mutability":"mutable","name":"premiums","nameLocation":"2966:8:15","nodeType":"VariableDeclaration","scope":2991,"src":"2947:27:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2881,"name":"uint256","nodeType":"ElementaryTypeName","src":"2947:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2882,"nodeType":"ArrayTypeName","src":"2947:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":2885,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"2980:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2884,"name":"address","nodeType":"ElementaryTypeName","src":"2980:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2887,"mutability":"mutable","name":"params","nameLocation":"3008:6:15","nodeType":"VariableDeclaration","scope":2991,"src":"2993:21:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":2886,"name":"bytes","nodeType":"ElementaryTypeName","src":"2993:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2878:140:15"},"returnParameters":{"id":2891,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2890,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2991,"src":"3037:4:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2889,"name":"bool","nodeType":"ElementaryTypeName","src":"3037:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3036:6:15"},"scope":4042,"src":"2853:916:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3040,"nodeType":"Block","src":"4001:210:15","statements":[{"expression":{"arguments":[{"id":3003,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"4020:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":3004,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4028:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}],"id":3002,"name":"leverageSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"4007:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes_memory_ptr_$_t_contract$_IERC20_$1803_$returns$__$","typeString":"function (bytes memory,contract IERC20)"}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4007:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3006,"nodeType":"ExpressionStatement","src":"4007:27:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3012,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4073:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3011,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4065:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"4065:7:15","typeDescriptions":{}}},"id":3013,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4065:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3008,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4049:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"4049:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3014,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4049:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3015,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"4083:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4049:54:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5356313031","id":3017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4105:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62","typeString":"literal_string \"SV101\""},"value":"SV101"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62","typeString":"literal_string \"SV101\""}],"id":3007,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4041:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3018,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4041:72:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3019,"nodeType":"ExpressionStatement","src":"4041:72:15"},{"expression":{"arguments":[{"arguments":[{"id":3027,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4144:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}],"id":3026,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4136:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3025,"name":"address","nodeType":"ElementaryTypeName","src":"4136:7:15","typeDescriptions":{}}},"id":3028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4136:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3033,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4176:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3032,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4168:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3031,"name":"address","nodeType":"ElementaryTypeName","src":"4168:7:15","typeDescriptions":{}}},"id":3034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4168:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3029,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2995,"src":"4152:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"4152:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4152:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":3036,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2997,"src":"4185:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4152:53:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3020,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"4119:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"4119:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3023,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4119:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3024,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":4347,"src":"4119:16:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":3038,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4119:87:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3039,"nodeType":"ExpressionStatement","src":"4119:87:15"}]},"documentation":{"id":2992,"nodeType":"StructuredDocumentation","src":"3773:108:15","text":"@notice Used by executeOperation to call an aggregator to swap and deposit the swapped asset into a vault"},"id":3041,"implemented":true,"kind":"function","modifiers":[],"name":"leverageOperation","nameLocation":"3893:17:15","nodeType":"FunctionDefinition","parameters":{"id":3000,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2995,"mutability":"mutable","name":"token","nameLocation":"3923:5:15","nodeType":"VariableDeclaration","scope":3041,"src":"3916:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":2994,"nodeType":"UserDefinedTypeName","pathNode":{"id":2993,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"3916:6:15"},"referencedDeclaration":1803,"src":"3916:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":2997,"mutability":"mutable","name":"flashloanRepayAmount","nameLocation":"3942:20:15","nodeType":"VariableDeclaration","scope":3041,"src":"3934:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3934:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2999,"mutability":"mutable","name":"params","nameLocation":"3981:6:15","nodeType":"VariableDeclaration","scope":3041,"src":"3968:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":2998,"name":"bytes","nodeType":"ElementaryTypeName","src":"3968:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3910:81:15"},"returnParameters":{"id":3001,"nodeType":"ParameterList","parameters":[],"src":"4001:0:15"},"scope":4042,"src":"3884:327:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3099,"nodeType":"Block","src":"5078:303:15","statements":[{"expression":{"arguments":[{"expression":{"id":3063,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5111:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5111:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3067,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5131:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5123:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"5123:7:15","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5123:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3069,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3046,"src":"5138:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3060,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"5091:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3059,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"5084:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3061,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5084:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"5084:26:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5084:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3071,"nodeType":"ExpressionStatement","src":"5084:68:15"},{"assignments":[3073],"declarations":[{"constant":false,"id":3073,"mutability":"mutable","name":"leverageParams","nameLocation":"5171:14:15","nodeType":"VariableDeclaration","scope":3099,"src":"5158:27:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3072,"name":"bytes","nodeType":"ElementaryTypeName","src":"5158:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3080,"initialValue":{"arguments":[{"id":3076,"name":"parToSell","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3050,"src":"5199:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3077,"name":"dexTxData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3052,"src":"5210:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3078,"name":"dexIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3054,"src":"5221:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3074,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5188:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3075,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5188:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3079,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5188:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5158:72:15"},{"assignments":[3082],"declarations":[{"constant":false,"id":3082,"mutability":"mutable","name":"params","nameLocation":"5249:6:15","nodeType":"VariableDeclaration","scope":3099,"src":"5236:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3081,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3089,"initialValue":{"arguments":[{"expression":{"id":3085,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"5269:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2751_$","typeString":"type(enum SuperVault.Operation)"}},"id":3086,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"LEVERAGE","nodeType":"MemberAccess","referencedDeclaration":2748,"src":"5269:18:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},{"id":3087,"name":"leverageParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"5289:14:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3083,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5258:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3084,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"5258:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3088,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5258:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"5236:68:15"},{"expression":{"arguments":[{"id":3091,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3044,"src":"5324:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3092,"name":"borrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3048,"src":"5331:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3093,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3082,"src":"5345:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3090,"name":"takeFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"5310:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3094,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5310:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3095,"nodeType":"ExpressionStatement","src":"5310:42:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3096,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"5358:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3097,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5358:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3098,"nodeType":"ExpressionStatement","src":"5358:18:15"}]},"documentation":{"id":3042,"nodeType":"StructuredDocumentation","src":"4215:665:15","text":"@notice Leverage an asset using a flashloan to balance collateral\n@dev This uses an AAVE V2 flashLoan that will call executeOperation\n@param asset The address of the asset to leverage\n@param depositAmount The initial starting amount, e.g. 1 ETH\n@param borrowAmount The amount to be borrowed, e.g. 2 ETH, bringing the total to 3 ETH\n@param parToSell The amount of PAR we'll borrow so we can repay the leverage\n@param dexTxData Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\n@param dexIndex DexAddressProvider index of the aggregator to be used for selling PAR, either OneInch or Paraswap"},"functionSelector":"1ae63f3e","id":3100,"implemented":true,"kind":"function","modifiers":[{"id":3057,"kind":"modifierInvocation","modifierName":{"id":3056,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"5068:9:15"},"nodeType":"ModifierInvocation","src":"5068:9:15"}],"name":"leverage","nameLocation":"4892:8:15","nodeType":"FunctionDefinition","parameters":{"id":3055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3044,"mutability":"mutable","name":"asset","nameLocation":"4914:5:15","nodeType":"VariableDeclaration","scope":3100,"src":"4906:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3043,"name":"address","nodeType":"ElementaryTypeName","src":"4906:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3046,"mutability":"mutable","name":"depositAmount","nameLocation":"4933:13:15","nodeType":"VariableDeclaration","scope":3100,"src":"4925:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3045,"name":"uint256","nodeType":"ElementaryTypeName","src":"4925:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3048,"mutability":"mutable","name":"borrowAmount","nameLocation":"4963:12:15","nodeType":"VariableDeclaration","scope":3100,"src":"4955:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3047,"name":"uint256","nodeType":"ElementaryTypeName","src":"4955:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3050,"mutability":"mutable","name":"parToSell","nameLocation":"4992:9:15","nodeType":"VariableDeclaration","scope":3100,"src":"4984:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3049,"name":"uint256","nodeType":"ElementaryTypeName","src":"4984:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3052,"mutability":"mutable","name":"dexTxData","nameLocation":"5025:9:15","nodeType":"VariableDeclaration","scope":3100,"src":"5010:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3051,"name":"bytes","nodeType":"ElementaryTypeName","src":"5010:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3054,"mutability":"mutable","name":"dexIndex","nameLocation":"5045:8:15","nodeType":"VariableDeclaration","scope":3100,"src":"5040:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3053,"name":"uint","nodeType":"ElementaryTypeName","src":"5040:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4900:158:15"},"returnParameters":{"id":3058,"nodeType":"ParameterList","parameters":[],"src":"5078:0:15"},"scope":4042,"src":"4883:498:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3212,"nodeType":"Block","src":"5662:644:15","statements":[{"assignments":[3114,3116,3118,3120,3122],"declarations":[{"constant":false,"id":3114,"mutability":"mutable","name":"vaultId","nameLocation":"5677:7:15","nodeType":"VariableDeclaration","scope":3212,"src":"5669:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3113,"name":"uint256","nodeType":"ElementaryTypeName","src":"5669:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3116,"mutability":"mutable","name":"toCollateral","nameLocation":"5694:12:15","nodeType":"VariableDeclaration","scope":3212,"src":"5686:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3115,"name":"address","nodeType":"ElementaryTypeName","src":"5686:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3118,"mutability":"mutable","name":"parAmount","nameLocation":"5716:9:15","nodeType":"VariableDeclaration","scope":3212,"src":"5708:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3117,"name":"uint256","nodeType":"ElementaryTypeName","src":"5708:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3120,"mutability":"mutable","name":"dexTxData","nameLocation":"5740:9:15","nodeType":"VariableDeclaration","scope":3212,"src":"5727:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3119,"name":"bytes","nodeType":"ElementaryTypeName","src":"5727:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3122,"mutability":"mutable","name":"dexIndex","nameLocation":"5756:8:15","nodeType":"VariableDeclaration","scope":3212,"src":"5751:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3121,"name":"uint","nodeType":"ElementaryTypeName","src":"5751:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3138,"initialValue":{"arguments":[{"id":3125,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3110,"src":"5786:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5795:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3126,"name":"uint256","nodeType":"ElementaryTypeName","src":"5795:7:15","typeDescriptions":{}}},{"id":3129,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5804:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3128,"name":"address","nodeType":"ElementaryTypeName","src":"5804:7:15","typeDescriptions":{}}},{"id":3131,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5813:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3130,"name":"uint256","nodeType":"ElementaryTypeName","src":"5813:7:15","typeDescriptions":{}}},{"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5822:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3132,"name":"bytes","nodeType":"ElementaryTypeName","src":"5822:5:15","typeDescriptions":{}}},{"id":3135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5829:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3134,"name":"uint","nodeType":"ElementaryTypeName","src":"5829:4:15","typeDescriptions":{}}}],"id":3136,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5794:41:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256),type(bytes storage pointer),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_address_$_$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(address),type(uint256),type(bytes storage pointer),type(uint256))"}],"expression":{"id":3123,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"5768:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"5768:17:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5768:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_payable_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256,address payable,uint256,bytes memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"5668:168:15"},{"expression":{"arguments":[{"id":3140,"name":"dexIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3122,"src":"5857:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3141,"name":"fromCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"5867:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},{"id":3142,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3106,"src":"5883:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3143,"name":"dexTxData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3120,"src":"5891:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3139,"name":"aggregatorSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"5842:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_contract$_IERC20_$1803_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,contract IERC20,uint256,bytes memory)"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5842:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3145,"nodeType":"ExpressionStatement","src":"5842:59:15"},{"assignments":[3147],"declarations":[{"constant":false,"id":3147,"mutability":"mutable","name":"depositAmount","nameLocation":"5916:13:15","nodeType":"VariableDeclaration","scope":3212,"src":"5908:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3146,"name":"uint256","nodeType":"ElementaryTypeName","src":"5908:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3157,"initialValue":{"arguments":[{"arguments":[{"id":3154,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5971:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3153,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5963:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3152,"name":"address","nodeType":"ElementaryTypeName","src":"5963:7:15","typeDescriptions":{}}},"id":3155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5963:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"id":3149,"name":"toCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"5939:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3148,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"5932:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5932:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"5932:30:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5932:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5908:69:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3164,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6021:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3165,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"6021:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6021:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}],"id":3163,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6013:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"6013:7:15","typeDescriptions":{}}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6013:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3168,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"6032:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3159,"name":"toCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"5991:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3158,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"5984:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5984:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"5984:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3169,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5984:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3170,"nodeType":"ExpressionStatement","src":"5984:62:15"},{"expression":{"arguments":[{"id":3176,"name":"toCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3116,"src":"6079:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3177,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"6093:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3178,"name":"parAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"6108:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3171,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6053:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"6053:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3174,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6053:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3175,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositAndBorrow","nodeType":"MemberAccess","referencedDeclaration":4371,"src":"6053:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6053:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3180,"nodeType":"ExpressionStatement","src":"6053:65:15"},{"expression":{"arguments":[{"id":3186,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6139:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3187,"name":"parAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3118,"src":"6148:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3181,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6124:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"6124:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3184,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6124:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"repay","nodeType":"MemberAccess","referencedDeclaration":4409,"src":"6124:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6124:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3189,"nodeType":"ExpressionStatement","src":"6124:34:15"},{"expression":{"arguments":[{"id":3195,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3114,"src":"6183:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3196,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"6192:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3190,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"6165:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"6165:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6165:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":4383,"src":"6165:17:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6165:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3198,"nodeType":"ExpressionStatement","src":"6165:48:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3204,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"6261:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6253:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3202,"name":"address","nodeType":"ElementaryTypeName","src":"6253:7:15","typeDescriptions":{}}},"id":3205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6253:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3200,"name":"fromCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3104,"src":"6228:14:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3201,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"6228:24:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6228:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3207,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3108,"src":"6271:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6228:63:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5356313031","id":3209,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6293:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62","typeString":"literal_string \"SV101\""},"value":"SV101"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62","typeString":"literal_string \"SV101\""}],"id":3199,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6220:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3210,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6220:81:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3211,"nodeType":"ExpressionStatement","src":"6220:81:15"}]},"documentation":{"id":3101,"nodeType":"StructuredDocumentation","src":"5385:127:15","text":"@notice Used by executeOperation to flashloan an asset, call an aggregator to swap for toAsset, and then rebalance the vault"},"id":3213,"implemented":true,"kind":"function","modifiers":[],"name":"rebalanceOperation","nameLocation":"5524:18:15","nodeType":"FunctionDefinition","parameters":{"id":3111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3104,"mutability":"mutable","name":"fromCollateral","nameLocation":"5555:14:15","nodeType":"VariableDeclaration","scope":3213,"src":"5548:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3103,"nodeType":"UserDefinedTypeName","pathNode":{"id":3102,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"5548:6:15"},"referencedDeclaration":1803,"src":"5548:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3106,"mutability":"mutable","name":"amount","nameLocation":"5583:6:15","nodeType":"VariableDeclaration","scope":3213,"src":"5575:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3105,"name":"uint256","nodeType":"ElementaryTypeName","src":"5575:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3108,"mutability":"mutable","name":"flashloanRepayAmount","nameLocation":"5603:20:15","nodeType":"VariableDeclaration","scope":3213,"src":"5595:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3107,"name":"uint256","nodeType":"ElementaryTypeName","src":"5595:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3110,"mutability":"mutable","name":"params","nameLocation":"5642:6:15","nodeType":"VariableDeclaration","scope":3213,"src":"5629:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3109,"name":"bytes","nodeType":"ElementaryTypeName","src":"5629:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5542:110:15"},"returnParameters":{"id":3112,"nodeType":"ParameterList","parameters":[],"src":"5662:0:15"},"scope":4042,"src":"5515:791:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3262,"nodeType":"Block","src":"7708:273:15","statements":[{"assignments":[3234],"declarations":[{"constant":false,"id":3234,"mutability":"mutable","name":"rebalanceParams","nameLocation":"7727:15:15","nodeType":"VariableDeclaration","scope":3262,"src":"7714:28:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3233,"name":"bytes","nodeType":"ElementaryTypeName","src":"7714:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3243,"initialValue":{"arguments":[{"id":3237,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3216,"src":"7756:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3238,"name":"toCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3218,"src":"7765:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3239,"name":"parAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"7779:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3240,"name":"dexTxData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3226,"src":"7790:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3241,"name":"dexIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3228,"src":"7801:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3235,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7745:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3236,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"7745:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7745:65:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7714:96:15"},{"assignments":[3245],"declarations":[{"constant":false,"id":3245,"mutability":"mutable","name":"params","nameLocation":"7829:6:15","nodeType":"VariableDeclaration","scope":3262,"src":"7816:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3244,"name":"bytes","nodeType":"ElementaryTypeName","src":"7816:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3252,"initialValue":{"arguments":[{"expression":{"id":3248,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"7849:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2751_$","typeString":"type(enum SuperVault.Operation)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"REBALANCE","nodeType":"MemberAccess","referencedDeclaration":2749,"src":"7849:19:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},{"id":3250,"name":"rebalanceParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"7870:15:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3246,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7838:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"7838:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3251,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7838:48:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"7816:70:15"},{"expression":{"arguments":[{"id":3254,"name":"fromCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3220,"src":"7907:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3255,"name":"fromCollateralAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3222,"src":"7923:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3256,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3245,"src":"7945:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3253,"name":"takeFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"7893:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7893:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3258,"nodeType":"ExpressionStatement","src":"7893:59:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3259,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"7958:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7958:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3261,"nodeType":"ExpressionStatement","src":"7958:18:15"}]},"documentation":{"id":3214,"nodeType":"StructuredDocumentation","src":"6310:932:15","text":"@notice Uses a flashloan to exchange one collateral type for another, e.g. to hold less volatile collateral\n@notice Both collateral vaults must have been created by this contract using the depositToVault or depositAndBorrowFromVault functions\n@dev This uses an AAVE V2 flashLoan that will call executeOperation\n@param vaultId The Id of the vault to reduce the collateral of\n@param toCollateral Address of the collateral to rebalance to\n@param fromCollateral Address of the starting collateral that will be reduced\n@param fromCollateralAmount Amount of starting collateral to deleverage\n@param parAmount Amount of par that will be deposited to exchange for\n@param dexTxData Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\n@param dexIndex DexAddressProvider index representing the aggregator to be used for selling PAR, either OneInch or Paraswap"},"functionSelector":"48b64410","id":3263,"implemented":true,"kind":"function","modifiers":[{"id":3231,"kind":"modifierInvocation","modifierName":{"id":3230,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"7698:9:15"},"nodeType":"ModifierInvocation","src":"7698:9:15"}],"name":"rebalance","nameLocation":"7254:9:15","nodeType":"FunctionDefinition","parameters":{"id":3229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3216,"mutability":"mutable","name":"vaultId","nameLocation":"7277:7:15","nodeType":"VariableDeclaration","scope":3263,"src":"7269:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"7269:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3218,"mutability":"mutable","name":"toCollateral","nameLocation":"7323:12:15","nodeType":"VariableDeclaration","scope":3263,"src":"7315:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3217,"name":"address","nodeType":"ElementaryTypeName","src":"7315:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3220,"mutability":"mutable","name":"fromCollateral","nameLocation":"7349:14:15","nodeType":"VariableDeclaration","scope":3263,"src":"7341:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3219,"name":"address","nodeType":"ElementaryTypeName","src":"7341:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3222,"mutability":"mutable","name":"fromCollateralAmount","nameLocation":"7475:20:15","nodeType":"VariableDeclaration","scope":3263,"src":"7467:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3221,"name":"uint256","nodeType":"ElementaryTypeName","src":"7467:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3224,"mutability":"mutable","name":"parAmount","nameLocation":"7584:9:15","nodeType":"VariableDeclaration","scope":3263,"src":"7576:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3223,"name":"uint256","nodeType":"ElementaryTypeName","src":"7576:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3226,"mutability":"mutable","name":"dexTxData","nameLocation":"7655:9:15","nodeType":"VariableDeclaration","scope":3263,"src":"7640:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3225,"name":"bytes","nodeType":"ElementaryTypeName","src":"7640:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3228,"mutability":"mutable","name":"dexIndex","nameLocation":"7675:8:15","nodeType":"VariableDeclaration","scope":3263,"src":"7670:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3227,"name":"uint","nodeType":"ElementaryTypeName","src":"7670:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7263:425:15"},"returnParameters":{"id":3232,"nodeType":"ParameterList","parameters":[],"src":"7708:0:15"},"scope":4042,"src":"7245:736:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3367,"nodeType":"Block","src":"8397:655:15","statements":[{"assignments":[3277,3279,3281],"declarations":[{"constant":false,"id":3277,"mutability":"mutable","name":"vaultId","nameLocation":"8441:7:15","nodeType":"VariableDeclaration","scope":3367,"src":"8433:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3276,"name":"uint256","nodeType":"ElementaryTypeName","src":"8433:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3279,"mutability":"mutable","name":"dexTxData","nameLocation":"8463:9:15","nodeType":"VariableDeclaration","scope":3367,"src":"8450:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3278,"name":"bytes","nodeType":"ElementaryTypeName","src":"8450:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3281,"mutability":"mutable","name":"dexIndex","nameLocation":"8479:8:15","nodeType":"VariableDeclaration","scope":3367,"src":"8474:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3280,"name":"uint","nodeType":"ElementaryTypeName","src":"8474:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3293,"initialValue":{"arguments":[{"id":3284,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3273,"src":"8502:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3286,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8511:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"8511:7:15","typeDescriptions":{}}},{"id":3288,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8520:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3287,"name":"bytes","nodeType":"ElementaryTypeName","src":"8520:5:15","typeDescriptions":{}}},{"id":3290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8527:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3289,"name":"uint","nodeType":"ElementaryTypeName","src":"8527:4:15","typeDescriptions":{}}}],"id":3291,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"8510:22:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(bytes storage pointer),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(bytes storage pointer),type(uint256))"}],"expression":{"id":3282,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"8491:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"8491:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8491:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256,bytes memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"8432:101:15"},{"expression":{"arguments":[{"id":3295,"name":"dexIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3281,"src":"8555:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3296,"name":"vaultCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"8565:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},{"id":3297,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3269,"src":"8582:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3298,"name":"dexTxData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3279,"src":"8590:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3294,"name":"aggregatorSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"8540:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_contract$_IERC20_$1803_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,contract IERC20,uint256,bytes memory)"}},"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8540:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3300,"nodeType":"ExpressionStatement","src":"8540:60:15"},{"assignments":[3303],"declarations":[{"constant":false,"id":3303,"mutability":"mutable","name":"par","nameLocation":"8656:3:15","nodeType":"VariableDeclaration","scope":3367,"src":"8649:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3302,"nodeType":"UserDefinedTypeName","pathNode":{"id":3301,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"8649:6:15"},"referencedDeclaration":1803,"src":"8649:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3309,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3305,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"8669:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"8669:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3307,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8669:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3304,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"8662:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8662:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"8649:32:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"8707:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"8707:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8707:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}],"id":3314,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8699:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3313,"name":"address","nodeType":"ElementaryTypeName","src":"8699:7:15","typeDescriptions":{}}},"id":3318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8699:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3323,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"8740:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3322,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8732:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3321,"name":"address","nodeType":"ElementaryTypeName","src":"8732:7:15","typeDescriptions":{}}},"id":3324,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8732:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3319,"name":"par","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"8718:3:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"8718:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3310,"name":"par","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3303,"src":"8687:3:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"8687:11:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3326,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8687:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3327,"nodeType":"ExpressionStatement","src":"8687:60:15"},{"expression":{"arguments":[{"id":3333,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"8798:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3328,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"8780:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"8780:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8780:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"repayAll","nodeType":"MemberAccess","referencedDeclaration":4402,"src":"8780:17:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":3334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8780:26:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3335,"nodeType":"ExpressionStatement","src":"8780:26:15"},{"assignments":[3337],"declarations":[{"constant":false,"id":3337,"mutability":"mutable","name":"vaultBalance","nameLocation":"8820:12:15","nodeType":"VariableDeclaration","scope":3367,"src":"8812:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3336,"name":"uint256","nodeType":"ElementaryTypeName","src":"8812:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3344,"initialValue":{"arguments":[{"id":3342,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"8873:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3338,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"8835:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"vaultsData","nodeType":"MemberAccess","referencedDeclaration":4132,"src":"8835:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsDataProvider_$4567_$","typeString":"function () view external returns (contract IVaultsDataProvider)"}},"id":3340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8835:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsDataProvider_$4567","typeString":"contract IVaultsDataProvider"}},"id":3341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"vaultCollateralBalance","nodeType":"MemberAccess","referencedDeclaration":4524,"src":"8835:37:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view external returns (uint256)"}},"id":3343,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8835:46:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8812:69:15"},{"expression":{"arguments":[{"id":3350,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3277,"src":"8936:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3351,"name":"vaultBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3337,"src":"8945:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3345,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"8918:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"8918:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3348,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8918:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":4383,"src":"8918:17:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8918:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3353,"nodeType":"ExpressionStatement","src":"8918:40:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":3359,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9007:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3358,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8999:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3357,"name":"address","nodeType":"ElementaryTypeName","src":"8999:7:15","typeDescriptions":{}}},"id":3360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3355,"name":"vaultCollateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3267,"src":"8973:15:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3356,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"8973:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8973:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":3362,"name":"flashloanRepayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3271,"src":"9017:20:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8973:64:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5356313031","id":3364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9039:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62","typeString":"literal_string \"SV101\""},"value":"SV101"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62","typeString":"literal_string \"SV101\""}],"id":3354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8965:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3365,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8965:82:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3366,"nodeType":"ExpressionStatement","src":"8965:82:15"}]},"documentation":{"id":3264,"nodeType":"StructuredDocumentation","src":"7985:260:15","text":"@notice Used by executeOperation to repay all debt for a vault, withdraw collateral from the vault, and send the collateral back to the user\n@notice There will likely be some leftover par after repaying the loan; that will also be sent back to the user"},"id":3368,"implemented":true,"kind":"function","modifiers":[],"name":"emptyVaultOperation","nameLocation":"8257:19:15","nodeType":"FunctionDefinition","parameters":{"id":3274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3267,"mutability":"mutable","name":"vaultCollateral","nameLocation":"8289:15:15","nodeType":"VariableDeclaration","scope":3368,"src":"8282:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3266,"nodeType":"UserDefinedTypeName","pathNode":{"id":3265,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"8282:6:15"},"referencedDeclaration":1803,"src":"8282:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3269,"mutability":"mutable","name":"amount","nameLocation":"8318:6:15","nodeType":"VariableDeclaration","scope":3368,"src":"8310:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3268,"name":"uint256","nodeType":"ElementaryTypeName","src":"8310:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3271,"mutability":"mutable","name":"flashloanRepayAmount","nameLocation":"8338:20:15","nodeType":"VariableDeclaration","scope":3368,"src":"8330:28:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3270,"name":"uint256","nodeType":"ElementaryTypeName","src":"8330:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3273,"mutability":"mutable","name":"params","nameLocation":"8377:6:15","nodeType":"VariableDeclaration","scope":3368,"src":"8364:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3272,"name":"bytes","nodeType":"ElementaryTypeName","src":"8364:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"8276:111:15"},"returnParameters":{"id":3275,"nodeType":"ParameterList","parameters":[],"src":"8397:0:15"},"scope":4042,"src":"8248:804:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3458,"nodeType":"Block","src":"9955:633:15","statements":[{"assignments":[3385],"declarations":[{"constant":false,"id":3385,"mutability":"mutable","name":"emptyVaultParams","nameLocation":"10055:16:15","nodeType":"VariableDeclaration","scope":3458,"src":"10042:29:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3384,"name":"bytes","nodeType":"ElementaryTypeName","src":"10042:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3392,"initialValue":{"arguments":[{"id":3388,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3371,"src":"10085:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3389,"name":"dexTxData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3377,"src":"10094:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"id":3390,"name":"dexIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3379,"src":"10105:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3386,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10074:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"10074:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3391,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10074:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10042:72:15"},{"assignments":[3394],"declarations":[{"constant":false,"id":3394,"mutability":"mutable","name":"params","nameLocation":"10133:6:15","nodeType":"VariableDeclaration","scope":3458,"src":"10120:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3393,"name":"bytes","nodeType":"ElementaryTypeName","src":"10120:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":3401,"initialValue":{"arguments":[{"expression":{"id":3397,"name":"Operation","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2751,"src":"10153:9:15","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Operation_$2751_$","typeString":"type(enum SuperVault.Operation)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"EMPTY","nodeType":"MemberAccess","referencedDeclaration":2750,"src":"10153:15:15","typeDescriptions":{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"}},{"id":3399,"name":"emptyVaultParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3385,"src":"10170:16:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_Operation_$2751","typeString":"enum SuperVault.Operation"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3395,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"10142:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3396,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"10142:10:15","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3400,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10142:45:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"10120:67:15"},{"expression":{"arguments":[{"id":3403,"name":"collateralType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"10207:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3404,"name":"repayAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3375,"src":"10223:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3405,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3394,"src":"10236:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3402,"name":"takeFlashLoan","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4004,"src":"10193:13:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (address,uint256,bytes memory)"}},"id":3406,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10193:50:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3407,"nodeType":"ExpressionStatement","src":"10193:50:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3408,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"10250:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10250:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3410,"nodeType":"ExpressionStatement","src":"10250:18:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3418,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10378:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10378:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3428,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10428:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3427,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10420:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3426,"name":"address","nodeType":"ElementaryTypeName","src":"10420:7:15","typeDescriptions":{}}},"id":3429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10420:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3421,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"10397:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"10397:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3423,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10397:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3420,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"10390:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10390:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3425,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"10390:29:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10390:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3413,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"10356:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"10356:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10356:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3412,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"10349:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10349:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3417,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"10349:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3431,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10349:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3411,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10341:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10341:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3433,"nodeType":"ExpressionStatement","src":"10341:95:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3434,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"10442:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10442:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3436,"nodeType":"ExpressionStatement","src":"10442:18:15"},{"assignments":[3439],"declarations":[{"constant":false,"id":3439,"mutability":"mutable","name":"collateral","nameLocation":"10474:10:15","nodeType":"VariableDeclaration","scope":3458,"src":"10467:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3438,"nodeType":"UserDefinedTypeName","pathNode":{"id":3437,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"10467:6:15"},"referencedDeclaration":1803,"src":"10467:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3443,"initialValue":{"arguments":[{"id":3441,"name":"collateralType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3373,"src":"10494:14:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3440,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"10487:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10487:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"10467:42:15"},{"expression":{"arguments":[{"expression":{"id":3447,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"10535:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"10535:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3453,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10576:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3452,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10568:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3451,"name":"address","nodeType":"ElementaryTypeName","src":"10568:7:15","typeDescriptions":{}}},"id":3454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10568:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3449,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"10547:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"10547:20:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10547:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3444,"name":"collateral","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3439,"src":"10515:10:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"10515:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10515:68:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3457,"nodeType":"ExpressionStatement","src":"10515:68:15"}]},"documentation":{"id":3369,"nodeType":"StructuredDocumentation","src":"9056:653:15","text":"@notice Uses a flashloan to repay all debts for a vault and send all collateral in the vault to the owner\n@notice This vault must have been created by this contract\n@dev This uses an AAVE V2 flashLoan that will call executeOperation\n@param vaultId The Id of the vault to empty\n@param collateralType Address of the collateral of the vault\n@param repayAmount Amount of par that needs to be repaid before all collateral can be withdrawn\n@param dexTxData Bytes that contain the low-level call to swap the vault asset for par to repay the vault loan\n@param dexIndex Index to use for swapping the vault collateral for par"},"functionSelector":"70d82363","id":3459,"implemented":true,"kind":"function","modifiers":[{"id":3382,"kind":"modifierInvocation","modifierName":{"id":3381,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"9945:9:15"},"nodeType":"ModifierInvocation","src":"9945:9:15"}],"name":"emptyVault","nameLocation":"9721:10:15","nodeType":"FunctionDefinition","parameters":{"id":3380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3371,"mutability":"mutable","name":"vaultId","nameLocation":"9745:7:15","nodeType":"VariableDeclaration","scope":3459,"src":"9737:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3370,"name":"uint256","nodeType":"ElementaryTypeName","src":"9737:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3373,"mutability":"mutable","name":"collateralType","nameLocation":"9766:14:15","nodeType":"VariableDeclaration","scope":3459,"src":"9758:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3372,"name":"address","nodeType":"ElementaryTypeName","src":"9758:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3375,"mutability":"mutable","name":"repayAmount","nameLocation":"9794:11:15","nodeType":"VariableDeclaration","scope":3459,"src":"9786:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3374,"name":"uint256","nodeType":"ElementaryTypeName","src":"9786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3377,"mutability":"mutable","name":"dexTxData","nameLocation":"9902:9:15","nodeType":"VariableDeclaration","scope":3459,"src":"9887:24:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":3376,"name":"bytes","nodeType":"ElementaryTypeName","src":"9887:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3379,"mutability":"mutable","name":"dexIndex","nameLocation":"9922:8:15","nodeType":"VariableDeclaration","scope":3459,"src":"9917:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3378,"name":"uint","nodeType":"ElementaryTypeName","src":"9917:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9731:204:15"},"returnParameters":{"id":3383,"nodeType":"ParameterList","parameters":[],"src":"9955:0:15"},"scope":4042,"src":"9712:876:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3499,"nodeType":"Block","src":"10954:166:15","statements":[{"expression":{"arguments":[{"id":3474,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"10978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3475,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"10987:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3469,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"10960:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"10960:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10960:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":4383,"src":"10960:17:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3476,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10960:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3477,"nodeType":"ExpressionStatement","src":"10960:34:15"},{"assignments":[3480],"declarations":[{"constant":false,"id":3480,"mutability":"mutable","name":"asset","nameLocation":"11007:5:15","nodeType":"VariableDeclaration","scope":3499,"src":"11000:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3479,"nodeType":"UserDefinedTypeName","pathNode":{"id":3478,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"11000:6:15"},"referencedDeclaration":1803,"src":"11000:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3489,"initialValue":{"arguments":[{"arguments":[{"id":3486,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3462,"src":"11057:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3482,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11022:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"vaultsData","nodeType":"MemberAccess","referencedDeclaration":4132,"src":"11022:12:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsDataProvider_$4567_$","typeString":"function () view external returns (contract IVaultsDataProvider)"}},"id":3484,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11022:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsDataProvider_$4567","typeString":"contract IVaultsDataProvider"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"vaultCollateralType","nodeType":"MemberAccess","referencedDeclaration":4517,"src":"11022:34:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$","typeString":"function (uint256) view external returns (address)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11022:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3481,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"11015:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3488,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11015:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"11000:66:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3493,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11095:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3494,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11095:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3495,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3464,"src":"11107:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3491,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3480,"src":"11080:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"11080:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3496,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11080:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3490,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11072:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11072:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3498,"nodeType":"ExpressionStatement","src":"11072:43:15"}]},"documentation":{"id":3460,"nodeType":"StructuredDocumentation","src":"10592:280:15","text":"@notice Withdraw collateral from a vault\n@notice Vault must have been created through leverage, depositToVault, or depositAndBorrowFromVault from this contract\n@param vaultId The ID of the vault to withdraw from\n@param amount The amount of collateral to withdraw"},"functionSelector":"70974818","id":3500,"implemented":true,"kind":"function","modifiers":[{"id":3467,"kind":"modifierInvocation","modifierName":{"id":3466,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"10944:9:15"},"nodeType":"ModifierInvocation","src":"10944:9:15"}],"name":"withdrawFromVault","nameLocation":"10884:17:15","nodeType":"FunctionDefinition","parameters":{"id":3465,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3462,"mutability":"mutable","name":"vaultId","nameLocation":"10910:7:15","nodeType":"VariableDeclaration","scope":3500,"src":"10902:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3461,"name":"uint256","nodeType":"ElementaryTypeName","src":"10902:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3464,"mutability":"mutable","name":"amount","nameLocation":"10927:6:15","nodeType":"VariableDeclaration","scope":3500,"src":"10919:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3463,"name":"uint256","nodeType":"ElementaryTypeName","src":"10919:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10901:33:15"},"returnParameters":{"id":3468,"nodeType":"ParameterList","parameters":[],"src":"10954:0:15"},"scope":4042,"src":"10875:245:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3545,"nodeType":"Block","src":"11340:168:15","statements":[{"expression":{"arguments":[{"id":3515,"name":"vaultId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3503,"src":"11362:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3516,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3505,"src":"11371:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3510,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11346:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"11346:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3514,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"borrow","nodeType":"MemberAccess","referencedDeclaration":4397,"src":"11346:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256) external"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11346:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3518,"nodeType":"ExpressionStatement","src":"11346:32:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3526,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11421:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11421:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3536,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11471:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3535,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11463:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3534,"name":"address","nodeType":"ElementaryTypeName","src":"11463:7:15","typeDescriptions":{}}},"id":3537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11463:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3529,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11440:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"11440:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3531,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11440:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3528,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"11433:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3532,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11433:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"11433:29:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11433:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3521,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"11399:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3522,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"11399:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11399:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3520,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"11392:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3524,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11392:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"11392:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11392:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3519,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11384:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11384:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3541,"nodeType":"ExpressionStatement","src":"11384:95:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3542,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"11485:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3543,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11485:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3544,"nodeType":"ExpressionStatement","src":"11485:18:15"}]},"documentation":{"id":3501,"nodeType":"StructuredDocumentation","src":"11124:136:15","text":"@notice Borrow PAR from a vault\n@param vaultId The ID of the vault to borrow from\n@param amount The amount of PAR to borrow"},"functionSelector":"505b6a76","id":3546,"implemented":true,"kind":"function","modifiers":[{"id":3508,"kind":"modifierInvocation","modifierName":{"id":3507,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"11330:9:15"},"nodeType":"ModifierInvocation","src":"11330:9:15"}],"name":"borrowFromVault","nameLocation":"11272:15:15","nodeType":"FunctionDefinition","parameters":{"id":3506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3503,"mutability":"mutable","name":"vaultId","nameLocation":"11296:7:15","nodeType":"VariableDeclaration","scope":3546,"src":"11288:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3502,"name":"uint256","nodeType":"ElementaryTypeName","src":"11288:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3505,"mutability":"mutable","name":"amount","nameLocation":"11313:6:15","nodeType":"VariableDeclaration","scope":3546,"src":"11305:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3504,"name":"uint256","nodeType":"ElementaryTypeName","src":"11305:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11287:33:15"},"returnParameters":{"id":3509,"nodeType":"ParameterList","parameters":[],"src":"11340:0:15"},"scope":4042,"src":"11263:245:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3576,"nodeType":"Block","src":"11774:112:15","statements":[{"assignments":[3556],"declarations":[{"constant":false,"id":3556,"mutability":"mutable","name":"token","nameLocation":"11787:5:15","nodeType":"VariableDeclaration","scope":3576,"src":"11780:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3555,"nodeType":"UserDefinedTypeName","pathNode":{"id":3554,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"11780:6:15"},"referencedDeclaration":1803,"src":"11780:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3560,"initialValue":{"arguments":[{"id":3558,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3549,"src":"11802:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3557,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"11795:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11795:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"11780:28:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3564,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"11837:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3565,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"11837:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3570,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11873:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3569,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11865:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3568,"name":"address","nodeType":"ElementaryTypeName","src":"11865:7:15","typeDescriptions":{}}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11865:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3566,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"11849:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"11849:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3572,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11849:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3562,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3556,"src":"11822:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"11822:14:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11822:58:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3561,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11814:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11814:67:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3575,"nodeType":"ExpressionStatement","src":"11814:67:15"}]},"documentation":{"id":3547,"nodeType":"StructuredDocumentation","src":"11512:202:15","text":"@notice Withdraw all of one type of collateral from this contract\n@notice Can only be used on vaults which have been created by this contract\n@param asset The address of the collateral type"},"functionSelector":"071e41d7","id":3577,"implemented":true,"kind":"function","modifiers":[{"id":3552,"kind":"modifierInvocation","modifierName":{"id":3551,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"11764:9:15"},"nodeType":"ModifierInvocation","src":"11764:9:15"}],"name":"withdrawAsset","nameLocation":"11726:13:15","nodeType":"FunctionDefinition","parameters":{"id":3550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3549,"mutability":"mutable","name":"asset","nameLocation":"11748:5:15","nodeType":"VariableDeclaration","scope":3577,"src":"11740:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3548,"name":"address","nodeType":"ElementaryTypeName","src":"11740:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"11739:15:15"},"returnParameters":{"id":3553,"nodeType":"ParameterList","parameters":[],"src":"11774:0:15"},"scope":4042,"src":"11717:169:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3625,"nodeType":"Block","src":"12151:181:15","statements":[{"assignments":[3587],"declarations":[{"constant":false,"id":3587,"mutability":"mutable","name":"token","nameLocation":"12164:5:15","nodeType":"VariableDeclaration","scope":3625,"src":"12157:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3586,"nodeType":"UserDefinedTypeName","pathNode":{"id":3585,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"12157:6:15"},"referencedDeclaration":1803,"src":"12157:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3591,"initialValue":{"arguments":[{"id":3589,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"12179:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3588,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"12172:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12172:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"12157:28:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3597,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12213:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"12213:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12213:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}],"id":3596,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12205:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3595,"name":"address","nodeType":"ElementaryTypeName","src":"12205:7:15","typeDescriptions":{}}},"id":3600,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12205:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3601,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"12224:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3592,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"12191:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3594,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"12191:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3602,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12191:40:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3603,"nodeType":"ExpressionStatement","src":"12191:40:15"},{"expression":{"arguments":[{"expression":{"id":3607,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12256:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12256:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3611,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12276:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3610,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12268:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3609,"name":"address","nodeType":"ElementaryTypeName","src":"12268:7:15","typeDescriptions":{}}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12268:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3613,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"12283:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3604,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3587,"src":"12237:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"12237:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12237:53:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3615,"nodeType":"ExpressionStatement","src":"12237:53:15"},{"expression":{"arguments":[{"id":3621,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3580,"src":"12313:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3622,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3582,"src":"12320:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3616,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12296:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3618,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"12296:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12296:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":4347,"src":"12296:16:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256) external"}},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12296:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3624,"nodeType":"ExpressionStatement","src":"12296:31:15"}]},"documentation":{"id":3578,"nodeType":"StructuredDocumentation","src":"11890:194:15","text":"@notice Deposit collateral into a vault\n@notice Requires approval of asset for amount before calling\n@param asset Address of the collateral type\n@param amount Amount to deposit"},"functionSelector":"a3d11158","id":3626,"implemented":true,"kind":"function","modifiers":[],"name":"depositToVault","nameLocation":"12096:14:15","nodeType":"FunctionDefinition","parameters":{"id":3583,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3580,"mutability":"mutable","name":"asset","nameLocation":"12119:5:15","nodeType":"VariableDeclaration","scope":3626,"src":"12111:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3579,"name":"address","nodeType":"ElementaryTypeName","src":"12111:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3582,"mutability":"mutable","name":"amount","nameLocation":"12134:6:15","nodeType":"VariableDeclaration","scope":3626,"src":"12126:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3581,"name":"uint256","nodeType":"ElementaryTypeName","src":"12126:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12110:31:15"},"returnParameters":{"id":3584,"nodeType":"ParameterList","parameters":[],"src":"12151:0:15"},"scope":4042,"src":"12087:245:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3705,"nodeType":"Block","src":"12751:356:15","statements":[{"assignments":[3640],"declarations":[{"constant":false,"id":3640,"mutability":"mutable","name":"token","nameLocation":"12764:5:15","nodeType":"VariableDeclaration","scope":3705,"src":"12757:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3639,"nodeType":"UserDefinedTypeName","pathNode":{"id":3638,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"12757:6:15"},"referencedDeclaration":1803,"src":"12757:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3644,"initialValue":{"arguments":[{"id":3642,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"12779:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3641,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"12772:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12772:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"12757:28:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3650,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12813:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"12813:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12813:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}],"id":3649,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12805:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3648,"name":"address","nodeType":"ElementaryTypeName","src":"12805:7:15","typeDescriptions":{}}},"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12805:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3654,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"12824:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3645,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"12791:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3647,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"12791:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12791:47:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3656,"nodeType":"ExpressionStatement","src":"12791:47:15"},{"expression":{"arguments":[{"expression":{"id":3660,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"12863:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3661,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"12863:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3664,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"12883:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3663,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12875:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3662,"name":"address","nodeType":"ElementaryTypeName","src":"12875:7:15","typeDescriptions":{}}},"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12875:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3666,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"12890:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3657,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3640,"src":"12844:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1784,"src":"12844:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12844:60:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3668,"nodeType":"ExpressionStatement","src":"12844:60:15"},{"expression":{"arguments":[{"id":3674,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3629,"src":"12936:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3675,"name":"depositAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3631,"src":"12943:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3676,"name":"borrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3633,"src":"12958:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3669,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12910:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"12910:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12910:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositAndBorrow","nodeType":"MemberAccess","referencedDeclaration":4371,"src":"12910:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12910:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3678,"nodeType":"ExpressionStatement","src":"12910:61:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3686,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13014:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"13014:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3696,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13064:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3695,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13056:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3694,"name":"address","nodeType":"ElementaryTypeName","src":"13056:7:15","typeDescriptions":{}}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13056:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13033:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"13033:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13033:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3688,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13026:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13026:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3693,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"13026:29:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13026:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3681,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"12992:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"12992:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12992:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3680,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"12985:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12985:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"12985:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12985:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3679,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12977:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12977:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3701,"nodeType":"ExpressionStatement","src":"12977:95:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3702,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"13084:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3703,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13084:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3704,"nodeType":"ExpressionStatement","src":"13084:18:15"}]},"documentation":{"id":3627,"nodeType":"StructuredDocumentation","src":"12336:282:15","text":"@notice Deposit collateral into a vault and borrow PAR\n@notice Requires approval of asset for amount before calling\n@param asset Address of the collateral type\n@param depositAmount Amount to deposit\n@param borrowAmount Amount of PAR to borrow after depositing"},"functionSelector":"25ca9674","id":3706,"implemented":true,"kind":"function","modifiers":[{"id":3636,"kind":"modifierInvocation","modifierName":{"id":3635,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"12741:9:15"},"nodeType":"ModifierInvocation","src":"12741:9:15"}],"name":"depositAndBorrowFromVault","nameLocation":"12630:25:15","nodeType":"FunctionDefinition","parameters":{"id":3634,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3629,"mutability":"mutable","name":"asset","nameLocation":"12669:5:15","nodeType":"VariableDeclaration","scope":3706,"src":"12661:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3628,"name":"address","nodeType":"ElementaryTypeName","src":"12661:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3631,"mutability":"mutable","name":"depositAmount","nameLocation":"12688:13:15","nodeType":"VariableDeclaration","scope":3706,"src":"12680:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3630,"name":"uint256","nodeType":"ElementaryTypeName","src":"12680:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3633,"mutability":"mutable","name":"borrowAmount","nameLocation":"12715:12:15","nodeType":"VariableDeclaration","scope":3706,"src":"12707:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3632,"name":"uint256","nodeType":"ElementaryTypeName","src":"12707:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12655:76:15"},"returnParameters":{"id":3637,"nodeType":"ParameterList","parameters":[],"src":"12751:0:15"},"scope":4042,"src":"12621:486:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3733,"nodeType":"Block","src":"13293:122:15","statements":[{"assignments":[3716],"declarations":[{"constant":false,"id":3716,"mutability":"mutable","name":"miner","nameLocation":"13313:5:15","nodeType":"VariableDeclaration","scope":3733,"src":"13299:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGenericMiner_$4192","typeString":"contract IGenericMiner"},"typeName":{"id":3715,"nodeType":"UserDefinedTypeName","pathNode":{"id":3714,"name":"IGenericMiner","nodeType":"IdentifierPath","referencedDeclaration":4192,"src":"13299:13:15"},"referencedDeclaration":4192,"src":"13299:13:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGenericMiner_$4192","typeString":"contract IGenericMiner"}},"visibility":"internal"}],"id":3720,"initialValue":{"arguments":[{"id":3718,"name":"minerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3709,"src":"13335:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3717,"name":"IGenericMiner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4192,"src":"13321:13:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IGenericMiner_$4192_$","typeString":"type(contract IGenericMiner)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13321:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IGenericMiner_$4192","typeString":"contract IGenericMiner"}},"nodeType":"VariableDeclarationStatement","src":"13299:49:15"},{"expression":{"arguments":[{"arguments":[{"id":3726,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13380:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13372:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3724,"name":"address","nodeType":"ElementaryTypeName","src":"13372:7:15","typeDescriptions":{}}},"id":3727,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13372:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3721,"name":"miner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3716,"src":"13354:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGenericMiner_$4192","typeString":"contract IGenericMiner"}},"id":3723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"releaseMIMO","nodeType":"MemberAccess","referencedDeclaration":4191,"src":"13354:17:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$returns$__$","typeString":"function (address) external"}},"id":3728,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13354:32:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3729,"nodeType":"ExpressionStatement","src":"13354:32:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3730,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"13392:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3731,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13392:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3732,"nodeType":"ExpressionStatement","src":"13392:18:15"}]},"documentation":{"id":3707,"nodeType":"StructuredDocumentation","src":"13111:109:15","text":"@notice Release MIMO from a MIMO miner to the owner\n@param minerAddress The address of the MIMO miner"},"functionSelector":"60ed390a","id":3734,"implemented":true,"kind":"function","modifiers":[{"id":3712,"kind":"modifierInvocation","modifierName":{"id":3711,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"13283:9:15"},"nodeType":"ModifierInvocation","src":"13283:9:15"}],"name":"releaseMIMO","nameLocation":"13232:11:15","nodeType":"FunctionDefinition","parameters":{"id":3710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3709,"mutability":"mutable","name":"minerAddress","nameLocation":"13252:12:15","nodeType":"VariableDeclaration","scope":3734,"src":"13244:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3708,"name":"address","nodeType":"ElementaryTypeName","src":"13244:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13243:22:15"},"returnParameters":{"id":3713,"nodeType":"ParameterList","parameters":[],"src":"13293:0:15"},"scope":4042,"src":"13223:192:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3748,"nodeType":"Block","src":"13531:52:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3738,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13537:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"13537:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13537:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositETH","nodeType":"MemberAccess","referencedDeclaration":4350,"src":"13537:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3743,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13565:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"13565:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13537:39:15","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":3746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13537:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3747,"nodeType":"ExpressionStatement","src":"13537:41:15"}]},"documentation":{"id":3735,"nodeType":"StructuredDocumentation","src":"13419:63:15","text":"@notice Wrap ETH and deposit WETH as collateral into a vault"},"functionSelector":"ccb21bb5","id":3749,"implemented":true,"kind":"function","modifiers":[],"name":"depositETHToVault","nameLocation":"13494:17:15","nodeType":"FunctionDefinition","parameters":{"id":3736,"nodeType":"ParameterList","parameters":[],"src":"13511:2:15"},"returnParameters":{"id":3737,"nodeType":"ParameterList","parameters":[],"src":"13531:0:15"},"scope":4042,"src":"13485:98:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3794,"nodeType":"Block","src":"13842:204:15","statements":[{"expression":{"arguments":[{"id":3765,"name":"borrowAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3752,"src":"13897:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3757,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13848:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"13848:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13848:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3761,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositETHAndBorrow","nodeType":"MemberAccess","referencedDeclaration":4376,"src":"13848:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$returns$__$","typeString":"function (uint256) payable external"}},"id":3764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":3762,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13885:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3763,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"13885:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"13848:48:15","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$returns$__$value","typeString":"function (uint256) payable external"}},"id":3766,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13848:62:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3767,"nodeType":"ExpressionStatement","src":"13848:62:15"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":3775,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"13953:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"13953:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3785,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14003:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13995:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3783,"name":"address","nodeType":"ElementaryTypeName","src":"13995:7:15","typeDescriptions":{}}},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13995:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3778,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13972:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"13972:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3780,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13972:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3777,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13965:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3781,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13965:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"13965:29:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13965:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3770,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"13931:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"13931:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3772,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13931:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3769,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"13924:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13924:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3774,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"13924:28:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3788,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13924:86:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3768,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13916:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13916:95:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3790,"nodeType":"ExpressionStatement","src":"13916:95:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3791,"name":"checkAndSendMIMO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"14023:16:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14023:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3793,"nodeType":"ExpressionStatement","src":"14023:18:15"}]},"documentation":{"id":3750,"nodeType":"StructuredDocumentation","src":"13587:165:15","text":"@notice Wrap ETH and deposit WETH as collateral into a vault, then borrow PAR from vault\n@param borrowAmount The amount of PAR to borrow after depositing ETH"},"functionSelector":"86bb48fc","id":3795,"implemented":true,"kind":"function","modifiers":[{"id":3755,"kind":"modifierInvocation","modifierName":{"id":3754,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":2783,"src":"13832:9:15"},"nodeType":"ModifierInvocation","src":"13832:9:15"}],"name":"depositETHAndBorrowFromVault","nameLocation":"13764:28:15","nodeType":"FunctionDefinition","parameters":{"id":3753,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3752,"mutability":"mutable","name":"borrowAmount","nameLocation":"13801:12:15","nodeType":"VariableDeclaration","scope":3795,"src":"13793:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3751,"name":"uint256","nodeType":"ElementaryTypeName","src":"13793:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13792:22:15"},"returnParameters":{"id":3756,"nodeType":"ParameterList","parameters":[],"src":"13842:0:15"},"scope":4042,"src":"13755:291:15","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":3873,"nodeType":"Block","src":"14464:368:15","statements":[{"assignments":[3805,3807,3809],"declarations":[{"constant":false,"id":3805,"mutability":"mutable","name":"parToSell","nameLocation":"14479:9:15","nodeType":"VariableDeclaration","scope":3873,"src":"14471:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3804,"name":"uint256","nodeType":"ElementaryTypeName","src":"14471:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3807,"mutability":"mutable","name":"dexTxData","nameLocation":"14503:9:15","nodeType":"VariableDeclaration","scope":3873,"src":"14490:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3806,"name":"bytes","nodeType":"ElementaryTypeName","src":"14490:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3809,"mutability":"mutable","name":"dexIndex","nameLocation":"14519:8:15","nodeType":"VariableDeclaration","scope":3873,"src":"14514:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3808,"name":"uint","nodeType":"ElementaryTypeName","src":"14514:4:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3821,"initialValue":{"arguments":[{"id":3812,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3798,"src":"14549:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":3814,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14564:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3813,"name":"uint256","nodeType":"ElementaryTypeName","src":"14564:7:15","typeDescriptions":{}}},{"id":3816,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14573:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3815,"name":"bytes","nodeType":"ElementaryTypeName","src":"14573:5:15","typeDescriptions":{}}},{"id":3818,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14580:4:15","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3817,"name":"uint","nodeType":"ElementaryTypeName","src":"14580:4:15","typeDescriptions":{}}}],"id":3819,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"14563:23:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(bytes storage pointer),type(uint256))"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_tuple$_t_type$_t_uint256_$_$_t_type$_t_bytes_storage_ptr_$_$_t_type$_t_uint256_$_$","typeString":"tuple(type(uint256),type(bytes storage pointer),type(uint256))"}],"expression":{"id":3810,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"14531:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"14531:10:15","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14531:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_bytes_memory_ptr_$_t_uint256_$","typeString":"tuple(uint256,bytes memory,uint256)"}},"nodeType":"VariableDeclarationStatement","src":"14470:122:15"},{"expression":{"arguments":[{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3827,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"14620:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3828,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"14620:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14620:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}],"id":3826,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14612:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3825,"name":"address","nodeType":"ElementaryTypeName","src":"14612:7:15","typeDescriptions":{}}},"id":3830,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14612:17:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"},"id":3835,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"},"id":3833,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":3831,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14631:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"323536","id":3832,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14634:3:15","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"256"},"src":"14631:6:15","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639936_by_1","typeString":"int_const 1157...(70 digits omitted)...9936"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":3834,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14640:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14631:10:15","typeDescriptions":{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1","typeString":"int_const 1157...(70 digits omitted)...9935"}],"expression":{"id":3822,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"14598:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"14598:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14598:44:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3837,"nodeType":"ExpressionStatement","src":"14598:44:15"},{"expression":{"arguments":[{"arguments":[{"id":3845,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"14682:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}],"id":3844,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14674:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3843,"name":"address","nodeType":"ElementaryTypeName","src":"14674:7:15","typeDescriptions":{}}},"id":3846,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14674:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":3851,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14714:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3850,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14706:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3849,"name":"address","nodeType":"ElementaryTypeName","src":"14706:7:15","typeDescriptions":{}}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14706:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":3847,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3801,"src":"14690:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"14690:15:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3853,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14690:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3854,"name":"parToSell","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"14722:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3838,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"14648:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3840,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"core","nodeType":"MemberAccess","referencedDeclaration":4120,"src":"14648:6:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IVaultsCore_$4439_$","typeString":"function () view external returns (contract IVaultsCore)"}},"id":3841,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14648:8:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"id":3842,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"depositAndBorrow","nodeType":"MemberAccess","referencedDeclaration":4371,"src":"14648:25:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,uint256,uint256) external"}},"id":3855,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14648:84:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3856,"nodeType":"ExpressionStatement","src":"14648:84:15"},{"assignments":[3859],"declarations":[{"constant":false,"id":3859,"mutability":"mutable","name":"par","nameLocation":"14745:3:15","nodeType":"VariableDeclaration","scope":3873,"src":"14738:10:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3858,"nodeType":"UserDefinedTypeName","pathNode":{"id":3857,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"14738:6:15"},"referencedDeclaration":1803,"src":"14738:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"id":3865,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3861,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2761,"src":"14758:1:15","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"id":3862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"stablex","nodeType":"MemberAccess","referencedDeclaration":4137,"src":"14758:9:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_address_$","typeString":"function () view external returns (address)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14758:11:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3860,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1803,"src":"14751:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1803_$","typeString":"type(contract IERC20)"}},"id":3864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14751:19:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"nodeType":"VariableDeclarationStatement","src":"14738:32:15"},{"expression":{"arguments":[{"id":3867,"name":"dexIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3809,"src":"14791:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3868,"name":"par","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3859,"src":"14801:3:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},{"id":3869,"name":"parToSell","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3805,"src":"14806:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3870,"name":"dexTxData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3807,"src":"14817:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3866,"name":"aggregatorSwap","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3927,"src":"14776:14:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_contract$_IERC20_$1803_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (uint256,contract IERC20,uint256,bytes memory)"}},"id":3871,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14776:51:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3872,"nodeType":"ExpressionStatement","src":"14776:51:15"}]},"documentation":{"id":3796,"nodeType":"StructuredDocumentation","src":"14050:345:15","text":"@notice Helper function to call an aggregator to swap PAR for a leveraged asset\n@dev This helper function is used to limit the number of local variables in the leverageOperation function\n@param params The params passed from the leverageOperation function for the aggregator call\n@param token The leveraged asset to swap PAR for"},"id":3874,"implemented":true,"kind":"function","modifiers":[],"name":"leverageSwap","nameLocation":"14407:12:15","nodeType":"FunctionDefinition","parameters":{"id":3802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3798,"mutability":"mutable","name":"params","nameLocation":"14433:6:15","nodeType":"VariableDeclaration","scope":3874,"src":"14420:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3797,"name":"bytes","nodeType":"ElementaryTypeName","src":"14420:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":3801,"mutability":"mutable","name":"token","nameLocation":"14448:5:15","nodeType":"VariableDeclaration","scope":3874,"src":"14441:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3800,"nodeType":"UserDefinedTypeName","pathNode":{"id":3799,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"14441:6:15"},"referencedDeclaration":1803,"src":"14441:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"}],"src":"14419:35:15"},"returnParameters":{"id":3803,"nodeType":"ParameterList","parameters":[],"src":"14464:0:15"},"scope":4042,"src":"14398:434:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3926,"nodeType":"Block","src":"15310:202:15","statements":[{"assignments":[3888,3890],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"proxy","nameLocation":"15325:5:15","nodeType":"VariableDeclaration","scope":3926,"src":"15317:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3887,"name":"address","nodeType":"ElementaryTypeName","src":"15317:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3890,"mutability":"mutable","name":"router","nameLocation":"15340:6:15","nodeType":"VariableDeclaration","scope":3926,"src":"15332:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3889,"name":"address","nodeType":"ElementaryTypeName","src":"15332:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3895,"initialValue":{"arguments":[{"id":3893,"name":"dexIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3877,"src":"15368:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3891,"name":"_dexAP","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2770,"src":"15350:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IDexAddressProvider_$4176","typeString":"contract IDexAddressProvider"}},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"dexMapping","nodeType":"MemberAccess","referencedDeclaration":4175,"src":"15350:17:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_uint256_$returns$_t_address_$_t_address_$","typeString":"function (uint256) view external returns (address,address)"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15350:27:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"VariableDeclarationStatement","src":"15316:61:15"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3897,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15391:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3900,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15408:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3899,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15400:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3898,"name":"address","nodeType":"ElementaryTypeName","src":"15400:7:15","typeDescriptions":{}}},"id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15400:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15391:19:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3903,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"15414:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3906,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15432:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3905,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15424:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3904,"name":"address","nodeType":"ElementaryTypeName","src":"15424:7:15","typeDescriptions":{}}},"id":3907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15424:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"15414:20:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"15391:43:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5356323031","id":3910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15436:7:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_0e1675febfa7cad03c7b3c41f70e04f2b8b253e5d05a679d3dfd65a7f100ca98","typeString":"literal_string \"SV201\""},"value":"SV201"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0e1675febfa7cad03c7b3c41f70e04f2b8b253e5d05a679d3dfd65a7f100ca98","typeString":"literal_string \"SV201\""}],"id":3896,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15383:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15383:61:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3912,"nodeType":"ExpressionStatement","src":"15383:61:15"},{"expression":{"arguments":[{"id":3916,"name":"proxy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15465:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3917,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"15472:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3913,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3880,"src":"15451:5:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"id":3915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":1772,"src":"15451:13:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3918,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15451:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3919,"nodeType":"ExpressionStatement","src":"15451:28:15"},{"expression":{"arguments":[{"id":3923,"name":"dexTxData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3884,"src":"15497:9:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":3920,"name":"router","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3890,"src":"15485:6:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3922,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"15485:11:15","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15485:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"id":3925,"nodeType":"ExpressionStatement","src":"15485:22:15"}]},"documentation":{"id":3875,"nodeType":"StructuredDocumentation","src":"14836:346:15","text":"@notice Helper function to approve and swap an asset using an aggregator\n@param dexIndex The DexAddressProvider index of aggregator to use to swap\n@param token The starting token to swap for another asset\n@param amount The amount of starting token to swap for\n@param dexTxData The low-level data to call the aggregator with"},"id":3927,"implemented":true,"kind":"function","modifiers":[],"name":"aggregatorSwap","nameLocation":"15194:14:15","nodeType":"FunctionDefinition","parameters":{"id":3885,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3877,"mutability":"mutable","name":"dexIndex","nameLocation":"15222:8:15","nodeType":"VariableDeclaration","scope":3927,"src":"15214:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3876,"name":"uint256","nodeType":"ElementaryTypeName","src":"15214:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3880,"mutability":"mutable","name":"token","nameLocation":"15243:5:15","nodeType":"VariableDeclaration","scope":3927,"src":"15236:12:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"},"typeName":{"id":3879,"nodeType":"UserDefinedTypeName","pathNode":{"id":3878,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"15236:6:15"},"referencedDeclaration":1803,"src":"15236:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1803","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":3882,"mutability":"mutable","name":"amount","nameLocation":"15262:6:15","nodeType":"VariableDeclaration","scope":3927,"src":"15254:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"15254:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3884,"mutability":"mutable","name":"dexTxData","nameLocation":"15287:9:15","nodeType":"VariableDeclaration","scope":3927,"src":"15274:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3883,"name":"bytes","nodeType":"ElementaryTypeName","src":"15274:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15208:92:15"},"returnParameters":{"id":3886,"nodeType":"ParameterList","parameters":[],"src":"15310:0:15"},"scope":4042,"src":"15185:327:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4003,"nodeType":"Block","src":"15958:323:15","statements":[{"assignments":[3938],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"referralCode","nameLocation":"15970:12:15","nodeType":"VariableDeclaration","scope":4003,"src":"15964:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3937,"name":"uint8","nodeType":"ElementaryTypeName","src":"15964:5:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":3939,"nodeType":"VariableDeclarationStatement","src":"15964:18:15"},{"assignments":[3944],"declarations":[{"constant":false,"id":3944,"mutability":"mutable","name":"assets","nameLocation":"16005:6:15","nodeType":"VariableDeclaration","scope":4003,"src":"15988:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":3942,"name":"address","nodeType":"ElementaryTypeName","src":"15988:7:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3943,"nodeType":"ArrayTypeName","src":"15988:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":3950,"initialValue":{"arguments":[{"hexValue":"31","id":3948,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16028:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3947,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16014:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (address[] memory)"},"typeName":{"baseType":{"id":3945,"name":"address","nodeType":"ElementaryTypeName","src":"16018:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3946,"nodeType":"ArrayTypeName","src":"16018:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}}},"id":3949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16014:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"nodeType":"VariableDeclarationStatement","src":"15988:42:15"},{"assignments":[3955],"declarations":[{"constant":false,"id":3955,"mutability":"mutable","name":"amounts","nameLocation":"16053:7:15","nodeType":"VariableDeclaration","scope":4003,"src":"16036:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3953,"name":"uint256","nodeType":"ElementaryTypeName","src":"16036:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3954,"nodeType":"ArrayTypeName","src":"16036:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3961,"initialValue":{"arguments":[{"hexValue":"31","id":3959,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16077:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3958,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16063:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3956,"name":"uint256","nodeType":"ElementaryTypeName","src":"16067:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3957,"nodeType":"ArrayTypeName","src":"16067:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16063:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16036:43:15"},{"assignments":[3966],"declarations":[{"constant":false,"id":3966,"mutability":"mutable","name":"modes","nameLocation":"16102:5:15","nodeType":"VariableDeclaration","scope":4003,"src":"16085:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3964,"name":"uint256","nodeType":"ElementaryTypeName","src":"16085:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3965,"nodeType":"ArrayTypeName","src":"16085:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3972,"initialValue":{"arguments":[{"hexValue":"31","id":3970,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16124:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"id":3969,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"16110:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3967,"name":"uint256","nodeType":"ElementaryTypeName","src":"16114:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3968,"nodeType":"ArrayTypeName","src":"16114:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16110:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"16085:41:15"},{"expression":{"id":3983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"baseExpression":{"id":3973,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"16133:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"id":3975,"indexExpression":{"hexValue":"30","id":3974,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16140:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16133:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":3976,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"16144:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3978,"indexExpression":{"hexValue":"30","id":3977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16152:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"16144:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3979,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"16132:23:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3980,"name":"asset","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3930,"src":"16159:5:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3981,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3932,"src":"16166:6:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3982,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16158:15:15","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_uint256_$","typeString":"tuple(address,uint256)"}},"src":"16132:41:15","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3984,"nodeType":"ExpressionStatement","src":"16132:41:15"},{"expression":{"arguments":[{"arguments":[{"id":3990,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16209:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3989,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16201:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3988,"name":"address","nodeType":"ElementaryTypeName","src":"16201:7:15","typeDescriptions":{}}},"id":3991,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16201:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3992,"name":"assets","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3944,"src":"16216:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},{"id":3993,"name":"amounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3955,"src":"16224:7:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"id":3994,"name":"modes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3966,"src":"16233:5:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"arguments":[{"id":3997,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16248:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16240:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3995,"name":"address","nodeType":"ElementaryTypeName","src":"16240:7:15","typeDescriptions":{}}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16240:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3999,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3934,"src":"16255:6:15","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":4000,"name":"referralCode","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"16263:12:15","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"expression":{"id":3985,"name":"lendingPool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2767,"src":"16179:11:15","typeDescriptions":{"typeIdentifier":"t_contract$_IPool_$628","typeString":"contract IPool"}},"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"flashLoan","nodeType":"MemberAccess","referencedDeclaration":374,"src":"16179:21:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_address_$_t_bytes_memory_ptr_$_t_uint16_$returns$__$","typeString":"function (address,address[] memory,uint256[] memory,uint256[] memory,address,bytes memory,uint16) external"}},"id":4001,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16179:97:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4002,"nodeType":"ExpressionStatement","src":"16179:97:15"}]},"documentation":{"id":3928,"nodeType":"StructuredDocumentation","src":"15516:339:15","text":"@notice Helper function to format arguments to take a flashloan\n@dev The flashloan call will call the executeOperation function on this contract\n@param asset The address of the asset to loan\n@param amount The amount to borrow\n@param params The params that will be sent to executeOperation after the asset is borrowed"},"id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"takeFlashLoan","nameLocation":"15867:13:15","nodeType":"FunctionDefinition","parameters":{"id":3935,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3930,"mutability":"mutable","name":"asset","nameLocation":"15894:5:15","nodeType":"VariableDeclaration","scope":4004,"src":"15886:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3929,"name":"address","nodeType":"ElementaryTypeName","src":"15886:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3932,"mutability":"mutable","name":"amount","nameLocation":"15913:6:15","nodeType":"VariableDeclaration","scope":4004,"src":"15905:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3931,"name":"uint256","nodeType":"ElementaryTypeName","src":"15905:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3934,"mutability":"mutable","name":"params","nameLocation":"15938:6:15","nodeType":"VariableDeclaration","scope":4004,"src":"15925:19:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":3933,"name":"bytes","nodeType":"ElementaryTypeName","src":"15925:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"15880:68:15"},"returnParameters":{"id":3936,"nodeType":"ParameterList","parameters":[],"src":"15958:0:15"},"scope":4042,"src":"15858:423:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4040,"nodeType":"Block","src":"16408:144:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4014,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16446:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":4013,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16438:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4012,"name":"address","nodeType":"ElementaryTypeName","src":"16438:7:15","typeDescriptions":{}}},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16438:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4008,"name":"ga","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"16418:2:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mimo","nodeType":"MemberAccess","referencedDeclaration":4202,"src":"16418:7:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IMIMO_$4223_$","typeString":"function () view external returns (contract IMIMO)"}},"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16418:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMIMO_$4223","typeString":"contract IMIMO"}},"id":4011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"16418:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4016,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16418:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4017,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"16455:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"16418:38:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4039,"nodeType":"IfStatement","src":"16414:134:15","trueBody":{"id":4038,"nodeType":"Block","src":"16458:90:15","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":4024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16493:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"16493:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"id":4032,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"16533:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SuperVault_$4042","typeString":"contract SuperVault"}],"id":4031,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16525:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4030,"name":"address","nodeType":"ElementaryTypeName","src":"16525:7:15","typeDescriptions":{}}},"id":4033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16525:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4026,"name":"ga","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"16505:2:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"id":4027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mimo","nodeType":"MemberAccess","referencedDeclaration":4202,"src":"16505:7:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IMIMO_$4223_$","typeString":"function () view external returns (contract IMIMO)"}},"id":4028,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16505:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMIMO_$4223","typeString":"contract IMIMO"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":1742,"src":"16505:19:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4034,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16505:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4020,"name":"ga","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2764,"src":"16474:2:15","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mimo","nodeType":"MemberAccess","referencedDeclaration":4202,"src":"16474:7:15","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_contract$_IMIMO_$4223_$","typeString":"function () view external returns (contract IMIMO)"}},"id":4022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16474:9:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMIMO_$4223","typeString":"contract IMIMO"}},"id":4023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1752,"src":"16474:18:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16474:66:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4019,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16466:7:15","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16466:75:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4037,"nodeType":"ExpressionStatement","src":"16466:75:15"}]}}]},"documentation":{"id":4005,"nodeType":"StructuredDocumentation","src":"16285:83:15","text":"@notice Helper function to transfer all MIMO owned by this contract to the Owner"},"id":4041,"implemented":true,"kind":"function","modifiers":[],"name":"checkAndSendMIMO","nameLocation":"16380:16:15","nodeType":"FunctionDefinition","parameters":{"id":4006,"nodeType":"ParameterList","parameters":[],"src":"16396:2:15"},"returnParameters":{"id":4007,"nodeType":"ParameterList","parameters":[],"src":"16408:0:15"},"scope":4042,"src":"16371:181:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":4043,"src":"834:15720:15","usedErrors":[]}],"src":"33:16522:15"},"id":15},"contracts/SuperVaultFactory.sol":{"ast":{"absolutePath":"contracts/SuperVaultFactory.sol","exportedSymbols":{"Address":[2098],"Clones":[1651],"SuperVaultFactory":[4108]},"id":4109,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4044,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"33:33:16"},{"id":4045,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"67:23:16"},{"absolutePath":"@openzeppelin/contracts/proxy/Clones.sol","file":"@openzeppelin/contracts/proxy/Clones.sol","id":4046,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4109,"sourceUnit":1652,"src":"92:50:16","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"@openzeppelin/contracts/utils/Address.sol","id":4047,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4109,"sourceUnit":2099,"src":"143:51:16","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"SuperVaultFactory","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4108,"linearizedBaseContracts":[4108],"name":"SuperVaultFactory","nameLocation":"205:17:16","nodeType":"ContractDefinition","nodes":[{"id":4050,"libraryName":{"id":4048,"name":"Address","nodeType":"IdentifierPath","referencedDeclaration":2098,"src":"233:7:16"},"nodeType":"UsingForDirective","src":"227:26:16","typeName":{"id":4049,"name":"address","nodeType":"ElementaryTypeName","src":"245:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"id":4053,"libraryName":{"id":4051,"name":"Clones","nodeType":"IdentifierPath","referencedDeclaration":1651,"src":"262:6:16"},"nodeType":"UsingForDirective","src":"256:25:16","typeName":{"id":4052,"name":"address","nodeType":"ElementaryTypeName","src":"273:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"anonymous":false,"id":4059,"name":"NewSuperVaultContract","nameLocation":"291:21:16","nodeType":"EventDefinition","parameters":{"id":4058,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4055,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"329:5:16","nodeType":"VariableDeclaration","scope":4059,"src":"313:21:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4054,"name":"address","nodeType":"ElementaryTypeName","src":"313:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4057,"indexed":false,"mutability":"mutable","name":"superVaultContract","nameLocation":"344:18:16","nodeType":"VariableDeclaration","scope":4059,"src":"336:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4056,"name":"address","nodeType":"ElementaryTypeName","src":"336:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"312:51:16"},"src":"285:79:16"},{"constant":false,"functionSelector":"5001f3b5","id":4061,"mutability":"mutable","name":"base","nameLocation":"383:4:16","nodeType":"VariableDeclaration","scope":4108,"src":"368:19:16","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4060,"name":"address","nodeType":"ElementaryTypeName","src":"368:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"body":{"id":4082,"nodeType":"Block","src":"426:67:16","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4069,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"448:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"440:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4067,"name":"address","nodeType":"ElementaryTypeName","src":"440:7:16","typeDescriptions":{}}},"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"440:14:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4073,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"466:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4072,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"458:7:16","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4071,"name":"address","nodeType":"ElementaryTypeName","src":"458:7:16","typeDescriptions":{}}},"id":4074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"458:10:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"440:28:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":4066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"432:7:16","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"432:37:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4077,"nodeType":"ExpressionStatement","src":"432:37:16"},{"expression":{"id":4080,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4078,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"476:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4079,"name":"_base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4063,"src":"483:5:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"476:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4081,"nodeType":"ExpressionStatement","src":"476:12:16"}]},"id":4083,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":4064,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4063,"mutability":"mutable","name":"_base","nameLocation":"412:5:16","nodeType":"VariableDeclaration","scope":4083,"src":"404:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4062,"name":"address","nodeType":"ElementaryTypeName","src":"404:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"403:15:16"},"returnParameters":{"id":4065,"nodeType":"ParameterList","parameters":[],"src":"426:0:16"},"scope":4108,"src":"392:101:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":4106,"nodeType":"Block","src":"545:167:16","statements":[{"assignments":[4089],"declarations":[{"constant":false,"id":4089,"mutability":"mutable","name":"superVaultContract","nameLocation":"559:18:16","nodeType":"VariableDeclaration","scope":4106,"src":"551:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4088,"name":"address","nodeType":"ElementaryTypeName","src":"551:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4093,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":4090,"name":"base","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4061,"src":"580:4:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"clone","nodeType":"MemberAccess","referencedDeclaration":1594,"src":"580:10:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$_t_address_$bound_to$_t_address_$","typeString":"function (address) returns (address)"}},"id":4092,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"580:12:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"551:41:16"},{"expression":{"arguments":[{"id":4097,"name":"_initdata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4085,"src":"630:9:16","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"id":4094,"name":"superVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"598:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1872,"src":"598:31:16","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory) returns (bytes memory)"}},"id":4098,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"598:42:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":4099,"nodeType":"ExpressionStatement","src":"598:42:16"},{"eventCall":{"arguments":[{"expression":{"id":4101,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"676:3:16","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"676:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4103,"name":"superVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"688:18:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":4100,"name":"NewSuperVaultContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4059,"src":"654:21:16","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":4104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"654:53:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4105,"nodeType":"EmitStatement","src":"649:58:16"}]},"functionSelector":"8ca89f77","id":4107,"implemented":true,"kind":"function","modifiers":[],"name":"clone","nameLocation":"506:5:16","nodeType":"FunctionDefinition","parameters":{"id":4086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4085,"mutability":"mutable","name":"_initdata","nameLocation":"527:9:16","nodeType":"VariableDeclaration","scope":4107,"src":"512:24:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4084,"name":"bytes","nodeType":"ElementaryTypeName","src":"512:5:16","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"511:26:16"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[],"src":"545:0:16"},"scope":4108,"src":"497:215:16","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":4109,"src":"196:518:16","usedErrors":[]}],"src":"33:682:16"},"id":16},"contracts/interfaces/IAddressProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/IAddressProvider.sol","exportedSymbols":{"IAddressProvider":[4138],"IPriceFeed":[4277],"IVaultsCore":[4439],"IVaultsDataProvider":[4567]},"id":4139,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4110,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"32:33:17"},{"id":4111,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"66:23:17"},{"absolutePath":"contracts/interfaces/IVaultsCore.sol","file":"./IVaultsCore.sol","id":4112,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4139,"sourceUnit":4440,"src":"91:27:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IPriceFeed.sol","file":"./IPriceFeed.sol","id":4113,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4139,"sourceUnit":4278,"src":"119:26:17","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/interfaces/IVaultsDataProvider.sol","file":"./IVaultsDataProvider.sol","id":4114,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4139,"sourceUnit":4568,"src":"146:35:17","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IAddressProvider","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4138,"linearizedBaseContracts":[4138],"name":"IAddressProvider","nameLocation":"193:16:17","nodeType":"ContractDefinition","nodes":[{"functionSelector":"f2f4eb26","id":4120,"implemented":false,"kind":"function","modifiers":[],"name":"core","nameLocation":"223:4:17","nodeType":"FunctionDefinition","parameters":{"id":4115,"nodeType":"ParameterList","parameters":[],"src":"227:2:17"},"returnParameters":{"id":4119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4120,"src":"253:11:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"},"typeName":{"id":4117,"nodeType":"UserDefinedTypeName","pathNode":{"id":4116,"name":"IVaultsCore","nodeType":"IdentifierPath","referencedDeclaration":4439,"src":"253:11:17"},"referencedDeclaration":4439,"src":"253:11:17","typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsCore_$4439","typeString":"contract IVaultsCore"}},"visibility":"internal"}],"src":"252:13:17"},"scope":4138,"src":"214:52:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"741bef1a","id":4126,"implemented":false,"kind":"function","modifiers":[],"name":"priceFeed","nameLocation":"279:9:17","nodeType":"FunctionDefinition","parameters":{"id":4121,"nodeType":"ParameterList","parameters":[],"src":"288:2:17"},"returnParameters":{"id":4125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4124,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4126,"src":"314:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4277","typeString":"contract IPriceFeed"},"typeName":{"id":4123,"nodeType":"UserDefinedTypeName","pathNode":{"id":4122,"name":"IPriceFeed","nodeType":"IdentifierPath","referencedDeclaration":4277,"src":"314:10:17"},"referencedDeclaration":4277,"src":"314:10:17","typeDescriptions":{"typeIdentifier":"t_contract$_IPriceFeed_$4277","typeString":"contract IPriceFeed"}},"visibility":"internal"}],"src":"313:12:17"},"scope":4138,"src":"270:56:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"65d55287","id":4132,"implemented":false,"kind":"function","modifiers":[],"name":"vaultsData","nameLocation":"339:10:17","nodeType":"FunctionDefinition","parameters":{"id":4127,"nodeType":"ParameterList","parameters":[],"src":"349:2:17"},"returnParameters":{"id":4131,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4130,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4132,"src":"375:19:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsDataProvider_$4567","typeString":"contract IVaultsDataProvider"},"typeName":{"id":4129,"nodeType":"UserDefinedTypeName","pathNode":{"id":4128,"name":"IVaultsDataProvider","nodeType":"IdentifierPath","referencedDeclaration":4567,"src":"375:19:17"},"referencedDeclaration":4567,"src":"375:19:17","typeDescriptions":{"typeIdentifier":"t_contract$_IVaultsDataProvider_$4567","typeString":"contract IVaultsDataProvider"}},"visibility":"internal"}],"src":"374:21:17"},"scope":4138,"src":"330:66:17","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"16d8a5a9","id":4137,"implemented":false,"kind":"function","modifiers":[],"name":"stablex","nameLocation":"409:7:17","nodeType":"FunctionDefinition","parameters":{"id":4133,"nodeType":"ParameterList","parameters":[],"src":"416:2:17"},"returnParameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4137,"src":"442:7:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4134,"name":"address","nodeType":"ElementaryTypeName","src":"442:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"441:9:17"},"scope":4138,"src":"400:51:17","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4139,"src":"183:270:17","usedErrors":[]}],"src":"32:422:17"},"id":17},"contracts/interfaces/IDexAddressProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/IDexAddressProvider.sol","exportedSymbols":{"IAddressProvider":[4138],"IDexAddressProvider":[4176],"IPriceFeed":[4277],"IVaultsCore":[4439],"IVaultsDataProvider":[4567]},"id":4177,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4140,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"32:33:18"},{"id":4141,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"66:23:18"},{"absolutePath":"contracts/interfaces/IAddressProvider.sol","file":"./IAddressProvider.sol","id":4142,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4177,"sourceUnit":4139,"src":"91:32:18","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IDexAddressProvider","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4176,"linearizedBaseContracts":[4176],"name":"IDexAddressProvider","nameLocation":"135:19:18","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":4146,"name":"DexSet","nameLocation":"165:6:18","nodeType":"EventDefinition","parameters":{"id":4145,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4144,"indexed":false,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4146,"src":"172:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":4143,"name":"uint8","nodeType":"ElementaryTypeName","src":"172:5:18","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"171:7:18"},"src":"159:20:18"},{"canonicalName":"IDexAddressProvider.Dex","id":4151,"members":[{"constant":false,"id":4148,"mutability":"mutable","name":"proxy","nameLocation":"208:5:18","nodeType":"VariableDeclaration","scope":4151,"src":"200:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4147,"name":"address","nodeType":"ElementaryTypeName","src":"200:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"router","nameLocation":"227:6:18","nodeType":"VariableDeclaration","scope":4151,"src":"219:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4149,"name":"address","nodeType":"ElementaryTypeName","src":"219:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"name":"Dex","nameLocation":"190:3:18","nodeType":"StructDefinition","scope":4176,"src":"183:55:18","visibility":"public"},{"functionSelector":"0932dc91","id":4160,"implemented":false,"kind":"function","modifiers":[],"name":"setDexMapping","nameLocation":"251:13:18","nodeType":"FunctionDefinition","parameters":{"id":4158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4153,"mutability":"mutable","name":"_index","nameLocation":"278:6:18","nodeType":"VariableDeclaration","scope":4160,"src":"270:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4152,"name":"uint256","nodeType":"ElementaryTypeName","src":"270:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4155,"mutability":"mutable","name":"_proxy","nameLocation":"298:6:18","nodeType":"VariableDeclaration","scope":4160,"src":"290:14:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4154,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4157,"mutability":"mutable","name":"_dex","nameLocation":"318:4:18","nodeType":"VariableDeclaration","scope":4160,"src":"310:12:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4156,"name":"address","nodeType":"ElementaryTypeName","src":"310:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"264:62:18"},"returnParameters":{"id":4159,"nodeType":"ParameterList","parameters":[],"src":"335:0:18"},"scope":4176,"src":"242:94:18","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3df06b59","id":4166,"implemented":false,"kind":"function","modifiers":[],"name":"parallel","nameLocation":"349:8:18","nodeType":"FunctionDefinition","parameters":{"id":4161,"nodeType":"ParameterList","parameters":[],"src":"357:2:18"},"returnParameters":{"id":4165,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4164,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4166,"src":"383:16:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"},"typeName":{"id":4163,"nodeType":"UserDefinedTypeName","pathNode":{"id":4162,"name":"IAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4138,"src":"383:16:18"},"referencedDeclaration":4138,"src":"383:16:18","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"visibility":"internal"}],"src":"382:18:18"},"scope":4176,"src":"340:61:18","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"2bfac6be","id":4175,"implemented":false,"kind":"function","modifiers":[],"name":"dexMapping","nameLocation":"414:10:18","nodeType":"FunctionDefinition","parameters":{"id":4169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4168,"mutability":"mutable","name":"index","nameLocation":"433:5:18","nodeType":"VariableDeclaration","scope":4175,"src":"425:13:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4167,"name":"uint256","nodeType":"ElementaryTypeName","src":"425:7:18","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"424:15:18"},"returnParameters":{"id":4174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4171,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4175,"src":"463:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4170,"name":"address","nodeType":"ElementaryTypeName","src":"463:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4173,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4175,"src":"472:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4172,"name":"address","nodeType":"ElementaryTypeName","src":"472:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"462:18:18"},"scope":4176,"src":"405:76:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4177,"src":"125:358:18","usedErrors":[]}],"src":"32:452:18"},"id":18},"contracts/interfaces/IGenericMiner.sol":{"ast":{"absolutePath":"contracts/interfaces/IGenericMiner.sol","exportedSymbols":{"IERC20":[1803],"IGenericMiner":[4192],"IGovernanceAddressProvider":[4203],"IMIMO":[4223]},"id":4193,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4178,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"33:33:19"},{"id":4179,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"67:23:19"},{"absolutePath":"contracts/interfaces/IGovernanceAddressProvider.sol","file":"./IGovernanceAddressProvider.sol","id":4180,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4193,"sourceUnit":4204,"src":"92:42:19","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGenericMiner","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4192,"linearizedBaseContracts":[4192],"name":"IGenericMiner","nameLocation":"146:13:19","nodeType":"ContractDefinition","nodes":[{"functionSelector":"0dbe671f","id":4186,"implemented":false,"kind":"function","modifiers":[],"name":"a","nameLocation":"173:1:19","nodeType":"FunctionDefinition","parameters":{"id":4181,"nodeType":"ParameterList","parameters":[],"src":"174:2:19"},"returnParameters":{"id":4185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4186,"src":"200:26:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"},"typeName":{"id":4183,"nodeType":"UserDefinedTypeName","pathNode":{"id":4182,"name":"IGovernanceAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4203,"src":"200:26:19"},"referencedDeclaration":4203,"src":"200:26:19","typeDescriptions":{"typeIdentifier":"t_contract$_IGovernanceAddressProvider_$4203","typeString":"contract IGovernanceAddressProvider"}},"visibility":"internal"}],"src":"199:28:19"},"scope":4192,"src":"164:64:19","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"60ed390a","id":4191,"implemented":false,"kind":"function","modifiers":[],"name":"releaseMIMO","nameLocation":"241:11:19","nodeType":"FunctionDefinition","parameters":{"id":4189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4188,"mutability":"mutable","name":"_user","nameLocation":"261:5:19","nodeType":"VariableDeclaration","scope":4191,"src":"253:13:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4187,"name":"address","nodeType":"ElementaryTypeName","src":"253:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"252:15:19"},"returnParameters":{"id":4190,"nodeType":"ParameterList","parameters":[],"src":"276:0:19"},"scope":4192,"src":"232:45:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4193,"src":"136:143:19","usedErrors":[]}],"src":"33:247:19"},"id":19},"contracts/interfaces/IGovernanceAddressProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/IGovernanceAddressProvider.sol","exportedSymbols":{"IERC20":[1803],"IGovernanceAddressProvider":[4203],"IMIMO":[4223]},"id":4204,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4194,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"32:33:20"},{"id":4195,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"67:23:20"},{"absolutePath":"contracts/interfaces/IMIMO.sol","file":"./IMIMO.sol","id":4196,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4204,"sourceUnit":4224,"src":"92:21:20","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IGovernanceAddressProvider","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4203,"linearizedBaseContracts":[4203],"name":"IGovernanceAddressProvider","nameLocation":"125:26:20","nodeType":"ContractDefinition","nodes":[{"functionSelector":"6d9b1823","id":4202,"implemented":false,"kind":"function","modifiers":[],"name":"mimo","nameLocation":"165:4:20","nodeType":"FunctionDefinition","parameters":{"id":4197,"nodeType":"ParameterList","parameters":[],"src":"169:2:20"},"returnParameters":{"id":4201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4200,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4202,"src":"195:5:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IMIMO_$4223","typeString":"contract IMIMO"},"typeName":{"id":4199,"nodeType":"UserDefinedTypeName","pathNode":{"id":4198,"name":"IMIMO","nodeType":"IdentifierPath","referencedDeclaration":4223,"src":"195:5:20"},"referencedDeclaration":4223,"src":"195:5:20","typeDescriptions":{"typeIdentifier":"t_contract$_IMIMO_$4223","typeString":"contract IMIMO"}},"visibility":"internal"}],"src":"194:7:20"},"scope":4203,"src":"156:46:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4204,"src":"115:89:20","usedErrors":[]}],"src":"32:173:20"},"id":20},"contracts/interfaces/IMIMO.sol":{"ast":{"absolutePath":"contracts/interfaces/IMIMO.sol","exportedSymbols":{"IERC20":[1803],"IMIMO":[4223]},"id":4224,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4205,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"32:23:21"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":4206,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4224,"sourceUnit":1804,"src":"57:56:21","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":4207,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1803,"src":"134:6:21"},"id":4208,"nodeType":"InheritanceSpecifier","src":"134:6:21"}],"canonicalName":"IMIMO","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4223,"linearizedBaseContracts":[4223,1803],"name":"IMIMO","nameLocation":"125:5:21","nodeType":"ContractDefinition","nodes":[{"functionSelector":"9dc29fac","id":4215,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"154:4:21","nodeType":"FunctionDefinition","parameters":{"id":4213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4210,"mutability":"mutable","name":"account","nameLocation":"167:7:21","nodeType":"VariableDeclaration","scope":4215,"src":"159:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4209,"name":"address","nodeType":"ElementaryTypeName","src":"159:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4212,"mutability":"mutable","name":"amount","nameLocation":"184:6:21","nodeType":"VariableDeclaration","scope":4215,"src":"176:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4211,"name":"uint256","nodeType":"ElementaryTypeName","src":"176:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"158:33:21"},"returnParameters":{"id":4214,"nodeType":"ParameterList","parameters":[],"src":"200:0:21"},"scope":4223,"src":"145:56:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"40c10f19","id":4222,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"214:4:21","nodeType":"FunctionDefinition","parameters":{"id":4220,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4217,"mutability":"mutable","name":"account","nameLocation":"227:7:21","nodeType":"VariableDeclaration","scope":4222,"src":"219:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4216,"name":"address","nodeType":"ElementaryTypeName","src":"219:7:21","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4219,"mutability":"mutable","name":"amount","nameLocation":"244:6:21","nodeType":"VariableDeclaration","scope":4222,"src":"236:14:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4218,"name":"uint256","nodeType":"ElementaryTypeName","src":"236:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"218:33:21"},"returnParameters":{"id":4221,"nodeType":"ParameterList","parameters":[],"src":"260:0:21"},"scope":4223,"src":"205:56:21","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4224,"src":"115:148:21","usedErrors":[]}],"src":"32:232:21"},"id":21},"contracts/interfaces/IPriceFeed.sol":{"ast":{"absolutePath":"contracts/interfaces/IPriceFeed.sol","exportedSymbols":{"IPriceFeed":[4277]},"id":4278,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4225,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"33:23:22"},{"abstract":false,"baseContracts":[],"canonicalName":"IPriceFeed","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4277,"linearizedBaseContracts":[4277],"name":"IPriceFeed","nameLocation":"68:10:22","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":4233,"name":"OracleUpdated","nameLocation":"89:13:22","nodeType":"EventDefinition","parameters":{"id":4232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"indexed":true,"mutability":"mutable","name":"asset","nameLocation":"119:5:22","nodeType":"VariableDeclaration","scope":4233,"src":"103:21:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4226,"name":"address","nodeType":"ElementaryTypeName","src":"103:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4229,"indexed":false,"mutability":"mutable","name":"oracle","nameLocation":"134:6:22","nodeType":"VariableDeclaration","scope":4233,"src":"126:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4228,"name":"address","nodeType":"ElementaryTypeName","src":"126:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4231,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"150:6:22","nodeType":"VariableDeclaration","scope":4233,"src":"142:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4230,"name":"address","nodeType":"ElementaryTypeName","src":"142:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"102:55:22"},"src":"83:75:22"},{"anonymous":false,"id":4239,"name":"EurOracleUpdated","nameLocation":"167:16:22","nodeType":"EventDefinition","parameters":{"id":4238,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4235,"indexed":false,"mutability":"mutable","name":"oracle","nameLocation":"192:6:22","nodeType":"VariableDeclaration","scope":4239,"src":"184:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4234,"name":"address","nodeType":"ElementaryTypeName","src":"184:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4237,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"208:6:22","nodeType":"VariableDeclaration","scope":4239,"src":"200:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4236,"name":"address","nodeType":"ElementaryTypeName","src":"200:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"183:32:22"},"src":"161:55:22"},{"functionSelector":"62adfe7a","id":4246,"implemented":false,"kind":"function","modifiers":[],"name":"setAssetOracle","nameLocation":"229:14:22","nodeType":"FunctionDefinition","parameters":{"id":4244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4241,"mutability":"mutable","name":"_asset","nameLocation":"252:6:22","nodeType":"VariableDeclaration","scope":4246,"src":"244:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4240,"name":"address","nodeType":"ElementaryTypeName","src":"244:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4243,"mutability":"mutable","name":"_oracle","nameLocation":"268:7:22","nodeType":"VariableDeclaration","scope":4246,"src":"260:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4242,"name":"address","nodeType":"ElementaryTypeName","src":"260:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"243:33:22"},"returnParameters":{"id":4245,"nodeType":"ParameterList","parameters":[],"src":"285:0:22"},"scope":4277,"src":"220:66:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3947e586","id":4251,"implemented":false,"kind":"function","modifiers":[],"name":"setEurOracle","nameLocation":"299:12:22","nodeType":"FunctionDefinition","parameters":{"id":4249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4248,"mutability":"mutable","name":"_oracle","nameLocation":"320:7:22","nodeType":"VariableDeclaration","scope":4251,"src":"312:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4247,"name":"address","nodeType":"ElementaryTypeName","src":"312:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"311:17:22"},"returnParameters":{"id":4250,"nodeType":"ParameterList","parameters":[],"src":"337:0:22"},"scope":4277,"src":"290:48:22","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"b3596f07","id":4258,"implemented":false,"kind":"function","modifiers":[],"name":"getAssetPrice","nameLocation":"351:13:22","nodeType":"FunctionDefinition","parameters":{"id":4254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4253,"mutability":"mutable","name":"_asset","nameLocation":"373:6:22","nodeType":"VariableDeclaration","scope":4258,"src":"365:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4252,"name":"address","nodeType":"ElementaryTypeName","src":"365:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"364:16:22"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4256,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4258,"src":"404:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4255,"name":"uint256","nodeType":"ElementaryTypeName","src":"404:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"403:9:22"},"scope":4277,"src":"342:71:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"724091e0","id":4267,"implemented":false,"kind":"function","modifiers":[],"name":"convertFrom","nameLocation":"426:11:22","nodeType":"FunctionDefinition","parameters":{"id":4263,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4260,"mutability":"mutable","name":"_asset","nameLocation":"446:6:22","nodeType":"VariableDeclaration","scope":4267,"src":"438:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4259,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4262,"mutability":"mutable","name":"_amount","nameLocation":"462:7:22","nodeType":"VariableDeclaration","scope":4267,"src":"454:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4261,"name":"uint256","nodeType":"ElementaryTypeName","src":"454:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"437:33:22"},"returnParameters":{"id":4266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4265,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4267,"src":"494:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4264,"name":"uint256","nodeType":"ElementaryTypeName","src":"494:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"493:9:22"},"scope":4277,"src":"417:86:22","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"9bfa5181","id":4276,"implemented":false,"kind":"function","modifiers":[],"name":"convertTo","nameLocation":"516:9:22","nodeType":"FunctionDefinition","parameters":{"id":4272,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4269,"mutability":"mutable","name":"_asset","nameLocation":"534:6:22","nodeType":"VariableDeclaration","scope":4276,"src":"526:14:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4268,"name":"address","nodeType":"ElementaryTypeName","src":"526:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4271,"mutability":"mutable","name":"_amount","nameLocation":"550:7:22","nodeType":"VariableDeclaration","scope":4276,"src":"542:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4270,"name":"uint256","nodeType":"ElementaryTypeName","src":"542:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"525:33:22"},"returnParameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4276,"src":"582:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4273,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"581:9:22"},"scope":4277,"src":"507:84:22","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4278,"src":"58:535:22","usedErrors":[]}],"src":"33:561:22"},"id":22},"contracts/interfaces/IVaultsCore.sol":{"ast":{"absolutePath":"contracts/interfaces/IVaultsCore.sol","exportedSymbols":{"IVaultsCore":[4439]},"id":4440,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4279,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"33:33:23"},{"id":4280,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"67:23:23"},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultsCore","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4439,"linearizedBaseContracts":[4439],"name":"IVaultsCore","nameLocation":"102:11:23","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"id":4288,"name":"Opened","nameLocation":"124:6:23","nodeType":"EventDefinition","parameters":{"id":4287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4282,"indexed":true,"mutability":"mutable","name":"vaultId","nameLocation":"147:7:23","nodeType":"VariableDeclaration","scope":4288,"src":"131:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4281,"name":"uint256","nodeType":"ElementaryTypeName","src":"131:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4284,"indexed":true,"mutability":"mutable","name":"collateralType","nameLocation":"172:14:23","nodeType":"VariableDeclaration","scope":4288,"src":"156:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4283,"name":"address","nodeType":"ElementaryTypeName","src":"156:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4286,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"204:5:23","nodeType":"VariableDeclaration","scope":4288,"src":"188:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4285,"name":"address","nodeType":"ElementaryTypeName","src":"188:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"130:80:23"},"src":"118:93:23"},{"anonymous":false,"id":4296,"name":"Deposited","nameLocation":"220:9:23","nodeType":"EventDefinition","parameters":{"id":4295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4290,"indexed":true,"mutability":"mutable","name":"vaultId","nameLocation":"246:7:23","nodeType":"VariableDeclaration","scope":4296,"src":"230:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4289,"name":"uint256","nodeType":"ElementaryTypeName","src":"230:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4292,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"263:6:23","nodeType":"VariableDeclaration","scope":4296,"src":"255:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4291,"name":"uint256","nodeType":"ElementaryTypeName","src":"255:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4294,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"287:6:23","nodeType":"VariableDeclaration","scope":4296,"src":"271:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4293,"name":"address","nodeType":"ElementaryTypeName","src":"271:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"229:65:23"},"src":"214:81:23"},{"anonymous":false,"id":4304,"name":"Withdrawn","nameLocation":"304:9:23","nodeType":"EventDefinition","parameters":{"id":4303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4298,"indexed":true,"mutability":"mutable","name":"vaultId","nameLocation":"330:7:23","nodeType":"VariableDeclaration","scope":4304,"src":"314:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4297,"name":"uint256","nodeType":"ElementaryTypeName","src":"314:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4300,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"347:6:23","nodeType":"VariableDeclaration","scope":4304,"src":"339:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4299,"name":"uint256","nodeType":"ElementaryTypeName","src":"339:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4302,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"371:6:23","nodeType":"VariableDeclaration","scope":4304,"src":"355:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4301,"name":"address","nodeType":"ElementaryTypeName","src":"355:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"313:65:23"},"src":"298:81:23"},{"anonymous":false,"id":4312,"name":"Borrowed","nameLocation":"388:8:23","nodeType":"EventDefinition","parameters":{"id":4311,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4306,"indexed":true,"mutability":"mutable","name":"vaultId","nameLocation":"413:7:23","nodeType":"VariableDeclaration","scope":4312,"src":"397:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4305,"name":"uint256","nodeType":"ElementaryTypeName","src":"397:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4308,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"430:6:23","nodeType":"VariableDeclaration","scope":4312,"src":"422:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4307,"name":"uint256","nodeType":"ElementaryTypeName","src":"422:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4310,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"454:6:23","nodeType":"VariableDeclaration","scope":4312,"src":"438:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4309,"name":"address","nodeType":"ElementaryTypeName","src":"438:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"396:65:23"},"src":"382:80:23"},{"anonymous":false,"id":4320,"name":"Repaid","nameLocation":"471:6:23","nodeType":"EventDefinition","parameters":{"id":4319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4314,"indexed":true,"mutability":"mutable","name":"vaultId","nameLocation":"494:7:23","nodeType":"VariableDeclaration","scope":4320,"src":"478:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4313,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4316,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"511:6:23","nodeType":"VariableDeclaration","scope":4320,"src":"503:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4315,"name":"uint256","nodeType":"ElementaryTypeName","src":"503:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4318,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"535:6:23","nodeType":"VariableDeclaration","scope":4320,"src":"519:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4317,"name":"address","nodeType":"ElementaryTypeName","src":"519:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"477:65:23"},"src":"465:78:23"},{"anonymous":false,"id":4332,"name":"Liquidated","nameLocation":"552:10:23","nodeType":"EventDefinition","parameters":{"id":4331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4322,"indexed":true,"mutability":"mutable","name":"vaultId","nameLocation":"584:7:23","nodeType":"VariableDeclaration","scope":4332,"src":"568:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4321,"name":"uint256","nodeType":"ElementaryTypeName","src":"568:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4324,"indexed":false,"mutability":"mutable","name":"debtRepaid","nameLocation":"605:10:23","nodeType":"VariableDeclaration","scope":4332,"src":"597:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4323,"name":"uint256","nodeType":"ElementaryTypeName","src":"597:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4326,"indexed":false,"mutability":"mutable","name":"collateralLiquidated","nameLocation":"629:20:23","nodeType":"VariableDeclaration","scope":4332,"src":"621:28:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4325,"name":"uint256","nodeType":"ElementaryTypeName","src":"621:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4328,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"671:5:23","nodeType":"VariableDeclaration","scope":4332,"src":"655:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4327,"name":"address","nodeType":"ElementaryTypeName","src":"655:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4330,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"698:6:23","nodeType":"VariableDeclaration","scope":4332,"src":"682:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4329,"name":"address","nodeType":"ElementaryTypeName","src":"682:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"562:146:23"},"src":"546:163:23"},{"anonymous":false,"id":4340,"name":"InsurancePaid","nameLocation":"719:13:23","nodeType":"EventDefinition","parameters":{"id":4339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4334,"indexed":true,"mutability":"mutable","name":"vaultId","nameLocation":"749:7:23","nodeType":"VariableDeclaration","scope":4340,"src":"733:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4333,"name":"uint256","nodeType":"ElementaryTypeName","src":"733:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4336,"indexed":false,"mutability":"mutable","name":"insuranceAmount","nameLocation":"766:15:23","nodeType":"VariableDeclaration","scope":4340,"src":"758:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4335,"name":"uint256","nodeType":"ElementaryTypeName","src":"758:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4338,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"799:6:23","nodeType":"VariableDeclaration","scope":4340,"src":"783:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4337,"name":"address","nodeType":"ElementaryTypeName","src":"783:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"732:74:23"},"src":"713:94:23"},{"functionSelector":"47e7ef24","id":4347,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"820:7:23","nodeType":"FunctionDefinition","parameters":{"id":4345,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4342,"mutability":"mutable","name":"_collateralType","nameLocation":"836:15:23","nodeType":"VariableDeclaration","scope":4347,"src":"828:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4341,"name":"address","nodeType":"ElementaryTypeName","src":"828:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4344,"mutability":"mutable","name":"_amount","nameLocation":"861:7:23","nodeType":"VariableDeclaration","scope":4347,"src":"853:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4343,"name":"uint256","nodeType":"ElementaryTypeName","src":"853:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"827:42:23"},"returnParameters":{"id":4346,"nodeType":"ParameterList","parameters":[],"src":"878:0:23"},"scope":4439,"src":"811:68:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"f6326fb3","id":4350,"implemented":false,"kind":"function","modifiers":[],"name":"depositETH","nameLocation":"892:10:23","nodeType":"FunctionDefinition","parameters":{"id":4348,"nodeType":"ParameterList","parameters":[],"src":"902:2:23"},"returnParameters":{"id":4349,"nodeType":"ParameterList","parameters":[],"src":"921:0:23"},"scope":4439,"src":"883:39:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"ce281041","id":4357,"implemented":false,"kind":"function","modifiers":[],"name":"depositByVaultId","nameLocation":"935:16:23","nodeType":"FunctionDefinition","parameters":{"id":4355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"_vaultId","nameLocation":"960:8:23","nodeType":"VariableDeclaration","scope":4357,"src":"952:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4351,"name":"uint256","nodeType":"ElementaryTypeName","src":"952:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"_amount","nameLocation":"978:7:23","nodeType":"VariableDeclaration","scope":4357,"src":"970:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"970:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"951:35:23"},"returnParameters":{"id":4356,"nodeType":"ParameterList","parameters":[],"src":"995:0:23"},"scope":4439,"src":"926:70:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d18343f3","id":4362,"implemented":false,"kind":"function","modifiers":[],"name":"depositETHByVaultId","nameLocation":"1009:19:23","nodeType":"FunctionDefinition","parameters":{"id":4360,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4359,"mutability":"mutable","name":"_vaultId","nameLocation":"1037:8:23","nodeType":"VariableDeclaration","scope":4362,"src":"1029:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4358,"name":"uint256","nodeType":"ElementaryTypeName","src":"1029:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1028:18:23"},"returnParameters":{"id":4361,"nodeType":"ParameterList","parameters":[],"src":"1063:0:23"},"scope":4439,"src":"1000:64:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a1789085","id":4371,"implemented":false,"kind":"function","modifiers":[],"name":"depositAndBorrow","nameLocation":"1077:16:23","nodeType":"FunctionDefinition","parameters":{"id":4369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4364,"mutability":"mutable","name":"_collateralType","nameLocation":"1107:15:23","nodeType":"VariableDeclaration","scope":4371,"src":"1099:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4363,"name":"address","nodeType":"ElementaryTypeName","src":"1099:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4366,"mutability":"mutable","name":"_depositAmount","nameLocation":"1136:14:23","nodeType":"VariableDeclaration","scope":4371,"src":"1128:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4365,"name":"uint256","nodeType":"ElementaryTypeName","src":"1128:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4368,"mutability":"mutable","name":"_borrowAmount","nameLocation":"1164:13:23","nodeType":"VariableDeclaration","scope":4371,"src":"1156:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4367,"name":"uint256","nodeType":"ElementaryTypeName","src":"1156:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1093:88:23"},"returnParameters":{"id":4370,"nodeType":"ParameterList","parameters":[],"src":"1190:0:23"},"scope":4439,"src":"1068:123:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"57f256e3","id":4376,"implemented":false,"kind":"function","modifiers":[],"name":"depositETHAndBorrow","nameLocation":"1204:19:23","nodeType":"FunctionDefinition","parameters":{"id":4374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4373,"mutability":"mutable","name":"_borrowAmount","nameLocation":"1232:13:23","nodeType":"VariableDeclaration","scope":4376,"src":"1224:21:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4372,"name":"uint256","nodeType":"ElementaryTypeName","src":"1224:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1223:23:23"},"returnParameters":{"id":4375,"nodeType":"ParameterList","parameters":[],"src":"1263:0:23"},"scope":4439,"src":"1195:69:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"441a3e70","id":4383,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"1277:8:23","nodeType":"FunctionDefinition","parameters":{"id":4381,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4378,"mutability":"mutable","name":"_vaultId","nameLocation":"1294:8:23","nodeType":"VariableDeclaration","scope":4383,"src":"1286:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4377,"name":"uint256","nodeType":"ElementaryTypeName","src":"1286:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4380,"mutability":"mutable","name":"_amount","nameLocation":"1312:7:23","nodeType":"VariableDeclaration","scope":4383,"src":"1304:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4379,"name":"uint256","nodeType":"ElementaryTypeName","src":"1304:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1285:35:23"},"returnParameters":{"id":4382,"nodeType":"ParameterList","parameters":[],"src":"1329:0:23"},"scope":4439,"src":"1268:62:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c7cdea37","id":4390,"implemented":false,"kind":"function","modifiers":[],"name":"withdrawETH","nameLocation":"1343:11:23","nodeType":"FunctionDefinition","parameters":{"id":4388,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4385,"mutability":"mutable","name":"_vaultId","nameLocation":"1363:8:23","nodeType":"VariableDeclaration","scope":4390,"src":"1355:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4384,"name":"uint256","nodeType":"ElementaryTypeName","src":"1355:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4387,"mutability":"mutable","name":"_amount","nameLocation":"1381:7:23","nodeType":"VariableDeclaration","scope":4390,"src":"1373:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4386,"name":"uint256","nodeType":"ElementaryTypeName","src":"1373:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1354:35:23"},"returnParameters":{"id":4389,"nodeType":"ParameterList","parameters":[],"src":"1398:0:23"},"scope":4439,"src":"1334:65:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0ecbcdab","id":4397,"implemented":false,"kind":"function","modifiers":[],"name":"borrow","nameLocation":"1412:6:23","nodeType":"FunctionDefinition","parameters":{"id":4395,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4392,"mutability":"mutable","name":"_vaultId","nameLocation":"1427:8:23","nodeType":"VariableDeclaration","scope":4397,"src":"1419:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4391,"name":"uint256","nodeType":"ElementaryTypeName","src":"1419:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4394,"mutability":"mutable","name":"_amount","nameLocation":"1445:7:23","nodeType":"VariableDeclaration","scope":4397,"src":"1437:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4393,"name":"uint256","nodeType":"ElementaryTypeName","src":"1437:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1418:35:23"},"returnParameters":{"id":4396,"nodeType":"ParameterList","parameters":[],"src":"1462:0:23"},"scope":4439,"src":"1403:60:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"3221be54","id":4402,"implemented":false,"kind":"function","modifiers":[],"name":"repayAll","nameLocation":"1476:8:23","nodeType":"FunctionDefinition","parameters":{"id":4400,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4399,"mutability":"mutable","name":"_vaultId","nameLocation":"1493:8:23","nodeType":"VariableDeclaration","scope":4402,"src":"1485:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4398,"name":"uint256","nodeType":"ElementaryTypeName","src":"1485:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1484:18:23"},"returnParameters":{"id":4401,"nodeType":"ParameterList","parameters":[],"src":"1511:0:23"},"scope":4439,"src":"1467:45:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"d8aed145","id":4409,"implemented":false,"kind":"function","modifiers":[],"name":"repay","nameLocation":"1525:5:23","nodeType":"FunctionDefinition","parameters":{"id":4407,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4404,"mutability":"mutable","name":"_vaultId","nameLocation":"1539:8:23","nodeType":"VariableDeclaration","scope":4409,"src":"1531:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4403,"name":"uint256","nodeType":"ElementaryTypeName","src":"1531:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4406,"mutability":"mutable","name":"_amount","nameLocation":"1557:7:23","nodeType":"VariableDeclaration","scope":4409,"src":"1549:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4405,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1530:35:23"},"returnParameters":{"id":4408,"nodeType":"ParameterList","parameters":[],"src":"1574:0:23"},"scope":4439,"src":"1516:59:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"415f1240","id":4414,"implemented":false,"kind":"function","modifiers":[],"name":"liquidate","nameLocation":"1588:9:23","nodeType":"FunctionDefinition","parameters":{"id":4412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4411,"mutability":"mutable","name":"_vaultId","nameLocation":"1606:8:23","nodeType":"VariableDeclaration","scope":4414,"src":"1598:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1598:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1597:18:23"},"returnParameters":{"id":4413,"nodeType":"ParameterList","parameters":[],"src":"1624:0:23"},"scope":4439,"src":"1579:46:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"1e6b6267","id":4421,"implemented":false,"kind":"function","modifiers":[],"name":"liquidatePartial","nameLocation":"1638:16:23","nodeType":"FunctionDefinition","parameters":{"id":4419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4416,"mutability":"mutable","name":"_vaultId","nameLocation":"1663:8:23","nodeType":"VariableDeclaration","scope":4421,"src":"1655:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4415,"name":"uint256","nodeType":"ElementaryTypeName","src":"1655:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4418,"mutability":"mutable","name":"_amount","nameLocation":"1681:7:23","nodeType":"VariableDeclaration","scope":4421,"src":"1673:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4417,"name":"uint256","nodeType":"ElementaryTypeName","src":"1673:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1654:35:23"},"returnParameters":{"id":4420,"nodeType":"ParameterList","parameters":[],"src":"1698:0:23"},"scope":4439,"src":"1629:70:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0900f010","id":4426,"implemented":false,"kind":"function","modifiers":[],"name":"upgrade","nameLocation":"1712:7:23","nodeType":"FunctionDefinition","parameters":{"id":4424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4423,"mutability":"mutable","name":"_newVaultsCore","nameLocation":"1736:14:23","nodeType":"VariableDeclaration","scope":4426,"src":"1720:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4422,"name":"address","nodeType":"ElementaryTypeName","src":"1720:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1719:32:23"},"returnParameters":{"id":4425,"nodeType":"ParameterList","parameters":[],"src":"1760:0:23"},"scope":4439,"src":"1703:58:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"cfc1b419","id":4431,"implemented":false,"kind":"function","modifiers":[],"name":"acceptUpgrade","nameLocation":"1774:13:23","nodeType":"FunctionDefinition","parameters":{"id":4429,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4428,"mutability":"mutable","name":"_oldVaultsCore","nameLocation":"1804:14:23","nodeType":"VariableDeclaration","scope":4431,"src":"1788:30:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4427,"name":"address","nodeType":"ElementaryTypeName","src":"1788:15:23","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"1787:32:23"},"returnParameters":{"id":4430,"nodeType":"ParameterList","parameters":[],"src":"1828:0:23"},"scope":4439,"src":"1765:64:23","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"85d36cd7","id":4438,"implemented":false,"kind":"function","modifiers":[],"name":"cumulativeRates","nameLocation":"1842:15:23","nodeType":"FunctionDefinition","parameters":{"id":4434,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4433,"mutability":"mutable","name":"_collateralType","nameLocation":"1866:15:23","nodeType":"VariableDeclaration","scope":4438,"src":"1858:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"1858:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1857:25:23"},"returnParameters":{"id":4437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4436,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4438,"src":"1906:7:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4435,"name":"uint256","nodeType":"ElementaryTypeName","src":"1906:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1905:9:23"},"scope":4439,"src":"1833:82:23","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4440,"src":"92:1825:23","usedErrors":[]}],"src":"33:1885:23"},"id":23},"contracts/interfaces/IVaultsDataProvider.sol":{"ast":{"absolutePath":"contracts/interfaces/IVaultsDataProvider.sol","exportedSymbols":{"IAddressProvider":[4138],"IVaultsDataProvider":[4567]},"id":4568,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4441,"literals":["experimental","ABIEncoderV2"],"nodeType":"PragmaDirective","src":"33:33:24"},{"id":4442,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"67:23:24"},{"absolutePath":"contracts/interfaces/IAddressProvider.sol","file":"../interfaces/IAddressProvider.sol","id":4443,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4568,"sourceUnit":4139,"src":"91:44:24","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"IVaultsDataProvider","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4567,"linearizedBaseContracts":[4567],"name":"IVaultsDataProvider","nameLocation":"147:19:24","nodeType":"ContractDefinition","nodes":[{"canonicalName":"IVaultsDataProvider.Vault","id":4454,"members":[{"constant":false,"id":4445,"mutability":"mutable","name":"collateralType","nameLocation":"237:14:24","nodeType":"VariableDeclaration","scope":4454,"src":"229:22:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4444,"name":"address","nodeType":"ElementaryTypeName","src":"229:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4447,"mutability":"mutable","name":"owner","nameLocation":"265:5:24","nodeType":"VariableDeclaration","scope":4454,"src":"257:13:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4446,"name":"address","nodeType":"ElementaryTypeName","src":"257:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4449,"mutability":"mutable","name":"collateralBalance","nameLocation":"284:17:24","nodeType":"VariableDeclaration","scope":4454,"src":"276:25:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4448,"name":"uint256","nodeType":"ElementaryTypeName","src":"276:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4451,"mutability":"mutable","name":"baseDebt","nameLocation":"315:8:24","nodeType":"VariableDeclaration","scope":4454,"src":"307:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4450,"name":"uint256","nodeType":"ElementaryTypeName","src":"307:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4453,"mutability":"mutable","name":"createdAt","nameLocation":"337:9:24","nodeType":"VariableDeclaration","scope":4454,"src":"329:17:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4452,"name":"uint256","nodeType":"ElementaryTypeName","src":"329:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Vault","nameLocation":"178:5:24","nodeType":"StructDefinition","scope":4567,"src":"171:180:24","visibility":"public"},{"functionSelector":"cc92d31c","id":4463,"implemented":false,"kind":"function","modifiers":[],"name":"createVault","nameLocation":"374:11:24","nodeType":"FunctionDefinition","parameters":{"id":4459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4456,"mutability":"mutable","name":"_collateralType","nameLocation":"394:15:24","nodeType":"VariableDeclaration","scope":4463,"src":"386:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4455,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4458,"mutability":"mutable","name":"_owner","nameLocation":"419:6:24","nodeType":"VariableDeclaration","scope":4463,"src":"411:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4457,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"385:41:24"},"returnParameters":{"id":4462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4461,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4463,"src":"445:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4460,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"444:9:24"},"scope":4567,"src":"365:89:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"c7eb222b","id":4470,"implemented":false,"kind":"function","modifiers":[],"name":"setCollateralBalance","nameLocation":"467:20:24","nodeType":"FunctionDefinition","parameters":{"id":4468,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4465,"mutability":"mutable","name":"_id","nameLocation":"496:3:24","nodeType":"VariableDeclaration","scope":4470,"src":"488:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"488:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4467,"mutability":"mutable","name":"_balance","nameLocation":"509:8:24","nodeType":"VariableDeclaration","scope":4470,"src":"501:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4466,"name":"uint256","nodeType":"ElementaryTypeName","src":"501:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"487:31:24"},"returnParameters":{"id":4469,"nodeType":"ParameterList","parameters":[],"src":"527:0:24"},"scope":4567,"src":"458:70:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"ef18fcb4","id":4477,"implemented":false,"kind":"function","modifiers":[],"name":"setBaseDebt","nameLocation":"541:11:24","nodeType":"FunctionDefinition","parameters":{"id":4475,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4472,"mutability":"mutable","name":"_id","nameLocation":"561:3:24","nodeType":"VariableDeclaration","scope":4477,"src":"553:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4471,"name":"uint256","nodeType":"ElementaryTypeName","src":"553:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4474,"mutability":"mutable","name":"_newBaseDebt","nameLocation":"574:12:24","nodeType":"VariableDeclaration","scope":4477,"src":"566:20:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4473,"name":"uint256","nodeType":"ElementaryTypeName","src":"566:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"552:35:24"},"returnParameters":{"id":4476,"nodeType":"ParameterList","parameters":[],"src":"596:0:24"},"scope":4567,"src":"532:65:24","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"0dbe671f","id":4483,"implemented":false,"kind":"function","modifiers":[],"name":"a","nameLocation":"620:1:24","nodeType":"FunctionDefinition","parameters":{"id":4478,"nodeType":"ParameterList","parameters":[],"src":"621:2:24"},"returnParameters":{"id":4482,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4481,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4483,"src":"647:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"},"typeName":{"id":4480,"nodeType":"UserDefinedTypeName","pathNode":{"id":4479,"name":"IAddressProvider","nodeType":"IdentifierPath","referencedDeclaration":4138,"src":"647:16:24"},"referencedDeclaration":4138,"src":"647:16:24","typeDescriptions":{"typeIdentifier":"t_contract$_IAddressProvider_$4138","typeString":"contract IAddressProvider"}},"visibility":"internal"}],"src":"646:18:24"},"scope":4567,"src":"611:54:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"4e571cb0","id":4490,"implemented":false,"kind":"function","modifiers":[],"name":"baseDebt","nameLocation":"678:8:24","nodeType":"FunctionDefinition","parameters":{"id":4486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4485,"mutability":"mutable","name":"_collateralType","nameLocation":"695:15:24","nodeType":"VariableDeclaration","scope":4490,"src":"687:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4484,"name":"address","nodeType":"ElementaryTypeName","src":"687:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"686:25:24"},"returnParameters":{"id":4489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4488,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4490,"src":"735:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4487,"name":"uint256","nodeType":"ElementaryTypeName","src":"735:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"734:9:24"},"scope":4567,"src":"669:75:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a7c6a100","id":4495,"implemented":false,"kind":"function","modifiers":[],"name":"vaultCount","nameLocation":"757:10:24","nodeType":"FunctionDefinition","parameters":{"id":4491,"nodeType":"ParameterList","parameters":[],"src":"767:2:24"},"returnParameters":{"id":4494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4493,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4495,"src":"793:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4492,"name":"uint256","nodeType":"ElementaryTypeName","src":"793:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"792:9:24"},"scope":4567,"src":"748:54:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"8c64ea4a","id":4503,"implemented":false,"kind":"function","modifiers":[],"name":"vaults","nameLocation":"815:6:24","nodeType":"FunctionDefinition","parameters":{"id":4498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4497,"mutability":"mutable","name":"_id","nameLocation":"830:3:24","nodeType":"VariableDeclaration","scope":4503,"src":"822:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4496,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:13:24"},"returnParameters":{"id":4502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4503,"src":"858:12:24","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$4454_memory_ptr","typeString":"struct IVaultsDataProvider.Vault"},"typeName":{"id":4500,"nodeType":"UserDefinedTypeName","pathNode":{"id":4499,"name":"Vault","nodeType":"IdentifierPath","referencedDeclaration":4454,"src":"858:5:24"},"referencedDeclaration":4454,"src":"858:5:24","typeDescriptions":{"typeIdentifier":"t_struct$_Vault_$4454_storage_ptr","typeString":"struct IVaultsDataProvider.Vault"}},"visibility":"internal"}],"src":"857:14:24"},"scope":4567,"src":"806:66:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"3c2ecfe5","id":4510,"implemented":false,"kind":"function","modifiers":[],"name":"vaultOwner","nameLocation":"885:10:24","nodeType":"FunctionDefinition","parameters":{"id":4506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4505,"mutability":"mutable","name":"_id","nameLocation":"904:3:24","nodeType":"VariableDeclaration","scope":4510,"src":"896:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4504,"name":"uint256","nodeType":"ElementaryTypeName","src":"896:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"895:13:24"},"returnParameters":{"id":4509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4508,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4510,"src":"932:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4507,"name":"address","nodeType":"ElementaryTypeName","src":"932:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"931:9:24"},"scope":4567,"src":"876:65:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"b508bc59","id":4517,"implemented":false,"kind":"function","modifiers":[],"name":"vaultCollateralType","nameLocation":"954:19:24","nodeType":"FunctionDefinition","parameters":{"id":4513,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4512,"mutability":"mutable","name":"_id","nameLocation":"982:3:24","nodeType":"VariableDeclaration","scope":4517,"src":"974:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4511,"name":"uint256","nodeType":"ElementaryTypeName","src":"974:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"973:13:24"},"returnParameters":{"id":4516,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4515,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4517,"src":"1010:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4514,"name":"address","nodeType":"ElementaryTypeName","src":"1010:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1009:9:24"},"scope":4567,"src":"945:74:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"828f8def","id":4524,"implemented":false,"kind":"function","modifiers":[],"name":"vaultCollateralBalance","nameLocation":"1032:22:24","nodeType":"FunctionDefinition","parameters":{"id":4520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4519,"mutability":"mutable","name":"_id","nameLocation":"1063:3:24","nodeType":"VariableDeclaration","scope":4524,"src":"1055:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4518,"name":"uint256","nodeType":"ElementaryTypeName","src":"1055:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1054:13:24"},"returnParameters":{"id":4523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4522,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4524,"src":"1091:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1091:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1090:9:24"},"scope":4567,"src":"1023:77:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"c8c5c815","id":4531,"implemented":false,"kind":"function","modifiers":[],"name":"vaultBaseDebt","nameLocation":"1113:13:24","nodeType":"FunctionDefinition","parameters":{"id":4527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4526,"mutability":"mutable","name":"_id","nameLocation":"1135:3:24","nodeType":"VariableDeclaration","scope":4531,"src":"1127:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4525,"name":"uint256","nodeType":"ElementaryTypeName","src":"1127:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1126:13:24"},"returnParameters":{"id":4530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4529,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4531,"src":"1163:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4528,"name":"uint256","nodeType":"ElementaryTypeName","src":"1163:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1162:9:24"},"scope":4567,"src":"1104:68:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"bd44815f","id":4540,"implemented":false,"kind":"function","modifiers":[],"name":"vaultId","nameLocation":"1185:7:24","nodeType":"FunctionDefinition","parameters":{"id":4536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4533,"mutability":"mutable","name":"_collateralType","nameLocation":"1201:15:24","nodeType":"VariableDeclaration","scope":4540,"src":"1193:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4532,"name":"address","nodeType":"ElementaryTypeName","src":"1193:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4535,"mutability":"mutable","name":"_owner","nameLocation":"1226:6:24","nodeType":"VariableDeclaration","scope":4540,"src":"1218:14:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4534,"name":"address","nodeType":"ElementaryTypeName","src":"1218:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1192:41:24"},"returnParameters":{"id":4539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4540,"src":"1257:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4537,"name":"uint256","nodeType":"ElementaryTypeName","src":"1257:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1256:9:24"},"scope":4567,"src":"1176:90:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"dcd68128","id":4547,"implemented":false,"kind":"function","modifiers":[],"name":"vaultExists","nameLocation":"1279:11:24","nodeType":"FunctionDefinition","parameters":{"id":4543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4542,"mutability":"mutable","name":"_id","nameLocation":"1299:3:24","nodeType":"VariableDeclaration","scope":4547,"src":"1291:11:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4541,"name":"uint256","nodeType":"ElementaryTypeName","src":"1291:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1290:13:24"},"returnParameters":{"id":4546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4545,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4547,"src":"1327:4:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4544,"name":"bool","nodeType":"ElementaryTypeName","src":"1327:4:24","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1326:6:24"},"scope":4567,"src":"1270:63:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d310f49b","id":4554,"implemented":false,"kind":"function","modifiers":[],"name":"vaultDebt","nameLocation":"1346:9:24","nodeType":"FunctionDefinition","parameters":{"id":4550,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4549,"mutability":"mutable","name":"_vaultId","nameLocation":"1364:8:24","nodeType":"VariableDeclaration","scope":4554,"src":"1356:16:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4548,"name":"uint256","nodeType":"ElementaryTypeName","src":"1356:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1355:18:24"},"returnParameters":{"id":4553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4552,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4554,"src":"1397:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4551,"name":"uint256","nodeType":"ElementaryTypeName","src":"1397:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1396:9:24"},"scope":4567,"src":"1337:69:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"0dca59c1","id":4559,"implemented":false,"kind":"function","modifiers":[],"name":"debt","nameLocation":"1419:4:24","nodeType":"FunctionDefinition","parameters":{"id":4555,"nodeType":"ParameterList","parameters":[],"src":"1423:2:24"},"returnParameters":{"id":4558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4557,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4559,"src":"1449:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4556,"name":"uint256","nodeType":"ElementaryTypeName","src":"1449:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1448:9:24"},"scope":4567,"src":"1410:48:24","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"12aa5dc6","id":4566,"implemented":false,"kind":"function","modifiers":[],"name":"collateralDebt","nameLocation":"1471:14:24","nodeType":"FunctionDefinition","parameters":{"id":4562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4561,"mutability":"mutable","name":"_collateralType","nameLocation":"1494:15:24","nodeType":"VariableDeclaration","scope":4566,"src":"1486:23:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4560,"name":"address","nodeType":"ElementaryTypeName","src":"1486:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1485:25:24"},"returnParameters":{"id":4565,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4564,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4566,"src":"1534:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4563,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:24","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:9:24"},"scope":4567,"src":"1462:81:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4568,"src":"137:1408:24","usedErrors":[]}],"src":"33:1513:24"},"id":24},"contracts/interfaces/IWETH.sol":{"ast":{"absolutePath":"contracts/interfaces/IWETH.sol","exportedSymbols":{"IWETH":[4614]},"id":4615,"nodeType":"SourceUnit","nodes":[{"id":4569,"literals":["solidity","0.8",".10"],"nodeType":"PragmaDirective","src":"0:23:25"},{"abstract":false,"baseContracts":[],"canonicalName":"IWETH","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":4614,"linearizedBaseContracts":[4614],"name":"IWETH","nameLocation":"35:5:25","nodeType":"ContractDefinition","nodes":[{"functionSelector":"70a08231","id":4576,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"54:9:25","nodeType":"FunctionDefinition","parameters":{"id":4572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4571,"mutability":"mutable","name":"user","nameLocation":"72:4:25","nodeType":"VariableDeclaration","scope":4576,"src":"64:12:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4570,"name":"address","nodeType":"ElementaryTypeName","src":"64:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"63:14:25"},"returnParameters":{"id":4575,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4574,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4576,"src":"101:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4573,"name":"uint256","nodeType":"ElementaryTypeName","src":"101:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"100:9:25"},"scope":4614,"src":"45:65:25","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"d0e30db0","id":4579,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nameLocation":"123:7:25","nodeType":"FunctionDefinition","parameters":{"id":4577,"nodeType":"ParameterList","parameters":[],"src":"130:2:25"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[],"src":"149:0:25"},"scope":4614,"src":"114:36:25","stateMutability":"payable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":4588,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"163:8:25","nodeType":"FunctionDefinition","parameters":{"id":4584,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4581,"mutability":"mutable","name":"to","nameLocation":"180:2:25","nodeType":"VariableDeclaration","scope":4588,"src":"172:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4580,"name":"address","nodeType":"ElementaryTypeName","src":"172:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4583,"mutability":"mutable","name":"value","nameLocation":"192:5:25","nodeType":"VariableDeclaration","scope":4588,"src":"184:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4582,"name":"uint256","nodeType":"ElementaryTypeName","src":"184:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"171:27:25"},"returnParameters":{"id":4587,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4586,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4588,"src":"217:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4585,"name":"bool","nodeType":"ElementaryTypeName","src":"217:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"216:6:25"},"scope":4614,"src":"154:69:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":4597,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"236:7:25","nodeType":"FunctionDefinition","parameters":{"id":4593,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4590,"mutability":"mutable","name":"to","nameLocation":"252:2:25","nodeType":"VariableDeclaration","scope":4597,"src":"244:10:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4589,"name":"address","nodeType":"ElementaryTypeName","src":"244:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4592,"mutability":"mutable","name":"value","nameLocation":"264:5:25","nodeType":"VariableDeclaration","scope":4597,"src":"256:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4591,"name":"uint256","nodeType":"ElementaryTypeName","src":"256:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"243:27:25"},"returnParameters":{"id":4596,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4595,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4597,"src":"289:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4594,"name":"bool","nodeType":"ElementaryTypeName","src":"289:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"288:6:25"},"scope":4614,"src":"227:68:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"2e1a7d4d","id":4602,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"308:8:25","nodeType":"FunctionDefinition","parameters":{"id":4600,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4599,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4602,"src":"317:7:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4598,"name":"uint256","nodeType":"ElementaryTypeName","src":"317:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"316:9:25"},"returnParameters":{"id":4601,"nodeType":"ParameterList","parameters":[],"src":"334:0:25"},"scope":4614,"src":"299:36:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":4613,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"348:12:25","nodeType":"FunctionDefinition","parameters":{"id":4609,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4604,"mutability":"mutable","name":"sender","nameLocation":"374:6:25","nodeType":"VariableDeclaration","scope":4613,"src":"366:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4603,"name":"address","nodeType":"ElementaryTypeName","src":"366:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4606,"mutability":"mutable","name":"recipient","nameLocation":"394:9:25","nodeType":"VariableDeclaration","scope":4613,"src":"386:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4605,"name":"address","nodeType":"ElementaryTypeName","src":"386:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4608,"mutability":"mutable","name":"amount","nameLocation":"417:6:25","nodeType":"VariableDeclaration","scope":4613,"src":"409:14:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4607,"name":"uint256","nodeType":"ElementaryTypeName","src":"409:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"360:67:25"},"returnParameters":{"id":4612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4611,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4613,"src":"446:4:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4610,"name":"bool","nodeType":"ElementaryTypeName","src":"446:4:25","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"445:6:25"},"scope":4614,"src":"339:113:25","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":4615,"src":"25:429:25","usedErrors":[]}],"src":"0:455:25"},"id":25}},"contracts":{"@aave/core-v3/contracts/interfaces/IPool.sol":{"IPool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"backer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"fee","type":"uint256"}],"name":"BackUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"borrowRate","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Borrow","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"target","type":"address"},{"indexed":false,"internalType":"address","name":"initiator","type":"address"},{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"premium","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"FlashLoan","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"uint256","name":"totalDebt","type":"uint256"}],"name":"IsolationModeTotalDebtUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"collateralAsset","type":"address"},{"indexed":true,"internalType":"address","name":"debtAsset","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"debtToCover","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidatedCollateralAmount","type":"uint256"},{"indexed":false,"internalType":"address","name":"liquidator","type":"address"},{"indexed":false,"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"LiquidationCall","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"MintUnbacked","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountMinted","type":"uint256"}],"name":"MintedToTreasury","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"RebalanceStableBorrowRate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"repayer","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"bool","name":"useATokens","type":"bool"}],"name":"Repay","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"uint256","name":"liquidityRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"stableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowRate","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"liquidityIndex","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"variableBorrowIndex","type":"uint256"}],"name":"ReserveDataUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralDisabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"}],"name":"ReserveUsedAsCollateralEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"onBehalfOf","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"Supply","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"enum DataTypes.InterestRateMode","name":"interestRateMode","type":"uint8"}],"name":"SwapBorrowRateMode","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"UserEModeSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"reserve","type":"address"},{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdraw","type":"event"},{"inputs":[],"name":"ADDRESSES_PROVIDER","outputs":[{"internalType":"contract IPoolAddressesProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"BRIDGE_PROTOCOL_FEE","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TOTAL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"FLASHLOAN_PREMIUM_TO_PROTOCOL","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_NUMBER_RESERVES","outputs":[{"internalType":"uint16","name":"","type":"uint16"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MAX_STABLE_RATE_BORROW_SIZE_PERCENT","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}],"name":"backUnbacked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"},{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"config","type":"tuple"}],"name":"configureEModeCategory","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"dropReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"balanceFromBefore","type":"uint256"},{"internalType":"uint256","name":"balanceToBefore","type":"uint256"}],"name":"finalizeTransfer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"interestRateModes","type":"uint256[]"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoan","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"receiverAddress","type":"address"},{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"params","type":"bytes"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"flashLoanSimple","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"id","type":"uint8"}],"name":"getEModeCategoryData","outputs":[{"components":[{"internalType":"uint16","name":"ltv","type":"uint16"},{"internalType":"uint16","name":"liquidationThreshold","type":"uint16"},{"internalType":"uint16","name":"liquidationBonus","type":"uint16"},{"internalType":"address","name":"priceSource","type":"address"},{"internalType":"string","name":"label","type":"string"}],"internalType":"struct DataTypes.EModeCategory","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveData","outputs":[{"components":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"},{"internalType":"uint128","name":"liquidityIndex","type":"uint128"},{"internalType":"uint128","name":"currentLiquidityRate","type":"uint128"},{"internalType":"uint128","name":"variableBorrowIndex","type":"uint128"},{"internalType":"uint128","name":"currentVariableBorrowRate","type":"uint128"},{"internalType":"uint128","name":"currentStableBorrowRate","type":"uint128"},{"internalType":"uint40","name":"lastUpdateTimestamp","type":"uint40"},{"internalType":"uint16","name":"id","type":"uint16"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtTokenAddress","type":"address"},{"internalType":"address","name":"variableDebtTokenAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"},{"internalType":"uint128","name":"accruedToTreasury","type":"uint128"},{"internalType":"uint128","name":"unbacked","type":"uint128"},{"internalType":"uint128","name":"isolationModeTotalDebt","type":"uint128"}],"internalType":"struct DataTypes.ReserveData","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedIncome","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"getReserveNormalizedVariableDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getReservesList","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserAccountData","outputs":[{"internalType":"uint256","name":"totalCollateralBase","type":"uint256"},{"internalType":"uint256","name":"totalDebtBase","type":"uint256"},{"internalType":"uint256","name":"availableBorrowsBase","type":"uint256"},{"internalType":"uint256","name":"currentLiquidationThreshold","type":"uint256"},{"internalType":"uint256","name":"ltv","type":"uint256"},{"internalType":"uint256","name":"healthFactor","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserConfiguration","outputs":[{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.UserConfigurationMap","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserEMode","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"aTokenAddress","type":"address"},{"internalType":"address","name":"stableDebtAddress","type":"address"},{"internalType":"address","name":"variableDebtAddress","type":"address"},{"internalType":"address","name":"interestRateStrategyAddress","type":"address"}],"name":"initReserve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"collateralAsset","type":"address"},{"internalType":"address","name":"debtAsset","type":"address"},{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"debtToCover","type":"uint256"},{"internalType":"bool","name":"receiveAToken","type":"bool"}],"name":"liquidationCall","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"}],"name":"mintToTreasury","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"mintUnbacked","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"user","type":"address"}],"name":"rebalanceStableBorrowRate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"}],"name":"repay","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"repayWithATokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"repayWithPermit","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"rescueTokens","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"resetIsolationModeTotalDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"components":[{"internalType":"uint256","name":"data","type":"uint256"}],"internalType":"struct DataTypes.ReserveConfigurationMap","name":"configuration","type":"tuple"}],"name":"setConfiguration","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"address","name":"rateStrategyAddress","type":"address"}],"name":"setReserveInterestRateStrategyAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"categoryId","type":"uint8"}],"name":"setUserEMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"bool","name":"useAsCollateral","type":"bool"}],"name":"setUserUseReserveAsCollateral","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"}],"name":"supply","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"onBehalfOf","type":"address"},{"internalType":"uint16","name":"referralCode","type":"uint16"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"permitV","type":"uint8"},{"internalType":"bytes32","name":"permitR","type":"bytes32"},{"internalType":"bytes32","name":"permitS","type":"bytes32"}],"name":"supplyWithPermit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"interestRateMode","type":"uint256"}],"name":"swapBorrowRateMode","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"bridgeProtocolFee","type":"uint256"}],"name":"updateBridgeProtocolFee","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint128","name":"flashLoanPremiumTotal","type":"uint128"},{"internalType":"uint128","name":"flashLoanPremiumToProtocol","type":"uint128"}],"name":"updateFlashloanPremiums","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"address","name":"to","type":"address"}],"name":"withdraw","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","events":{"BackUnbacked(address,address,uint256,uint256)":{"details":"Emitted on backUnbacked()","params":{"amount":"The amount added as backing","backer":"The address paying for the backing","fee":"The amount paid in fees*","reserve":"The address of the underlying asset of the reserve"}},"Borrow(address,address,address,uint256,uint8,uint256,uint16)":{"details":"Emitted on borrow() and flashLoan() when debt needs to be opened","params":{"amount":"The amount borrowed out","borrowRate":"The numeric rate at which the user has borrowed, expressed in ray","interestRateMode":"The rate mode: 1 for Stable, 2 for Variable","onBehalfOf":"The address that will be getting the debt","referralCode":"The referral code used*","reserve":"The address of the underlying asset being borrowed","user":"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()"}},"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)":{"details":"Emitted on flashLoan()","params":{"amount":"The amount flash borrowed","asset":"The address of the asset being flash borrowed","initiator":"The address initiating the flash loan","interestRateMode":"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt","premium":"The fee flash borrowed","referralCode":"The referral code used*","target":"The address of the flash loan receiver contract"}},"IsolationModeTotalDebtUpdated(address,uint256)":{"details":"Emitted on borrow(), repay() and liquidationCall() when using isolated assets","params":{"asset":"The address of the underlying asset of the reserve","totalDebt":"The total isolation mode debt for the reserve"}},"LiquidationCall(address,address,address,uint256,uint256,address,bool)":{"details":"Emitted when a borrower is liquidated.","params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","liquidatedCollateralAmount":"The amount of collateral received by the liquidator","liquidator":"The address of the liquidator","receiveAToken":"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"MintUnbacked(address,address,address,uint256,uint16)":{"details":"Emitted on mintUnbacked()","params":{"amount":"The amount of supplied assets","onBehalfOf":"The beneficiary of the supplied assets, receiving the aTokens","referralCode":"The referral code used*","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the supply"}},"MintedToTreasury(address,uint256)":{"details":"Emitted when the protocol treasury receives minted aTokens from the accrued interest.","params":{"amountMinted":"The amount minted to the treasury*","reserve":"The address of the reserve"}},"RebalanceStableBorrowRate(address,address)":{"details":"Emitted on rebalanceStableBorrowRate()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user for which the rebalance has been executed*"}},"Repay(address,address,address,uint256,bool)":{"details":"Emitted on repay()","params":{"amount":"The amount repaid","repayer":"The address of the user initiating the repay(), providing the funds","reserve":"The address of the underlying asset of the reserve","useATokens":"True if the repayment is done using aTokens, `false` if done with underlying asset directly*","user":"The beneficiary of the repayment, getting his debt reduced"}},"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)":{"details":"Emitted when the state of a reserve is updated.","params":{"liquidityIndex":"The next liquidity index","liquidityRate":"The next liquidity rate","reserve":"The address of the underlying asset of the reserve","stableBorrowRate":"The next stable borrow rate","variableBorrowIndex":"The next variable borrow index*","variableBorrowRate":"The next variable borrow rate"}},"ReserveUsedAsCollateralDisabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"ReserveUsedAsCollateralEnabled(address,address)":{"details":"Emitted on setUserUseReserveAsCollateral()","params":{"reserve":"The address of the underlying asset of the reserve","user":"The address of the user enabling the usage as collateral*"}},"Supply(address,address,address,uint256,uint16)":{"details":"Emitted on supply()","params":{"amount":"The amount supplied","onBehalfOf":"The beneficiary of the supply, receiving the aTokens","referralCode":"The referral code used*","reserve":"The address of the underlying asset of the reserve","user":"The address initiating the supply"}},"SwapBorrowRateMode(address,address,uint8)":{"details":"Emitted on swapBorrowRateMode()","params":{"interestRateMode":"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable*","reserve":"The address of the underlying asset of the reserve","user":"The address of the user swapping his rate mode"}},"UserEModeSet(address,uint8)":{"details":"Emitted when the user selects a certain asset category for eMode","params":{"categoryId":"The category id*","user":"The address of the user"}},"Withdraw(address,address,address,uint256)":{"details":"Emitted on withdraw()","params":{"amount":"The amount to be withdrawn*","reserve":"The address of the underlying asset being withdrawn","to":"The address that will receive the underlying","user":"The address initiating the withdrawal, owner of aTokens"}}},"kind":"dev","methods":{"ADDRESSES_PROVIDER()":{"returns":{"_0":"The address of the PoolAddressesProvider*"}},"BRIDGE_PROTOCOL_FEE()":{"returns":{"_0":"The bridge fee sent to the protocol treasury"}},"FLASHLOAN_PREMIUM_TOTAL()":{"returns":{"_0":"The total fee on flashloans"}},"FLASHLOAN_PREMIUM_TO_PROTOCOL()":{"returns":{"_0":"The flashloan fee sent to the protocol treasury"}},"MAX_NUMBER_RESERVES()":{"returns":{"_0":"The maximum number of reserves supported"}},"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":{"returns":{"_0":"The percentage of available liquidity to borrow, expressed in bps"}},"backUnbacked(address,uint256,uint256)":{"details":"Back the current unbacked underlying with `amount` and pay `fee`.","params":{"amount":"The amount to back","asset":"The address of the underlying asset to back","fee":"The amount paid in fees*"}},"borrow(address,uint256,uint256,uint16,address)":{"params":{"amount":"The amount to be borrowed","asset":"The address of the underlying asset to borrow","interestRateMode":"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable","onBehalfOf":"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":{"details":"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets","params":{"config":"The configuration of the category","id":"The id of the category"}},"deposit(address,uint256,address,uint16)":{"details":"Deprecated: Use the `supply` function instead","params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"dropReserve(address)":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve*"}},"finalizeTransfer(address,address,address,uint256,uint256,uint256)":{"details":"Only callable by the overlying aToken of the `asset`","params":{"amount":"The amount being transferred/withdrawn","asset":"The address of the underlying asset of the aToken","balanceFromBefore":"The aToken balance of the `from` user before the transfer","balanceToBefore":"The aToken balance of the `to` user before the transfer","from":"The user from which the aTokens are transferred","to":"The user receiving the aTokens"}},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{"details":"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com","params":{"amounts":"The amounts of the assets being flash-borrowed","assets":"The addresses of the assets being flash-borrowed","interestRateModes":"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address","onBehalfOf":"The address  that will receive the debt in the case of using on `modes` 1 or 2","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"flashLoanSimple(address,address,uint256,bytes,uint16)":{"details":"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com","params":{"amount":"The amount of the asset being flash-borrowed","asset":"The address of the asset being flash-borrowed","params":"Variadic packed params to pass to the receiver as extra information","receiverAddress":"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface","referralCode":"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"getConfiguration(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The configuration of the reserve*"}},"getEModeCategoryData(uint8)":{"params":{"id":"The id of the category"},"returns":{"_0":"The configuration data of the category"}},"getReserveData(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The state and configuration data of the reserve*"}},"getReserveNormalizedIncome(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve's normalized income"}},"getReserveNormalizedVariableDebt(address)":{"params":{"asset":"The address of the underlying asset of the reserve"},"returns":{"_0":"The reserve normalized variable debt"}},"getReservesList()":{"details":"It does not include dropped reserves","returns":{"_0":"The addresses of the reserves*"}},"getUserAccountData(address)":{"params":{"user":"The address of the user"},"returns":{"availableBorrowsBase":"The borrowing power left of the user in the base currency used by the price feed","currentLiquidationThreshold":"The liquidation threshold of the user","healthFactor":"The current health factor of the user*","ltv":"The loan to value of The user","totalCollateralBase":"The total collateral of the user in the base currency used by the price feed","totalDebtBase":"The total debt of the user in the base currency used by the price feed"}},"getUserConfiguration(address)":{"params":{"user":"The user address"},"returns":{"_0":"The configuration of the user*"}},"getUserEMode(address)":{"params":{"user":"The address of the user"},"returns":{"_0":"The eMode id"}},"initReserve(address,address,address,address,address)":{"details":"Only callable by the PoolConfigurator contract","params":{"aTokenAddress":"The address of the aToken that will be assigned to the reserve","asset":"The address of the underlying asset of the reserve","interestRateStrategyAddress":"The address of the interest rate strategy contract*","stableDebtAddress":"The address of the StableDebtToken that will be assigned to the reserve","variableDebtAddress":"The address of the VariableDebtToken that will be assigned to the reserve"}},"liquidationCall(address,address,address,uint256,bool)":{"params":{"collateralAsset":"The address of the underlying asset used as collateral, to receive as result of the liquidation","debtAsset":"The address of the underlying borrowed asset to be repaid with the liquidation","debtToCover":"The debt amount of borrowed `asset` the liquidator wants to cover","receiveAToken":"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*","user":"The address of the borrower getting liquidated"}},"mintToTreasury(address[])":{"params":{"assets":"The list of reserves for which the minting needs to be executed*"}},"mintUnbacked(address,uint256,address,uint16)":{"details":"Mints an `amount` of aTokens to the `onBehalfOf`","params":{"amount":"The amount to mint","asset":"The address of the underlying asset to mint","onBehalfOf":"The address that will receive the aTokens","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"rebalanceStableBorrowRate(address,address)":{"params":{"asset":"The address of the underlying asset borrowed","user":"The address of the user to be rebalanced*"}},"repay(address,uint256,uint256,address)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable","onBehalfOf":"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed"},"returns":{"_0":"The final amount repaid*"}},"repayWithATokens(address,uint256,uint256)":{"details":"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt","params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable"},"returns":{"_0":"The final amount repaid*"}},"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`","asset":"The address of the borrowed underlying asset previously borrowed","deadline":"The deadline timestamp that the permit is valid","interestRateMode":"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable","onBehalfOf":"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed","permitR":"The R parameter of ERC712 permit sig","permitS":"The S parameter of ERC712 permit sig","permitV":"The V parameter of ERC712 permit sig"},"returns":{"_0":"The final amount repaid*"}},"rescueTokens(address,address,uint256)":{"params":{"amount":"The amount of token to transfer","to":"The address of the recipient","token":"The address of the token"}},"resetIsolationModeTotalDebt(address)":{"details":"It requires the given asset has zero debt ceiling","params":{"asset":"The address of the underlying asset to reset the isolationModeTotalDebt"}},"setConfiguration(address,(uint256))":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve","configuration":"The new configuration bitmap*"}},"setReserveInterestRateStrategyAddress(address,address)":{"details":"Only callable by the PoolConfigurator contract","params":{"asset":"The address of the underlying asset of the reserve","rateStrategyAddress":"The address of the interest rate strategy contract*"}},"setUserEMode(uint8)":{"params":{"categoryId":"The id of the category"}},"setUserUseReserveAsCollateral(address,bool)":{"params":{"asset":"The address of the underlying asset supplied","useAsCollateral":"True if the user wants to use the supply as collateral, false otherwise*"}},"supply(address,uint256,address,uint16)":{"params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*"}},"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":{"params":{"amount":"The amount to be supplied","asset":"The address of the underlying asset to supply","deadline":"The deadline timestamp that the permit is valid","onBehalfOf":"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet","permitR":"The R parameter of ERC712 permit sig","permitS":"The S parameter of ERC712 permit sig*","permitV":"The V parameter of ERC712 permit sig","referralCode":"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man"}},"swapBorrowRateMode(address,uint256)":{"params":{"asset":"The address of the underlying asset borrowed","interestRateMode":"The rate mode that the user wants to swap to: 1 for Stable, 2 for Variable*"}},"updateBridgeProtocolFee(uint256)":{"params":{"bridgeProtocolFee":"The part of the premium sent to the protocol treasury"}},"updateFlashloanPremiums(uint128,uint128)":{"details":"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract","params":{"flashLoanPremiumToProtocol":"The part of the premium sent to the protocol treasury, expressed in bps","flashLoanPremiumTotal":"The total premium, expressed in bps"}},"withdraw(address,uint256,address)":{"params":{"amount":"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance","asset":"The address of the underlying asset to withdraw","to":"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet"},"returns":{"_0":"The final amount withdrawn*"}}},"title":"IPool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"ADDRESSES_PROVIDER()":"0542975c","BRIDGE_PROTOCOL_FEE()":"272d9072","FLASHLOAN_PREMIUM_TOTAL()":"074b2e43","FLASHLOAN_PREMIUM_TO_PROTOCOL()":"6a99c036","MAX_NUMBER_RESERVES()":"f8119d51","MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":"e82fec2f","backUnbacked(address,uint256,uint256)":"d65dc7a1","borrow(address,uint256,uint256,uint16,address)":"a415bcad","configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":"d579ea7d","deposit(address,uint256,address,uint16)":"e8eda9df","dropReserve(address)":"63c9b860","finalizeTransfer(address,address,address,uint256,uint256,uint256)":"d5ed3933","flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":"ab9c4b5d","flashLoanSimple(address,address,uint256,bytes,uint16)":"42b0b77c","getConfiguration(address)":"c44b11f7","getEModeCategoryData(uint8)":"6c6f6ae1","getReserveData(address)":"35ea6a75","getReserveNormalizedIncome(address)":"d15e0053","getReserveNormalizedVariableDebt(address)":"386497fd","getReservesList()":"d1946dbc","getUserAccountData(address)":"bf92857c","getUserConfiguration(address)":"4417a583","getUserEMode(address)":"eddf1b79","initReserve(address,address,address,address,address)":"7a708e92","liquidationCall(address,address,address,uint256,bool)":"00a718a9","mintToTreasury(address[])":"9cd19996","mintUnbacked(address,uint256,address,uint16)":"69a933a5","rebalanceStableBorrowRate(address,address)":"cd112382","repay(address,uint256,uint256,address)":"573ade81","repayWithATokens(address,uint256,uint256)":"2dad97d4","repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":"ee3e210b","rescueTokens(address,address,uint256)":"cea9d26f","resetIsolationModeTotalDebt(address)":"e43e88a1","setConfiguration(address,(uint256))":"f51e435b","setReserveInterestRateStrategyAddress(address,address)":"1d2118f9","setUserEMode(uint8)":"28530a47","setUserUseReserveAsCollateral(address,bool)":"5a3b74b9","supply(address,uint256,address,uint16)":"617ba037","supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":"02c205f0","swapBorrowRateMode(address,uint256)":"94ba89a2","updateBridgeProtocolFee(uint256)":"3036b439","updateFlashloanPremiums(uint128,uint128)":"bcb6e522","withdraw(address,uint256,address)":"69328dec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"backer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"BackUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"borrowRate\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Borrow\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"FlashLoan\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalDebt\",\"type\":\"uint256\"}],\"name\":\"IsolationModeTotalDebtUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidatedCollateralAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"liquidator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"LiquidationCall\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"MintUnbacked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountMinted\",\"type\":\"uint256\"}],\"name\":\"MintedToTreasury\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"RebalanceStableBorrowRate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"repayer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"useATokens\",\"type\":\"bool\"}],\"name\":\"Repay\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowRate\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityIndex\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"variableBorrowIndex\",\"type\":\"uint256\"}],\"name\":\"ReserveDataUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"ReserveUsedAsCollateralEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"Supply\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum DataTypes.InterestRateMode\",\"name\":\"interestRateMode\",\"type\":\"uint8\"}],\"name\":\"SwapBorrowRateMode\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"UserEModeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"reserve\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADDRESSES_PROVIDER\",\"outputs\":[{\"internalType\":\"contract IPoolAddressesProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"BRIDGE_PROTOCOL_FEE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TOTAL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FLASHLOAN_PREMIUM_TO_PROTOCOL\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_NUMBER_RESERVES\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"backUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"configureEModeCategory\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"dropReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceFromBefore\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceToBefore\",\"type\":\"uint256\"}],\"name\":\"finalizeTransfer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"interestRateModes\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiverAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"flashLoanSimple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"}],\"name\":\"getEModeCategoryData\",\"outputs\":[{\"components\":[{\"internalType\":\"uint16\",\"name\":\"ltv\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationThreshold\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"liquidationBonus\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"priceSource\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"label\",\"type\":\"string\"}],\"internalType\":\"struct DataTypes.EModeCategory\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveData\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"},{\"internalType\":\"uint128\",\"name\":\"liquidityIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentLiquidityRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"variableBorrowIndex\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentVariableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"currentStableBorrowRate\",\"type\":\"uint128\"},{\"internalType\":\"uint40\",\"name\":\"lastUpdateTimestamp\",\"type\":\"uint40\"},{\"internalType\":\"uint16\",\"name\":\"id\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"accruedToTreasury\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"unbacked\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"isolationModeTotalDebt\",\"type\":\"uint128\"}],\"internalType\":\"struct DataTypes.ReserveData\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedIncome\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"getReserveNormalizedVariableDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReservesList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserAccountData\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"totalCollateralBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalDebtBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"availableBorrowsBase\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"currentLiquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ltv\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthFactor\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserConfiguration\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.UserConfigurationMap\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserEMode\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"variableDebtAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"interestRateStrategyAddress\",\"type\":\"address\"}],\"name\":\"initReserve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collateralAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"debtAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"debtToCover\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAToken\",\"type\":\"bool\"}],\"name\":\"liquidationCall\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"}],\"name\":\"mintToTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"mintUnbacked\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"rebalanceStableBorrowRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"}],\"name\":\"repay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"repayWithATokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"repayWithPermit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"resetIsolationModeTotalDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"data\",\"type\":\"uint256\"}],\"internalType\":\"struct DataTypes.ReserveConfigurationMap\",\"name\":\"configuration\",\"type\":\"tuple\"}],\"name\":\"setConfiguration\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rateStrategyAddress\",\"type\":\"address\"}],\"name\":\"setReserveInterestRateStrategyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"categoryId\",\"type\":\"uint8\"}],\"name\":\"setUserEMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"useAsCollateral\",\"type\":\"bool\"}],\"name\":\"setUserUseReserveAsCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"}],\"name\":\"supply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"onBehalfOf\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"referralCode\",\"type\":\"uint16\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"permitV\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"permitR\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"permitS\",\"type\":\"bytes32\"}],\"name\":\"supplyWithPermit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"interestRateMode\",\"type\":\"uint256\"}],\"name\":\"swapBorrowRateMode\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"bridgeProtocolFee\",\"type\":\"uint256\"}],\"name\":\"updateBridgeProtocolFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumTotal\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"flashLoanPremiumToProtocol\",\"type\":\"uint128\"}],\"name\":\"updateFlashloanPremiums\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"BackUnbacked(address,address,uint256,uint256)\":{\"details\":\"Emitted on backUnbacked()\",\"params\":{\"amount\":\"The amount added as backing\",\"backer\":\"The address paying for the backing\",\"fee\":\"The amount paid in fees*\",\"reserve\":\"The address of the underlying asset of the reserve\"}},\"Borrow(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on borrow() and flashLoan() when debt needs to be opened\",\"params\":{\"amount\":\"The amount borrowed out\",\"borrowRate\":\"The numeric rate at which the user has borrowed, expressed in ray\",\"interestRateMode\":\"The rate mode: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address that will be getting the debt\",\"referralCode\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset being borrowed\",\"user\":\"The address of the user initiating the borrow(), receiving the funds on borrow() or just initiator of the transaction on flashLoan()\"}},\"FlashLoan(address,address,address,uint256,uint8,uint256,uint16)\":{\"details\":\"Emitted on flashLoan()\",\"params\":{\"amount\":\"The amount flash borrowed\",\"asset\":\"The address of the asset being flash borrowed\",\"initiator\":\"The address initiating the flash loan\",\"interestRateMode\":\"The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\",\"premium\":\"The fee flash borrowed\",\"referralCode\":\"The referral code used*\",\"target\":\"The address of the flash loan receiver contract\"}},\"IsolationModeTotalDebtUpdated(address,uint256)\":{\"details\":\"Emitted on borrow(), repay() and liquidationCall() when using isolated assets\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"totalDebt\":\"The total isolation mode debt for the reserve\"}},\"LiquidationCall(address,address,address,uint256,uint256,address,bool)\":{\"details\":\"Emitted when a borrower is liquidated.\",\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"liquidatedCollateralAmount\":\"The amount of collateral received by the liquidator\",\"liquidator\":\"The address of the liquidator\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"MintUnbacked(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on mintUnbacked()\",\"params\":{\"amount\":\"The amount of supplied assets\",\"onBehalfOf\":\"The beneficiary of the supplied assets, receiving the aTokens\",\"referralCode\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"MintedToTreasury(address,uint256)\":{\"details\":\"Emitted when the protocol treasury receives minted aTokens from the accrued interest.\",\"params\":{\"amountMinted\":\"The amount minted to the treasury*\",\"reserve\":\"The address of the reserve\"}},\"RebalanceStableBorrowRate(address,address)\":{\"details\":\"Emitted on rebalanceStableBorrowRate()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user for which the rebalance has been executed*\"}},\"Repay(address,address,address,uint256,bool)\":{\"details\":\"Emitted on repay()\",\"params\":{\"amount\":\"The amount repaid\",\"repayer\":\"The address of the user initiating the repay(), providing the funds\",\"reserve\":\"The address of the underlying asset of the reserve\",\"useATokens\":\"True if the repayment is done using aTokens, `false` if done with underlying asset directly*\",\"user\":\"The beneficiary of the repayment, getting his debt reduced\"}},\"ReserveDataUpdated(address,uint256,uint256,uint256,uint256,uint256)\":{\"details\":\"Emitted when the state of a reserve is updated.\",\"params\":{\"liquidityIndex\":\"The next liquidity index\",\"liquidityRate\":\"The next liquidity rate\",\"reserve\":\"The address of the underlying asset of the reserve\",\"stableBorrowRate\":\"The next stable borrow rate\",\"variableBorrowIndex\":\"The next variable borrow index*\",\"variableBorrowRate\":\"The next variable borrow rate\"}},\"ReserveUsedAsCollateralDisabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"ReserveUsedAsCollateralEnabled(address,address)\":{\"details\":\"Emitted on setUserUseReserveAsCollateral()\",\"params\":{\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user enabling the usage as collateral*\"}},\"Supply(address,address,address,uint256,uint16)\":{\"details\":\"Emitted on supply()\",\"params\":{\"amount\":\"The amount supplied\",\"onBehalfOf\":\"The beneficiary of the supply, receiving the aTokens\",\"referralCode\":\"The referral code used*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address initiating the supply\"}},\"SwapBorrowRateMode(address,address,uint8)\":{\"details\":\"Emitted on swapBorrowRateMode()\",\"params\":{\"interestRateMode\":\"The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable*\",\"reserve\":\"The address of the underlying asset of the reserve\",\"user\":\"The address of the user swapping his rate mode\"}},\"UserEModeSet(address,uint8)\":{\"details\":\"Emitted when the user selects a certain asset category for eMode\",\"params\":{\"categoryId\":\"The category id*\",\"user\":\"The address of the user\"}},\"Withdraw(address,address,address,uint256)\":{\"details\":\"Emitted on withdraw()\",\"params\":{\"amount\":\"The amount to be withdrawn*\",\"reserve\":\"The address of the underlying asset being withdrawn\",\"to\":\"The address that will receive the underlying\",\"user\":\"The address initiating the withdrawal, owner of aTokens\"}}},\"kind\":\"dev\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"returns\":{\"_0\":\"The address of the PoolAddressesProvider*\"}},\"BRIDGE_PROTOCOL_FEE()\":{\"returns\":{\"_0\":\"The bridge fee sent to the protocol treasury\"}},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"returns\":{\"_0\":\"The total fee on flashloans\"}},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"returns\":{\"_0\":\"The flashloan fee sent to the protocol treasury\"}},\"MAX_NUMBER_RESERVES()\":{\"returns\":{\"_0\":\"The maximum number of reserves supported\"}},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"returns\":{\"_0\":\"The percentage of available liquidity to borrow, expressed in bps\"}},\"backUnbacked(address,uint256,uint256)\":{\"details\":\"Back the current unbacked underlying with `amount` and pay `fee`.\",\"params\":{\"amount\":\"The amount to back\",\"asset\":\"The address of the underlying asset to back\",\"fee\":\"The amount paid in fees*\"}},\"borrow(address,uint256,uint256,uint16,address)\":{\"params\":{\"amount\":\"The amount to be borrowed\",\"asset\":\"The address of the underlying asset to borrow\",\"interestRateMode\":\"The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will receive the debt. Should be the address of the borrower itself calling the function if he wants to borrow against his own collateral, or the address of the credit delegator if he has been given credit delegation allowance*\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"details\":\"In eMode, the protocol allows very high borrowing power to borrow assets of the same category. The category 0 is reserved as it's the default for volatile assets\",\"params\":{\"config\":\"The configuration of the category\",\"id\":\"The id of the category\"}},\"deposit(address,uint256,address,uint16)\":{\"details\":\"Deprecated: Use the `supply` function instead\",\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"dropReserve(address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve*\"}},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"details\":\"Only callable by the overlying aToken of the `asset`\",\"params\":{\"amount\":\"The amount being transferred/withdrawn\",\"asset\":\"The address of the underlying asset of the aToken\",\"balanceFromBefore\":\"The aToken balance of the `from` user before the transfer\",\"balanceToBefore\":\"The aToken balance of the `to` user before the transfer\",\"from\":\"The user from which the aTokens are transferred\",\"to\":\"The user receiving the aTokens\"}},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amounts\":\"The amounts of the assets being flash-borrowed\",\"assets\":\"The addresses of the assets being flash-borrowed\",\"interestRateModes\":\"Types of the debt to open if the flash loan is not returned:   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\",\"onBehalfOf\":\"The address  that will receive the debt in the case of using on `modes` 1 or 2\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"details\":\"IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept into consideration. For further details please visit https://developers.aave.com\",\"params\":{\"amount\":\"The amount of the asset being flash-borrowed\",\"asset\":\"The address of the asset being flash-borrowed\",\"params\":\"Variadic packed params to pass to the receiver as extra information\",\"receiverAddress\":\"The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\",\"referralCode\":\"The code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"getConfiguration(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The configuration of the reserve*\"}},\"getEModeCategoryData(uint8)\":{\"params\":{\"id\":\"The id of the category\"},\"returns\":{\"_0\":\"The configuration data of the category\"}},\"getReserveData(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The state and configuration data of the reserve*\"}},\"getReserveNormalizedIncome(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve's normalized income\"}},\"getReserveNormalizedVariableDebt(address)\":{\"params\":{\"asset\":\"The address of the underlying asset of the reserve\"},\"returns\":{\"_0\":\"The reserve normalized variable debt\"}},\"getReservesList()\":{\"details\":\"It does not include dropped reserves\",\"returns\":{\"_0\":\"The addresses of the reserves*\"}},\"getUserAccountData(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"availableBorrowsBase\":\"The borrowing power left of the user in the base currency used by the price feed\",\"currentLiquidationThreshold\":\"The liquidation threshold of the user\",\"healthFactor\":\"The current health factor of the user*\",\"ltv\":\"The loan to value of The user\",\"totalCollateralBase\":\"The total collateral of the user in the base currency used by the price feed\",\"totalDebtBase\":\"The total debt of the user in the base currency used by the price feed\"}},\"getUserConfiguration(address)\":{\"params\":{\"user\":\"The user address\"},\"returns\":{\"_0\":\"The configuration of the user*\"}},\"getUserEMode(address)\":{\"params\":{\"user\":\"The address of the user\"},\"returns\":{\"_0\":\"The eMode id\"}},\"initReserve(address,address,address,address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"aTokenAddress\":\"The address of the aToken that will be assigned to the reserve\",\"asset\":\"The address of the underlying asset of the reserve\",\"interestRateStrategyAddress\":\"The address of the interest rate strategy contract*\",\"stableDebtAddress\":\"The address of the StableDebtToken that will be assigned to the reserve\",\"variableDebtAddress\":\"The address of the VariableDebtToken that will be assigned to the reserve\"}},\"liquidationCall(address,address,address,uint256,bool)\":{\"params\":{\"collateralAsset\":\"The address of the underlying asset used as collateral, to receive as result of the liquidation\",\"debtAsset\":\"The address of the underlying borrowed asset to be repaid with the liquidation\",\"debtToCover\":\"The debt amount of borrowed `asset` the liquidator wants to cover\",\"receiveAToken\":\"True if the liquidators wants to receive the collateral aTokens, `false` if he wants to receive the underlying collateral asset directly*\",\"user\":\"The address of the borrower getting liquidated\"}},\"mintToTreasury(address[])\":{\"params\":{\"assets\":\"The list of reserves for which the minting needs to be executed*\"}},\"mintUnbacked(address,uint256,address,uint16)\":{\"details\":\"Mints an `amount` of aTokens to the `onBehalfOf`\",\"params\":{\"amount\":\"The amount to mint\",\"asset\":\"The address of the underlying asset to mint\",\"onBehalfOf\":\"The address that will receive the aTokens\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"rebalanceStableBorrowRate(address,address)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"user\":\"The address of the user to be rebalanced*\"}},\"repay(address,uint256,uint256,address)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"The address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"repayWithATokens(address,uint256,uint256)\":{\"details\":\"Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken balance is not enough to cover the whole debt\",\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to repay - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\",\"asset\":\"The address of the borrowed underlying asset previously borrowed\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"interestRateMode\":\"The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\",\"onBehalfOf\":\"Address of the user who will get his debt reduced/removed. Should be the address of the user calling the function if he wants to reduce/remove his own debt, or the address of any other other borrower whose debt should be removed\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig\",\"permitV\":\"The V parameter of ERC712 permit sig\"},\"returns\":{\"_0\":\"The final amount repaid*\"}},\"rescueTokens(address,address,uint256)\":{\"params\":{\"amount\":\"The amount of token to transfer\",\"to\":\"The address of the recipient\",\"token\":\"The address of the token\"}},\"resetIsolationModeTotalDebt(address)\":{\"details\":\"It requires the given asset has zero debt ceiling\",\"params\":{\"asset\":\"The address of the underlying asset to reset the isolationModeTotalDebt\"}},\"setConfiguration(address,(uint256))\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"configuration\":\"The new configuration bitmap*\"}},\"setReserveInterestRateStrategyAddress(address,address)\":{\"details\":\"Only callable by the PoolConfigurator contract\",\"params\":{\"asset\":\"The address of the underlying asset of the reserve\",\"rateStrategyAddress\":\"The address of the interest rate strategy contract*\"}},\"setUserEMode(uint8)\":{\"params\":{\"categoryId\":\"The id of the category\"}},\"setUserUseReserveAsCollateral(address,bool)\":{\"params\":{\"asset\":\"The address of the underlying asset supplied\",\"useAsCollateral\":\"True if the user wants to use the supply as collateral, false otherwise*\"}},\"supply(address,uint256,address,uint16)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man*\"}},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"amount\":\"The amount to be supplied\",\"asset\":\"The address of the underlying asset to supply\",\"deadline\":\"The deadline timestamp that the permit is valid\",\"onBehalfOf\":\"The address that will receive the aTokens, same as msg.sender if the user   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens   is a different wallet\",\"permitR\":\"The R parameter of ERC712 permit sig\",\"permitS\":\"The S parameter of ERC712 permit sig*\",\"permitV\":\"The V parameter of ERC712 permit sig\",\"referralCode\":\"Code used to register the integrator originating the operation, for potential rewards.   0 if the action is executed directly by the user, without any middle-man\"}},\"swapBorrowRateMode(address,uint256)\":{\"params\":{\"asset\":\"The address of the underlying asset borrowed\",\"interestRateMode\":\"The rate mode that the user wants to swap to: 1 for Stable, 2 for Variable*\"}},\"updateBridgeProtocolFee(uint256)\":{\"params\":{\"bridgeProtocolFee\":\"The part of the premium sent to the protocol treasury\"}},\"updateFlashloanPremiums(uint128,uint128)\":{\"details\":\"The total premium is calculated on the total borrowed amountThe premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`Only callable by the PoolConfigurator contract\",\"params\":{\"flashLoanPremiumToProtocol\":\"The part of the premium sent to the protocol treasury, expressed in bps\",\"flashLoanPremiumTotal\":\"The total premium, expressed in bps\"}},\"withdraw(address,uint256,address)\":{\"params\":{\"amount\":\"The underlying amount to be withdrawn   - Send the value type(uint256).max in order to withdraw the whole aToken balance\",\"asset\":\"The address of the underlying asset to withdraw\",\"to\":\"The address that will receive the underlying, same as msg.sender if the user   wants to receive it on his own wallet, or a different address if the beneficiary is a   different wallet\"},\"returns\":{\"_0\":\"The final amount withdrawn*\"}}},\"title\":\"IPool\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADDRESSES_PROVIDER()\":{\"notice\":\"Returns the PoolAddressesProvider connected to this contract\"},\"BRIDGE_PROTOCOL_FEE()\":{\"notice\":\"Returns the part of the bridge fees sent to protocol\"},\"FLASHLOAN_PREMIUM_TOTAL()\":{\"notice\":\"Returns the total fee on flash loans\"},\"FLASHLOAN_PREMIUM_TO_PROTOCOL()\":{\"notice\":\"Returns the part of the flashloan fees sent to protocol\"},\"MAX_NUMBER_RESERVES()\":{\"notice\":\"Returns the maximum number of reserves supported to be listed in this Pool\"},\"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()\":{\"notice\":\"Returns the percentage of available liquidity that can be borrowed at once at stable rate\"},\"borrow(address,uint256,uint256,uint16,address)\":{\"notice\":\"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`\"},\"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))\":{\"notice\":\"Configures a new category for the eMode.\"},\"deposit(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"dropReserve(address)\":{\"notice\":\"Drop a reserve\"},\"finalizeTransfer(address,address,address,uint256,uint256,uint256)\":{\"notice\":\"Validates and finalizes an aToken transfer\"},\"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"flashLoanSimple(address,address,uint256,bytes,uint16)\":{\"notice\":\"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned.\"},\"getConfiguration(address)\":{\"notice\":\"Returns the configuration of the reserve\"},\"getEModeCategoryData(uint8)\":{\"notice\":\"Returns the data of an eMode category\"},\"getReserveData(address)\":{\"notice\":\"Returns the state and configuration of the reserve\"},\"getReserveNormalizedIncome(address)\":{\"notice\":\"Returns the normalized income normalized income of the reserve\"},\"getReserveNormalizedVariableDebt(address)\":{\"notice\":\"Returns the normalized variable debt per unit of asset\"},\"getReservesList()\":{\"notice\":\"Returns the list of the initialized reserves\"},\"getUserAccountData(address)\":{\"notice\":\"Returns the user account data across all the reserves\"},\"getUserConfiguration(address)\":{\"notice\":\"Returns the configuration of the user across all the reserves\"},\"getUserEMode(address)\":{\"notice\":\"Returns the eMode the user is using\"},\"initReserve(address,address,address,address,address)\":{\"notice\":\"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy\"},\"liquidationCall(address,address,address,uint256,bool)\":{\"notice\":\"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\"},\"mintToTreasury(address[])\":{\"notice\":\"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\"},\"rebalanceStableBorrowRate(address,address)\":{\"notice\":\"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough\"},\"repay(address,uint256,uint256,address)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\"},\"repayWithATokens(address,uint256,uint256)\":{\"notice\":\"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\"},\"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"rescueTokens(address,address,uint256)\":{\"notice\":\"Rescue and transfer tokens locked in this contract\"},\"resetIsolationModeTotalDebt(address)\":{\"notice\":\"Resets the isolation mode total debt of the given asset to zero\"},\"setConfiguration(address,(uint256))\":{\"notice\":\"Sets the configuration bitmap of the reserve as a whole\"},\"setReserveInterestRateStrategyAddress(address,address)\":{\"notice\":\"Updates the address of the interest rate strategy contract\"},\"setUserEMode(uint8)\":{\"notice\":\"Allows a user to use the protocol in eMode\"},\"setUserUseReserveAsCollateral(address,bool)\":{\"notice\":\"Allows suppliers to enable/disable a specific supplied asset as collateral\"},\"supply(address,uint256,address,uint16)\":{\"notice\":\"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC\"},\"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\"},\"swapBorrowRateMode(address,uint256)\":{\"notice\":\"Allows a borrower to swap his debt between stable and variable mode, or vice versa\"},\"updateBridgeProtocolFee(uint256)\":{\"notice\":\"Updates the protocol fee on the bridging\"},\"updateFlashloanPremiums(uint128,uint128)\":{\"notice\":\"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury\"},\"withdraw(address,uint256,address)\":{\"notice\":\"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\"}},\"notice\":\"Defines the basic interface for an Aave Pool.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":\"IPool\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\\n\\n/**\\n * @title IPool\\n * @author Aave\\n * @notice Defines the basic interface for an Aave Pool.\\n **/\\ninterface IPool {\\n  /**\\n   * @dev Emitted on mintUnbacked()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address initiating the supply\\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\\n   * @param amount The amount of supplied assets\\n   * @param referralCode The referral code used\\n   **/\\n  event MintUnbacked(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted on backUnbacked()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param backer The address paying for the backing\\n   * @param amount The amount added as backing\\n   * @param fee The amount paid in fees\\n   **/\\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\\n\\n  /**\\n   * @dev Emitted on supply()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address initiating the supply\\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\\n   * @param amount The amount supplied\\n   * @param referralCode The referral code used\\n   **/\\n  event Supply(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted on withdraw()\\n   * @param reserve The address of the underlying asset being withdrawn\\n   * @param user The address initiating the withdrawal, owner of aTokens\\n   * @param to The address that will receive the underlying\\n   * @param amount The amount to be withdrawn\\n   **/\\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\\n\\n  /**\\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\\n   * @param reserve The address of the underlying asset being borrowed\\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\\n   * initiator of the transaction on flashLoan()\\n   * @param onBehalfOf The address that will be getting the debt\\n   * @param amount The amount borrowed out\\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\\n   * @param referralCode The referral code used\\n   **/\\n  event Borrow(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    DataTypes.InterestRateMode interestRateMode,\\n    uint256 borrowRate,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted on repay()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The beneficiary of the repayment, getting his debt reduced\\n   * @param repayer The address of the user initiating the repay(), providing the funds\\n   * @param amount The amount repaid\\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\\n   **/\\n  event Repay(\\n    address indexed reserve,\\n    address indexed user,\\n    address indexed repayer,\\n    uint256 amount,\\n    bool useATokens\\n  );\\n\\n  /**\\n   * @dev Emitted on swapBorrowRateMode()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user swapping his rate mode\\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\\n   **/\\n  event SwapBorrowRateMode(\\n    address indexed reserve,\\n    address indexed user,\\n    DataTypes.InterestRateMode interestRateMode\\n  );\\n\\n  /**\\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param totalDebt The total isolation mode debt for the reserve\\n   */\\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\\n\\n  /**\\n   * @dev Emitted when the user selects a certain asset category for eMode\\n   * @param user The address of the user\\n   * @param categoryId The category id\\n   **/\\n  event UserEModeSet(address indexed user, uint8 categoryId);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on rebalanceStableBorrowRate()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user for which the rebalance has been executed\\n   **/\\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on flashLoan()\\n   * @param target The address of the flash loan receiver contract\\n   * @param initiator The address initiating the flash loan\\n   * @param asset The address of the asset being flash borrowed\\n   * @param amount The amount flash borrowed\\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\\n   * @param premium The fee flash borrowed\\n   * @param referralCode The referral code used\\n   **/\\n  event FlashLoan(\\n    address indexed target,\\n    address initiator,\\n    address indexed asset,\\n    uint256 amount,\\n    DataTypes.InterestRateMode interestRateMode,\\n    uint256 premium,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted when a borrower is liquidated.\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\\n   * @param liquidator The address of the liquidator\\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  event LiquidationCall(\\n    address indexed collateralAsset,\\n    address indexed debtAsset,\\n    address indexed user,\\n    uint256 debtToCover,\\n    uint256 liquidatedCollateralAmount,\\n    address liquidator,\\n    bool receiveAToken\\n  );\\n\\n  /**\\n   * @dev Emitted when the state of a reserve is updated.\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param liquidityRate The next liquidity rate\\n   * @param stableBorrowRate The next stable borrow rate\\n   * @param variableBorrowRate The next variable borrow rate\\n   * @param liquidityIndex The next liquidity index\\n   * @param variableBorrowIndex The next variable borrow index\\n   **/\\n  event ReserveDataUpdated(\\n    address indexed reserve,\\n    uint256 liquidityRate,\\n    uint256 stableBorrowRate,\\n    uint256 variableBorrowRate,\\n    uint256 liquidityIndex,\\n    uint256 variableBorrowIndex\\n  );\\n\\n  /**\\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\\n   * @param reserve The address of the reserve\\n   * @param amountMinted The amount minted to the treasury\\n   **/\\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\\n\\n  /**\\n   * @dev Mints an `amount` of aTokens to the `onBehalfOf`\\n   * @param asset The address of the underlying asset to mint\\n   * @param amount The amount to mint\\n   * @param onBehalfOf The address that will receive the aTokens\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function mintUnbacked(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @dev Back the current unbacked underlying with `amount` and pay `fee`.\\n   * @param asset The address of the underlying asset to back\\n   * @param amount The amount to back\\n   * @param fee The amount paid in fees\\n   **/\\n  function backUnbacked(\\n    address asset,\\n    uint256 amount,\\n    uint256 fee\\n  ) external;\\n\\n  /**\\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\n   * @param asset The address of the underlying asset to supply\\n   * @param amount The amount to be supplied\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function supply(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\n   * @param asset The address of the underlying asset to supply\\n   * @param amount The amount to be supplied\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param deadline The deadline timestamp that the permit is valid\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   * @param permitV The V parameter of ERC712 permit sig\\n   * @param permitR The R parameter of ERC712 permit sig\\n   * @param permitS The S parameter of ERC712 permit sig\\n   **/\\n  function supplyWithPermit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode,\\n    uint256 deadline,\\n    uint8 permitV,\\n    bytes32 permitR,\\n    bytes32 permitS\\n  ) external;\\n\\n  /**\\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n   * @param asset The address of the underlying asset to withdraw\\n   * @param amount The underlying amount to be withdrawn\\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n   * @param to The address that will receive the underlying, same as msg.sender if the user\\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n   *   different wallet\\n   * @return The final amount withdrawn\\n   **/\\n  function withdraw(\\n    address asset,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n   * @param asset The address of the underlying asset to borrow\\n   * @param amount The amount to be borrowed\\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n   * if he has been given credit delegation allowance\\n   **/\\n  function borrow(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    uint16 referralCode,\\n    address onBehalfOf\\n  ) external;\\n\\n  /**\\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n   * other borrower whose debt should be removed\\n   * @return The final amount repaid\\n   **/\\n  function repay(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    address onBehalfOf\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n   * other borrower whose debt should be removed\\n   * @param deadline The deadline timestamp that the permit is valid\\n   * @param permitV The V parameter of ERC712 permit sig\\n   * @param permitR The R parameter of ERC712 permit sig\\n   * @param permitS The S parameter of ERC712 permit sig\\n   * @return The final amount repaid\\n   **/\\n  function repayWithPermit(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    address onBehalfOf,\\n    uint256 deadline,\\n    uint8 permitV,\\n    bytes32 permitR,\\n    bytes32 permitS\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\\n   * equivalent debt tokens\\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\\n   * balance is not enough to cover the whole debt\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @return The final amount repaid\\n   **/\\n  function repayWithATokens(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\\n   * @param asset The address of the underlying asset borrowed\\n   * @param interestRateMode The rate mode that the user wants to swap to: 1 for Stable, 2 for Variable\\n   **/\\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\\n\\n  /**\\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n   * - Users can be rebalanced if the following conditions are satisfied:\\n   *     1. Usage ratio is above 95%\\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\\n   * @param asset The address of the underlying asset borrowed\\n   * @param user The address of the user to be rebalanced\\n   **/\\n  function rebalanceStableBorrowRate(address asset, address user) external;\\n\\n  /**\\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\\n   * @param asset The address of the underlying asset supplied\\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\\n   **/\\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\\n\\n  /**\\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  function liquidationCall(\\n    address collateralAsset,\\n    address debtAsset,\\n    address user,\\n    uint256 debtToCover,\\n    bool receiveAToken\\n  ) external;\\n\\n  /**\\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\n   * as long as the amount taken plus a fee is returned.\\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\n   * into consideration. For further details please visit https://developers.aave.com\\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\\n   * @param assets The addresses of the assets being flash-borrowed\\n   * @param amounts The amounts of the assets being flash-borrowed\\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n   * @param params Variadic packed params to pass to the receiver as extra information\\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function flashLoan(\\n    address receiverAddress,\\n    address[] calldata assets,\\n    uint256[] calldata amounts,\\n    uint256[] calldata interestRateModes,\\n    address onBehalfOf,\\n    bytes calldata params,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\n   * as long as the amount taken plus a fee is returned.\\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\n   * into consideration. For further details please visit https://developers.aave.com\\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\\n   * @param asset The address of the asset being flash-borrowed\\n   * @param amount The amount of the asset being flash-borrowed\\n   * @param params Variadic packed params to pass to the receiver as extra information\\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function flashLoanSimple(\\n    address receiverAddress,\\n    address asset,\\n    uint256 amount,\\n    bytes calldata params,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @notice Returns the user account data across all the reserves\\n   * @param user The address of the user\\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\\n   * @return currentLiquidationThreshold The liquidation threshold of the user\\n   * @return ltv The loan to value of The user\\n   * @return healthFactor The current health factor of the user\\n   **/\\n  function getUserAccountData(address user)\\n    external\\n    view\\n    returns (\\n      uint256 totalCollateralBase,\\n      uint256 totalDebtBase,\\n      uint256 availableBorrowsBase,\\n      uint256 currentLiquidationThreshold,\\n      uint256 ltv,\\n      uint256 healthFactor\\n    );\\n\\n  /**\\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\\n   * interest rate strategy\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\\n   **/\\n  function initReserve(\\n    address asset,\\n    address aTokenAddress,\\n    address stableDebtAddress,\\n    address variableDebtAddress,\\n    address interestRateStrategyAddress\\n  ) external;\\n\\n  /**\\n   * @notice Drop a reserve\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   **/\\n  function dropReserve(address asset) external;\\n\\n  /**\\n   * @notice Updates the address of the interest rate strategy contract\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param rateStrategyAddress The address of the interest rate strategy contract\\n   **/\\n  function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress)\\n    external;\\n\\n  /**\\n   * @notice Sets the configuration bitmap of the reserve as a whole\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param configuration The new configuration bitmap\\n   **/\\n  function setConfiguration(address asset, DataTypes.ReserveConfigurationMap calldata configuration)\\n    external;\\n\\n  /**\\n   * @notice Returns the configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The configuration of the reserve\\n   **/\\n  function getConfiguration(address asset)\\n    external\\n    view\\n    returns (DataTypes.ReserveConfigurationMap memory);\\n\\n  /**\\n   * @notice Returns the configuration of the user across all the reserves\\n   * @param user The user address\\n   * @return The configuration of the user\\n   **/\\n  function getUserConfiguration(address user)\\n    external\\n    view\\n    returns (DataTypes.UserConfigurationMap memory);\\n\\n  /**\\n   * @notice Returns the normalized income normalized income of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve's normalized income\\n   */\\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the normalized variable debt per unit of asset\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve normalized variable debt\\n   */\\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the state and configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The state and configuration data of the reserve\\n   **/\\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\\n\\n  /**\\n   * @notice Validates and finalizes an aToken transfer\\n   * @dev Only callable by the overlying aToken of the `asset`\\n   * @param asset The address of the underlying asset of the aToken\\n   * @param from The user from which the aTokens are transferred\\n   * @param to The user receiving the aTokens\\n   * @param amount The amount being transferred/withdrawn\\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\\n   */\\n  function finalizeTransfer(\\n    address asset,\\n    address from,\\n    address to,\\n    uint256 amount,\\n    uint256 balanceFromBefore,\\n    uint256 balanceToBefore\\n  ) external;\\n\\n  /**\\n   * @notice Returns the list of the initialized reserves\\n   * @dev It does not include dropped reserves\\n   * @return The addresses of the reserves\\n   **/\\n  function getReservesList() external view returns (address[] memory);\\n\\n  /**\\n   * @notice Returns the PoolAddressesProvider connected to this contract\\n   * @return The address of the PoolAddressesProvider\\n   **/\\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\\n\\n  /**\\n   * @notice Updates the protocol fee on the bridging\\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\\n   */\\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\\n\\n  /**\\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\\n   * - A part is sent to aToken holders as extra, one time accumulated interest\\n   * - A part is collected by the protocol treasury\\n   * @dev The total premium is calculated on the total borrowed amount\\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\\n   */\\n  function updateFlashloanPremiums(\\n    uint128 flashLoanPremiumTotal,\\n    uint128 flashLoanPremiumToProtocol\\n  ) external;\\n\\n  /**\\n   * @notice Configures a new category for the eMode.\\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\\n   * The category 0 is reserved as it's the default for volatile assets\\n   * @param id The id of the category\\n   * @param config The configuration of the category\\n   */\\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\\n\\n  /**\\n   * @notice Returns the data of an eMode category\\n   * @param id The id of the category\\n   * @return The configuration data of the category\\n   */\\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\\n\\n  /**\\n   * @notice Allows a user to use the protocol in eMode\\n   * @param categoryId The id of the category\\n   */\\n  function setUserEMode(uint8 categoryId) external;\\n\\n  /**\\n   * @notice Returns the eMode the user is using\\n   * @param user The address of the user\\n   * @return The eMode id\\n   */\\n  function getUserEMode(address user) external view returns (uint256);\\n\\n  /**\\n   * @notice Resets the isolation mode total debt of the given asset to zero\\n   * @dev It requires the given asset has zero debt ceiling\\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\\n   */\\n  function resetIsolationModeTotalDebt(address asset) external;\\n\\n  /**\\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\\n   * @return The percentage of available liquidity to borrow, expressed in bps\\n   */\\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the total fee on flash loans\\n   * @return The total fee on flashloans\\n   */\\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\\n\\n  /**\\n   * @notice Returns the part of the bridge fees sent to protocol\\n   * @return The bridge fee sent to the protocol treasury\\n   */\\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the part of the flashloan fees sent to protocol\\n   * @return The flashloan fee sent to the protocol treasury\\n   */\\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\\n\\n  /**\\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\\n   * @return The maximum number of reserves supported\\n   */\\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\\n\\n  /**\\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\\n   * @param assets The list of reserves for which the minting needs to be executed\\n   **/\\n  function mintToTreasury(address[] calldata assets) external;\\n\\n  /**\\n   * @notice Rescue and transfer tokens locked in this contract\\n   * @param token The address of the token\\n   * @param to The address of the recipient\\n   * @param amount The amount of token to transfer\\n   */\\n  function rescueTokens(\\n    address token,\\n    address to,\\n    uint256 amount\\n  ) external;\\n\\n  /**\\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\n   * @dev Deprecated: Use the `supply` function instead\\n   * @param asset The address of the underlying asset to supply\\n   * @param amount The amount to be supplied\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function deposit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n}\\n\",\"keccak256\":\"0x71a2d4598a4d7f7f34188e2114d7cc2208a372a2d9361c42c744f6d48e7a72cd\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\n/**\\n * @title IPoolAddressesProvider\\n * @author Aave\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\n **/\\ninterface IPoolAddressesProvider {\\n  /**\\n   * @dev Emitted when the market identifier is updated.\\n   * @param oldMarketId The old id of the market\\n   * @param newMarketId The new id of the market\\n   */\\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\n\\n  /**\\n   * @dev Emitted when the pool is updated.\\n   * @param oldAddress The old address of the Pool\\n   * @param newAddress The new address of the Pool\\n   */\\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool configurator is updated.\\n   * @param oldAddress The old address of the PoolConfigurator\\n   * @param newAddress The new address of the PoolConfigurator\\n   */\\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle is updated.\\n   * @param oldAddress The old address of the PriceOracle\\n   * @param newAddress The new address of the PriceOracle\\n   */\\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL manager is updated.\\n   * @param oldAddress The old address of the ACLManager\\n   * @param newAddress The new address of the ACLManager\\n   */\\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL admin is updated.\\n   * @param oldAddress The old address of the ACLAdmin\\n   * @param newAddress The new address of the ACLAdmin\\n   */\\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle sentinel is updated.\\n   * @param oldAddress The old address of the PriceOracleSentinel\\n   * @param newAddress The new address of the PriceOracleSentinel\\n   */\\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool data provider is updated.\\n   * @param oldAddress The old address of the PoolDataProvider\\n   * @param newAddress The new address of the PoolDataProvider\\n   */\\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when a new proxy is created.\\n   * @param id The identifier of the proxy\\n   * @param proxyAddress The address of the created proxy contract\\n   * @param implementationAddress The address of the implementation contract\\n   */\\n  event ProxyCreated(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address indexed implementationAddress\\n  );\\n\\n  /**\\n   * @dev Emitted when a new non-proxied contract address is registered.\\n   * @param id The identifier of the contract\\n   * @param oldAddress The address of the old contract\\n   * @param newAddress The address of the new contract\\n   */\\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the implementation of the proxy registered with id is updated\\n   * @param id The identifier of the contract\\n   * @param proxyAddress The address of the proxy contract\\n   * @param oldImplementationAddress The address of the old implementation contract\\n   * @param newImplementationAddress The address of the new implementation contract\\n   */\\n  event AddressSetAsProxy(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address oldImplementationAddress,\\n    address indexed newImplementationAddress\\n  );\\n\\n  /**\\n   * @notice Returns the id of the Aave market to which this contract points to.\\n   * @return The market id\\n   **/\\n  function getMarketId() external view returns (string memory);\\n\\n  /**\\n   * @notice Associates an id with a specific PoolAddressesProvider.\\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\n   * identify and validate multiple Aave markets.\\n   * @param newMarketId The market id\\n   */\\n  function setMarketId(string calldata newMarketId) external;\\n\\n  /**\\n   * @notice Returns an address by its identifier.\\n   * @dev The returned address might be an EOA or a contract, potentially proxied\\n   * @dev It returns ZERO if there is no registered address with the given id\\n   * @param id The id\\n   * @return The address of the registered for the specified id\\n   */\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  /**\\n   * @notice General function to update the implementation of a proxy registered with\\n   * certain `id`. If there is no proxy registered, it will instantiate one and\\n   * set as implementation the `newImplementationAddress`.\\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\n   * setter function, in order to avoid unexpected consequences\\n   * @param id The id\\n   * @param newImplementationAddress The address of the new implementation\\n   */\\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\\n\\n  /**\\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\n   * @param id The id\\n   * @param newAddress The address to set\\n   */\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  /**\\n   * @notice Returns the address of the Pool proxy.\\n   * @return The Pool proxy address\\n   **/\\n  function getPool() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the Pool, or creates a proxy\\n   * setting the new `pool` implementation when the function is called for the first time.\\n   * @param newPoolImpl The new Pool implementation\\n   **/\\n  function setPoolImpl(address newPoolImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the PoolConfigurator proxy.\\n   * @return The PoolConfigurator proxy address\\n   **/\\n  function getPoolConfigurator() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\n   **/\\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle.\\n   * @return The address of the PriceOracle\\n   */\\n  function getPriceOracle() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle.\\n   * @param newPriceOracle The address of the new PriceOracle\\n   */\\n  function setPriceOracle(address newPriceOracle) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL manager.\\n   * @return The address of the ACLManager\\n   */\\n  function getACLManager() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL manager.\\n   * @param newAclManager The address of the new ACLManager\\n   **/\\n  function setACLManager(address newAclManager) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL admin.\\n   * @return The address of the ACL admin\\n   */\\n  function getACLAdmin() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL admin.\\n   * @param newAclAdmin The address of the new ACL admin\\n   */\\n  function setACLAdmin(address newAclAdmin) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle sentinel.\\n   * @return The address of the PriceOracleSentinel\\n   */\\n  function getPriceOracleSentinel() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle sentinel.\\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\n   **/\\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\n\\n  /**\\n   * @notice Returns the address of the data provider.\\n   * @return The address of the DataProvider\\n   */\\n  function getPoolDataProvider() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the data provider.\\n   * @param newDataProvider The address of the new DataProvider\\n   **/\\n  function setPoolDataProvider(address newDataProvider) external;\\n}\\n\",\"keccak256\":\"0x73185cd3b952eb691bbf2344b3f7a35cf8b67b33c39275e52e12b80436ea1d5c\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    //timestamp of last update\\n    uint40 lastUpdateTimestamp;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint16 id;\\n    //aToken address\\n    address aTokenAddress;\\n    //stableDebtToken address\\n    address stableDebtTokenAddress;\\n    //variableDebtToken address\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the current treasury balance, scaled\\n    uint128 accruedToTreasury;\\n    //the outstanding unbacked aTokens minted through the bridging feature\\n    uint128 unbacked;\\n    //the outstanding debt borrowed against this asset in isolation mode\\n    uint128 isolationModeTotalDebt;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60: asset is paused\\n    //bit 61: borrowing in isolation mode is enabled\\n    //bit 62-63: reserved\\n    //bit 64-79: reserve factor\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\n    //bit 152-167 liquidation protocol fee\\n    //bit 168-175 eMode category\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\n    //bit 252-255 unused\\n\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    /**\\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\\n     * asset is borrowed by the user.\\n     */\\n    uint256 data;\\n  }\\n\\n  struct EModeCategory {\\n    // each eMode category has a custom ltv and liquidation threshold\\n    uint16 ltv;\\n    uint16 liquidationThreshold;\\n    uint16 liquidationBonus;\\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\\n    address priceSource;\\n    string label;\\n  }\\n\\n  enum InterestRateMode {\\n    NONE,\\n    STABLE,\\n    VARIABLE\\n  }\\n\\n  struct ReserveCache {\\n    uint256 currScaledVariableDebt;\\n    uint256 nextScaledVariableDebt;\\n    uint256 currPrincipalStableDebt;\\n    uint256 currAvgStableBorrowRate;\\n    uint256 currTotalStableDebt;\\n    uint256 nextAvgStableBorrowRate;\\n    uint256 nextTotalStableDebt;\\n    uint256 currLiquidityIndex;\\n    uint256 nextLiquidityIndex;\\n    uint256 currVariableBorrowIndex;\\n    uint256 nextVariableBorrowIndex;\\n    uint256 currLiquidityRate;\\n    uint256 currVariableBorrowRate;\\n    uint256 reserveFactor;\\n    ReserveConfigurationMap reserveConfiguration;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    uint40 reserveLastUpdateTimestamp;\\n    uint40 stableDebtLastUpdateTimestamp;\\n  }\\n\\n  struct ExecuteLiquidationCallParams {\\n    uint256 reservesCount;\\n    uint256 debtToCover;\\n    address collateralAsset;\\n    address debtAsset;\\n    address user;\\n    bool receiveAToken;\\n    address priceOracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteSupplyParams {\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address asset;\\n    address user;\\n    address onBehalfOf;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint16 referralCode;\\n    bool releaseUnderlying;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address asset;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    address onBehalfOf;\\n    bool useATokens;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address asset;\\n    uint256 amount;\\n    address to;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ExecuteSetUserEModeParams {\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 categoryId;\\n  }\\n\\n  struct FinalizeTransferParams {\\n    address asset;\\n    address from;\\n    address to;\\n    uint256 amount;\\n    uint256 balanceFromBefore;\\n    uint256 balanceToBefore;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 fromEModeCategory;\\n  }\\n\\n  struct FlashloanParams {\\n    address receiverAddress;\\n    address[] assets;\\n    uint256[] amounts;\\n    uint256[] interestRateModes;\\n    address onBehalfOf;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address addressesProvider;\\n    uint8 userEModeCategory;\\n    bool isAuthorizedFlashBorrower;\\n  }\\n\\n  struct FlashloanSimpleParams {\\n    address receiverAddress;\\n    address asset;\\n    uint256 amount;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n  }\\n\\n  struct FlashLoanRepaymentParams {\\n    uint256 amount;\\n    uint256 totalPremium;\\n    uint256 flashLoanPremiumToProtocol;\\n    address asset;\\n    address receiverAddress;\\n    uint16 referralCode;\\n  }\\n\\n  struct CalculateUserAccountDataParams {\\n    UserConfigurationMap userConfig;\\n    uint256 reservesCount;\\n    address user;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ValidateBorrowParams {\\n    ReserveCache reserveCache;\\n    UserConfigurationMap userConfig;\\n    address asset;\\n    address userAddress;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint256 maxStableLoanPercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n    bool isolationModeActive;\\n    address isolationModeCollateralAddress;\\n    uint256 isolationModeDebtCeiling;\\n  }\\n\\n  struct ValidateLiquidationCallParams {\\n    ReserveCache debtReserveCache;\\n    uint256 totalDebt;\\n    uint256 healthFactor;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct CalculateInterestRatesParams {\\n    uint256 unbacked;\\n    uint256 liquidityAdded;\\n    uint256 liquidityTaken;\\n    uint256 totalStableDebt;\\n    uint256 totalVariableDebt;\\n    uint256 averageStableBorrowRate;\\n    uint256 reserveFactor;\\n    address reserve;\\n    address aToken;\\n  }\\n\\n  struct InitReserveParams {\\n    address asset;\\n    address aTokenAddress;\\n    address stableDebtAddress;\\n    address variableDebtAddress;\\n    address interestRateStrategyAddress;\\n    uint16 reservesCount;\\n    uint16 maxNumberReserves;\\n  }\\n}\\n\",\"keccak256\":\"0xf3acc235689aae1094d33bfdf90e60b0c3ae1f12c5f095b8cffb69bc6880765c\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"ADDRESSES_PROVIDER()":{"notice":"Returns the PoolAddressesProvider connected to this contract"},"BRIDGE_PROTOCOL_FEE()":{"notice":"Returns the part of the bridge fees sent to protocol"},"FLASHLOAN_PREMIUM_TOTAL()":{"notice":"Returns the total fee on flash loans"},"FLASHLOAN_PREMIUM_TO_PROTOCOL()":{"notice":"Returns the part of the flashloan fees sent to protocol"},"MAX_NUMBER_RESERVES()":{"notice":"Returns the maximum number of reserves supported to be listed in this Pool"},"MAX_STABLE_RATE_BORROW_SIZE_PERCENT()":{"notice":"Returns the percentage of available liquidity that can be borrowed at once at stable rate"},"borrow(address,uint256,uint256,uint16,address)":{"notice":"Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower already supplied enough collateral, or he was given enough allowance by a credit delegator on the corresponding debt token (StableDebtToken or VariableDebtToken) - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet   and 100 stable/variable debt tokens, depending on the `interestRateMode`"},"configureEModeCategory(uint8,(uint16,uint16,uint16,address,string))":{"notice":"Configures a new category for the eMode."},"deposit(address,uint256,address,uint16)":{"notice":"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"},"dropReserve(address)":{"notice":"Drop a reserve"},"finalizeTransfer(address,address,address,uint256,uint256,uint256)":{"notice":"Validates and finalizes an aToken transfer"},"flashLoan(address,address[],uint256[],uint256[],address,bytes,uint16)":{"notice":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."},"flashLoanSimple(address,address,uint256,bytes,uint16)":{"notice":"Allows smartcontracts to access the liquidity of the pool within one transaction, as long as the amount taken plus a fee is returned."},"getConfiguration(address)":{"notice":"Returns the configuration of the reserve"},"getEModeCategoryData(uint8)":{"notice":"Returns the data of an eMode category"},"getReserveData(address)":{"notice":"Returns the state and configuration of the reserve"},"getReserveNormalizedIncome(address)":{"notice":"Returns the normalized income normalized income of the reserve"},"getReserveNormalizedVariableDebt(address)":{"notice":"Returns the normalized variable debt per unit of asset"},"getReservesList()":{"notice":"Returns the list of the initialized reserves"},"getUserAccountData(address)":{"notice":"Returns the user account data across all the reserves"},"getUserConfiguration(address)":{"notice":"Returns the configuration of the user across all the reserves"},"getUserEMode(address)":{"notice":"Returns the eMode the user is using"},"initReserve(address,address,address,address,address)":{"notice":"Initializes a reserve, activating it, assigning an aToken and debt tokens and an interest rate strategy"},"liquidationCall(address,address,address,uint256,bool)":{"notice":"Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1 - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk"},"mintToTreasury(address[])":{"notice":"Mints the assets accrued through the reserve factor to the treasury in the form of aTokens"},"rebalanceStableBorrowRate(address,address)":{"notice":"Rebalances the stable interest rate of a user to the current stable rate defined on the reserve. - Users can be rebalanced if the following conditions are satisfied:     1. Usage ratio is above 95%     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too        much has been borrowed at a stable rate and suppliers are not earning enough"},"repay(address,uint256,uint256,address)":{"notice":"Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address"},"repayWithATokens(address,uint256,uint256)":{"notice":"Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the equivalent debt tokens - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens"},"repayWithPermit(address,uint256,uint256,address,uint256,uint8,bytes32,bytes32)":{"notice":"Repay with transfer approval of asset to be repaid done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"},"rescueTokens(address,address,uint256)":{"notice":"Rescue and transfer tokens locked in this contract"},"resetIsolationModeTotalDebt(address)":{"notice":"Resets the isolation mode total debt of the given asset to zero"},"setConfiguration(address,(uint256))":{"notice":"Sets the configuration bitmap of the reserve as a whole"},"setReserveInterestRateStrategyAddress(address,address)":{"notice":"Updates the address of the interest rate strategy contract"},"setUserEMode(uint8)":{"notice":"Allows a user to use the protocol in eMode"},"setUserUseReserveAsCollateral(address,bool)":{"notice":"Allows suppliers to enable/disable a specific supplied asset as collateral"},"supply(address,uint256,address,uint16)":{"notice":"Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens. - E.g. User supplies 100 USDC and gets in return 100 aUSDC"},"supplyWithPermit(address,uint256,address,uint16,uint256,uint8,bytes32,bytes32)":{"notice":"Supply with transfer approval of asset to be supplied done via permit function see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713"},"swapBorrowRateMode(address,uint256)":{"notice":"Allows a borrower to swap his debt between stable and variable mode, or vice versa"},"updateBridgeProtocolFee(uint256)":{"notice":"Updates the protocol fee on the bridging"},"updateFlashloanPremiums(uint128,uint128)":{"notice":"Updates flash loan premiums. Flash loan premium consists of two parts: - A part is sent to aToken holders as extra, one time accumulated interest - A part is collected by the protocol treasury"},"withdraw(address,uint256,address)":{"notice":"Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC"}},"notice":"Defines the basic interface for an Aave Pool.*","version":1}}},"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol":{"IPoolAddressesProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLAdminUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"ACLManagerUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"AddressSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":false,"internalType":"address","name":"oldImplementationAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"AddressSetAsProxy","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"string","name":"oldMarketId","type":"string"},{"indexed":true,"internalType":"string","name":"newMarketId","type":"string"}],"name":"MarketIdSet","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolConfiguratorUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolDataProviderUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PoolUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleSentinelUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldAddress","type":"address"},{"indexed":true,"internalType":"address","name":"newAddress","type":"address"}],"name":"PriceOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":true,"internalType":"address","name":"proxyAddress","type":"address"},{"indexed":true,"internalType":"address","name":"implementationAddress","type":"address"}],"name":"ProxyCreated","type":"event"},{"inputs":[],"name":"getACLAdmin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getACLManager","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getMarketId","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPool","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolConfigurator","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolDataProvider","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracle","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPriceOracleSentinel","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newAclAdmin","type":"address"}],"name":"setACLAdmin","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newAclManager","type":"address"}],"name":"setACLManager","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newAddress","type":"address"}],"name":"setAddress","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"address","name":"newImplementationAddress","type":"address"}],"name":"setAddressAsProxy","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"newMarketId","type":"string"}],"name":"setMarketId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolConfiguratorImpl","type":"address"}],"name":"setPoolConfiguratorImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newDataProvider","type":"address"}],"name":"setPoolDataProvider","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPoolImpl","type":"address"}],"name":"setPoolImpl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracle","type":"address"}],"name":"setPriceOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newPriceOracleSentinel","type":"address"}],"name":"setPriceOracleSentinel","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"author":"Aave","events":{"ACLAdminUpdated(address,address)":{"details":"Emitted when the ACL admin is updated.","params":{"newAddress":"The new address of the ACLAdmin","oldAddress":"The old address of the ACLAdmin"}},"ACLManagerUpdated(address,address)":{"details":"Emitted when the ACL manager is updated.","params":{"newAddress":"The new address of the ACLManager","oldAddress":"The old address of the ACLManager"}},"AddressSet(bytes32,address,address)":{"details":"Emitted when a new non-proxied contract address is registered.","params":{"id":"The identifier of the contract","newAddress":"The address of the new contract","oldAddress":"The address of the old contract"}},"AddressSetAsProxy(bytes32,address,address,address)":{"details":"Emitted when the implementation of the proxy registered with id is updated","params":{"id":"The identifier of the contract","newImplementationAddress":"The address of the new implementation contract","oldImplementationAddress":"The address of the old implementation contract","proxyAddress":"The address of the proxy contract"}},"MarketIdSet(string,string)":{"details":"Emitted when the market identifier is updated.","params":{"newMarketId":"The new id of the market","oldMarketId":"The old id of the market"}},"PoolConfiguratorUpdated(address,address)":{"details":"Emitted when the pool configurator is updated.","params":{"newAddress":"The new address of the PoolConfigurator","oldAddress":"The old address of the PoolConfigurator"}},"PoolDataProviderUpdated(address,address)":{"details":"Emitted when the pool data provider is updated.","params":{"newAddress":"The new address of the PoolDataProvider","oldAddress":"The old address of the PoolDataProvider"}},"PoolUpdated(address,address)":{"details":"Emitted when the pool is updated.","params":{"newAddress":"The new address of the Pool","oldAddress":"The old address of the Pool"}},"PriceOracleSentinelUpdated(address,address)":{"details":"Emitted when the price oracle sentinel is updated.","params":{"newAddress":"The new address of the PriceOracleSentinel","oldAddress":"The old address of the PriceOracleSentinel"}},"PriceOracleUpdated(address,address)":{"details":"Emitted when the price oracle is updated.","params":{"newAddress":"The new address of the PriceOracle","oldAddress":"The old address of the PriceOracle"}},"ProxyCreated(bytes32,address,address)":{"details":"Emitted when a new proxy is created.","params":{"id":"The identifier of the proxy","implementationAddress":"The address of the implementation contract","proxyAddress":"The address of the created proxy contract"}}},"kind":"dev","methods":{"getACLAdmin()":{"returns":{"_0":"The address of the ACL admin"}},"getACLManager()":{"returns":{"_0":"The address of the ACLManager"}},"getAddress(bytes32)":{"details":"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id","params":{"id":"The id"},"returns":{"_0":"The address of the registered for the specified id"}},"getMarketId()":{"returns":{"_0":"The market id*"}},"getPool()":{"returns":{"_0":"The Pool proxy address*"}},"getPoolConfigurator()":{"returns":{"_0":"The PoolConfigurator proxy address*"}},"getPoolDataProvider()":{"returns":{"_0":"The address of the DataProvider"}},"getPriceOracle()":{"returns":{"_0":"The address of the PriceOracle"}},"getPriceOracleSentinel()":{"returns":{"_0":"The address of the PriceOracleSentinel"}},"setACLAdmin(address)":{"params":{"newAclAdmin":"The address of the new ACL admin"}},"setACLManager(address)":{"params":{"newAclManager":"The address of the new ACLManager*"}},"setAddress(bytes32,address)":{"details":"IMPORTANT Use this function carefully, as it will do a hard replacement","params":{"id":"The id","newAddress":"The address to set"}},"setAddressAsProxy(bytes32,address)":{"details":"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences","params":{"id":"The id","newImplementationAddress":"The address of the new implementation"}},"setMarketId(string)":{"details":"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.","params":{"newMarketId":"The market id"}},"setPoolConfiguratorImpl(address)":{"params":{"newPoolConfiguratorImpl":"The new PoolConfigurator implementation*"}},"setPoolDataProvider(address)":{"params":{"newDataProvider":"The address of the new DataProvider*"}},"setPoolImpl(address)":{"params":{"newPoolImpl":"The new Pool implementation*"}},"setPriceOracle(address)":{"params":{"newPriceOracle":"The address of the new PriceOracle"}},"setPriceOracleSentinel(address)":{"params":{"newPriceOracleSentinel":"The address of the new PriceOracleSentinel*"}}},"title":"IPoolAddressesProvider","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getACLAdmin()":"0e67178c","getACLManager()":"707cd716","getAddress(bytes32)":"21f8a721","getMarketId()":"568ef470","getPool()":"026b1d5f","getPoolConfigurator()":"631adfca","getPoolDataProvider()":"e860accb","getPriceOracle()":"fca513a8","getPriceOracleSentinel()":"5eb88d3d","setACLAdmin(address)":"76d84ffc","setACLManager(address)":"ed301ca9","setAddress(bytes32,address)":"ca446dd9","setAddressAsProxy(bytes32,address)":"5dcc528c","setMarketId(string)":"f67b1847","setPoolConfiguratorImpl(address)":"e4ca28b7","setPoolDataProvider(address)":"e44e9ed1","setPoolImpl(address)":"a1564406","setPriceOracle(address)":"530e784f","setPriceOracleSentinel(address)":"74944cec"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLAdminUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"ACLManagerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldImplementationAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"AddressSetAsProxy\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"oldMarketId\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"MarketIdSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolConfiguratorUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolDataProviderUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PoolUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleSentinelUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"PriceOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"proxyAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementationAddress\",\"type\":\"address\"}],\"name\":\"ProxyCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getACLAdmin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getACLManager\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMarketId\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolConfigurator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolDataProvider\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracle\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceOracleSentinel\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclAdmin\",\"type\":\"address\"}],\"name\":\"setACLAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newAclManager\",\"type\":\"address\"}],\"name\":\"setACLManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"newImplementationAddress\",\"type\":\"address\"}],\"name\":\"setAddressAsProxy\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newMarketId\",\"type\":\"string\"}],\"name\":\"setMarketId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolConfiguratorImpl\",\"type\":\"address\"}],\"name\":\"setPoolConfiguratorImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newDataProvider\",\"type\":\"address\"}],\"name\":\"setPoolDataProvider\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPoolImpl\",\"type\":\"address\"}],\"name\":\"setPoolImpl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracle\",\"type\":\"address\"}],\"name\":\"setPriceOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newPriceOracleSentinel\",\"type\":\"address\"}],\"name\":\"setPriceOracleSentinel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Aave\",\"events\":{\"ACLAdminUpdated(address,address)\":{\"details\":\"Emitted when the ACL admin is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLAdmin\",\"oldAddress\":\"The old address of the ACLAdmin\"}},\"ACLManagerUpdated(address,address)\":{\"details\":\"Emitted when the ACL manager is updated.\",\"params\":{\"newAddress\":\"The new address of the ACLManager\",\"oldAddress\":\"The old address of the ACLManager\"}},\"AddressSet(bytes32,address,address)\":{\"details\":\"Emitted when a new non-proxied contract address is registered.\",\"params\":{\"id\":\"The identifier of the contract\",\"newAddress\":\"The address of the new contract\",\"oldAddress\":\"The address of the old contract\"}},\"AddressSetAsProxy(bytes32,address,address,address)\":{\"details\":\"Emitted when the implementation of the proxy registered with id is updated\",\"params\":{\"id\":\"The identifier of the contract\",\"newImplementationAddress\":\"The address of the new implementation contract\",\"oldImplementationAddress\":\"The address of the old implementation contract\",\"proxyAddress\":\"The address of the proxy contract\"}},\"MarketIdSet(string,string)\":{\"details\":\"Emitted when the market identifier is updated.\",\"params\":{\"newMarketId\":\"The new id of the market\",\"oldMarketId\":\"The old id of the market\"}},\"PoolConfiguratorUpdated(address,address)\":{\"details\":\"Emitted when the pool configurator is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolConfigurator\",\"oldAddress\":\"The old address of the PoolConfigurator\"}},\"PoolDataProviderUpdated(address,address)\":{\"details\":\"Emitted when the pool data provider is updated.\",\"params\":{\"newAddress\":\"The new address of the PoolDataProvider\",\"oldAddress\":\"The old address of the PoolDataProvider\"}},\"PoolUpdated(address,address)\":{\"details\":\"Emitted when the pool is updated.\",\"params\":{\"newAddress\":\"The new address of the Pool\",\"oldAddress\":\"The old address of the Pool\"}},\"PriceOracleSentinelUpdated(address,address)\":{\"details\":\"Emitted when the price oracle sentinel is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracleSentinel\",\"oldAddress\":\"The old address of the PriceOracleSentinel\"}},\"PriceOracleUpdated(address,address)\":{\"details\":\"Emitted when the price oracle is updated.\",\"params\":{\"newAddress\":\"The new address of the PriceOracle\",\"oldAddress\":\"The old address of the PriceOracle\"}},\"ProxyCreated(bytes32,address,address)\":{\"details\":\"Emitted when a new proxy is created.\",\"params\":{\"id\":\"The identifier of the proxy\",\"implementationAddress\":\"The address of the implementation contract\",\"proxyAddress\":\"The address of the created proxy contract\"}}},\"kind\":\"dev\",\"methods\":{\"getACLAdmin()\":{\"returns\":{\"_0\":\"The address of the ACL admin\"}},\"getACLManager()\":{\"returns\":{\"_0\":\"The address of the ACLManager\"}},\"getAddress(bytes32)\":{\"details\":\"The returned address might be an EOA or a contract, potentially proxiedIt returns ZERO if there is no registered address with the given id\",\"params\":{\"id\":\"The id\"},\"returns\":{\"_0\":\"The address of the registered for the specified id\"}},\"getMarketId()\":{\"returns\":{\"_0\":\"The market id*\"}},\"getPool()\":{\"returns\":{\"_0\":\"The Pool proxy address*\"}},\"getPoolConfigurator()\":{\"returns\":{\"_0\":\"The PoolConfigurator proxy address*\"}},\"getPoolDataProvider()\":{\"returns\":{\"_0\":\"The address of the DataProvider\"}},\"getPriceOracle()\":{\"returns\":{\"_0\":\"The address of the PriceOracle\"}},\"getPriceOracleSentinel()\":{\"returns\":{\"_0\":\"The address of the PriceOracleSentinel\"}},\"setACLAdmin(address)\":{\"params\":{\"newAclAdmin\":\"The address of the new ACL admin\"}},\"setACLManager(address)\":{\"params\":{\"newAclManager\":\"The address of the new ACLManager*\"}},\"setAddress(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, as it will do a hard replacement\",\"params\":{\"id\":\"The id\",\"newAddress\":\"The address to set\"}},\"setAddressAsProxy(bytes32,address)\":{\"details\":\"IMPORTANT Use this function carefully, only for ids that don't have an explicit setter function, in order to avoid unexpected consequences\",\"params\":{\"id\":\"The id\",\"newImplementationAddress\":\"The address of the new implementation\"}},\"setMarketId(string)\":{\"details\":\"This can be used to create an onchain registry of PoolAddressesProviders to identify and validate multiple Aave markets.\",\"params\":{\"newMarketId\":\"The market id\"}},\"setPoolConfiguratorImpl(address)\":{\"params\":{\"newPoolConfiguratorImpl\":\"The new PoolConfigurator implementation*\"}},\"setPoolDataProvider(address)\":{\"params\":{\"newDataProvider\":\"The address of the new DataProvider*\"}},\"setPoolImpl(address)\":{\"params\":{\"newPoolImpl\":\"The new Pool implementation*\"}},\"setPriceOracle(address)\":{\"params\":{\"newPriceOracle\":\"The address of the new PriceOracle\"}},\"setPriceOracleSentinel(address)\":{\"params\":{\"newPriceOracleSentinel\":\"The address of the new PriceOracleSentinel*\"}}},\"title\":\"IPoolAddressesProvider\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getACLAdmin()\":{\"notice\":\"Returns the address of the ACL admin.\"},\"getACLManager()\":{\"notice\":\"Returns the address of the ACL manager.\"},\"getAddress(bytes32)\":{\"notice\":\"Returns an address by its identifier.\"},\"getMarketId()\":{\"notice\":\"Returns the id of the Aave market to which this contract points to.\"},\"getPool()\":{\"notice\":\"Returns the address of the Pool proxy.\"},\"getPoolConfigurator()\":{\"notice\":\"Returns the address of the PoolConfigurator proxy.\"},\"getPoolDataProvider()\":{\"notice\":\"Returns the address of the data provider.\"},\"getPriceOracle()\":{\"notice\":\"Returns the address of the price oracle.\"},\"getPriceOracleSentinel()\":{\"notice\":\"Returns the address of the price oracle sentinel.\"},\"setACLAdmin(address)\":{\"notice\":\"Updates the address of the ACL admin.\"},\"setACLManager(address)\":{\"notice\":\"Updates the address of the ACL manager.\"},\"setAddress(bytes32,address)\":{\"notice\":\"Sets an address for an id replacing the address saved in the addresses map.\"},\"setAddressAsProxy(bytes32,address)\":{\"notice\":\"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`.\"},\"setMarketId(string)\":{\"notice\":\"Associates an id with a specific PoolAddressesProvider.\"},\"setPoolConfiguratorImpl(address)\":{\"notice\":\"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time.\"},\"setPoolDataProvider(address)\":{\"notice\":\"Updates the address of the data provider.\"},\"setPoolImpl(address)\":{\"notice\":\"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time.\"},\"setPriceOracle(address)\":{\"notice\":\"Updates the address of the price oracle.\"},\"setPriceOracleSentinel(address)\":{\"notice\":\"Updates the address of the price oracle sentinel.\"}},\"notice\":\"Defines the basic interface for a Pool Addresses Provider.*\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":\"IPoolAddressesProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\n/**\\n * @title IPoolAddressesProvider\\n * @author Aave\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\n **/\\ninterface IPoolAddressesProvider {\\n  /**\\n   * @dev Emitted when the market identifier is updated.\\n   * @param oldMarketId The old id of the market\\n   * @param newMarketId The new id of the market\\n   */\\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\n\\n  /**\\n   * @dev Emitted when the pool is updated.\\n   * @param oldAddress The old address of the Pool\\n   * @param newAddress The new address of the Pool\\n   */\\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool configurator is updated.\\n   * @param oldAddress The old address of the PoolConfigurator\\n   * @param newAddress The new address of the PoolConfigurator\\n   */\\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle is updated.\\n   * @param oldAddress The old address of the PriceOracle\\n   * @param newAddress The new address of the PriceOracle\\n   */\\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL manager is updated.\\n   * @param oldAddress The old address of the ACLManager\\n   * @param newAddress The new address of the ACLManager\\n   */\\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL admin is updated.\\n   * @param oldAddress The old address of the ACLAdmin\\n   * @param newAddress The new address of the ACLAdmin\\n   */\\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle sentinel is updated.\\n   * @param oldAddress The old address of the PriceOracleSentinel\\n   * @param newAddress The new address of the PriceOracleSentinel\\n   */\\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool data provider is updated.\\n   * @param oldAddress The old address of the PoolDataProvider\\n   * @param newAddress The new address of the PoolDataProvider\\n   */\\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when a new proxy is created.\\n   * @param id The identifier of the proxy\\n   * @param proxyAddress The address of the created proxy contract\\n   * @param implementationAddress The address of the implementation contract\\n   */\\n  event ProxyCreated(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address indexed implementationAddress\\n  );\\n\\n  /**\\n   * @dev Emitted when a new non-proxied contract address is registered.\\n   * @param id The identifier of the contract\\n   * @param oldAddress The address of the old contract\\n   * @param newAddress The address of the new contract\\n   */\\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the implementation of the proxy registered with id is updated\\n   * @param id The identifier of the contract\\n   * @param proxyAddress The address of the proxy contract\\n   * @param oldImplementationAddress The address of the old implementation contract\\n   * @param newImplementationAddress The address of the new implementation contract\\n   */\\n  event AddressSetAsProxy(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address oldImplementationAddress,\\n    address indexed newImplementationAddress\\n  );\\n\\n  /**\\n   * @notice Returns the id of the Aave market to which this contract points to.\\n   * @return The market id\\n   **/\\n  function getMarketId() external view returns (string memory);\\n\\n  /**\\n   * @notice Associates an id with a specific PoolAddressesProvider.\\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\n   * identify and validate multiple Aave markets.\\n   * @param newMarketId The market id\\n   */\\n  function setMarketId(string calldata newMarketId) external;\\n\\n  /**\\n   * @notice Returns an address by its identifier.\\n   * @dev The returned address might be an EOA or a contract, potentially proxied\\n   * @dev It returns ZERO if there is no registered address with the given id\\n   * @param id The id\\n   * @return The address of the registered for the specified id\\n   */\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  /**\\n   * @notice General function to update the implementation of a proxy registered with\\n   * certain `id`. If there is no proxy registered, it will instantiate one and\\n   * set as implementation the `newImplementationAddress`.\\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\n   * setter function, in order to avoid unexpected consequences\\n   * @param id The id\\n   * @param newImplementationAddress The address of the new implementation\\n   */\\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\\n\\n  /**\\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\n   * @param id The id\\n   * @param newAddress The address to set\\n   */\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  /**\\n   * @notice Returns the address of the Pool proxy.\\n   * @return The Pool proxy address\\n   **/\\n  function getPool() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the Pool, or creates a proxy\\n   * setting the new `pool` implementation when the function is called for the first time.\\n   * @param newPoolImpl The new Pool implementation\\n   **/\\n  function setPoolImpl(address newPoolImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the PoolConfigurator proxy.\\n   * @return The PoolConfigurator proxy address\\n   **/\\n  function getPoolConfigurator() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\n   **/\\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle.\\n   * @return The address of the PriceOracle\\n   */\\n  function getPriceOracle() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle.\\n   * @param newPriceOracle The address of the new PriceOracle\\n   */\\n  function setPriceOracle(address newPriceOracle) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL manager.\\n   * @return The address of the ACLManager\\n   */\\n  function getACLManager() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL manager.\\n   * @param newAclManager The address of the new ACLManager\\n   **/\\n  function setACLManager(address newAclManager) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL admin.\\n   * @return The address of the ACL admin\\n   */\\n  function getACLAdmin() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL admin.\\n   * @param newAclAdmin The address of the new ACL admin\\n   */\\n  function setACLAdmin(address newAclAdmin) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle sentinel.\\n   * @return The address of the PriceOracleSentinel\\n   */\\n  function getPriceOracleSentinel() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle sentinel.\\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\n   **/\\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\n\\n  /**\\n   * @notice Returns the address of the data provider.\\n   * @return The address of the DataProvider\\n   */\\n  function getPoolDataProvider() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the data provider.\\n   * @param newDataProvider The address of the new DataProvider\\n   **/\\n  function setPoolDataProvider(address newDataProvider) external;\\n}\\n\",\"keccak256\":\"0x73185cd3b952eb691bbf2344b3f7a35cf8b67b33c39275e52e12b80436ea1d5c\",\"license\":\"AGPL-3.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"getACLAdmin()":{"notice":"Returns the address of the ACL admin."},"getACLManager()":{"notice":"Returns the address of the ACL manager."},"getAddress(bytes32)":{"notice":"Returns an address by its identifier."},"getMarketId()":{"notice":"Returns the id of the Aave market to which this contract points to."},"getPool()":{"notice":"Returns the address of the Pool proxy."},"getPoolConfigurator()":{"notice":"Returns the address of the PoolConfigurator proxy."},"getPoolDataProvider()":{"notice":"Returns the address of the data provider."},"getPriceOracle()":{"notice":"Returns the address of the price oracle."},"getPriceOracleSentinel()":{"notice":"Returns the address of the price oracle sentinel."},"setACLAdmin(address)":{"notice":"Updates the address of the ACL admin."},"setACLManager(address)":{"notice":"Updates the address of the ACL manager."},"setAddress(bytes32,address)":{"notice":"Sets an address for an id replacing the address saved in the addresses map."},"setAddressAsProxy(bytes32,address)":{"notice":"General function to update the implementation of a proxy registered with certain `id`. If there is no proxy registered, it will instantiate one and set as implementation the `newImplementationAddress`."},"setMarketId(string)":{"notice":"Associates an id with a specific PoolAddressesProvider."},"setPoolConfiguratorImpl(address)":{"notice":"Updates the implementation of the PoolConfigurator, or creates a proxy setting the new `PoolConfigurator` implementation when the function is called for the first time."},"setPoolDataProvider(address)":{"notice":"Updates the address of the data provider."},"setPoolImpl(address)":{"notice":"Updates the implementation of the Pool, or creates a proxy setting the new `pool` implementation when the function is called for the first time."},"setPriceOracle(address)":{"notice":"Updates the address of the price oracle."},"setPriceOracleSentinel(address)":{"notice":"Updates the address of the price oracle sentinel."}},"notice":"Defines the basic interface for a Pool Addresses Provider.*","version":1}}},"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol":{"DataTypes":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017d3ddbc2f19c0bc4674b5ebab4cd214bb482ccafc7e5fe9d6e02dd52202919364736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xD3 0xDD 0xBC 0x2F NOT 0xC0 0xBC CHAINID PUSH21 0xB5EBAB4CD214BB482CCAFC7E5FE9D6E02DD5220291 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"62:7274:2:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;62:7274:2;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017d3ddbc2f19c0bc4674b5ebab4cd214bb482ccafc7e5fe9d6e02dd52202919364736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xD3 0xDD 0xBC 0x2F NOT 0xC0 0xBC CHAINID PUSH21 0xB5EBAB4CD214BB482CCAFC7E5FE9D6E02DD5220291 SWAP4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"62:7274:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":\"DataTypes\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    //timestamp of last update\\n    uint40 lastUpdateTimestamp;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint16 id;\\n    //aToken address\\n    address aTokenAddress;\\n    //stableDebtToken address\\n    address stableDebtTokenAddress;\\n    //variableDebtToken address\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the current treasury balance, scaled\\n    uint128 accruedToTreasury;\\n    //the outstanding unbacked aTokens minted through the bridging feature\\n    uint128 unbacked;\\n    //the outstanding debt borrowed against this asset in isolation mode\\n    uint128 isolationModeTotalDebt;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60: asset is paused\\n    //bit 61: borrowing in isolation mode is enabled\\n    //bit 62-63: reserved\\n    //bit 64-79: reserve factor\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\n    //bit 152-167 liquidation protocol fee\\n    //bit 168-175 eMode category\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\n    //bit 252-255 unused\\n\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    /**\\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\\n     * asset is borrowed by the user.\\n     */\\n    uint256 data;\\n  }\\n\\n  struct EModeCategory {\\n    // each eMode category has a custom ltv and liquidation threshold\\n    uint16 ltv;\\n    uint16 liquidationThreshold;\\n    uint16 liquidationBonus;\\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\\n    address priceSource;\\n    string label;\\n  }\\n\\n  enum InterestRateMode {\\n    NONE,\\n    STABLE,\\n    VARIABLE\\n  }\\n\\n  struct ReserveCache {\\n    uint256 currScaledVariableDebt;\\n    uint256 nextScaledVariableDebt;\\n    uint256 currPrincipalStableDebt;\\n    uint256 currAvgStableBorrowRate;\\n    uint256 currTotalStableDebt;\\n    uint256 nextAvgStableBorrowRate;\\n    uint256 nextTotalStableDebt;\\n    uint256 currLiquidityIndex;\\n    uint256 nextLiquidityIndex;\\n    uint256 currVariableBorrowIndex;\\n    uint256 nextVariableBorrowIndex;\\n    uint256 currLiquidityRate;\\n    uint256 currVariableBorrowRate;\\n    uint256 reserveFactor;\\n    ReserveConfigurationMap reserveConfiguration;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    uint40 reserveLastUpdateTimestamp;\\n    uint40 stableDebtLastUpdateTimestamp;\\n  }\\n\\n  struct ExecuteLiquidationCallParams {\\n    uint256 reservesCount;\\n    uint256 debtToCover;\\n    address collateralAsset;\\n    address debtAsset;\\n    address user;\\n    bool receiveAToken;\\n    address priceOracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteSupplyParams {\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address asset;\\n    address user;\\n    address onBehalfOf;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint16 referralCode;\\n    bool releaseUnderlying;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address asset;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    address onBehalfOf;\\n    bool useATokens;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address asset;\\n    uint256 amount;\\n    address to;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ExecuteSetUserEModeParams {\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 categoryId;\\n  }\\n\\n  struct FinalizeTransferParams {\\n    address asset;\\n    address from;\\n    address to;\\n    uint256 amount;\\n    uint256 balanceFromBefore;\\n    uint256 balanceToBefore;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 fromEModeCategory;\\n  }\\n\\n  struct FlashloanParams {\\n    address receiverAddress;\\n    address[] assets;\\n    uint256[] amounts;\\n    uint256[] interestRateModes;\\n    address onBehalfOf;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address addressesProvider;\\n    uint8 userEModeCategory;\\n    bool isAuthorizedFlashBorrower;\\n  }\\n\\n  struct FlashloanSimpleParams {\\n    address receiverAddress;\\n    address asset;\\n    uint256 amount;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n  }\\n\\n  struct FlashLoanRepaymentParams {\\n    uint256 amount;\\n    uint256 totalPremium;\\n    uint256 flashLoanPremiumToProtocol;\\n    address asset;\\n    address receiverAddress;\\n    uint16 referralCode;\\n  }\\n\\n  struct CalculateUserAccountDataParams {\\n    UserConfigurationMap userConfig;\\n    uint256 reservesCount;\\n    address user;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ValidateBorrowParams {\\n    ReserveCache reserveCache;\\n    UserConfigurationMap userConfig;\\n    address asset;\\n    address userAddress;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint256 maxStableLoanPercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n    bool isolationModeActive;\\n    address isolationModeCollateralAddress;\\n    uint256 isolationModeDebtCeiling;\\n  }\\n\\n  struct ValidateLiquidationCallParams {\\n    ReserveCache debtReserveCache;\\n    uint256 totalDebt;\\n    uint256 healthFactor;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct CalculateInterestRatesParams {\\n    uint256 unbacked;\\n    uint256 liquidityAdded;\\n    uint256 liquidityTaken;\\n    uint256 totalStableDebt;\\n    uint256 totalVariableDebt;\\n    uint256 averageStableBorrowRate;\\n    uint256 reserveFactor;\\n    address reserve;\\n    address aToken;\\n  }\\n\\n  struct InitReserveParams {\\n    address asset;\\n    address aTokenAddress;\\n    address stableDebtAddress;\\n    address variableDebtAddress;\\n    address interestRateStrategyAddress;\\n    uint16 reservesCount;\\n    uint16 maxNumberReserves;\\n  }\\n}\\n\",\"keccak256\":\"0xf3acc235689aae1094d33bfdf90e60b0c3ae1f12c5f095b8cffb69bc6880765c\",\"license\":\"BUSL-1.1\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.","kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, _msgSender());\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1214,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)1209_storage)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)1209_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)1209_storage"},"t_struct(RoleData)1209_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":1206,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":1208,"contract":"@openzeppelin/contracts/access/AccessControl.sol:AccessControl","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"External interface of AccessControl declared to support ERC165 detection.","events":{"RoleAdminChanged(bytes32,bytes32,bytes32)":{"details":"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"},"RoleGranted(bytes32,address,address)":{"details":"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."},"RoleRevoked(bytes32,address,address)":{"details":"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"}},"kind":"dev","methods":{"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/Clones.sol":{"Clones":{"abi":[],"devdoc":{"details":"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \"clones\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9a481f9b7968f140dacd0095406886a9209e3ce941c104e94c8a5e01fdbfca464736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 LOG4 DUP2 0xF9 0xB7 SWAP7 DUP16 EQ 0xD 0xAC 0xD0 MULMOD SLOAD MOD DUP9 PUSH11 0x9209E3CE941C104E94C8A5 0xE0 0x1F 0xDB 0xFC LOG4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"740:2817:5:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;740:2817:5;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220c9a481f9b7968f140dacd0095406886a9209e3ce941c104e94c8a5e01fdbfca464736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC9 LOG4 DUP2 0xF9 0xB7 SWAP7 DUP16 EQ 0xD 0xAC 0xD0 MULMOD SLOAD MOD DUP9 PUSH11 0x9209E3CE941C104E94C8A5 0xE0 0x1F 0xDB 0xFC LOG4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"740:2817:5:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"clone(address)":"infinite","cloneDeterministic(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32)":"infinite","predictDeterministicAddress(address,bytes32,address)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for deploying minimal proxy contracts, also known as \\\"clones\\\". > To simply and cheaply clone contract functionality in an immutable way, this standard specifies > a minimal bytecode implementation that delegates all calls to a known, fixed address. The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2` (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the deterministic method. _Available since v3.4._\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/Clones.sol\":\"Clones\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x1cc0efb01cbf008b768fd7b334786a6e358809198bb7e67f1c530af4957c6a21\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/proxy/utils/Initializable.sol":{"Initializable":{"abi":[],"devdoc":{"custom:oz-upgrades-unsafe-allow":"constructor constructor() initializer {} ``` ====","details":"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```","kind":"dev","methods":{},"stateVariables":{"_initialized":{"details":"Indicates that the contract has been initialized."},"_initializing":{"details":"Indicates that the contract is in the process of being initialized."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() initializer {} ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed: [.hljs-theme-light.nopadding] ```\",\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"_initialized\":{\"details\":\"Indicates that the contract has been initialized.\"},\"_initializing\":{\"details\":\"Indicates that the contract is in the process of being initialized.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x4823752b07b8ea4ca971b217e39457930e7cb103c2c91e2a29729e5ca907e4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1658,"contract":"@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initialized","offset":0,"slot":"0","type":"t_bool"},{"astId":1661,"contract":"@openzeppelin/contracts/proxy/utils/Initializable.sol:Initializable","label":"_initializing","offset":1,"slot":"0","type":"t_bool"}],"types":{"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208adbd11d1f7264d31a5d89fc4380655eb53dfefad8b85b751cd417953bc5124e64736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xDB 0xD1 SAR 0x1F PUSH19 0x64D31A5D89FC4380655EB53DFEFAD8B85B751C 0xD4 OR SWAP6 EXTCODESIZE 0xC5 SLT 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"194:8061:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;194:8061:8;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212208adbd11d1f7264d31a5d89fc4380655eb53dfefad8b85b751cd417953bc5124e64736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP11 0xDB 0xD1 SAR 0x1F PUSH19 0x64D31A5D89FC4380655EB53DFEFAD8B85B751C 0xD4 OR SWAP6 EXTCODESIZE 0xC5 SLT 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"194:8061:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite","verifyCallResult(bool,bytes memory,string memory)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"details":"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"devdoc":{"details":"String operations.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220288bdb4a6400261315f0073e3018fcd958284c1c81cf01534267aefd143050c464736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 DUP12 0xDB 0x4A PUSH5 0x261315F0 SMOD RETURNDATACOPY ADDRESS XOR 0xFC 0xD9 PC 0x28 0x4C SHR DUP2 0xCF ADD MSTORE8 TIMESTAMP PUSH8 0xAEFD143050C46473 PUSH16 0x6C634300080A00330000000000000000 ","sourceMap":"146:1885:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;146:1885:10;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220288bdb4a6400261315f0073e3018fcd958284c1c81cf01534267aefd143050c464736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x28 DUP12 0xDB 0x4A PUSH5 0x261315F0 SMOD RETURNDATACOPY ADDRESS XOR 0xFC 0xD9 PC 0x28 0x4C SHR DUP2 0xCF ADD MSTORE8 TIMESTAMP PUSH8 0xAEFD143050C46473 PUSH16 0x6C634300080A00330000000000000000 ","sourceMap":"146:1885:10:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"toHexString(uint256)":"infinite","toHexString(uint256,uint256)":"infinite","toString(uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e8cd4270bdfeca65864b7de2b5ddb8b363bfe9e415ea41ef220f9177639e88d64736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E DUP13 0xD4 0x27 SIGNEXTEND 0xDF 0xEC 0xA6 PC PUSH5 0xB7DE2B5DDB DUP12 CALLDATASIZE EXTCODESIZE INVALID SWAP15 COINBASE 0x5E LOG4 0x1E CALLCODE KECCAK256 0xF9 OR PUSH23 0x39E88D64736F6C634300080A0033000000000000000000 ","sourceMap":"467:6301:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;467:6301:13;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204e8cd4270bdfeca65864b7de2b5ddb8b363bfe9e415ea41ef220f9177639e88d64736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4E DUP13 0xD4 0x27 SIGNEXTEND 0xDF 0xEC 0xA6 PC PUSH5 0xB7DE2B5DDB DUP12 CALLDATASIZE EXTCODESIZE INVALID SWAP15 COINBASE 0x5E LOG4 0x1E CALLCODE KECCAK256 0xF9 OR PUSH23 0x39E88D64736F6C634300080A0033000000000000000000 ","sourceMap":"467:6301:13:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations. NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler now has built in overflow checking.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/MathPow.sol":{"MathPow":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220602caa922d9db1e81a43f72a1efb122e9be4b786b9a00c05a0eea29c1f9fdf4e64736f6c634300080a0033","opcodes":"PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x2C 0xAA SWAP3 0x2D SWAP14 0xB1 0xE8 BYTE NUMBER 0xF7 0x2A 0x1E 0xFB SLT 0x2E SWAP12 0xE4 0xB7 DUP7 0xB9 LOG0 0xC SDIV LOG0 0xEE LOG2 SWAP13 0x1F SWAP16 0xDF 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"117:232:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;117:232:14;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220602caa922d9db1e81a43f72a1efb122e9be4b786b9a00c05a0eea29c1f9fdf4e64736f6c634300080a0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH1 0x2C 0xAA SWAP3 0x2D SWAP14 0xB1 0xE8 BYTE NUMBER 0xF7 0x2A 0x1E 0xFB SLT 0x2E SWAP12 0xE4 0xB7 DUP7 0xB9 LOG0 0xC SDIV LOG0 0xEE LOG2 SWAP13 0x1F SWAP16 0xDF 0x4E PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"117:232:14:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"103","totalCost":"17303"},"internal":{"pow(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MathPow.sol\":\"MathPow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"},\"contracts/MathPow.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\n\\nlibrary MathPow {\\n  function pow(uint256 x, uint256 n) internal pure returns (uint256 z) {\\n    z = n % 2 != 0 ? x : 1;\\n\\n    for (n /= 2; n != 0; n /= 2) {\\n      x = x*x; \\n\\n      if (n % 2 != 0) {\\n        z = z*x;\\n      }\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x28485f5fec3e3a2c1b2d178eccf79a7cbc5325e24a063db6e1caff25ac5f9602\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/SuperVault.sol":{"SuperVault":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"a","outputs":[{"internalType":"contract IAddressProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"borrowFromVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"borrowAmount","type":"uint256"}],"name":"depositAndBorrowFromVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"borrowAmount","type":"uint256"}],"name":"depositETHAndBorrowFromVault","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"depositETHToVault","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"depositToVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"collateralType","type":"address"},{"internalType":"uint256","name":"repayAmount","type":"uint256"},{"internalType":"bytes","name":"dexTxData","type":"bytes"},{"internalType":"uint256","name":"dexIndex","type":"uint256"}],"name":"emptyVault","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"assets","type":"address[]"},{"internalType":"uint256[]","name":"amounts","type":"uint256[]"},{"internalType":"uint256[]","name":"premiums","type":"uint256[]"},{"internalType":"address","name":"","type":"address"},{"internalType":"bytes","name":"params","type":"bytes"}],"name":"executeOperation","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"ga","outputs":[{"internalType":"contract IGovernanceAddressProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IAddressProvider","name":"_a","type":"address"},{"internalType":"contract IGovernanceAddressProvider","name":"_ga","type":"address"},{"internalType":"contract IPool","name":"_lendingPool","type":"address"},{"internalType":"address","name":"_owner","type":"address"},{"internalType":"contract IDexAddressProvider","name":"dexAP","type":"address"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"lendingPool","outputs":[{"internalType":"contract IPool","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"},{"internalType":"uint256","name":"depositAmount","type":"uint256"},{"internalType":"uint256","name":"borrowAmount","type":"uint256"},{"internalType":"uint256","name":"parToSell","type":"uint256"},{"internalType":"bytes","name":"dexTxData","type":"bytes"},{"internalType":"uint256","name":"dexIndex","type":"uint256"}],"name":"leverage","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"address","name":"toCollateral","type":"address"},{"internalType":"address","name":"fromCollateral","type":"address"},{"internalType":"uint256","name":"fromCollateralAmount","type":"uint256"},{"internalType":"uint256","name":"parAmount","type":"uint256"},{"internalType":"bytes","name":"dexTxData","type":"bytes"},{"internalType":"uint256","name":"dexIndex","type":"uint256"}],"name":"rebalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"minerAddress","type":"address"}],"name":"releaseMIMO","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"asset","type":"address"}],"name":"withdrawAsset","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"vaultId","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"withdrawFromVault","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"This contract should be cloned and initialized with a SuperVaultFactory contract","kind":"dev","methods":{"borrowFromVault(uint256,uint256)":{"params":{"amount":"The amount of PAR to borrow","vaultId":"The ID of the vault to borrow from"}},"depositAndBorrowFromVault(address,uint256,uint256)":{"params":{"asset":"Address of the collateral type","borrowAmount":"Amount of PAR to borrow after depositing","depositAmount":"Amount to deposit"}},"depositETHAndBorrowFromVault(uint256)":{"params":{"borrowAmount":"The amount of PAR to borrow after depositing ETH"}},"depositToVault(address,uint256)":{"params":{"amount":"Amount to deposit","asset":"Address of the collateral type"}},"emptyVault(uint256,address,uint256,bytes,uint256)":{"details":"This uses an AAVE V2 flashLoan that will call executeOperation","params":{"collateralType":"Address of the collateral of the vault","dexIndex":"Index to use for swapping the vault collateral for par","dexTxData":"Bytes that contain the low-level call to swap the vault asset for par to repay the vault loan","repayAmount":"Amount of par that needs to be repaid before all collateral can be withdrawn","vaultId":"The Id of the vault to empty"}},"executeOperation(address[],uint256[],uint256[],address,bytes)":{"details":"This Integrates with AAVE V2 flashLoansThis function is called by the lendingPool during execution of the leverage function","params":{"amounts":"A uint array with one element corresponding to the amount of the leveraged or rebalanced asset","assets":"An address array with one element corresponding to the address of the leveraged or rebalanced asset","params":"Bytes sent by the leverage or rebalance function that contains information on the aggregator swap","premiums":"A uint array with one element corresponding to the flashLoan fees"}},"getRoleAdmin(bytes32)":{"details":"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."},"grantRole(bytes32,address)":{"details":"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."},"hasRole(bytes32,address)":{"details":"Returns `true` if `account` has been granted `role`."},"initialize(address,address,address,address,address)":{"details":"This replaces the constructor function as in the factory design pattern","params":{"_a":"The address of the protocol's AddressProvider","_ga":"The address of the protocol's GovernanceAddressProvider","_lendingPool":"The address of the lendingPool from where flashLoans are taken","_owner":"The owner of this SuperVault contract"}},"leverage(address,uint256,uint256,uint256,bytes,uint256)":{"details":"This uses an AAVE V2 flashLoan that will call executeOperation","params":{"asset":"The address of the asset to leverage","borrowAmount":"The amount to be borrowed, e.g. 2 ETH, bringing the total to 3 ETH","depositAmount":"The initial starting amount, e.g. 1 ETH","dexIndex":"DexAddressProvider index of the aggregator to be used for selling PAR, either OneInch or Paraswap","dexTxData":"Bytes that will be passed to executeOperation that encodes args for the aggregator Swap","parToSell":"The amount of PAR we'll borrow so we can repay the leverage"}},"rebalance(uint256,address,address,uint256,uint256,bytes,uint256)":{"details":"This uses an AAVE V2 flashLoan that will call executeOperation","params":{"dexIndex":"DexAddressProvider index representing the aggregator to be used for selling PAR, either OneInch or Paraswap","dexTxData":"Bytes that will be passed to executeOperation that encodes args for the aggregator Swap","fromCollateral":"Address of the starting collateral that will be reduced","fromCollateralAmount":"Amount of starting collateral to deleverage","parAmount":"Amount of par that will be deposited to exchange for","toCollateral":"Address of the collateral to rebalance to","vaultId":"The Id of the vault to reduce the collateral of"}},"releaseMIMO(address)":{"params":{"minerAddress":"The address of the MIMO miner"}},"renounceRole(bytes32,address)":{"details":"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."},"revokeRole(bytes32,address)":{"details":"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."},"supportsInterface(bytes4)":{"details":"See {IERC165-supportsInterface}."},"withdrawAsset(address)":{"params":{"asset":"The address of the collateral type"}},"withdrawFromVault(uint256,uint256)":{"params":{"amount":"The amount of collateral to withdraw","vaultId":"The ID of the vault to withdraw from"}}},"title":"A parallel protocol vault with added functionality","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50614763806100206000396000f3fe6080604052600436106101805760003560e01c806360ed390a116100d6578063a217fddf1161007f578063bedc406611610059578063bedc406614610457578063ccb21bb514610477578063d547741f1461047f57600080fd5b8063a217fddf14610402578063a3d1115814610417578063a59a99731461043757600080fd5b806386bb48fc116100b057806386bb48fc1461038b57806391d148541461039e578063920f5c84146103e257600080fd5b806360ed390a14610338578063709748181461034b57806370d823631461036b57600080fd5b8063248a9ca31161013857806336568abe1161011257806336568abe146102d857806348b64410146102f8578063505b6a761461031857600080fd5b8063248a9ca31461025a57806325ca9674146102985780632f2ff15d146102b857600080fd5b80630dbe671f116101695780630dbe671f146101dc5780631459457a1461021a5780631ae63f3e1461023a57600080fd5b806301ffc9a714610185578063071e41d7146101ba575b600080fd5b34801561019157600080fd5b506101a56101a0366004613ca5565b61049f565b60405190151581526020015b60405180910390f35b3480156101c657600080fd5b506101da6101d5366004613ce4565b610508565b005b3480156101e857600080fd5b50600154610202906201000090046001600160a01b031681565b6040516001600160a01b0390911681526020016101b1565b34801561022657600080fd5b506101da610235366004613d01565b610663565b34801561024657600080fd5b506101da610255366004613dbb565b61084c565b34801561026657600080fd5b5061028a610275366004613e37565b60009081526020819052604090206001015490565b6040519081526020016101b1565b3480156102a457600080fd5b506101da6102b3366004613e50565b6109b1565b3480156102c457600080fd5b506101da6102d3366004613e85565b610e8d565b3480156102e457600080fd5b506101da6102f3366004613e85565b610eb8565b34801561030457600080fd5b506101da610313366004613eb5565b610f40565b34801561032457600080fd5b506101da610333366004613f42565b61101a565b6101da610346366004613ce4565b61135a565b34801561035757600080fd5b506101da610366366004613f42565b61143c565b34801561037757600080fd5b506101da610386366004613f64565b611712565b6101da610399366004613e37565b611aa6565b3480156103aa57600080fd5b506101a56103b9366004613e85565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156103ee57600080fd5b506101a56103fd36600461401b565b611dcd565b34801561040e57600080fd5b5061028a600081565b34801561042357600080fd5b506101da6104323660046140f6565b611ff3565b34801561044357600080fd5b50600354610202906001600160a01b031681565b34801561046357600080fd5b50600254610202906001600160a01b031681565b6101da61227b565b34801561048b57600080fd5b506101da61049a366004613e85565b612347565b60006001600160e01b031982167f7965db0b00000000000000000000000000000000000000000000000000000000148061050257507f01ffc9a7000000000000000000000000000000000000000000000000000000006001600160e01b03198316145b92915050565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff166105735760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b60448201526064015b60405180910390fd5b6040516370a0823160e01b815230600482015281906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa1580156105c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e79190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610632573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610656919061413b565b61065f57600080fd5b5050565b600154610100900460ff1661067e5760015460ff1615610682565b303b155b6106f45760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161056a565b600154610100900460ff1615801561073357600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0000166101011790555b6001600160a01b03861661074657600080fd5b6001600160a01b03851661075957600080fd5b6001600160a01b03841661076c57600080fd5b6001600160a01b03821661077f57600080fd5b600180547fffffffffffffffffffff0000000000000000000000000000000000000000ffff16620100006001600160a01b038981169190910291909117909155600280547fffffffffffffffffffffffff0000000000000000000000000000000000000000908116888416179091556003805482168784161790556004805490911691841691909117905561081560008461236d565b801561084457600180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff1690555b505050505050565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff166108b25760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b6040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018790526001600160a01b038816906323b872dd906064016020604051808303816000875af115801561091e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610942919061413b565b5060008484848460405160200161095c9493929190614188565b604051602081830303815290604052905060008082604051602001610982929190614221565b604051602081830303815290604052905061099e898883612377565b6109a66124b3565b505050505050505050565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16610a175760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b6000839050806001600160a01b031663095ea7b3600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a7e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610aa29190614260565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018690526044016020604051808303816000875af1158015610aef573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b13919061413b565b506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018490526001600160a01b038216906323b872dd906064016020604051808303816000875af1158015610b80573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba4919061413b565b50600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bf8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c1c9190614260565b6040517fa17890850000000000000000000000000000000000000000000000000000000081526001600160a01b0386811660048301526024820186905260448201859052919091169063a178908590606401600060405180830381600087803b158015610c8857600080fd5b505af1158015610c9c573d6000803e3d6000fd5b50505050600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610cf3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d179190614260565b6001600160a01b031663a9059cbb33600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa158015610d79573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9d9190614260565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015610de3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e079190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610e52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e76919061413b565b610e7f57600080fd5b610e876124b3565b50505050565b600082815260208190526040902060010154610ea9813361278b565b610eb38383612809565b505050565b6001600160a01b0381163314610f365760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c660000000000000000000000000000000000606482015260840161056a565b61065f82826128a7565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16610fa65760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b6000888886868686604051602001610fc39695949392919061427d565b60405160208183030381529060405290506000600182604051602001610fea929190614221565b6040516020818303038152906040529050611006888883612377565b61100e6124b3565b50505050505050505050565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff166110805760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156110d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110f79190614260565b6040517f0ecbcdab00000000000000000000000000000000000000000000000000000000815260048101849052602481018390526001600160a01b039190911690630ecbcdab90604401600060405180830381600087803b15801561115b57600080fd5b505af115801561116f573d6000803e3d6000fd5b50505050600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156111c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111ea9190614260565b6001600160a01b031663a9059cbb33600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561124c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112709190614260565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156112b6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112da9190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611325573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611349919061413b565b61135257600080fd5b61065f6124b3565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff166113c05760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b6040517f60ed390a00000000000000000000000000000000000000000000000000000000815230600482015281906001600160a01b038216906360ed390a90602401600060405180830381600087803b15801561141c57600080fd5b505af1158015611430573d6000803e3d6000fd5b5050505061065f6124b3565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff166114a25760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156114f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115199190614260565b6040517f441a3e7000000000000000000000000000000000000000000000000000000000815260048101849052602481018390526001600160a01b03919091169063441a3e7090604401600060405180830381600087803b15801561157d57600080fd5b505af1158015611591573d6000803e3d6000fd5b505050506000600160029054906101000a90046001600160a01b03166001600160a01b03166365d552876040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115ea573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061160e9190614260565b6001600160a01b031663b508bc59846040518263ffffffff1660e01b815260040161163b91815260200190565b602060405180830381865afa158015611658573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061167c9190614260565b6040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018490529091506001600160a01b0382169063a9059cbb906044016020604051808303816000875af11580156116e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611709919061413b565b610eb357600080fd5b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff166117785760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b6000868484846040516020016117919493929190614188565b604051602081830303815290604052905060006002826040516020016117b8929190614221565b60405160208183030381529060405290506117d4878783612377565b6117dc6124b3565b600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa15801561182f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118539190614260565b6001600160a01b031663a9059cbb33600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156118b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118d99190614260565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa15801561191f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119439190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561198e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b2919061413b565b6119bb57600080fd5b6119c36124b3565b6040516370a0823160e01b815230600482015287906001600160a01b0382169063a9059cbb90339083906370a0823190602401602060405180830381865afa158015611a13573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a379190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611a82573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100e919061413b565b3360009081527fad3228b676f7d3cd4284a5443f17f1962b36e491b30a40b2405849e597ba5fb5602052604090205460ff16611b0c5760405162461bcd60e51b8152602060048201526005602482015264535630303160d81b604482015260640161056a565b600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b5f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611b839190614260565b6001600160a01b03166357f256e334836040518363ffffffff1660e01b8152600401611bb191815260200190565b6000604051808303818588803b158015611bca57600080fd5b505af1158015611bde573d6000803e3d6000fd5b5050505050600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c5a9190614260565b6001600160a01b031663a9059cbb33600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611cbc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ce09190614260565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015611d26573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d4a9190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015611d95573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db9919061413b565b611dc257600080fd5b611dca6124b3565b50565b6003546000906001600160a01b03163314611e2a5760405162461bcd60e51b815260206004820152600560248201527f5356303032000000000000000000000000000000000000000000000000000000604482015260640161056a565b600080611e398486018661432e565b9150915060008c8c6000818110611e5257611e526143c5565b9050602002016020810190611e679190613ce4565b9050600089896000818110611e7e57611e7e6143c5565b905060200201358c8c6000818110611e9857611e986143c5565b90506020020135611ea991906143f1565b90506000846002811115611ebf57611ebf6141b3565b1415611ed057611ed0828285612926565b6001846002811115611ee457611ee46141b3565b1415611f0f57611f0f828d8d6000818110611f0157611f016143c5565b905060200201358386612b11565b6002846002811115611f2357611f236141b3565b1415611f4e57611f4e828d8d6000818110611f4057611f406143c5565b905060200201358386613041565b6003546040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b039182166004820152602481018390529083169063095ea7b3906044016020604051808303816000875af1158015611fba573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611fde919061413b565b5060019e9d5050505050505050505050505050565b6000829050806001600160a01b031663095ea7b3600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa15801561205a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207e9190614260565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018590526044016020604051808303816000875af11580156120cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120ef919061413b565b506040517f23b872dd000000000000000000000000000000000000000000000000000000008152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af115801561215c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612180919061413b565b50600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f89190614260565b6040517f47e7ef240000000000000000000000000000000000000000000000000000000081526001600160a01b0385811660048301526024820185905291909116906347e7ef24906044015b600060405180830381600087803b15801561225e57600080fd5b505af1158015612272573d6000803e3d6000fd5b50505050505050565b600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122ce573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f29190614260565b6001600160a01b031663f6326fb3346040518263ffffffff1660e01b81526004016000604051808303818588803b15801561232c57600080fd5b505af1158015612340573d6000803e3d6000fd5b5050505050565b600082815260208190526040902060010154612363813361278b565b610eb383836128a7565b61065f8282612809565b60408051600180825281830190925260009182919060208083019080368337505060408051600180825281830190925292935060009291506020808301908036833750506040805160018082528183019092529293506000929150602080830190803683370190505090508686846000815181106123f7576123f76143c5565b6020026020010184600081518110612411576124116143c5565b60209081029190910101919091526001600160a01b0391821690526003546040517fab9c4b5d00000000000000000000000000000000000000000000000000000000815291169063ab9c4b5d9061247890309087908790879084908d908d90600401614444565b600060405180830381600087803b15801561249257600080fd5b505af11580156124a6573d6000803e3d6000fd5b5050505050505050505050565b600254604080517f6d9b182300000000000000000000000000000000000000000000000000000000815290516000926001600160a01b031691636d9b18239160048083019260209291908290030181865afa158015612516573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061253a9190614260565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa158015612580573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125a49190614122565b111561278957600260009054906101000a90046001600160a01b03166001600160a01b0316636d9b18236040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125fd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126219190614260565b6001600160a01b031663a9059cbb33600260009054906101000a90046001600160a01b03166001600160a01b0316636d9b18236040518163ffffffff1660e01b8152600401602060405180830381865afa158015612683573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126a79190614260565b6040516370a0823160e01b81523060048201526001600160a01b0391909116906370a0823190602401602060405180830381865afa1580156126ed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127119190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af115801561275c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612780919061413b565b61278957600080fd5b565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661065f576127c7816001600160a01b031660146135af565b6127d28360206135af565b6040516020016127e39291906144fe565b60408051601f198184030181529082905262461bcd60e51b825261056a9160040161457f565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1661065f576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556128633390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff161561065f576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b61293081846137df565b6040516370a0823160e01b815230600482015282906001600160a01b038516906370a0823190602401602060405180830381865afa158015612976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061299a9190614122565b10156129e85760405162461bcd60e51b815260206004820152600560248201527f5356313031000000000000000000000000000000000000000000000000000000604482015260640161056a565b600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a3b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a5f9190614260565b6040516370a0823160e01b81523060048201526001600160a01b03918216916347e7ef249186918691908316906370a0823190602401602060405180830381865afa158015612ab2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ad69190614122565b612ae09190614592565b6040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401612244565b600080600080600085806020019051810190612b2d91906145ee565b94509450945094509450612b43818a8a85613aca565b6040516370a0823160e01b81523060048201526000906001600160a01b038616906370a0823190602401602060405180830381865afa158015612b8a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bae9190614122565b9050846001600160a01b031663095ea7b3600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015612c12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612c369190614260565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602481018490526044016020604051808303816000875af1158015612c83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ca7919061413b565b50600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015612cfb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612d1f9190614260565b6040517fa17890850000000000000000000000000000000000000000000000000000000081526001600160a01b0387811660048301526024820184905260448201879052919091169063a178908590606401600060405180830381600087803b158015612d8b57600080fd5b505af1158015612d9f573d6000803e3d6000fd5b50505050600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015612df6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612e1a9190614260565b6040517fd8aed14500000000000000000000000000000000000000000000000000000000815260048101889052602481018690526001600160a01b03919091169063d8aed14590604401600060405180830381600087803b158015612e7e57600080fd5b505af1158015612e92573d6000803e3d6000fd5b50505050600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015612ee9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612f0d9190614260565b6040517f441a3e7000000000000000000000000000000000000000000000000000000000815260048101889052602481018a90526001600160a01b03919091169063441a3e7090604401600060405180830381600087803b158015612f7157600080fd5b505af1158015612f85573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528a92506001600160a01b038d1691506370a0823190602401602060405180830381865afa158015612fcf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ff39190614122565b101561100e5760405162461bcd60e51b815260206004820152600560248201527f5356313031000000000000000000000000000000000000000000000000000000604482015260640161056a565b60008060008380602001905181019061305a919061465c565b92509250925061306c81888885613aca565b6000600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa1580156130c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906130e59190614260565b9050806001600160a01b031663095ea7b3600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015613149573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061316d9190614260565b6040516370a0823160e01b81523060048201526001600160a01b038516906370a0823190602401602060405180830381865afa1580156131b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906131d59190614122565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015613220573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613244919061413b565b50600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015613298573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132bc9190614260565b6001600160a01b0316633221be54856040518263ffffffff1660e01b81526004016132e991815260200190565b600060405180830381600087803b15801561330357600080fd5b505af1158015613317573d6000803e3d6000fd5b505050506000600160029054906101000a90046001600160a01b03166001600160a01b03166365d552876040518163ffffffff1660e01b8152600401602060405180830381865afa158015613370573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906133949190614260565b6001600160a01b031663828f8def866040518263ffffffff1660e01b81526004016133c191815260200190565b602060405180830381865afa1580156133de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906134029190614122565b9050600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015613457573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061347b9190614260565b6040517f441a3e7000000000000000000000000000000000000000000000000000000000815260048101879052602481018390526001600160a01b03919091169063441a3e7090604401600060405180830381600087803b1580156134df57600080fd5b505af11580156134f3573d6000803e3d6000fd5b50506040516370a0823160e01b81523060048201528992506001600160a01b038c1691506370a0823190602401602060405180830381865afa15801561353d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135619190614122565b10156109a65760405162461bcd60e51b815260206004820152600560248201527f5356313031000000000000000000000000000000000000000000000000000000604482015260640161056a565b606060006135be8360026146ac565b6135c99060026143f1565b67ffffffffffffffff8111156135e1576135e16142bf565b6040519080825280601f01601f19166020018201604052801561360b576020820181803683370190505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110613642576136426143c5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106136a5576136a56143c5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060006136e18460026146ac565b6136ec9060016143f1565b90505b6001811115613789577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061372d5761372d6143c5565b1a60f81b828281518110613743576137436143c5565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a90535060049490941c93613782816146cb565b90506136ef565b5083156137d85760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161056a565b9392505050565b6000806000848060200190518101906137f8919061465c565b925092509250836001600160a01b031663095ea7b3600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa158015613860573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138849190614260565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af11580156138d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138f6919061413b565b50600160029054906101000a90046001600160a01b03166001600160a01b031663f2f4eb266040518163ffffffff1660e01b8152600401602060405180830381865afa15801561394a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061396e9190614260565b6040516370a0823160e01b81523060048201526001600160a01b039182169163a17890859187918216906370a0823190602401602060405180830381865afa1580156139be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139e29190614122565b6040516001600160e01b031960e085901b1681526001600160a01b039092166004830152602482015260448101869052606401600060405180830381600087803b158015613a2f57600080fd5b505af1158015613a43573d6000803e3d6000fd5b505050506000600160029054906101000a90046001600160a01b03166001600160a01b03166316d8a5a96040518163ffffffff1660e01b8152600401602060405180830381865afa158015613a9c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613ac09190614260565b9050610844828286865b600480546040517f2bfac6be00000000000000000000000000000000000000000000000000000000815291820186905260009182916001600160a01b031690632bfac6be906024016040805180830381865afa158015613b2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b5291906146e2565b90925090506001600160a01b03821615801590613b7757506001600160a01b03811615155b613bc35760405162461bcd60e51b815260206004820152600560248201527f5356323031000000000000000000000000000000000000000000000000000000604482015260640161056a565b6040517f095ea7b30000000000000000000000000000000000000000000000000000000081526001600160a01b0383811660048301526024820186905286169063095ea7b3906044016020604051808303816000875af1158015613c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c4f919061413b565b50806001600160a01b031683604051613c689190614711565b6000604051808303816000865af19150503d80600081146109a6576040519150601f19603f3d011682016040523d82523d6000602084013e6109a6565b600060208284031215613cb757600080fd5b81356001600160e01b0319811681146137d857600080fd5b6001600160a01b0381168114611dca57600080fd5b600060208284031215613cf657600080fd5b81356137d881613ccf565b600080600080600060a08688031215613d1957600080fd5b8535613d2481613ccf565b94506020860135613d3481613ccf565b93506040860135613d4481613ccf565b92506060860135613d5481613ccf565b91506080860135613d6481613ccf565b809150509295509295909350565b60008083601f840112613d8457600080fd5b50813567ffffffffffffffff811115613d9c57600080fd5b602083019150836020828501011115613db457600080fd5b9250929050565b600080600080600080600060c0888a031215613dd657600080fd5b8735613de181613ccf565b9650602088013595506040880135945060608801359350608088013567ffffffffffffffff811115613e1257600080fd5b613e1e8a828b01613d72565b989b979a5095989497959660a090950135949350505050565b600060208284031215613e4957600080fd5b5035919050565b600080600060608486031215613e6557600080fd5b8335613e7081613ccf565b95602085013595506040909401359392505050565b60008060408385031215613e9857600080fd5b823591506020830135613eaa81613ccf565b809150509250929050565b60008060008060008060008060e0898b031215613ed157600080fd5b883597506020890135613ee381613ccf565b96506040890135613ef381613ccf565b9550606089013594506080890135935060a089013567ffffffffffffffff811115613f1d57600080fd5b613f298b828c01613d72565b999c989b50969995989497949560c00135949350505050565b60008060408385031215613f5557600080fd5b50508035926020909101359150565b60008060008060008060a08789031215613f7d57600080fd5b863595506020870135613f8f81613ccf565b945060408701359350606087013567ffffffffffffffff811115613fb257600080fd5b613fbe89828a01613d72565b979a9699509497949695608090950135949350505050565b60008083601f840112613fe857600080fd5b50813567ffffffffffffffff81111561400057600080fd5b6020830191508360208260051b8501011115613db457600080fd5b600080600080600080600080600060a08a8c03121561403957600080fd5b893567ffffffffffffffff8082111561405157600080fd5b61405d8d838e01613fd6565b909b50995060208c013591508082111561407657600080fd5b6140828d838e01613fd6565b909950975060408c013591508082111561409b57600080fd5b6140a78d838e01613fd6565b909750955060608c013591506140bc82613ccf565b90935060808b013590808211156140d257600080fd5b506140df8c828d01613d72565b915080935050809150509295985092959850929598565b6000806040838503121561410957600080fd5b823561411481613ccf565b946020939093013593505050565b60006020828403121561413457600080fd5b5051919050565b60006020828403121561414d57600080fd5b815180151581146137d857600080fd5b818352818160208501375060006020828401015260006020601f19601f840116840101905092915050565b8481526060602082015260006141a260608301858761415d565b905082604083015295945050505050565b634e487b7160e01b600052602160045260246000fd5b60005b838110156141e45781810151838201526020016141cc565b83811115610e875750506000910152565b6000815180845261420d8160208601602086016141c9565b601f01601f19169290920160200192915050565b60006003841061424157634e487b7160e01b600052602160045260246000fd5b8382526040602083015261425860408301846141f5565b949350505050565b60006020828403121561427257600080fd5b81516137d881613ccf565b8681526001600160a01b038616602082015284604082015260a0606082015260006142ac60a08301858761415d565b9050826080830152979650505050505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156142fe576142fe6142bf565b604052919050565b600067ffffffffffffffff821115614320576143206142bf565b50601f01601f191660200190565b6000806040838503121561434157600080fd5b82356003811061435057600080fd5b9150602083013567ffffffffffffffff81111561436c57600080fd5b8301601f8101851361437d57600080fd5b803561439061438b82614306565b6142d5565b8181528660208385010111156143a557600080fd5b816020840160208301376000602083830101528093505050509250929050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115614404576144046143db565b500190565b600081518084526020808501945080840160005b838110156144395781518752958201959082019060010161441d565b509495945050505050565b600060e082016001600160a01b03808b168452602060e081860152828b5180855261010087019150828d01945060005b81811015614492578551851683529483019491830191600101614474565b505085810360408701526144a6818c614409565b935050505082810360608401526144bd8188614409565b6001600160a01b0387166080850152905082810360a08401526144e081866141f5565b9150506144f260c083018460ff169052565b98975050505050505050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516145368160178501602088016141c9565b7f206973206d697373696e6720726f6c652000000000000000000000000000000060179184019182015283516145738160288401602088016141c9565b01602801949350505050565b6020815260006137d860208301846141f5565b6000828210156145a4576145a46143db565b500390565b600082601f8301126145ba57600080fd5b81516145c861438b82614306565b8181528460208386010111156145dd57600080fd5b6142588260208301602087016141c9565b600080600080600060a0868803121561460657600080fd5b85519450602086015161461881613ccf565b60408701516060880151919550935067ffffffffffffffff81111561463c57600080fd5b614648888289016145a9565b925050608086015190509295509295909350565b60008060006060848603121561467157600080fd5b83519250602084015167ffffffffffffffff81111561468f57600080fd5b61469b868287016145a9565b925050604084015190509250925092565b60008160001904831182151516156146c6576146c66143db565b500290565b6000816146da576146da6143db565b506000190190565b600080604083850312156146f557600080fd5b825161470081613ccf565b6020840151909250613eaa81613ccf565b600082516147238184602087016141c9565b919091019291505056fea2646970667358221220f7ae6c69e575389778acdfb91993490f052a5283ca5dc399e53198d66bac505164736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4763 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60ED390A GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBEDC4066 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBEDC4066 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xCCB21BB5 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xA3D11158 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86BB48FC GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x86BB48FC EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x920F5C84 EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60ED390A EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x70974818 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x70D82363 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x48B64410 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x505B6A76 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x25CA9674 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDBE671F GT PUSH2 0x169 JUMPI DUP1 PUSH4 0xDBE671F EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x1459457A EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x1AE63F3E EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x71E41D7 EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CA5 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x202 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D01 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DBB JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E50 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0xE8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EB5 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F42 JUMP JUMPDEST PUSH2 0x101A JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F42 JUMP JUMPDEST PUSH2 0x143C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F64 JUMP JUMPDEST PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E37 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x401B JUMP JUMPDEST PUSH2 0x1DCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x40F6 JUMP JUMPDEST PUSH2 0x1FF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x202 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x202 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x227B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x502 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x67E JUMPI PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x682 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND DUP9 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x815 PUSH1 0x0 DUP5 PUSH2 0x236D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x95C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x982 SWAP3 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x99E DUP10 DUP9 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x9A6 PUSH2 0x24B3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA178908500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1789085 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE76 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0xE7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE87 PUSH2 0x24B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xEA9 DUP2 CALLER PUSH2 0x278B JUMP JUMPDEST PUSH2 0xEB3 DUP4 DUP4 PUSH2 0x2809 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56A JUMP JUMPDEST PUSH2 0x65F DUP3 DUP3 PUSH2 0x28A7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP9 DUP9 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x427D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFEA SWAP3 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1006 DUP9 DUP9 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x100E PUSH2 0x24B3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xECBCDAB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xECBCDAB SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EA SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12DA SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65F PUSH2 0x24B3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x13C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x60ED390A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x60ED390A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1430 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x65F PUSH2 0x24B3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1519 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x157D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1591 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x65D55287 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB508BC59 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1658 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x167C SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1709 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1791 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B8 SWAP3 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x17D4 DUP8 DUP8 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x24B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1853 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x198E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19B2 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x19BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C3 PUSH2 0x24B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100E SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B83 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x57F256E3 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE0 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D4A SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB9 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x1DC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DCA PUSH2 0x24B3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356303032000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E39 DUP5 DUP7 ADD DUP7 PUSH2 0x432E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP13 DUP13 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1E52 JUMPI PUSH2 0x1E52 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1E67 SWAP2 SWAP1 PUSH2 0x3CE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP10 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1E7E JUMPI PUSH2 0x1E7E PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP13 DUP13 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1E98 JUMPI PUSH2 0x1E98 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1EA9 SWAP2 SWAP1 PUSH2 0x43F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EBF JUMPI PUSH2 0x1EBF PUSH2 0x41B3 JUMP JUMPDEST EQ ISZERO PUSH2 0x1ED0 JUMPI PUSH2 0x1ED0 DUP3 DUP3 DUP6 PUSH2 0x2926 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE4 PUSH2 0x41B3 JUMP JUMPDEST EQ ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0F DUP3 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1F01 JUMPI PUSH2 0x1F01 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 DUP7 PUSH2 0x2B11 JUMP JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F23 PUSH2 0x41B3 JUMP JUMPDEST EQ ISZERO PUSH2 0x1F4E JUMPI PUSH2 0x1F4E DUP3 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1F40 JUMPI PUSH2 0x1F40 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 DUP7 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FDE SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x207E SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20EF SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2180 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x47E7EF2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x47E7EF24 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x225E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2272 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F2 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF6326FB3 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x232C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2363 DUP2 CALLER PUSH2 0x278B JUMP JUMPDEST PUSH2 0xEB3 DUP4 DUP4 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x65F DUP3 DUP3 PUSH2 0x2809 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP7 DUP7 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23F7 JUMPI PUSH2 0x23F7 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2411 JUMPI PUSH2 0x2411 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAB9C4B5D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xAB9C4B5D SWAP1 PUSH2 0x2478 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP5 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x4444 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6D9B182300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6D9B1823 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253A SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2580 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A4 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST GT ISZERO PUSH2 0x2789 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6D9B1823 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2621 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6D9B1823 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26A7 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2711 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x275C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2780 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x2789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x65F JUMPI PUSH2 0x27C7 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x35AF JUMP JUMPDEST PUSH2 0x27D2 DUP4 PUSH1 0x20 PUSH2 0x35AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27E3 SWAP3 SWAP2 SWAP1 PUSH2 0x44FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x56A SWAP2 PUSH1 0x4 ADD PUSH2 0x457F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x65F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2863 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x2930 DUP2 DUP5 PUSH2 0x37DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2976 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299A SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST LT ISZERO PUSH2 0x29E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356313031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A5F SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0x47E7EF24 SWAP2 DUP7 SWAP2 DUP7 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AD6 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH2 0x2AE0 SWAP2 SWAP1 PUSH2 0x4592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2B2D SWAP2 SWAP1 PUSH2 0x45EE JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x2B43 DUP2 DUP11 DUP11 DUP6 PUSH2 0x3ACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BAE SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C36 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA7 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D1F SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA178908500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1789085 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E1A SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD8AED14500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD8AED145 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F0D SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP11 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FF3 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST LT ISZERO PUSH2 0x100E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356313031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x305A SWAP2 SWAP1 PUSH2 0x465C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x306C DUP2 DUP9 DUP9 DUP6 PUSH2 0x3ACA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30E5 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3149 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x316D SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31D5 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3244 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3298 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32BC SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3221BE54 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32E9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3317 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x65D55287 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3394 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x828F8DEF DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3402 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3457 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x347B SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP10 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3561 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST LT ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356313031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x35BE DUP4 PUSH1 0x2 PUSH2 0x46AC JUMP JUMPDEST PUSH2 0x35C9 SWAP1 PUSH1 0x2 PUSH2 0x43F1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35E1 JUMPI PUSH2 0x35E1 PUSH2 0x42BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x360B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3642 JUMPI PUSH2 0x3642 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x36A5 JUMPI PUSH2 0x36A5 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x36E1 DUP5 PUSH1 0x2 PUSH2 0x46AC JUMP JUMPDEST PUSH2 0x36EC SWAP1 PUSH1 0x1 PUSH2 0x43F1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3789 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x372D JUMPI PUSH2 0x372D PUSH2 0x43C5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3743 JUMPI PUSH2 0x3743 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x3782 DUP2 PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP PUSH2 0x36EF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x37D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x37F8 SWAP2 SWAP1 PUSH2 0x465C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3860 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3884 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F6 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x394A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396E SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xA1789085 SWAP2 DUP8 SWAP2 DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39E2 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AC0 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST SWAP1 POP PUSH2 0x844 DUP3 DUP3 DUP7 DUP7 JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2BFAC6BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2BFAC6BE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B52 SWAP2 SWAP1 PUSH2 0x46E2 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3B77 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH2 0x3BC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356323031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4F SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x3C68 SWAP2 SWAP1 PUSH2 0x4711 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x37D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x37D8 DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x3D24 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3D34 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x3D44 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x3D54 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x3D64 DUP2 PUSH2 0x3CCF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x3DE1 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E1E DUP11 DUP3 DUP12 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 SWAP5 SWAP8 SWAP6 SWAP7 PUSH1 0xA0 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3E70 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3EAA DUP2 PUSH2 0x3CCF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3ED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x3EE3 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3EF3 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F29 DUP12 DUP3 DUP13 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 SWAP6 SWAP9 SWAP5 SWAP8 SWAP5 SWAP6 PUSH1 0xC0 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x3F8F DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FBE DUP10 DUP3 DUP11 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP5 SWAP7 SWAP6 PUSH1 0x80 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x405D DUP14 DUP4 DUP15 ADD PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4082 DUP14 DUP4 DUP15 ADD PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x409B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40A7 DUP14 DUP4 DUP15 ADD PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x40BC DUP3 PUSH2 0x3CCF JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x40D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40DF DUP13 DUP3 DUP14 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4114 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x414D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x37D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x41A2 PUSH1 0x60 DUP4 ADD DUP6 DUP8 PUSH2 0x415D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x41CC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE87 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x420D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x41C9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP5 LT PUSH2 0x4241 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4258 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x41F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x37D8 DUP2 PUSH2 0x3CCF JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x42AC PUSH1 0xA0 DUP4 ADD DUP6 DUP8 PUSH2 0x415D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x42FE JUMPI PUSH2 0x42FE PUSH2 0x42BF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4320 JUMPI PUSH2 0x4320 PUSH2 0x42BF JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x4350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x436C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x437D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x4390 PUSH2 0x438B DUP3 PUSH2 0x4306 JUMP JUMPDEST PUSH2 0x42D5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x43A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4404 JUMPI PUSH2 0x4404 PUSH2 0x43DB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4439 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x441D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP5 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP7 ADD MSTORE DUP3 DUP12 MLOAD DUP1 DUP6 MSTORE PUSH2 0x100 DUP8 ADD SWAP2 POP DUP3 DUP14 ADD SWAP5 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4492 JUMPI DUP6 MLOAD DUP6 AND DUP4 MSTORE SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4474 JUMP JUMPDEST POP POP DUP6 DUP2 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x44A6 DUP2 DUP13 PUSH2 0x4409 JUMP JUMPDEST SWAP4 POP POP POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x44BD DUP2 DUP9 PUSH2 0x4409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x44E0 DUP2 DUP7 PUSH2 0x41F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x44F2 PUSH1 0xC0 DUP4 ADD DUP5 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x4536 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x41C9 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x4573 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x41C9 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x41F5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x45A4 JUMPI PUSH2 0x45A4 PUSH2 0x43DB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x45BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x45C8 PUSH2 0x438B DUP3 PUSH2 0x4306 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x45DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4258 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x41C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4618 DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4648 DUP9 DUP3 DUP10 ADD PUSH2 0x45A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x468F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x469B DUP7 DUP3 DUP8 ADD PUSH2 0x45A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x46C6 JUMPI PUSH2 0x46C6 PUSH2 0x43DB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x46DA JUMPI PUSH2 0x46DA PUSH2 0x43DB JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x4700 DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x3EAA DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4723 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x41C9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xAE PUSH13 0x69E575389778ACDFB91993490F SDIV 0x2A MSTORE DUP4 0xCA 0x5D 0xC3 SWAP10 0xE5 BALANCE SWAP9 0xD6 PUSH12 0xAC505164736F6C634300080A STOP CALLER ","sourceMap":"834:15720:15:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DEFAULT_ADMIN_ROLE_1217":{"entryPoint":null,"id":1217,"parameterSlots":0,"returnSlots":0},"@_checkRole_1314":{"entryPoint":10123,"id":1314,"parameterSlots":2,"returnSlots":0},"@_grantRole_1466":{"entryPoint":10249,"id":1466,"parameterSlots":2,"returnSlots":0},"@_isConstructor_1724":{"entryPoint":null,"id":1724,"parameterSlots":0,"returnSlots":1},"@_msgSender_2110":{"entryPoint":null,"id":2110,"parameterSlots":0,"returnSlots":1},"@_revokeRole_1497":{"entryPoint":10407,"id":1497,"parameterSlots":2,"returnSlots":0},"@_setupRole_1406":{"entryPoint":9069,"id":1406,"parameterSlots":2,"returnSlots":0},"@a_2761":{"entryPoint":null,"id":2761,"parameterSlots":0,"returnSlots":0},"@aggregatorSwap_3927":{"entryPoint":15050,"id":3927,"parameterSlots":4,"returnSlots":0},"@borrowFromVault_3546":{"entryPoint":4122,"id":3546,"parameterSlots":2,"returnSlots":0},"@checkAndSendMIMO_4041":{"entryPoint":9395,"id":4041,"parameterSlots":0,"returnSlots":0},"@depositAndBorrowFromVault_3706":{"entryPoint":2481,"id":3706,"parameterSlots":3,"returnSlots":0},"@depositETHAndBorrowFromVault_3795":{"entryPoint":6822,"id":3795,"parameterSlots":1,"returnSlots":0},"@depositETHToVault_3749":{"entryPoint":8827,"id":3749,"parameterSlots":0,"returnSlots":0},"@depositToVault_3626":{"entryPoint":8179,"id":3626,"parameterSlots":2,"returnSlots":0},"@emptyVaultOperation_3368":{"entryPoint":12353,"id":3368,"parameterSlots":4,"returnSlots":0},"@emptyVault_3459":{"entryPoint":5906,"id":3459,"parameterSlots":6,"returnSlots":0},"@executeOperation_2991":{"entryPoint":7629,"id":2991,"parameterSlots":9,"returnSlots":1},"@ga_2764":{"entryPoint":null,"id":2764,"parameterSlots":0,"returnSlots":0},"@getRoleAdmin_1329":{"entryPoint":null,"id":1329,"parameterSlots":1,"returnSlots":1},"@grantRole_1349":{"entryPoint":3725,"id":1349,"parameterSlots":2,"returnSlots":0},"@hasRole_1271":{"entryPoint":null,"id":1271,"parameterSlots":2,"returnSlots":1},"@initialize_2873":{"entryPoint":1635,"id":2873,"parameterSlots":5,"returnSlots":0},"@isContract_1821":{"entryPoint":null,"id":1821,"parameterSlots":1,"returnSlots":1},"@lendingPool_2767":{"entryPoint":null,"id":2767,"parameterSlots":0,"returnSlots":0},"@leverageOperation_3041":{"entryPoint":10534,"id":3041,"parameterSlots":3,"returnSlots":0},"@leverageSwap_3874":{"entryPoint":14303,"id":3874,"parameterSlots":2,"returnSlots":0},"@leverage_3100":{"entryPoint":2124,"id":3100,"parameterSlots":7,"returnSlots":0},"@rebalanceOperation_3213":{"entryPoint":11025,"id":3213,"parameterSlots":4,"returnSlots":0},"@rebalance_3263":{"entryPoint":3904,"id":3263,"parameterSlots":8,"returnSlots":0},"@releaseMIMO_3734":{"entryPoint":4954,"id":3734,"parameterSlots":1,"returnSlots":0},"@renounceRole_1392":{"entryPoint":3768,"id":1392,"parameterSlots":2,"returnSlots":0},"@revokeRole_1369":{"entryPoint":9031,"id":1369,"parameterSlots":2,"returnSlots":0},"@supportsInterface_1252":{"entryPoint":1183,"id":1252,"parameterSlots":1,"returnSlots":1},"@supportsInterface_2346":{"entryPoint":null,"id":2346,"parameterSlots":1,"returnSlots":1},"@takeFlashLoan_4004":{"entryPoint":9079,"id":4004,"parameterSlots":3,"returnSlots":0},"@toHexString_2322":{"entryPoint":13743,"id":2322,"parameterSlots":2,"returnSlots":1},"@withdrawAsset_3577":{"entryPoint":1288,"id":3577,"parameterSlots":1,"returnSlots":0},"@withdrawFromVault_3500":{"entryPoint":5180,"id":3500,"parameterSlots":2,"returnSlots":0},"abi_decode_array_address_dyn_calldata":{"entryPoint":16342,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_calldata":{"entryPoint":15730,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bytes_fromMemory":{"entryPoint":17833,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":15588,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address_fromMemory":{"entryPoint":18146,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":16630,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_uint256":{"entryPoint":15952,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_calldata_ptrt_uint256":{"entryPoint":15803,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr":{"entryPoint":16411,"id":null,"parameterSlots":2,"returnSlots":9},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":16699,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":15927,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":16005,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":15525,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IAddressProvider_$4138t_contract$_IGovernanceAddressProvider_$4203t_contract$_IPool_$628t_addresst_contract$_IDexAddressProvider_$4176":{"entryPoint":15617,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_contract$_IMIMO_$4223_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IVaultsCore_$4439_fromMemory":{"entryPoint":16992,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_contract$_IVaultsDataProvider_$4567_fromMemory":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_enum$_Operation_$2751t_bytes_memory_ptr":{"entryPoint":17198,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":16674,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_address_payablet_uint256t_bytes_memory_ptrt_uint256_fromMemory":{"entryPoint":17902,"id":null,"parameterSlots":2,"returnSlots":5},"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptrt_uint256":{"entryPoint":16053,"id":null,"parameterSlots":2,"returnSlots":8},"abi_decode_tuple_t_uint256t_addresst_uint256t_bytes_calldata_ptrt_uint256":{"entryPoint":16228,"id":null,"parameterSlots":2,"returnSlots":6},"abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256_fromMemory":{"entryPoint":18012,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_uint256t_uint256":{"entryPoint":16194,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_address":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_array_uint256_dyn":{"entryPoint":17417,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes":{"entryPoint":16885,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":16733,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":18193,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":17662,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_bytes_memory_ptr_t_uint8__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_bytes_memory_ptr_t_uint16__fromStack_reversed":{"entryPoint":17476,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_tuple_t_address_t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IAddressProvider_$4138__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IGovernanceAddressProvider_$4203__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_contract$_IPool_$628__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_enum$_Operation_$2751_t_bytes_memory_ptr__to_t_uint8_t_bytes_memory_ptr__fromStack_reversed":{"entryPoint":16929,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17791,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0e1675febfa7cad03c7b3c41f70e04f2b8b253e5d05a679d3dfd65a7f100ca98__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4103a63670b349a9676cf644fe9c35170cd4d1b9ec6099358c4cf84fece51732__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_985b8f506bc1b9daee5c456197edebf8bf9a5eb98683f22dba958debb0fdd634__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":17021,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed":{"entryPoint":16776,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_uint8":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"allocate_memory":{"entryPoint":17109,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_bytes":{"entryPoint":17158,"id":null,"parameterSlots":1,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":17393,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":18092,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":17810,"id":null,"parameterSlots":2,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":16841,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":18123,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":17371,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x21":{"entryPoint":16819,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":17349,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":17087,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_address":{"entryPoint":15567,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:26130:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"83:263:26","statements":[{"body":{"nodeType":"YulBlock","src":"129:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"138:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"141:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"131:6:26"},"nodeType":"YulFunctionCall","src":"131:12:26"},"nodeType":"YulExpressionStatement","src":"131:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"104:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"113:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"100:3:26"},"nodeType":"YulFunctionCall","src":"100:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"125:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"96:3:26"},"nodeType":"YulFunctionCall","src":"96:32:26"},"nodeType":"YulIf","src":"93:52:26"},{"nodeType":"YulVariableDeclaration","src":"154:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"180:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"167:12:26"},"nodeType":"YulFunctionCall","src":"167:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"158:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"300:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"309:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"312:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:26"},"nodeType":"YulFunctionCall","src":"302:12:26"},"nodeType":"YulExpressionStatement","src":"302:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"212:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"223:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"230:66:26","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"219:3:26"},"nodeType":"YulFunctionCall","src":"219:78:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"209:2:26"},"nodeType":"YulFunctionCall","src":"209:89:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"202:6:26"},"nodeType":"YulFunctionCall","src":"202:97:26"},"nodeType":"YulIf","src":"199:117:26"},{"nodeType":"YulAssignment","src":"325:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"335:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"325:6:26"}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"49:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"60:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"72:6:26","type":""}],"src":"14:332:26"},{"body":{"nodeType":"YulBlock","src":"446:92:26","statements":[{"nodeType":"YulAssignment","src":"456:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"468:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"479:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"464:3:26"},"nodeType":"YulFunctionCall","src":"464:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"456:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"498:9:26"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"523:6:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"516:6:26"},"nodeType":"YulFunctionCall","src":"516:14:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"509:6:26"},"nodeType":"YulFunctionCall","src":"509:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"491:6:26"},"nodeType":"YulFunctionCall","src":"491:41:26"},"nodeType":"YulExpressionStatement","src":"491:41:26"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"415:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"426:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"437:4:26","type":""}],"src":"351:187:26"},{"body":{"nodeType":"YulBlock","src":"588:109:26","statements":[{"body":{"nodeType":"YulBlock","src":"675:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"684:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"687:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"677:6:26"},"nodeType":"YulFunctionCall","src":"677:12:26"},"nodeType":"YulExpressionStatement","src":"677:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"611:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"622:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"629:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"618:3:26"},"nodeType":"YulFunctionCall","src":"618:54:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"608:2:26"},"nodeType":"YulFunctionCall","src":"608:65:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"601:6:26"},"nodeType":"YulFunctionCall","src":"601:73:26"},"nodeType":"YulIf","src":"598:93:26"}]},"name":"validator_revert_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"577:5:26","type":""}],"src":"543:154:26"},{"body":{"nodeType":"YulBlock","src":"772:177:26","statements":[{"body":{"nodeType":"YulBlock","src":"818:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"827:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"830:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"820:6:26"},"nodeType":"YulFunctionCall","src":"820:12:26"},"nodeType":"YulExpressionStatement","src":"820:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"793:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"802:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"789:3:26"},"nodeType":"YulFunctionCall","src":"789:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"814:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"785:3:26"},"nodeType":"YulFunctionCall","src":"785:32:26"},"nodeType":"YulIf","src":"782:52:26"},{"nodeType":"YulVariableDeclaration","src":"843:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"869:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"856:12:26"},"nodeType":"YulFunctionCall","src":"856:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"847:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"913:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"888:24:26"},"nodeType":"YulFunctionCall","src":"888:31:26"},"nodeType":"YulExpressionStatement","src":"888:31:26"},{"nodeType":"YulAssignment","src":"928:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"938:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"928:6:26"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"738:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"749:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"761:6:26","type":""}],"src":"702:247:26"},{"body":{"nodeType":"YulBlock","src":"1080:125:26","statements":[{"nodeType":"YulAssignment","src":"1090:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1102:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1113:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1098:3:26"},"nodeType":"YulFunctionCall","src":"1098:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1090:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1132:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1147:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"1155:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1143:3:26"},"nodeType":"YulFunctionCall","src":"1143:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1125:6:26"},"nodeType":"YulFunctionCall","src":"1125:74:26"},"nodeType":"YulExpressionStatement","src":"1125:74:26"}]},"name":"abi_encode_tuple_t_contract$_IAddressProvider_$4138__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1049:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1060:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1071:4:26","type":""}],"src":"954:251:26"},{"body":{"nodeType":"YulBlock","src":"1449:675:26","statements":[{"body":{"nodeType":"YulBlock","src":"1496:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1505:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1508:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1498:6:26"},"nodeType":"YulFunctionCall","src":"1498:12:26"},"nodeType":"YulExpressionStatement","src":"1498:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1470:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"1479:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1466:3:26"},"nodeType":"YulFunctionCall","src":"1466:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"1491:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1462:3:26"},"nodeType":"YulFunctionCall","src":"1462:33:26"},"nodeType":"YulIf","src":"1459:53:26"},{"nodeType":"YulVariableDeclaration","src":"1521:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1547:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1534:12:26"},"nodeType":"YulFunctionCall","src":"1534:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1525:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1591:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1566:24:26"},"nodeType":"YulFunctionCall","src":"1566:31:26"},"nodeType":"YulExpressionStatement","src":"1566:31:26"},{"nodeType":"YulAssignment","src":"1606:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"1616:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1606:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1630:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1662:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1673:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1658:3:26"},"nodeType":"YulFunctionCall","src":"1658:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1645:12:26"},"nodeType":"YulFunctionCall","src":"1645:32:26"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1634:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1711:7:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1686:24:26"},"nodeType":"YulFunctionCall","src":"1686:33:26"},"nodeType":"YulExpressionStatement","src":"1686:33:26"},{"nodeType":"YulAssignment","src":"1728:17:26","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1738:7:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1728:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1754:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1786:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1797:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1782:3:26"},"nodeType":"YulFunctionCall","src":"1782:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1769:12:26"},"nodeType":"YulFunctionCall","src":"1769:32:26"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"1758:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"1835:7:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1810:24:26"},"nodeType":"YulFunctionCall","src":"1810:33:26"},"nodeType":"YulExpressionStatement","src":"1810:33:26"},{"nodeType":"YulAssignment","src":"1852:17:26","value":{"name":"value_2","nodeType":"YulIdentifier","src":"1862:7:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1852:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"1878:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1910:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1921:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1906:3:26"},"nodeType":"YulFunctionCall","src":"1906:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1893:12:26"},"nodeType":"YulFunctionCall","src":"1893:32:26"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"1882:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"1959:7:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"1934:24:26"},"nodeType":"YulFunctionCall","src":"1934:33:26"},"nodeType":"YulExpressionStatement","src":"1934:33:26"},{"nodeType":"YulAssignment","src":"1976:17:26","value":{"name":"value_3","nodeType":"YulIdentifier","src":"1986:7:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"1976:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"2002:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2034:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2045:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2030:3:26"},"nodeType":"YulFunctionCall","src":"2030:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2017:12:26"},"nodeType":"YulFunctionCall","src":"2017:33:26"},"variables":[{"name":"value_4","nodeType":"YulTypedName","src":"2006:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_4","nodeType":"YulIdentifier","src":"2084:7:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2059:24:26"},"nodeType":"YulFunctionCall","src":"2059:33:26"},"nodeType":"YulExpressionStatement","src":"2059:33:26"},{"nodeType":"YulAssignment","src":"2101:17:26","value":{"name":"value_4","nodeType":"YulIdentifier","src":"2111:7:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2101:6:26"}]}]},"name":"abi_decode_tuple_t_contract$_IAddressProvider_$4138t_contract$_IGovernanceAddressProvider_$4203t_contract$_IPool_$628t_addresst_contract$_IDexAddressProvider_$4176","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1383:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1394:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1406:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1414:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1422:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"1430:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"1438:6:26","type":""}],"src":"1210:914:26"},{"body":{"nodeType":"YulBlock","src":"2201:275:26","statements":[{"body":{"nodeType":"YulBlock","src":"2250:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2259:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2262:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2252:6:26"},"nodeType":"YulFunctionCall","src":"2252:12:26"},"nodeType":"YulExpressionStatement","src":"2252:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2229:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2237:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2225:3:26"},"nodeType":"YulFunctionCall","src":"2225:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"2244:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2221:3:26"},"nodeType":"YulFunctionCall","src":"2221:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2214:6:26"},"nodeType":"YulFunctionCall","src":"2214:35:26"},"nodeType":"YulIf","src":"2211:55:26"},{"nodeType":"YulAssignment","src":"2275:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2298:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2285:12:26"},"nodeType":"YulFunctionCall","src":"2285:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"2275:6:26"}]},{"body":{"nodeType":"YulBlock","src":"2348:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2357:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2360:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2350:6:26"},"nodeType":"YulFunctionCall","src":"2350:12:26"},"nodeType":"YulExpressionStatement","src":"2350:12:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2320:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2328:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2317:2:26"},"nodeType":"YulFunctionCall","src":"2317:30:26"},"nodeType":"YulIf","src":"2314:50:26"},{"nodeType":"YulAssignment","src":"2373:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2389:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2397:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2385:3:26"},"nodeType":"YulFunctionCall","src":"2385:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"2373:8:26"}]},{"body":{"nodeType":"YulBlock","src":"2454:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2463:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2466:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2456:6:26"},"nodeType":"YulFunctionCall","src":"2456:12:26"},"nodeType":"YulExpressionStatement","src":"2456:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2425:6:26"},{"name":"length","nodeType":"YulIdentifier","src":"2433:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2421:3:26"},"nodeType":"YulFunctionCall","src":"2421:19:26"},{"kind":"number","nodeType":"YulLiteral","src":"2442:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2417:3:26"},"nodeType":"YulFunctionCall","src":"2417:30:26"},{"name":"end","nodeType":"YulIdentifier","src":"2449:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2414:2:26"},"nodeType":"YulFunctionCall","src":"2414:39:26"},"nodeType":"YulIf","src":"2411:59:26"}]},"name":"abi_decode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2164:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"2172:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"2180:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"2190:6:26","type":""}],"src":"2129:347:26"},{"body":{"nodeType":"YulBlock","src":"2655:645:26","statements":[{"body":{"nodeType":"YulBlock","src":"2702:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2711:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2714:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2704:6:26"},"nodeType":"YulFunctionCall","src":"2704:12:26"},"nodeType":"YulExpressionStatement","src":"2704:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2676:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"2685:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2672:3:26"},"nodeType":"YulFunctionCall","src":"2672:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"2697:3:26","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2668:3:26"},"nodeType":"YulFunctionCall","src":"2668:33:26"},"nodeType":"YulIf","src":"2665:53:26"},{"nodeType":"YulVariableDeclaration","src":"2727:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2753:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2740:12:26"},"nodeType":"YulFunctionCall","src":"2740:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2731:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2797:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"2772:24:26"},"nodeType":"YulFunctionCall","src":"2772:31:26"},"nodeType":"YulExpressionStatement","src":"2772:31:26"},{"nodeType":"YulAssignment","src":"2812:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"2822:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2812:6:26"}]},{"nodeType":"YulAssignment","src":"2836:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2863:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2874:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2859:3:26"},"nodeType":"YulFunctionCall","src":"2859:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2846:12:26"},"nodeType":"YulFunctionCall","src":"2846:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2836:6:26"}]},{"nodeType":"YulAssignment","src":"2887:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2914:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2925:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2910:3:26"},"nodeType":"YulFunctionCall","src":"2910:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2897:12:26"},"nodeType":"YulFunctionCall","src":"2897:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2887:6:26"}]},{"nodeType":"YulAssignment","src":"2938:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2965:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2976:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2961:3:26"},"nodeType":"YulFunctionCall","src":"2961:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2948:12:26"},"nodeType":"YulFunctionCall","src":"2948:32:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2938:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"2989:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3020:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3031:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3016:3:26"},"nodeType":"YulFunctionCall","src":"3016:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3003:12:26"},"nodeType":"YulFunctionCall","src":"3003:33:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2993:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"3079:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3088:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3091:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3081:6:26"},"nodeType":"YulFunctionCall","src":"3081:12:26"},"nodeType":"YulExpressionStatement","src":"3081:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3051:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"3059:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3048:2:26"},"nodeType":"YulFunctionCall","src":"3048:30:26"},"nodeType":"YulIf","src":"3045:50:26"},{"nodeType":"YulVariableDeclaration","src":"3104:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3160:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"3171:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3156:3:26"},"nodeType":"YulFunctionCall","src":"3156:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3180:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"3130:25:26"},"nodeType":"YulFunctionCall","src":"3130:58:26"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"3108:8:26","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"3118:8:26","type":""}]},{"nodeType":"YulAssignment","src":"3197:18:26","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"3207:8:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"3197:6:26"}]},{"nodeType":"YulAssignment","src":"3224:18:26","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"3234:8:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"3224:6:26"}]},{"nodeType":"YulAssignment","src":"3251:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3278:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3289:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3274:3:26"},"nodeType":"YulFunctionCall","src":"3274:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3261:12:26"},"nodeType":"YulFunctionCall","src":"3261:33:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3251:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2573:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2584:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2596:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2604:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2612:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2620:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2628:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2636:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2644:6:26","type":""}],"src":"2481:819:26"},{"body":{"nodeType":"YulBlock","src":"3375:110:26","statements":[{"body":{"nodeType":"YulBlock","src":"3421:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3430:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3433:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3423:6:26"},"nodeType":"YulFunctionCall","src":"3423:12:26"},"nodeType":"YulExpressionStatement","src":"3423:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3396:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3405:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3392:3:26"},"nodeType":"YulFunctionCall","src":"3392:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3417:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3388:3:26"},"nodeType":"YulFunctionCall","src":"3388:32:26"},"nodeType":"YulIf","src":"3385:52:26"},{"nodeType":"YulAssignment","src":"3446:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3469:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3456:12:26"},"nodeType":"YulFunctionCall","src":"3456:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3446:6:26"}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3341:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3352:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3364:6:26","type":""}],"src":"3305:180:26"},{"body":{"nodeType":"YulBlock","src":"3591:76:26","statements":[{"nodeType":"YulAssignment","src":"3601:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3613:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3624:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3609:3:26"},"nodeType":"YulFunctionCall","src":"3609:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3601:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3643:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"3654:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3636:6:26"},"nodeType":"YulFunctionCall","src":"3636:25:26"},"nodeType":"YulExpressionStatement","src":"3636:25:26"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3560:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3571:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3582:4:26","type":""}],"src":"3490:177:26"},{"body":{"nodeType":"YulBlock","src":"3776:279:26","statements":[{"body":{"nodeType":"YulBlock","src":"3822:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3831:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3834:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3824:6:26"},"nodeType":"YulFunctionCall","src":"3824:12:26"},"nodeType":"YulExpressionStatement","src":"3824:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3797:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"3806:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3793:3:26"},"nodeType":"YulFunctionCall","src":"3793:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"3818:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3789:3:26"},"nodeType":"YulFunctionCall","src":"3789:32:26"},"nodeType":"YulIf","src":"3786:52:26"},{"nodeType":"YulVariableDeclaration","src":"3847:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3873:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3860:12:26"},"nodeType":"YulFunctionCall","src":"3860:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3851:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3917:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"3892:24:26"},"nodeType":"YulFunctionCall","src":"3892:31:26"},"nodeType":"YulExpressionStatement","src":"3892:31:26"},{"nodeType":"YulAssignment","src":"3932:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"3942:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3932:6:26"}]},{"nodeType":"YulAssignment","src":"3956:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3983:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"3994:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3979:3:26"},"nodeType":"YulFunctionCall","src":"3979:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3966:12:26"},"nodeType":"YulFunctionCall","src":"3966:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3956:6:26"}]},{"nodeType":"YulAssignment","src":"4007:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4034:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4045:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4030:3:26"},"nodeType":"YulFunctionCall","src":"4030:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4017:12:26"},"nodeType":"YulFunctionCall","src":"4017:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4007:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3726:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3737:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3749:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3757:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3765:6:26","type":""}],"src":"3672:383:26"},{"body":{"nodeType":"YulBlock","src":"4147:228:26","statements":[{"body":{"nodeType":"YulBlock","src":"4193:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4202:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4205:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4195:6:26"},"nodeType":"YulFunctionCall","src":"4195:12:26"},"nodeType":"YulExpressionStatement","src":"4195:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4168:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4177:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4164:3:26"},"nodeType":"YulFunctionCall","src":"4164:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4189:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4160:3:26"},"nodeType":"YulFunctionCall","src":"4160:32:26"},"nodeType":"YulIf","src":"4157:52:26"},{"nodeType":"YulAssignment","src":"4218:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4241:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4228:12:26"},"nodeType":"YulFunctionCall","src":"4228:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4218:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"4260:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4290:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4301:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4286:3:26"},"nodeType":"YulFunctionCall","src":"4286:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4273:12:26"},"nodeType":"YulFunctionCall","src":"4273:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4264:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4339:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4314:24:26"},"nodeType":"YulFunctionCall","src":"4314:31:26"},"nodeType":"YulExpressionStatement","src":"4314:31:26"},{"nodeType":"YulAssignment","src":"4354:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"4364:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4354:6:26"}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4105:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4116:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4128:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4136:6:26","type":""}],"src":"4060:315:26"},{"body":{"nodeType":"YulBlock","src":"4571:770:26","statements":[{"body":{"nodeType":"YulBlock","src":"4618:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4627:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4630:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4620:6:26"},"nodeType":"YulFunctionCall","src":"4620:12:26"},"nodeType":"YulExpressionStatement","src":"4620:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4592:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"4601:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4588:3:26"},"nodeType":"YulFunctionCall","src":"4588:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"4613:3:26","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4584:3:26"},"nodeType":"YulFunctionCall","src":"4584:33:26"},"nodeType":"YulIf","src":"4581:53:26"},{"nodeType":"YulAssignment","src":"4643:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4666:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4653:12:26"},"nodeType":"YulFunctionCall","src":"4653:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4643:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"4685:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4715:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4726:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4711:3:26"},"nodeType":"YulFunctionCall","src":"4711:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4698:12:26"},"nodeType":"YulFunctionCall","src":"4698:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4689:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4764:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4739:24:26"},"nodeType":"YulFunctionCall","src":"4739:31:26"},"nodeType":"YulExpressionStatement","src":"4739:31:26"},{"nodeType":"YulAssignment","src":"4779:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"4789:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4779:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"4803:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4835:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4846:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4831:3:26"},"nodeType":"YulFunctionCall","src":"4831:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4818:12:26"},"nodeType":"YulFunctionCall","src":"4818:32:26"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"4807:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"4884:7:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"4859:24:26"},"nodeType":"YulFunctionCall","src":"4859:33:26"},"nodeType":"YulExpressionStatement","src":"4859:33:26"},{"nodeType":"YulAssignment","src":"4901:17:26","value":{"name":"value_1","nodeType":"YulIdentifier","src":"4911:7:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4901:6:26"}]},{"nodeType":"YulAssignment","src":"4927:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4954:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"4965:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4950:3:26"},"nodeType":"YulFunctionCall","src":"4950:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4937:12:26"},"nodeType":"YulFunctionCall","src":"4937:32:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4927:6:26"}]},{"nodeType":"YulAssignment","src":"4978:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5005:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5016:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5001:3:26"},"nodeType":"YulFunctionCall","src":"5001:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4988:12:26"},"nodeType":"YulFunctionCall","src":"4988:33:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"4978:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"5030:47:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5061:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5072:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5057:3:26"},"nodeType":"YulFunctionCall","src":"5057:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5044:12:26"},"nodeType":"YulFunctionCall","src":"5044:33:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5034:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"5120:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5129:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5132:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5122:6:26"},"nodeType":"YulFunctionCall","src":"5122:12:26"},"nodeType":"YulExpressionStatement","src":"5122:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5092:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"5100:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5089:2:26"},"nodeType":"YulFunctionCall","src":"5089:30:26"},"nodeType":"YulIf","src":"5086:50:26"},{"nodeType":"YulVariableDeclaration","src":"5145:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5201:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"5212:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5197:3:26"},"nodeType":"YulFunctionCall","src":"5197:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5221:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"5171:25:26"},"nodeType":"YulFunctionCall","src":"5171:58:26"},"variables":[{"name":"value5_1","nodeType":"YulTypedName","src":"5149:8:26","type":""},{"name":"value6_1","nodeType":"YulTypedName","src":"5159:8:26","type":""}]},{"nodeType":"YulAssignment","src":"5238:18:26","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"5248:8:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"5238:6:26"}]},{"nodeType":"YulAssignment","src":"5265:18:26","value":{"name":"value6_1","nodeType":"YulIdentifier","src":"5275:8:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"5265:6:26"}]},{"nodeType":"YulAssignment","src":"5292:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5319:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5330:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5315:3:26"},"nodeType":"YulFunctionCall","src":"5315:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5302:12:26"},"nodeType":"YulFunctionCall","src":"5302:33:26"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"5292:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4481:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4492:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4504:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4512:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4520:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4528:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"4536:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"4544:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"4552:6:26","type":""},{"name":"value7","nodeType":"YulTypedName","src":"4560:6:26","type":""}],"src":"4380:961:26"},{"body":{"nodeType":"YulBlock","src":"5433:161:26","statements":[{"body":{"nodeType":"YulBlock","src":"5479:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5488:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5491:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5481:6:26"},"nodeType":"YulFunctionCall","src":"5481:12:26"},"nodeType":"YulExpressionStatement","src":"5481:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5454:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5463:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5450:3:26"},"nodeType":"YulFunctionCall","src":"5450:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5475:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5446:3:26"},"nodeType":"YulFunctionCall","src":"5446:32:26"},"nodeType":"YulIf","src":"5443:52:26"},{"nodeType":"YulAssignment","src":"5504:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5527:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5514:12:26"},"nodeType":"YulFunctionCall","src":"5514:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5504:6:26"}]},{"nodeType":"YulAssignment","src":"5546:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5573:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5584:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5569:3:26"},"nodeType":"YulFunctionCall","src":"5569:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5556:12:26"},"nodeType":"YulFunctionCall","src":"5556:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5546:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5391:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5402:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5414:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5422:6:26","type":""}],"src":"5346:248:26"},{"body":{"nodeType":"YulBlock","src":"5756:593:26","statements":[{"body":{"nodeType":"YulBlock","src":"5803:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5812:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5815:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5805:6:26"},"nodeType":"YulFunctionCall","src":"5805:12:26"},"nodeType":"YulExpressionStatement","src":"5805:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5777:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"5786:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5773:3:26"},"nodeType":"YulFunctionCall","src":"5773:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"5798:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5769:3:26"},"nodeType":"YulFunctionCall","src":"5769:33:26"},"nodeType":"YulIf","src":"5766:53:26"},{"nodeType":"YulAssignment","src":"5828:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5851:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5838:12:26"},"nodeType":"YulFunctionCall","src":"5838:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5828:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"5870:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5900:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"5911:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5896:3:26"},"nodeType":"YulFunctionCall","src":"5896:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5883:12:26"},"nodeType":"YulFunctionCall","src":"5883:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"5874:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5949:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"5924:24:26"},"nodeType":"YulFunctionCall","src":"5924:31:26"},"nodeType":"YulExpressionStatement","src":"5924:31:26"},{"nodeType":"YulAssignment","src":"5964:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"5974:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5964:6:26"}]},{"nodeType":"YulAssignment","src":"5988:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6015:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6026:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6011:3:26"},"nodeType":"YulFunctionCall","src":"6011:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5998:12:26"},"nodeType":"YulFunctionCall","src":"5998:32:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5988:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"6039:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6070:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6081:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6066:3:26"},"nodeType":"YulFunctionCall","src":"6066:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6053:12:26"},"nodeType":"YulFunctionCall","src":"6053:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6043:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"6128:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6137:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6140:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6130:6:26"},"nodeType":"YulFunctionCall","src":"6130:12:26"},"nodeType":"YulExpressionStatement","src":"6130:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6100:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6108:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6097:2:26"},"nodeType":"YulFunctionCall","src":"6097:30:26"},"nodeType":"YulIf","src":"6094:50:26"},{"nodeType":"YulVariableDeclaration","src":"6153:84:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6209:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"6220:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6205:3:26"},"nodeType":"YulFunctionCall","src":"6205:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6229:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"6179:25:26"},"nodeType":"YulFunctionCall","src":"6179:58:26"},"variables":[{"name":"value3_1","nodeType":"YulTypedName","src":"6157:8:26","type":""},{"name":"value4_1","nodeType":"YulTypedName","src":"6167:8:26","type":""}]},{"nodeType":"YulAssignment","src":"6246:18:26","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"6256:8:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"6246:6:26"}]},{"nodeType":"YulAssignment","src":"6273:18:26","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"6283:8:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"6273:6:26"}]},{"nodeType":"YulAssignment","src":"6300:43:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6327:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"6338:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6323:3:26"},"nodeType":"YulFunctionCall","src":"6323:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6310:12:26"},"nodeType":"YulFunctionCall","src":"6310:33:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"6300:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_addresst_uint256t_bytes_calldata_ptrt_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5682:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5693:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5705:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5713:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5721:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5729:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"5737:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"5745:6:26","type":""}],"src":"5599:750:26"},{"body":{"nodeType":"YulBlock","src":"6424:110:26","statements":[{"body":{"nodeType":"YulBlock","src":"6470:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6479:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6482:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6472:6:26"},"nodeType":"YulFunctionCall","src":"6472:12:26"},"nodeType":"YulExpressionStatement","src":"6472:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6445:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"6454:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6441:3:26"},"nodeType":"YulFunctionCall","src":"6441:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"6466:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6437:3:26"},"nodeType":"YulFunctionCall","src":"6437:32:26"},"nodeType":"YulIf","src":"6434:52:26"},{"nodeType":"YulAssignment","src":"6495:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6518:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6505:12:26"},"nodeType":"YulFunctionCall","src":"6505:23:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6495:6:26"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6390:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6401:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6413:6:26","type":""}],"src":"6354:180:26"},{"body":{"nodeType":"YulBlock","src":"6623:283:26","statements":[{"body":{"nodeType":"YulBlock","src":"6672:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6681:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6684:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6674:6:26"},"nodeType":"YulFunctionCall","src":"6674:12:26"},"nodeType":"YulExpressionStatement","src":"6674:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6651:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6659:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6647:3:26"},"nodeType":"YulFunctionCall","src":"6647:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"6666:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6643:3:26"},"nodeType":"YulFunctionCall","src":"6643:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6636:6:26"},"nodeType":"YulFunctionCall","src":"6636:35:26"},"nodeType":"YulIf","src":"6633:55:26"},{"nodeType":"YulAssignment","src":"6697:30:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6720:6:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6707:12:26"},"nodeType":"YulFunctionCall","src":"6707:20:26"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6697:6:26"}]},{"body":{"nodeType":"YulBlock","src":"6770:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6779:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6782:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6772:6:26"},"nodeType":"YulFunctionCall","src":"6772:12:26"},"nodeType":"YulExpressionStatement","src":"6772:12:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6742:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6750:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6739:2:26"},"nodeType":"YulFunctionCall","src":"6739:30:26"},"nodeType":"YulIf","src":"6736:50:26"},{"nodeType":"YulAssignment","src":"6795:29:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6811:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"6819:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6807:3:26"},"nodeType":"YulFunctionCall","src":"6807:17:26"},"variableNames":[{"name":"arrayPos","nodeType":"YulIdentifier","src":"6795:8:26"}]},{"body":{"nodeType":"YulBlock","src":"6884:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6893:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6896:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6886:6:26"},"nodeType":"YulFunctionCall","src":"6886:12:26"},"nodeType":"YulExpressionStatement","src":"6886:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6847:6:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6859:1:26","type":"","value":"5"},{"name":"length","nodeType":"YulIdentifier","src":"6862:6:26"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6855:3:26"},"nodeType":"YulFunctionCall","src":"6855:14:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6843:3:26"},"nodeType":"YulFunctionCall","src":"6843:27:26"},{"kind":"number","nodeType":"YulLiteral","src":"6872:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6839:3:26"},"nodeType":"YulFunctionCall","src":"6839:38:26"},{"name":"end","nodeType":"YulIdentifier","src":"6879:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6836:2:26"},"nodeType":"YulFunctionCall","src":"6836:47:26"},"nodeType":"YulIf","src":"6833:67:26"}]},"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6586:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"6594:3:26","type":""}],"returnVariables":[{"name":"arrayPos","nodeType":"YulTypedName","src":"6602:8:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"6612:6:26","type":""}],"src":"6539:367:26"},{"body":{"nodeType":"YulBlock","src":"7173:1250:26","statements":[{"body":{"nodeType":"YulBlock","src":"7220:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7229:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7232:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7222:6:26"},"nodeType":"YulFunctionCall","src":"7222:12:26"},"nodeType":"YulExpressionStatement","src":"7222:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7194:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"7203:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7190:3:26"},"nodeType":"YulFunctionCall","src":"7190:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"7215:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7186:3:26"},"nodeType":"YulFunctionCall","src":"7186:33:26"},"nodeType":"YulIf","src":"7183:53:26"},{"nodeType":"YulVariableDeclaration","src":"7245:37:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7272:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7259:12:26"},"nodeType":"YulFunctionCall","src":"7259:23:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7249:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"7291:28:26","value":{"kind":"number","nodeType":"YulLiteral","src":"7301:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7295:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7346:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7355:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7358:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7348:6:26"},"nodeType":"YulFunctionCall","src":"7348:12:26"},"nodeType":"YulExpressionStatement","src":"7348:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7334:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"7342:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7331:2:26"},"nodeType":"YulFunctionCall","src":"7331:14:26"},"nodeType":"YulIf","src":"7328:34:26"},{"nodeType":"YulVariableDeclaration","src":"7371:96:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7439:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"7450:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7435:3:26"},"nodeType":"YulFunctionCall","src":"7435:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7459:7:26"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"7397:37:26"},"nodeType":"YulFunctionCall","src":"7397:70:26"},"variables":[{"name":"value0_1","nodeType":"YulTypedName","src":"7375:8:26","type":""},{"name":"value1_1","nodeType":"YulTypedName","src":"7385:8:26","type":""}]},{"nodeType":"YulAssignment","src":"7476:18:26","value":{"name":"value0_1","nodeType":"YulIdentifier","src":"7486:8:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7476:6:26"}]},{"nodeType":"YulAssignment","src":"7503:18:26","value":{"name":"value1_1","nodeType":"YulIdentifier","src":"7513:8:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7503:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7530:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7563:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7574:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7559:3:26"},"nodeType":"YulFunctionCall","src":"7559:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7546:12:26"},"nodeType":"YulFunctionCall","src":"7546:32:26"},"variables":[{"name":"offset_1","nodeType":"YulTypedName","src":"7534:8:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7607:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7616:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7619:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7609:6:26"},"nodeType":"YulFunctionCall","src":"7609:12:26"},"nodeType":"YulExpressionStatement","src":"7609:12:26"}]},"condition":{"arguments":[{"name":"offset_1","nodeType":"YulIdentifier","src":"7593:8:26"},{"name":"_1","nodeType":"YulIdentifier","src":"7603:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7590:2:26"},"nodeType":"YulFunctionCall","src":"7590:16:26"},"nodeType":"YulIf","src":"7587:36:26"},{"nodeType":"YulVariableDeclaration","src":"7632:98:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7700:9:26"},{"name":"offset_1","nodeType":"YulIdentifier","src":"7711:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7696:3:26"},"nodeType":"YulFunctionCall","src":"7696:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7722:7:26"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"7658:37:26"},"nodeType":"YulFunctionCall","src":"7658:72:26"},"variables":[{"name":"value2_1","nodeType":"YulTypedName","src":"7636:8:26","type":""},{"name":"value3_1","nodeType":"YulTypedName","src":"7646:8:26","type":""}]},{"nodeType":"YulAssignment","src":"7739:18:26","value":{"name":"value2_1","nodeType":"YulIdentifier","src":"7749:8:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7739:6:26"}]},{"nodeType":"YulAssignment","src":"7766:18:26","value":{"name":"value3_1","nodeType":"YulIdentifier","src":"7776:8:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7766:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"7793:48:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7826:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"7837:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7822:3:26"},"nodeType":"YulFunctionCall","src":"7822:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7809:12:26"},"nodeType":"YulFunctionCall","src":"7809:32:26"},"variables":[{"name":"offset_2","nodeType":"YulTypedName","src":"7797:8:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"7870:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7879:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"7882:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7872:6:26"},"nodeType":"YulFunctionCall","src":"7872:12:26"},"nodeType":"YulExpressionStatement","src":"7872:12:26"}]},"condition":{"arguments":[{"name":"offset_2","nodeType":"YulIdentifier","src":"7856:8:26"},{"name":"_1","nodeType":"YulIdentifier","src":"7866:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7853:2:26"},"nodeType":"YulFunctionCall","src":"7853:16:26"},"nodeType":"YulIf","src":"7850:36:26"},{"nodeType":"YulVariableDeclaration","src":"7895:98:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7963:9:26"},{"name":"offset_2","nodeType":"YulIdentifier","src":"7974:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7959:3:26"},"nodeType":"YulFunctionCall","src":"7959:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7985:7:26"}],"functionName":{"name":"abi_decode_array_address_dyn_calldata","nodeType":"YulIdentifier","src":"7921:37:26"},"nodeType":"YulFunctionCall","src":"7921:72:26"},"variables":[{"name":"value4_1","nodeType":"YulTypedName","src":"7899:8:26","type":""},{"name":"value5_1","nodeType":"YulTypedName","src":"7909:8:26","type":""}]},{"nodeType":"YulAssignment","src":"8002:18:26","value":{"name":"value4_1","nodeType":"YulIdentifier","src":"8012:8:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"8002:6:26"}]},{"nodeType":"YulAssignment","src":"8029:18:26","value":{"name":"value5_1","nodeType":"YulIdentifier","src":"8039:8:26"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"8029:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"8056:45:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8086:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8097:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8082:3:26"},"nodeType":"YulFunctionCall","src":"8082:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8069:12:26"},"nodeType":"YulFunctionCall","src":"8069:32:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8060:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8135:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8110:24:26"},"nodeType":"YulFunctionCall","src":"8110:31:26"},"nodeType":"YulExpressionStatement","src":"8110:31:26"},{"nodeType":"YulAssignment","src":"8150:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"8160:5:26"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"8150:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"8174:49:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8207:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8218:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8203:3:26"},"nodeType":"YulFunctionCall","src":"8203:19:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8190:12:26"},"nodeType":"YulFunctionCall","src":"8190:33:26"},"variables":[{"name":"offset_3","nodeType":"YulTypedName","src":"8178:8:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"8252:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8261:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8264:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8254:6:26"},"nodeType":"YulFunctionCall","src":"8254:12:26"},"nodeType":"YulExpressionStatement","src":"8254:12:26"}]},"condition":{"arguments":[{"name":"offset_3","nodeType":"YulIdentifier","src":"8238:8:26"},{"name":"_1","nodeType":"YulIdentifier","src":"8248:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8235:2:26"},"nodeType":"YulFunctionCall","src":"8235:16:26"},"nodeType":"YulIf","src":"8232:36:26"},{"nodeType":"YulVariableDeclaration","src":"8277:86:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8333:9:26"},{"name":"offset_3","nodeType":"YulIdentifier","src":"8344:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:26"},"nodeType":"YulFunctionCall","src":"8329:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8355:7:26"}],"functionName":{"name":"abi_decode_bytes_calldata","nodeType":"YulIdentifier","src":"8303:25:26"},"nodeType":"YulFunctionCall","src":"8303:60:26"},"variables":[{"name":"value7_1","nodeType":"YulTypedName","src":"8281:8:26","type":""},{"name":"value8_1","nodeType":"YulTypedName","src":"8291:8:26","type":""}]},{"nodeType":"YulAssignment","src":"8372:18:26","value":{"name":"value7_1","nodeType":"YulIdentifier","src":"8382:8:26"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"8372:6:26"}]},{"nodeType":"YulAssignment","src":"8399:18:26","value":{"name":"value8_1","nodeType":"YulIdentifier","src":"8409:8:26"},"variableNames":[{"name":"value8","nodeType":"YulIdentifier","src":"8399:6:26"}]}]},"name":"abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7075:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7086:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7098:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7106:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7114:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"7122:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"7130:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"7138:6:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"7146:6:26","type":""},{"name":"value7","nodeType":"YulTypedName","src":"7154:6:26","type":""},{"name":"value8","nodeType":"YulTypedName","src":"7162:6:26","type":""}],"src":"6911:1512:26"},{"body":{"nodeType":"YulBlock","src":"8515:228:26","statements":[{"body":{"nodeType":"YulBlock","src":"8561:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8570:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8573:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8563:6:26"},"nodeType":"YulFunctionCall","src":"8563:12:26"},"nodeType":"YulExpressionStatement","src":"8563:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"8536:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"8545:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8532:3:26"},"nodeType":"YulFunctionCall","src":"8532:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"8528:3:26"},"nodeType":"YulFunctionCall","src":"8528:32:26"},"nodeType":"YulIf","src":"8525:52:26"},{"nodeType":"YulVariableDeclaration","src":"8586:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8612:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8599:12:26"},"nodeType":"YulFunctionCall","src":"8599:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"8590:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8656:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"8631:24:26"},"nodeType":"YulFunctionCall","src":"8631:31:26"},"nodeType":"YulExpressionStatement","src":"8631:31:26"},{"nodeType":"YulAssignment","src":"8671:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"8681:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8671:6:26"}]},{"nodeType":"YulAssignment","src":"8695:42:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8722:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8733:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8718:3:26"},"nodeType":"YulFunctionCall","src":"8718:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"8705:12:26"},"nodeType":"YulFunctionCall","src":"8705:32:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8695:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8473:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"8484:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"8496:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"8504:6:26","type":""}],"src":"8428:315:26"},{"body":{"nodeType":"YulBlock","src":"8862:125:26","statements":[{"nodeType":"YulAssignment","src":"8872:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8884:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"8895:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8880:3:26"},"nodeType":"YulFunctionCall","src":"8880:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8872:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8914:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8929:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"8937:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8925:3:26"},"nodeType":"YulFunctionCall","src":"8925:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8907:6:26"},"nodeType":"YulFunctionCall","src":"8907:74:26"},"nodeType":"YulExpressionStatement","src":"8907:74:26"}]},"name":"abi_encode_tuple_t_contract$_IPool_$628__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8831:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8842:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8853:4:26","type":""}],"src":"8748:239:26"},{"body":{"nodeType":"YulBlock","src":"9128:125:26","statements":[{"nodeType":"YulAssignment","src":"9138:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9150:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9161:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9146:3:26"},"nodeType":"YulFunctionCall","src":"9146:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9138:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9180:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9195:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9203:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9191:3:26"},"nodeType":"YulFunctionCall","src":"9191:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9173:6:26"},"nodeType":"YulFunctionCall","src":"9173:74:26"},"nodeType":"YulExpressionStatement","src":"9173:74:26"}]},"name":"abi_encode_tuple_t_contract$_IGovernanceAddressProvider_$4203__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9097:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9108:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9119:4:26","type":""}],"src":"8992:261:26"},{"body":{"nodeType":"YulBlock","src":"9432:154:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9449:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9460:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9442:6:26"},"nodeType":"YulFunctionCall","src":"9442:21:26"},"nodeType":"YulExpressionStatement","src":"9442:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9483:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9494:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9479:3:26"},"nodeType":"YulFunctionCall","src":"9479:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"9499:1:26","type":"","value":"5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9472:6:26"},"nodeType":"YulFunctionCall","src":"9472:29:26"},"nodeType":"YulExpressionStatement","src":"9472:29:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9521:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9532:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9517:3:26"},"nodeType":"YulFunctionCall","src":"9517:18:26"},{"hexValue":"5356303031","kind":"string","nodeType":"YulLiteral","src":"9537:7:26","type":"","value":"SV001"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9510:6:26"},"nodeType":"YulFunctionCall","src":"9510:35:26"},"nodeType":"YulExpressionStatement","src":"9510:35:26"},{"nodeType":"YulAssignment","src":"9554:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9566:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9577:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9562:3:26"},"nodeType":"YulFunctionCall","src":"9562:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9554:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_985b8f506bc1b9daee5c456197edebf8bf9a5eb98683f22dba958debb0fdd634__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9409:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9423:4:26","type":""}],"src":"9258:328:26"},{"body":{"nodeType":"YulBlock","src":"9635:83:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9652:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9661:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"9668:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9657:3:26"},"nodeType":"YulFunctionCall","src":"9657:54:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9645:6:26"},"nodeType":"YulFunctionCall","src":"9645:67:26"},"nodeType":"YulExpressionStatement","src":"9645:67:26"}]},"name":"abi_encode_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"9619:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"9626:3:26","type":""}],"src":"9591:127:26"},{"body":{"nodeType":"YulBlock","src":"9824:125:26","statements":[{"nodeType":"YulAssignment","src":"9834:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9846:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"9857:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9842:3:26"},"nodeType":"YulFunctionCall","src":"9842:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9834:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9876:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"9891:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"9899:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"9887:3:26"},"nodeType":"YulFunctionCall","src":"9887:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9869:6:26"},"nodeType":"YulFunctionCall","src":"9869:74:26"},"nodeType":"YulExpressionStatement","src":"9869:74:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9793:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"9804:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9815:4:26","type":""}],"src":"9723:226:26"},{"body":{"nodeType":"YulBlock","src":"10035:103:26","statements":[{"body":{"nodeType":"YulBlock","src":"10081:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10090:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10093:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10083:6:26"},"nodeType":"YulFunctionCall","src":"10083:12:26"},"nodeType":"YulExpressionStatement","src":"10083:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10056:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10065:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10052:3:26"},"nodeType":"YulFunctionCall","src":"10052:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10077:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10048:3:26"},"nodeType":"YulFunctionCall","src":"10048:32:26"},"nodeType":"YulIf","src":"10045:52:26"},{"nodeType":"YulAssignment","src":"10106:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10122:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10116:5:26"},"nodeType":"YulFunctionCall","src":"10116:16:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10106:6:26"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10001:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10012:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10024:6:26","type":""}],"src":"9954:184:26"},{"body":{"nodeType":"YulBlock","src":"10272:168:26","statements":[{"nodeType":"YulAssignment","src":"10282:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10294:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10305:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10290:3:26"},"nodeType":"YulFunctionCall","src":"10290:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10282:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10324:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10339:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"10347:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"10335:3:26"},"nodeType":"YulFunctionCall","src":"10335:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10317:6:26"},"nodeType":"YulFunctionCall","src":"10317:74:26"},"nodeType":"YulExpressionStatement","src":"10317:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10411:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10422:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10407:3:26"},"nodeType":"YulFunctionCall","src":"10407:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"10427:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10400:6:26"},"nodeType":"YulFunctionCall","src":"10400:34:26"},"nodeType":"YulExpressionStatement","src":"10400:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10233:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"10244:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"10252:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10263:4:26","type":""}],"src":"10143:297:26"},{"body":{"nodeType":"YulBlock","src":"10523:199:26","statements":[{"body":{"nodeType":"YulBlock","src":"10569:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10578:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10581:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10571:6:26"},"nodeType":"YulFunctionCall","src":"10571:12:26"},"nodeType":"YulExpressionStatement","src":"10571:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"10544:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"10553:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10540:3:26"},"nodeType":"YulFunctionCall","src":"10540:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"10565:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"10536:3:26"},"nodeType":"YulFunctionCall","src":"10536:32:26"},"nodeType":"YulIf","src":"10533:52:26"},{"nodeType":"YulVariableDeclaration","src":"10594:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10613:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10607:5:26"},"nodeType":"YulFunctionCall","src":"10607:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"10598:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"10676:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"10685:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"10688:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"10678:6:26"},"nodeType":"YulFunctionCall","src":"10678:12:26"},"nodeType":"YulExpressionStatement","src":"10678:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10645:5:26"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10666:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10659:6:26"},"nodeType":"YulFunctionCall","src":"10659:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10652:6:26"},"nodeType":"YulFunctionCall","src":"10652:21:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"10642:2:26"},"nodeType":"YulFunctionCall","src":"10642:32:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"10635:6:26"},"nodeType":"YulFunctionCall","src":"10635:40:26"},"nodeType":"YulIf","src":"10632:60:26"},{"nodeType":"YulAssignment","src":"10701:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"10711:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"10701:6:26"}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10489:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"10500:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"10512:6:26","type":""}],"src":"10445:277:26"},{"body":{"nodeType":"YulBlock","src":"10901:236:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10918:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10929:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10911:6:26"},"nodeType":"YulFunctionCall","src":"10911:21:26"},"nodeType":"YulExpressionStatement","src":"10911:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10952:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"10963:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10948:3:26"},"nodeType":"YulFunctionCall","src":"10948:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"10968:2:26","type":"","value":"46"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10941:6:26"},"nodeType":"YulFunctionCall","src":"10941:30:26"},"nodeType":"YulExpressionStatement","src":"10941:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10991:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11002:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10987:3:26"},"nodeType":"YulFunctionCall","src":"10987:18:26"},{"hexValue":"496e697469616c697a61626c653a20636f6e747261637420697320616c726561","kind":"string","nodeType":"YulLiteral","src":"11007:34:26","type":"","value":"Initializable: contract is alrea"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10980:6:26"},"nodeType":"YulFunctionCall","src":"10980:62:26"},"nodeType":"YulExpressionStatement","src":"10980:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11062:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11073:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11058:3:26"},"nodeType":"YulFunctionCall","src":"11058:18:26"},{"hexValue":"647920696e697469616c697a6564","kind":"string","nodeType":"YulLiteral","src":"11078:16:26","type":"","value":"dy initialized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11051:6:26"},"nodeType":"YulFunctionCall","src":"11051:44:26"},"nodeType":"YulExpressionStatement","src":"11051:44:26"},{"nodeType":"YulAssignment","src":"11104:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11116:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11127:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11112:3:26"},"nodeType":"YulFunctionCall","src":"11112:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11104:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10878:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10892:4:26","type":""}],"src":"10727:410:26"},{"body":{"nodeType":"YulBlock","src":"11299:241:26","statements":[{"nodeType":"YulAssignment","src":"11309:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11321:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11332:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11317:3:26"},"nodeType":"YulFunctionCall","src":"11317:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11309:4:26"}]},{"nodeType":"YulVariableDeclaration","src":"11344:52:26","value":{"kind":"number","nodeType":"YulLiteral","src":"11354:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"11348:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11412:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"11427:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"11435:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11423:3:26"},"nodeType":"YulFunctionCall","src":"11423:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11405:6:26"},"nodeType":"YulFunctionCall","src":"11405:34:26"},"nodeType":"YulExpressionStatement","src":"11405:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11459:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11470:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11455:3:26"},"nodeType":"YulFunctionCall","src":"11455:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"11479:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"11487:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11475:3:26"},"nodeType":"YulFunctionCall","src":"11475:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11448:6:26"},"nodeType":"YulFunctionCall","src":"11448:43:26"},"nodeType":"YulExpressionStatement","src":"11448:43:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11511:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"11522:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11507:3:26"},"nodeType":"YulFunctionCall","src":"11507:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"11527:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11500:6:26"},"nodeType":"YulFunctionCall","src":"11500:34:26"},"nodeType":"YulExpressionStatement","src":"11500:34:26"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11252:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"11263:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"11271:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"11279:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11290:4:26","type":""}],"src":"11142:398:26"},{"body":{"nodeType":"YulBlock","src":"11611:259:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11628:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11633:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11621:6:26"},"nodeType":"YulFunctionCall","src":"11621:19:26"},"nodeType":"YulExpressionStatement","src":"11621:19:26"},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11666:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"11671:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11662:3:26"},"nodeType":"YulFunctionCall","src":"11662:14:26"},{"name":"start","nodeType":"YulIdentifier","src":"11678:5:26"},{"name":"length","nodeType":"YulIdentifier","src":"11685:6:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"11649:12:26"},"nodeType":"YulFunctionCall","src":"11649:43:26"},"nodeType":"YulExpressionStatement","src":"11649:43:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11716:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"11721:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11712:3:26"},"nodeType":"YulFunctionCall","src":"11712:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"11730:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11708:3:26"},"nodeType":"YulFunctionCall","src":"11708:27:26"},{"kind":"number","nodeType":"YulLiteral","src":"11737:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11701:6:26"},"nodeType":"YulFunctionCall","src":"11701:38:26"},"nodeType":"YulExpressionStatement","src":"11701:38:26"},{"nodeType":"YulAssignment","src":"11748:116:26","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11763:3:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11776:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"11784:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11772:3:26"},"nodeType":"YulFunctionCall","src":"11772:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"11789:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"11768:3:26"},"nodeType":"YulFunctionCall","src":"11768:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11759:3:26"},"nodeType":"YulFunctionCall","src":"11759:98:26"},{"kind":"number","nodeType":"YulLiteral","src":"11859:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11755:3:26"},"nodeType":"YulFunctionCall","src":"11755:109:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11748:3:26"}]}]},"name":"abi_encode_bytes_calldata","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"11580:5:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"11587:6:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11595:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11603:3:26","type":""}],"src":"11545:325:26"},{"body":{"nodeType":"YulBlock","src":"12060:201:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12077:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"12088:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12070:6:26"},"nodeType":"YulFunctionCall","src":"12070:25:26"},"nodeType":"YulExpressionStatement","src":"12070:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12115:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12126:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12111:3:26"},"nodeType":"YulFunctionCall","src":"12111:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"12131:2:26","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12104:6:26"},"nodeType":"YulFunctionCall","src":"12104:30:26"},"nodeType":"YulExpressionStatement","src":"12104:30:26"},{"nodeType":"YulAssignment","src":"12143:69:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12177:6:26"},{"name":"value2","nodeType":"YulIdentifier","src":"12185:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12197:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12208:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12193:3:26"},"nodeType":"YulFunctionCall","src":"12193:18:26"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"12151:25:26"},"nodeType":"YulFunctionCall","src":"12151:61:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12143:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12232:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"12243:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12228:3:26"},"nodeType":"YulFunctionCall","src":"12228:18:26"},{"name":"value3","nodeType":"YulIdentifier","src":"12248:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12221:6:26"},"nodeType":"YulFunctionCall","src":"12221:34:26"},"nodeType":"YulExpressionStatement","src":"12221:34:26"}]},"name":"abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12005:9:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12016:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12024:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12032:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12040:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12051:4:26","type":""}],"src":"11875:386:26"},{"body":{"nodeType":"YulBlock","src":"12298:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12315:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12318:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12308:6:26"},"nodeType":"YulFunctionCall","src":"12308:88:26"},"nodeType":"YulExpressionStatement","src":"12308:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12412:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"12415:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12405:6:26"},"nodeType":"YulFunctionCall","src":"12405:15:26"},"nodeType":"YulExpressionStatement","src":"12405:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12436:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"12439:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"12429:6:26"},"nodeType":"YulFunctionCall","src":"12429:15:26"},"nodeType":"YulExpressionStatement","src":"12429:15:26"}]},"name":"panic_error_0x21","nodeType":"YulFunctionDefinition","src":"12266:184:26"},{"body":{"nodeType":"YulBlock","src":"12508:205:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12518:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"12527:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"12522:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"12587:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12612:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"12617:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12608:3:26"},"nodeType":"YulFunctionCall","src":"12608:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"12631:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"12636:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12627:3:26"},"nodeType":"YulFunctionCall","src":"12627:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12621:5:26"},"nodeType":"YulFunctionCall","src":"12621:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12601:6:26"},"nodeType":"YulFunctionCall","src":"12601:39:26"},"nodeType":"YulExpressionStatement","src":"12601:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12548:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"12551:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12545:2:26"},"nodeType":"YulFunctionCall","src":"12545:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"12559:19:26","statements":[{"nodeType":"YulAssignment","src":"12561:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12570:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"12573:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12566:3:26"},"nodeType":"YulFunctionCall","src":"12566:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"12561:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"12541:3:26","statements":[]},"src":"12537:113:26"},{"body":{"nodeType":"YulBlock","src":"12676:31:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"12689:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12694:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12685:3:26"},"nodeType":"YulFunctionCall","src":"12685:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"12703:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12678:6:26"},"nodeType":"YulFunctionCall","src":"12678:27:26"},"nodeType":"YulExpressionStatement","src":"12678:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"12665:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"12668:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12662:2:26"},"nodeType":"YulFunctionCall","src":"12662:13:26"},"nodeType":"YulIf","src":"12659:48:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"12486:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"12491:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"12496:6:26","type":""}],"src":"12455:258:26"},{"body":{"nodeType":"YulBlock","src":"12767:267:26","statements":[{"nodeType":"YulVariableDeclaration","src":"12777:26:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12797:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12791:5:26"},"nodeType":"YulFunctionCall","src":"12791:12:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"12781:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12819:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"12824:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12812:6:26"},"nodeType":"YulFunctionCall","src":"12812:19:26"},"nodeType":"YulExpressionStatement","src":"12812:19:26"},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12866:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"12873:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12862:3:26"},"nodeType":"YulFunctionCall","src":"12862:16:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12884:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"12889:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12880:3:26"},"nodeType":"YulFunctionCall","src":"12880:14:26"},{"name":"length","nodeType":"YulIdentifier","src":"12896:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"12840:21:26"},"nodeType":"YulFunctionCall","src":"12840:63:26"},"nodeType":"YulExpressionStatement","src":"12840:63:26"},{"nodeType":"YulAssignment","src":"12912:116:26","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12927:3:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"12940:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"12948:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12936:3:26"},"nodeType":"YulFunctionCall","src":"12936:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"12953:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"12932:3:26"},"nodeType":"YulFunctionCall","src":"12932:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12923:3:26"},"nodeType":"YulFunctionCall","src":"12923:98:26"},{"kind":"number","nodeType":"YulLiteral","src":"13023:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12919:3:26"},"nodeType":"YulFunctionCall","src":"12919:109:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12912:3:26"}]}]},"name":"abi_encode_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12744:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12751:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12759:3:26","type":""}],"src":"12718:316:26"},{"body":{"nodeType":"YulBlock","src":"13198:351:26","statements":[{"body":{"nodeType":"YulBlock","src":"13241:168:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13262:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13265:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13255:6:26"},"nodeType":"YulFunctionCall","src":"13255:88:26"},"nodeType":"YulExpressionStatement","src":"13255:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13363:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"13366:4:26","type":"","value":"0x21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13356:6:26"},"nodeType":"YulFunctionCall","src":"13356:15:26"},"nodeType":"YulExpressionStatement","src":"13356:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13391:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13394:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13384:6:26"},"nodeType":"YulFunctionCall","src":"13384:15:26"},"nodeType":"YulExpressionStatement","src":"13384:15:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"13221:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"13229:1:26","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"13218:2:26"},"nodeType":"YulFunctionCall","src":"13218:13:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"13211:6:26"},"nodeType":"YulFunctionCall","src":"13211:21:26"},"nodeType":"YulIf","src":"13208:201:26"},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13425:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"13436:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13418:6:26"},"nodeType":"YulFunctionCall","src":"13418:25:26"},"nodeType":"YulExpressionStatement","src":"13418:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13463:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13474:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13459:3:26"},"nodeType":"YulFunctionCall","src":"13459:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"13479:2:26","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13452:6:26"},"nodeType":"YulFunctionCall","src":"13452:30:26"},"nodeType":"YulExpressionStatement","src":"13452:30:26"},{"nodeType":"YulAssignment","src":"13491:52:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"13516:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13528:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"13539:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13524:3:26"},"nodeType":"YulFunctionCall","src":"13524:18:26"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"13499:16:26"},"nodeType":"YulFunctionCall","src":"13499:44:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13491:4:26"}]}]},"name":"abi_encode_tuple_t_enum$_Operation_$2751_t_bytes_memory_ptr__to_t_uint8_t_bytes_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13159:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13170:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13178:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13189:4:26","type":""}],"src":"13039:510:26"},{"body":{"nodeType":"YulBlock","src":"13655:170:26","statements":[{"body":{"nodeType":"YulBlock","src":"13701:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"13710:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"13713:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"13703:6:26"},"nodeType":"YulFunctionCall","src":"13703:12:26"},"nodeType":"YulExpressionStatement","src":"13703:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"13676:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"13685:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13672:3:26"},"nodeType":"YulFunctionCall","src":"13672:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"13697:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"13668:3:26"},"nodeType":"YulFunctionCall","src":"13668:32:26"},"nodeType":"YulIf","src":"13665:52:26"},{"nodeType":"YulVariableDeclaration","src":"13726:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13745:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13739:5:26"},"nodeType":"YulFunctionCall","src":"13739:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"13730:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13789:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"13764:24:26"},"nodeType":"YulFunctionCall","src":"13764:31:26"},"nodeType":"YulExpressionStatement","src":"13764:31:26"},{"nodeType":"YulAssignment","src":"13804:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"13814:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"13804:6:26"}]}]},"name":"abi_decode_tuple_t_contract$_IVaultsCore_$4439_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13621:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"13632:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"13644:6:26","type":""}],"src":"13554:271:26"},{"body":{"nodeType":"YulBlock","src":"13987:211:26","statements":[{"nodeType":"YulAssignment","src":"13997:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14009:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14020:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14005:3:26"},"nodeType":"YulFunctionCall","src":"14005:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13997:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14039:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14054:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"14062:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"14050:3:26"},"nodeType":"YulFunctionCall","src":"14050:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14032:6:26"},"nodeType":"YulFunctionCall","src":"14032:74:26"},"nodeType":"YulExpressionStatement","src":"14032:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14126:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14137:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14122:3:26"},"nodeType":"YulFunctionCall","src":"14122:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"14142:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14115:6:26"},"nodeType":"YulFunctionCall","src":"14115:34:26"},"nodeType":"YulExpressionStatement","src":"14115:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14169:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14180:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14165:3:26"},"nodeType":"YulFunctionCall","src":"14165:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"14185:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14158:6:26"},"nodeType":"YulFunctionCall","src":"14158:34:26"},"nodeType":"YulExpressionStatement","src":"14158:34:26"}]},"name":"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13940:9:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"13951:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"13959:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"13967:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13978:4:26","type":""}],"src":"13830:368:26"},{"body":{"nodeType":"YulBlock","src":"14284:170:26","statements":[{"body":{"nodeType":"YulBlock","src":"14330:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"14339:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"14342:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"14332:6:26"},"nodeType":"YulFunctionCall","src":"14332:12:26"},"nodeType":"YulExpressionStatement","src":"14332:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"14305:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"14314:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14301:3:26"},"nodeType":"YulFunctionCall","src":"14301:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"14326:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"14297:3:26"},"nodeType":"YulFunctionCall","src":"14297:32:26"},"nodeType":"YulIf","src":"14294:52:26"},{"nodeType":"YulVariableDeclaration","src":"14355:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14374:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14368:5:26"},"nodeType":"YulFunctionCall","src":"14368:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"14359:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14418:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"14393:24:26"},"nodeType":"YulFunctionCall","src":"14393:31:26"},"nodeType":"YulExpressionStatement","src":"14393:31:26"},{"nodeType":"YulAssignment","src":"14433:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"14443:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"14433:6:26"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14250:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"14261:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"14273:6:26","type":""}],"src":"14203:251:26"},{"body":{"nodeType":"YulBlock","src":"14633:237:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14650:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14661:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14643:6:26"},"nodeType":"YulFunctionCall","src":"14643:21:26"},"nodeType":"YulExpressionStatement","src":"14643:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14684:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14695:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14680:3:26"},"nodeType":"YulFunctionCall","src":"14680:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"14700:2:26","type":"","value":"47"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14673:6:26"},"nodeType":"YulFunctionCall","src":"14673:30:26"},"nodeType":"YulExpressionStatement","src":"14673:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14723:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14734:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14719:3:26"},"nodeType":"YulFunctionCall","src":"14719:18:26"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"14739:34:26","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14712:6:26"},"nodeType":"YulFunctionCall","src":"14712:62:26"},"nodeType":"YulExpressionStatement","src":"14712:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14794:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14805:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14790:3:26"},"nodeType":"YulFunctionCall","src":"14790:18:26"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"14810:17:26","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14783:6:26"},"nodeType":"YulFunctionCall","src":"14783:45:26"},"nodeType":"YulExpressionStatement","src":"14783:45:26"},{"nodeType":"YulAssignment","src":"14837:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14849:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"14860:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14845:3:26"},"nodeType":"YulFunctionCall","src":"14845:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14837:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14610:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14624:4:26","type":""}],"src":"14459:411:26"},{"body":{"nodeType":"YulBlock","src":"15116:339:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15133:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"15144:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15126:6:26"},"nodeType":"YulFunctionCall","src":"15126:25:26"},"nodeType":"YulExpressionStatement","src":"15126:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15171:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15182:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15167:3:26"},"nodeType":"YulFunctionCall","src":"15167:18:26"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"15191:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"15199:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15187:3:26"},"nodeType":"YulFunctionCall","src":"15187:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15160:6:26"},"nodeType":"YulFunctionCall","src":"15160:83:26"},"nodeType":"YulExpressionStatement","src":"15160:83:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15263:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15274:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15259:3:26"},"nodeType":"YulFunctionCall","src":"15259:18:26"},{"name":"value2","nodeType":"YulIdentifier","src":"15279:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15252:6:26"},"nodeType":"YulFunctionCall","src":"15252:34:26"},"nodeType":"YulExpressionStatement","src":"15252:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15306:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15317:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15302:3:26"},"nodeType":"YulFunctionCall","src":"15302:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"15322:3:26","type":"","value":"160"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15295:6:26"},"nodeType":"YulFunctionCall","src":"15295:31:26"},"nodeType":"YulExpressionStatement","src":"15295:31:26"},{"nodeType":"YulAssignment","src":"15335:70:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"15369:6:26"},{"name":"value4","nodeType":"YulIdentifier","src":"15377:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15389:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15400:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15385:3:26"},"nodeType":"YulFunctionCall","src":"15385:19:26"}],"functionName":{"name":"abi_encode_bytes_calldata","nodeType":"YulIdentifier","src":"15343:25:26"},"nodeType":"YulFunctionCall","src":"15343:62:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15335:4:26"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15425:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15436:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15421:3:26"},"nodeType":"YulFunctionCall","src":"15421:19:26"},{"name":"value5","nodeType":"YulIdentifier","src":"15442:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15414:6:26"},"nodeType":"YulFunctionCall","src":"15414:35:26"},"nodeType":"YulExpressionStatement","src":"15414:35:26"}]},"name":"abi_encode_tuple_t_uint256_t_address_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15045:9:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"15056:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"15064:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15072:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15080:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15088:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15096:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15107:4:26","type":""}],"src":"14875:580:26"},{"body":{"nodeType":"YulBlock","src":"15589:119:26","statements":[{"nodeType":"YulAssignment","src":"15599:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15611:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15622:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15607:3:26"},"nodeType":"YulFunctionCall","src":"15607:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15599:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15641:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"15652:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15634:6:26"},"nodeType":"YulFunctionCall","src":"15634:25:26"},"nodeType":"YulExpressionStatement","src":"15634:25:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15679:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"15690:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15675:3:26"},"nodeType":"YulFunctionCall","src":"15675:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"15695:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15668:6:26"},"nodeType":"YulFunctionCall","src":"15668:34:26"},"nodeType":"YulExpressionStatement","src":"15668:34:26"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15550:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15561:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15569:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15580:4:26","type":""}],"src":"15460:248:26"},{"body":{"nodeType":"YulBlock","src":"15822:170:26","statements":[{"body":{"nodeType":"YulBlock","src":"15868:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"15877:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"15880:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"15870:6:26"},"nodeType":"YulFunctionCall","src":"15870:12:26"},"nodeType":"YulExpressionStatement","src":"15870:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"15843:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"15852:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15839:3:26"},"nodeType":"YulFunctionCall","src":"15839:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"15864:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"15835:3:26"},"nodeType":"YulFunctionCall","src":"15835:32:26"},"nodeType":"YulIf","src":"15832:52:26"},{"nodeType":"YulVariableDeclaration","src":"15893:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15912:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15906:5:26"},"nodeType":"YulFunctionCall","src":"15906:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"15897:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15956:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"15931:24:26"},"nodeType":"YulFunctionCall","src":"15931:31:26"},"nodeType":"YulExpressionStatement","src":"15931:31:26"},{"nodeType":"YulAssignment","src":"15971:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"15981:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"15971:6:26"}]}]},"name":"abi_decode_tuple_t_contract$_IVaultsDataProvider_$4567_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15788:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"15799:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"15811:6:26","type":""}],"src":"15713:279:26"},{"body":{"nodeType":"YulBlock","src":"16098:76:26","statements":[{"nodeType":"YulAssignment","src":"16108:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16120:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16131:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16116:3:26"},"nodeType":"YulFunctionCall","src":"16116:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16108:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16150:9:26"},{"name":"value0","nodeType":"YulIdentifier","src":"16161:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16143:6:26"},"nodeType":"YulFunctionCall","src":"16143:25:26"},"nodeType":"YulExpressionStatement","src":"16143:25:26"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16067:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16078:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16089:4:26","type":""}],"src":"15997:177:26"},{"body":{"nodeType":"YulBlock","src":"16353:154:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16370:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16381:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16363:6:26"},"nodeType":"YulFunctionCall","src":"16363:21:26"},"nodeType":"YulExpressionStatement","src":"16363:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16404:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16415:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16400:3:26"},"nodeType":"YulFunctionCall","src":"16400:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"16420:1:26","type":"","value":"5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16393:6:26"},"nodeType":"YulFunctionCall","src":"16393:29:26"},"nodeType":"YulExpressionStatement","src":"16393:29:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16442:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16453:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16438:3:26"},"nodeType":"YulFunctionCall","src":"16438:18:26"},{"hexValue":"5356303032","kind":"string","nodeType":"YulLiteral","src":"16458:7:26","type":"","value":"SV002"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16431:6:26"},"nodeType":"YulFunctionCall","src":"16431:35:26"},"nodeType":"YulExpressionStatement","src":"16431:35:26"},{"nodeType":"YulAssignment","src":"16475:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16487:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"16498:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16483:3:26"},"nodeType":"YulFunctionCall","src":"16483:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16475:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_4103a63670b349a9676cf644fe9c35170cd4d1b9ec6099358c4cf84fece51732__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16330:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16344:4:26","type":""}],"src":"16179:328:26"},{"body":{"nodeType":"YulBlock","src":"16544:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16561:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16564:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16554:6:26"},"nodeType":"YulFunctionCall","src":"16554:88:26"},"nodeType":"YulExpressionStatement","src":"16554:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16658:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16661:4:26","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16651:6:26"},"nodeType":"YulFunctionCall","src":"16651:15:26"},"nodeType":"YulExpressionStatement","src":"16651:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16682:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16685:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16675:6:26"},"nodeType":"YulFunctionCall","src":"16675:15:26"},"nodeType":"YulExpressionStatement","src":"16675:15:26"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16512:184:26"},{"body":{"nodeType":"YulBlock","src":"16746:289:26","statements":[{"nodeType":"YulAssignment","src":"16756:19:26","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16772:2:26","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16766:5:26"},"nodeType":"YulFunctionCall","src":"16766:9:26"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16756:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"16784:117:26","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16806:6:26"},{"arguments":[{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"16822:4:26"},{"kind":"number","nodeType":"YulLiteral","src":"16828:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16818:3:26"},"nodeType":"YulFunctionCall","src":"16818:13:26"},{"kind":"number","nodeType":"YulLiteral","src":"16833:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16814:3:26"},"nodeType":"YulFunctionCall","src":"16814:86:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16802:3:26"},"nodeType":"YulFunctionCall","src":"16802:99:26"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"16788:10:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"16976:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"16978:16:26"},"nodeType":"YulFunctionCall","src":"16978:18:26"},"nodeType":"YulExpressionStatement","src":"16978:18:26"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16919:10:26"},{"kind":"number","nodeType":"YulLiteral","src":"16931:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"16916:2:26"},"nodeType":"YulFunctionCall","src":"16916:34:26"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"16955:10:26"},{"name":"memPtr","nodeType":"YulIdentifier","src":"16967:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"16952:2:26"},"nodeType":"YulFunctionCall","src":"16952:22:26"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"16913:2:26"},"nodeType":"YulFunctionCall","src":"16913:62:26"},"nodeType":"YulIf","src":"16910:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17014:2:26","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"17018:10:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17007:6:26"},"nodeType":"YulFunctionCall","src":"17007:22:26"},"nodeType":"YulExpressionStatement","src":"17007:22:26"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"16726:4:26","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"16735:6:26","type":""}],"src":"16701:334:26"},{"body":{"nodeType":"YulBlock","src":"17097:188:26","statements":[{"body":{"nodeType":"YulBlock","src":"17141:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17143:16:26"},"nodeType":"YulFunctionCall","src":"17143:18:26"},"nodeType":"YulExpressionStatement","src":"17143:18:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17113:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17121:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17110:2:26"},"nodeType":"YulFunctionCall","src":"17110:30:26"},"nodeType":"YulIf","src":"17107:56:26"},{"nodeType":"YulAssignment","src":"17172:107:26","value":{"arguments":[{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17192:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17200:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17188:3:26"},"nodeType":"YulFunctionCall","src":"17188:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"17205:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17184:3:26"},"nodeType":"YulFunctionCall","src":"17184:88:26"},{"kind":"number","nodeType":"YulLiteral","src":"17274:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17180:3:26"},"nodeType":"YulFunctionCall","src":"17180:99:26"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17172:4:26"}]}]},"name":"array_allocation_size_bytes","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"17077:6:26","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"17088:4:26","type":""}],"src":"17040:245:26"},{"body":{"nodeType":"YulBlock","src":"17400:719:26","statements":[{"body":{"nodeType":"YulBlock","src":"17446:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17455:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17458:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17448:6:26"},"nodeType":"YulFunctionCall","src":"17448:12:26"},"nodeType":"YulExpressionStatement","src":"17448:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"17421:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"17430:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17417:3:26"},"nodeType":"YulFunctionCall","src":"17417:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"17442:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17413:3:26"},"nodeType":"YulFunctionCall","src":"17413:32:26"},"nodeType":"YulIf","src":"17410:52:26"},{"nodeType":"YulVariableDeclaration","src":"17471:36:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17497:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17484:12:26"},"nodeType":"YulFunctionCall","src":"17484:23:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"17475:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"17540:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17549:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17552:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17542:6:26"},"nodeType":"YulFunctionCall","src":"17542:12:26"},"nodeType":"YulExpressionStatement","src":"17542:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17529:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"17536:1:26","type":"","value":"3"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17526:2:26"},"nodeType":"YulFunctionCall","src":"17526:12:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17519:6:26"},"nodeType":"YulFunctionCall","src":"17519:20:26"},"nodeType":"YulIf","src":"17516:40:26"},{"nodeType":"YulAssignment","src":"17565:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"17575:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"17565:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"17589:46:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17620:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"17631:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17616:3:26"},"nodeType":"YulFunctionCall","src":"17616:18:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17603:12:26"},"nodeType":"YulFunctionCall","src":"17603:32:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"17593:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"17678:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17687:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17690:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17680:6:26"},"nodeType":"YulFunctionCall","src":"17680:12:26"},"nodeType":"YulExpressionStatement","src":"17680:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"17650:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"17658:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17647:2:26"},"nodeType":"YulFunctionCall","src":"17647:30:26"},"nodeType":"YulIf","src":"17644:50:26"},{"nodeType":"YulVariableDeclaration","src":"17703:32:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17717:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"17728:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17713:3:26"},"nodeType":"YulFunctionCall","src":"17713:22:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17707:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"17783:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17792:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17795:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17785:6:26"},"nodeType":"YulFunctionCall","src":"17785:12:26"},"nodeType":"YulExpressionStatement","src":"17785:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17762:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"17766:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17758:3:26"},"nodeType":"YulFunctionCall","src":"17758:13:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17773:7:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"17754:3:26"},"nodeType":"YulFunctionCall","src":"17754:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"17747:6:26"},"nodeType":"YulFunctionCall","src":"17747:35:26"},"nodeType":"YulIf","src":"17744:55:26"},{"nodeType":"YulVariableDeclaration","src":"17808:26:26","value":{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17831:2:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"17818:12:26"},"nodeType":"YulFunctionCall","src":"17818:16:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"17812:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"17843:61:26","value":{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"17900:2:26"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"17872:27:26"},"nodeType":"YulFunctionCall","src":"17872:31:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"17856:15:26"},"nodeType":"YulFunctionCall","src":"17856:48:26"},"variables":[{"name":"array","nodeType":"YulTypedName","src":"17847:5:26","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"17920:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"17927:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17913:6:26"},"nodeType":"YulFunctionCall","src":"17913:17:26"},"nodeType":"YulExpressionStatement","src":"17913:17:26"},{"body":{"nodeType":"YulBlock","src":"17976:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17985:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"17988:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"17978:6:26"},"nodeType":"YulFunctionCall","src":"17978:12:26"},"nodeType":"YulExpressionStatement","src":"17978:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"17953:2:26"},{"name":"_2","nodeType":"YulIdentifier","src":"17957:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17949:3:26"},"nodeType":"YulFunctionCall","src":"17949:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"17962:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17945:3:26"},"nodeType":"YulFunctionCall","src":"17945:20:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"17967:7:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17942:2:26"},"nodeType":"YulFunctionCall","src":"17942:33:26"},"nodeType":"YulIf","src":"17939:53:26"},{"expression":{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18018:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"18025:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18014:3:26"},"nodeType":"YulFunctionCall","src":"18014:14:26"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"18034:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"18038:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18030:3:26"},"nodeType":"YulFunctionCall","src":"18030:11:26"},{"name":"_2","nodeType":"YulIdentifier","src":"18043:2:26"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"18001:12:26"},"nodeType":"YulFunctionCall","src":"18001:45:26"},"nodeType":"YulExpressionStatement","src":"18001:45:26"},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18070:5:26"},{"name":"_2","nodeType":"YulIdentifier","src":"18077:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18066:3:26"},"nodeType":"YulFunctionCall","src":"18066:14:26"},{"kind":"number","nodeType":"YulLiteral","src":"18082:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18062:3:26"},"nodeType":"YulFunctionCall","src":"18062:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"18087:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18055:6:26"},"nodeType":"YulFunctionCall","src":"18055:34:26"},"nodeType":"YulExpressionStatement","src":"18055:34:26"},{"nodeType":"YulAssignment","src":"18098:15:26","value":{"name":"array","nodeType":"YulIdentifier","src":"18108:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"18098:6:26"}]}]},"name":"abi_decode_tuple_t_enum$_Operation_$2751t_bytes_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17358:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"17369:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"17381:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"17389:6:26","type":""}],"src":"17290:829:26"},{"body":{"nodeType":"YulBlock","src":"18156:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18173:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18176:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18166:6:26"},"nodeType":"YulFunctionCall","src":"18166:88:26"},"nodeType":"YulExpressionStatement","src":"18166:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18270:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18273:4:26","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18263:6:26"},"nodeType":"YulFunctionCall","src":"18263:15:26"},"nodeType":"YulExpressionStatement","src":"18263:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18294:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18297:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18287:6:26"},"nodeType":"YulFunctionCall","src":"18287:15:26"},"nodeType":"YulExpressionStatement","src":"18287:15:26"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"18124:184:26"},{"body":{"nodeType":"YulBlock","src":"18345:152:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18362:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18365:77:26","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18355:6:26"},"nodeType":"YulFunctionCall","src":"18355:88:26"},"nodeType":"YulExpressionStatement","src":"18355:88:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18459:1:26","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"18462:4:26","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18452:6:26"},"nodeType":"YulFunctionCall","src":"18452:15:26"},"nodeType":"YulExpressionStatement","src":"18452:15:26"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"18483:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"18486:4:26","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"18476:6:26"},"nodeType":"YulFunctionCall","src":"18476:15:26"},"nodeType":"YulExpressionStatement","src":"18476:15:26"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"18313:184:26"},{"body":{"nodeType":"YulBlock","src":"18550:80:26","statements":[{"body":{"nodeType":"YulBlock","src":"18577:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"18579:16:26"},"nodeType":"YulFunctionCall","src":"18579:18:26"},"nodeType":"YulExpressionStatement","src":"18579:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18566:1:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"18573:1:26"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"18569:3:26"},"nodeType":"YulFunctionCall","src":"18569:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18563:2:26"},"nodeType":"YulFunctionCall","src":"18563:13:26"},"nodeType":"YulIf","src":"18560:39:26"},{"nodeType":"YulAssignment","src":"18608:16:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"18619:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"18622:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18615:3:26"},"nodeType":"YulFunctionCall","src":"18615:9:26"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"18608:3:26"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"18533:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"18536:1:26","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"18542:3:26","type":""}],"src":"18502:128:26"},{"body":{"nodeType":"YulBlock","src":"18696:374:26","statements":[{"nodeType":"YulVariableDeclaration","src":"18706:26:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18726:5:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18720:5:26"},"nodeType":"YulFunctionCall","src":"18720:12:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18710:6:26","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18748:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"18753:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18741:6:26"},"nodeType":"YulFunctionCall","src":"18741:19:26"},"nodeType":"YulExpressionStatement","src":"18741:19:26"},{"nodeType":"YulVariableDeclaration","src":"18769:14:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18779:4:26","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18773:2:26","type":""}]},{"nodeType":"YulAssignment","src":"18792:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18803:3:26"},{"name":"_1","nodeType":"YulIdentifier","src":"18808:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18799:3:26"},"nodeType":"YulFunctionCall","src":"18799:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18792:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"18820:28:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18838:5:26"},{"name":"_1","nodeType":"YulIdentifier","src":"18845:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18834:3:26"},"nodeType":"YulFunctionCall","src":"18834:14:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"18824:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18857:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"18866:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18861:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"18925:120:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18946:3:26"},{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18957:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18951:5:26"},"nodeType":"YulFunctionCall","src":"18951:13:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18939:6:26"},"nodeType":"YulFunctionCall","src":"18939:26:26"},"nodeType":"YulExpressionStatement","src":"18939:26:26"},{"nodeType":"YulAssignment","src":"18978:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18989:3:26"},{"name":"_1","nodeType":"YulIdentifier","src":"18994:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18985:3:26"},"nodeType":"YulFunctionCall","src":"18985:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18978:3:26"}]},{"nodeType":"YulAssignment","src":"19010:25:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19024:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"19032:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19020:3:26"},"nodeType":"YulFunctionCall","src":"19020:15:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"19010:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18887:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"18890:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18884:2:26"},"nodeType":"YulFunctionCall","src":"18884:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18898:18:26","statements":[{"nodeType":"YulAssignment","src":"18900:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18909:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"18912:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18905:3:26"},"nodeType":"YulFunctionCall","src":"18905:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18900:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"18880:3:26","statements":[]},"src":"18876:169:26"},{"nodeType":"YulAssignment","src":"19054:10:26","value":{"name":"pos","nodeType":"YulIdentifier","src":"19061:3:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19054:3:26"}]}]},"name":"abi_encode_array_uint256_dyn","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18673:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18680:3:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18688:3:26","type":""}],"src":"18635:435:26"},{"body":{"nodeType":"YulBlock","src":"19117:33:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19126:3:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19135:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"19142:4:26","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19131:3:26"},"nodeType":"YulFunctionCall","src":"19131:16:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19119:6:26"},"nodeType":"YulFunctionCall","src":"19119:29:26"},"nodeType":"YulExpressionStatement","src":"19119:29:26"}]},"name":"abi_encode_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19101:5:26","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19108:3:26","type":""}],"src":"19075:75:26"},{"body":{"nodeType":"YulBlock","src":"19589:1051:26","statements":[{"nodeType":"YulVariableDeclaration","src":"19599:33:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19617:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19628:3:26","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19613:3:26"},"nodeType":"YulFunctionCall","src":"19613:19:26"},"variables":[{"name":"tail_1","nodeType":"YulTypedName","src":"19603:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19641:52:26","value":{"kind":"number","nodeType":"YulLiteral","src":"19651:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"19645:2:26","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19709:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19724:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"19732:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19720:3:26"},"nodeType":"YulFunctionCall","src":"19720:15:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19702:6:26"},"nodeType":"YulFunctionCall","src":"19702:34:26"},"nodeType":"YulExpressionStatement","src":"19702:34:26"},{"nodeType":"YulVariableDeclaration","src":"19745:12:26","value":{"kind":"number","nodeType":"YulLiteral","src":"19755:2:26","type":"","value":"32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"19749:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19777:9:26"},{"name":"_2","nodeType":"YulIdentifier","src":"19788:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19773:3:26"},"nodeType":"YulFunctionCall","src":"19773:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"19793:3:26","type":"","value":"224"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19766:6:26"},"nodeType":"YulFunctionCall","src":"19766:31:26"},"nodeType":"YulExpressionStatement","src":"19766:31:26"},{"nodeType":"YulVariableDeclaration","src":"19806:17:26","value":{"name":"tail_1","nodeType":"YulIdentifier","src":"19817:6:26"},"variables":[{"name":"pos","nodeType":"YulTypedName","src":"19810:3:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19832:27:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19852:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19846:5:26"},"nodeType":"YulFunctionCall","src":"19846:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"19836:6:26","type":""}]},{"expression":{"arguments":[{"name":"tail_1","nodeType":"YulIdentifier","src":"19875:6:26"},{"name":"length","nodeType":"YulIdentifier","src":"19883:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19868:6:26"},"nodeType":"YulFunctionCall","src":"19868:22:26"},"nodeType":"YulExpressionStatement","src":"19868:22:26"},{"nodeType":"YulAssignment","src":"19899:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19910:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"19921:3:26","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19906:3:26"},"nodeType":"YulFunctionCall","src":"19906:19:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"19899:3:26"}]},{"nodeType":"YulVariableDeclaration","src":"19934:29:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19952:6:26"},{"name":"_2","nodeType":"YulIdentifier","src":"19960:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19948:3:26"},"nodeType":"YulFunctionCall","src":"19948:15:26"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"19938:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"19972:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"19981:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"19976:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"20040:129:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20061:3:26"},{"arguments":[{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20076:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20070:5:26"},"nodeType":"YulFunctionCall","src":"20070:13:26"},{"name":"_1","nodeType":"YulIdentifier","src":"20085:2:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20066:3:26"},"nodeType":"YulFunctionCall","src":"20066:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20054:6:26"},"nodeType":"YulFunctionCall","src":"20054:35:26"},"nodeType":"YulExpressionStatement","src":"20054:35:26"},{"nodeType":"YulAssignment","src":"20102:19:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20113:3:26"},{"name":"_2","nodeType":"YulIdentifier","src":"20118:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20109:3:26"},"nodeType":"YulFunctionCall","src":"20109:12:26"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"20102:3:26"}]},{"nodeType":"YulAssignment","src":"20134:25:26","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20148:6:26"},{"name":"_2","nodeType":"YulIdentifier","src":"20156:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20144:3:26"},"nodeType":"YulFunctionCall","src":"20144:15:26"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"20134:6:26"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20002:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"20005:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"19999:2:26"},"nodeType":"YulFunctionCall","src":"19999:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"20013:18:26","statements":[{"nodeType":"YulAssignment","src":"20015:14:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"20024:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"20027:1:26","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20020:3:26"},"nodeType":"YulFunctionCall","src":"20020:9:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"20015:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"19995:3:26","statements":[]},"src":"19991:178:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20189:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20200:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20185:3:26"},"nodeType":"YulFunctionCall","src":"20185:18:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20209:3:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20214:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20205:3:26"},"nodeType":"YulFunctionCall","src":"20205:19:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20178:6:26"},"nodeType":"YulFunctionCall","src":"20178:47:26"},"nodeType":"YulExpressionStatement","src":"20178:47:26"},{"nodeType":"YulVariableDeclaration","src":"20234:55:26","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20277:6:26"},{"name":"pos","nodeType":"YulIdentifier","src":"20285:3:26"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"20248:28:26"},"nodeType":"YulFunctionCall","src":"20248:41:26"},"variables":[{"name":"tail_2","nodeType":"YulTypedName","src":"20238:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20309:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20320:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20305:3:26"},"nodeType":"YulFunctionCall","src":"20305:18:26"},{"arguments":[{"name":"tail_2","nodeType":"YulIdentifier","src":"20329:6:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20337:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20325:3:26"},"nodeType":"YulFunctionCall","src":"20325:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20298:6:26"},"nodeType":"YulFunctionCall","src":"20298:50:26"},"nodeType":"YulExpressionStatement","src":"20298:50:26"},{"nodeType":"YulVariableDeclaration","src":"20357:58:26","value":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20400:6:26"},{"name":"tail_2","nodeType":"YulIdentifier","src":"20408:6:26"}],"functionName":{"name":"abi_encode_array_uint256_dyn","nodeType":"YulIdentifier","src":"20371:28:26"},"nodeType":"YulFunctionCall","src":"20371:44:26"},"variables":[{"name":"tail_3","nodeType":"YulTypedName","src":"20361:6:26","type":""}]},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20443:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20455:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20466:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20451:3:26"},"nodeType":"YulFunctionCall","src":"20451:19:26"}],"functionName":{"name":"abi_encode_address","nodeType":"YulIdentifier","src":"20424:18:26"},"nodeType":"YulFunctionCall","src":"20424:47:26"},"nodeType":"YulExpressionStatement","src":"20424:47:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20491:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20502:3:26","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20487:3:26"},"nodeType":"YulFunctionCall","src":"20487:19:26"},{"arguments":[{"name":"tail_3","nodeType":"YulIdentifier","src":"20512:6:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20520:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20508:3:26"},"nodeType":"YulFunctionCall","src":"20508:22:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20480:6:26"},"nodeType":"YulFunctionCall","src":"20480:51:26"},"nodeType":"YulExpressionStatement","src":"20480:51:26"},{"nodeType":"YulAssignment","src":"20540:40:26","value":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"20565:6:26"},{"name":"tail_3","nodeType":"YulIdentifier","src":"20573:6:26"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"20548:16:26"},"nodeType":"YulFunctionCall","src":"20548:32:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20540:4:26"}]},{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"20606:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20618:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"20629:3:26","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20614:3:26"},"nodeType":"YulFunctionCall","src":"20614:19:26"}],"functionName":{"name":"abi_encode_uint8","nodeType":"YulIdentifier","src":"20589:16:26"},"nodeType":"YulFunctionCall","src":"20589:45:26"},"nodeType":"YulExpressionStatement","src":"20589:45:26"}]},"name":"abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_bytes_memory_ptr_t_uint8__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_bytes_memory_ptr_t_uint16__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19510:9:26","type":""},{"name":"value6","nodeType":"YulTypedName","src":"19521:6:26","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19529:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19537:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19545:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19553:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19561:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19569:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19580:4:26","type":""}],"src":"19155:1485:26"},{"body":{"nodeType":"YulBlock","src":"20740:170:26","statements":[{"body":{"nodeType":"YulBlock","src":"20786:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20795:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"20798:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"20788:6:26"},"nodeType":"YulFunctionCall","src":"20788:12:26"},"nodeType":"YulExpressionStatement","src":"20788:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20761:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"20770:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20757:3:26"},"nodeType":"YulFunctionCall","src":"20757:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"20782:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20753:3:26"},"nodeType":"YulFunctionCall","src":"20753:32:26"},"nodeType":"YulIf","src":"20750:52:26"},{"nodeType":"YulVariableDeclaration","src":"20811:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20830:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20824:5:26"},"nodeType":"YulFunctionCall","src":"20824:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"20815:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20874:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"20849:24:26"},"nodeType":"YulFunctionCall","src":"20849:31:26"},"nodeType":"YulExpressionStatement","src":"20849:31:26"},{"nodeType":"YulAssignment","src":"20889:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"20899:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20889:6:26"}]}]},"name":"abi_decode_tuple_t_contract$_IMIMO_$4223_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20706:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20717:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20729:6:26","type":""}],"src":"20645:265:26"},{"body":{"nodeType":"YulBlock","src":"21304:397:26","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21321:3:26"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"21326:25:26","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21314:6:26"},"nodeType":"YulFunctionCall","src":"21314:38:26"},"nodeType":"YulExpressionStatement","src":"21314:38:26"},{"nodeType":"YulVariableDeclaration","src":"21361:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21381:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21375:5:26"},"nodeType":"YulFunctionCall","src":"21375:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21365:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21423:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21431:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21419:3:26"},"nodeType":"YulFunctionCall","src":"21419:17:26"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21442:3:26"},{"kind":"number","nodeType":"YulLiteral","src":"21447:2:26","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21438:3:26"},"nodeType":"YulFunctionCall","src":"21438:12:26"},{"name":"length","nodeType":"YulIdentifier","src":"21452:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21397:21:26"},"nodeType":"YulFunctionCall","src":"21397:62:26"},"nodeType":"YulExpressionStatement","src":"21397:62:26"},{"nodeType":"YulVariableDeclaration","src":"21468:26:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21482:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"21487:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21478:3:26"},"nodeType":"YulFunctionCall","src":"21478:16:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"21472:2:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21514:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"21518:2:26","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21510:3:26"},"nodeType":"YulFunctionCall","src":"21510:11:26"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"21523:19:26","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21503:6:26"},"nodeType":"YulFunctionCall","src":"21503:40:26"},"nodeType":"YulExpressionStatement","src":"21503:40:26"},{"nodeType":"YulVariableDeclaration","src":"21552:29:26","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21574:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21568:5:26"},"nodeType":"YulFunctionCall","src":"21568:13:26"},"variables":[{"name":"length_1","nodeType":"YulTypedName","src":"21556:8:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"21616:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"21624:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21612:3:26"},"nodeType":"YulFunctionCall","src":"21612:17:26"},{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21635:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"21639:2:26","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21631:3:26"},"nodeType":"YulFunctionCall","src":"21631:11:26"},{"name":"length_1","nodeType":"YulIdentifier","src":"21644:8:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"21590:21:26"},"nodeType":"YulFunctionCall","src":"21590:63:26"},"nodeType":"YulExpressionStatement","src":"21590:63:26"},{"nodeType":"YulAssignment","src":"21662:33:26","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"21677:2:26"},{"name":"length_1","nodeType":"YulIdentifier","src":"21681:8:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21673:3:26"},"nodeType":"YulFunctionCall","src":"21673:17:26"},{"kind":"number","nodeType":"YulLiteral","src":"21692:2:26","type":"","value":"40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21669:3:26"},"nodeType":"YulFunctionCall","src":"21669:26:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"21662:3:26"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21272:3:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21277:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21285:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21296:3:26","type":""}],"src":"20915:786:26"},{"body":{"nodeType":"YulBlock","src":"21827:98:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21844:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21855:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21837:6:26"},"nodeType":"YulFunctionCall","src":"21837:21:26"},"nodeType":"YulExpressionStatement","src":"21837:21:26"},{"nodeType":"YulAssignment","src":"21867:52:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21892:6:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21904:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"21915:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21900:3:26"},"nodeType":"YulFunctionCall","src":"21900:18:26"}],"functionName":{"name":"abi_encode_bytes","nodeType":"YulIdentifier","src":"21875:16:26"},"nodeType":"YulFunctionCall","src":"21875:44:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21867:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21796:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21807:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21818:4:26","type":""}],"src":"21706:219:26"},{"body":{"nodeType":"YulBlock","src":"22104:154:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22121:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22132:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22114:6:26"},"nodeType":"YulFunctionCall","src":"22114:21:26"},"nodeType":"YulExpressionStatement","src":"22114:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22155:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22166:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22151:3:26"},"nodeType":"YulFunctionCall","src":"22151:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"22171:1:26","type":"","value":"5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22144:6:26"},"nodeType":"YulFunctionCall","src":"22144:29:26"},"nodeType":"YulExpressionStatement","src":"22144:29:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22193:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22204:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22189:3:26"},"nodeType":"YulFunctionCall","src":"22189:18:26"},{"hexValue":"5356313031","kind":"string","nodeType":"YulLiteral","src":"22209:7:26","type":"","value":"SV101"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22182:6:26"},"nodeType":"YulFunctionCall","src":"22182:35:26"},"nodeType":"YulExpressionStatement","src":"22182:35:26"},{"nodeType":"YulAssignment","src":"22226:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22238:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"22249:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22234:3:26"},"nodeType":"YulFunctionCall","src":"22234:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22226:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22081:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22095:4:26","type":""}],"src":"21930:328:26"},{"body":{"nodeType":"YulBlock","src":"22312:76:26","statements":[{"body":{"nodeType":"YulBlock","src":"22334:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"22336:16:26"},"nodeType":"YulFunctionCall","src":"22336:18:26"},"nodeType":"YulExpressionStatement","src":"22336:18:26"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22328:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"22331:1:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22325:2:26"},"nodeType":"YulFunctionCall","src":"22325:8:26"},"nodeType":"YulIf","src":"22322:34:26"},{"nodeType":"YulAssignment","src":"22365:17:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"22377:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"22380:1:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"22373:3:26"},"nodeType":"YulFunctionCall","src":"22373:9:26"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"22365:4:26"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"22294:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"22297:1:26","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"22303:4:26","type":""}],"src":"22263:125:26"},{"body":{"nodeType":"YulBlock","src":"22456:365:26","statements":[{"body":{"nodeType":"YulBlock","src":"22505:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22514:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22517:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22507:6:26"},"nodeType":"YulFunctionCall","src":"22507:12:26"},"nodeType":"YulExpressionStatement","src":"22507:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22484:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22492:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22480:3:26"},"nodeType":"YulFunctionCall","src":"22480:17:26"},{"name":"end","nodeType":"YulIdentifier","src":"22499:3:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"22476:3:26"},"nodeType":"YulFunctionCall","src":"22476:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"22469:6:26"},"nodeType":"YulFunctionCall","src":"22469:35:26"},"nodeType":"YulIf","src":"22466:55:26"},{"nodeType":"YulVariableDeclaration","src":"22530:23:26","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22546:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22540:5:26"},"nodeType":"YulFunctionCall","src":"22540:13:26"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"22534:2:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22562:63:26","value":{"arguments":[{"arguments":[{"name":"_1","nodeType":"YulIdentifier","src":"22621:2:26"}],"functionName":{"name":"array_allocation_size_bytes","nodeType":"YulIdentifier","src":"22593:27:26"},"nodeType":"YulFunctionCall","src":"22593:31:26"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"22577:15:26"},"nodeType":"YulFunctionCall","src":"22577:48:26"},"variables":[{"name":"array_1","nodeType":"YulTypedName","src":"22566:7:26","type":""}]},{"expression":{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"22641:7:26"},{"name":"_1","nodeType":"YulIdentifier","src":"22650:2:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22634:6:26"},"nodeType":"YulFunctionCall","src":"22634:19:26"},"nodeType":"YulExpressionStatement","src":"22634:19:26"},{"body":{"nodeType":"YulBlock","src":"22701:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"22710:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"22713:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"22703:6:26"},"nodeType":"YulFunctionCall","src":"22703:12:26"},"nodeType":"YulExpressionStatement","src":"22703:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22676:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"22684:2:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22672:3:26"},"nodeType":"YulFunctionCall","src":"22672:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"22689:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22668:3:26"},"nodeType":"YulFunctionCall","src":"22668:26:26"},{"name":"end","nodeType":"YulIdentifier","src":"22696:3:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"22665:2:26"},"nodeType":"YulFunctionCall","src":"22665:35:26"},"nodeType":"YulIf","src":"22662:55:26"},{"expression":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"22752:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"22760:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22748:3:26"},"nodeType":"YulFunctionCall","src":"22748:17:26"},{"arguments":[{"name":"array_1","nodeType":"YulIdentifier","src":"22771:7:26"},{"kind":"number","nodeType":"YulLiteral","src":"22780:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22767:3:26"},"nodeType":"YulFunctionCall","src":"22767:18:26"},{"name":"_1","nodeType":"YulIdentifier","src":"22787:2:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"22726:21:26"},"nodeType":"YulFunctionCall","src":"22726:64:26"},"nodeType":"YulExpressionStatement","src":"22726:64:26"},{"nodeType":"YulAssignment","src":"22799:16:26","value":{"name":"array_1","nodeType":"YulIdentifier","src":"22808:7:26"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"22799:5:26"}]}]},"name":"abi_decode_bytes_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"22430:6:26","type":""},{"name":"end","nodeType":"YulTypedName","src":"22438:3:26","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"22446:5:26","type":""}],"src":"22393:428:26"},{"body":{"nodeType":"YulBlock","src":"22992:490:26","statements":[{"body":{"nodeType":"YulBlock","src":"23039:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23048:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23051:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23041:6:26"},"nodeType":"YulFunctionCall","src":"23041:12:26"},"nodeType":"YulExpressionStatement","src":"23041:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23013:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"23022:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23009:3:26"},"nodeType":"YulFunctionCall","src":"23009:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"23034:3:26","type":"","value":"160"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23005:3:26"},"nodeType":"YulFunctionCall","src":"23005:33:26"},"nodeType":"YulIf","src":"23002:53:26"},{"nodeType":"YulAssignment","src":"23064:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23080:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23074:5:26"},"nodeType":"YulFunctionCall","src":"23074:16:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23064:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"23099:38:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23122:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23133:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23118:3:26"},"nodeType":"YulFunctionCall","src":"23118:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23112:5:26"},"nodeType":"YulFunctionCall","src":"23112:25:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"23103:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"23171:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"23146:24:26"},"nodeType":"YulFunctionCall","src":"23146:31:26"},"nodeType":"YulExpressionStatement","src":"23146:31:26"},{"nodeType":"YulAssignment","src":"23186:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"23196:5:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23186:6:26"}]},{"nodeType":"YulAssignment","src":"23210:35:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23230:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23241:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23226:3:26"},"nodeType":"YulFunctionCall","src":"23226:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23220:5:26"},"nodeType":"YulFunctionCall","src":"23220:25:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23210:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"23254:39:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23278:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23289:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23274:3:26"},"nodeType":"YulFunctionCall","src":"23274:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23268:5:26"},"nodeType":"YulFunctionCall","src":"23268:25:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23258:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"23336:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23345:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23348:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23338:6:26"},"nodeType":"YulFunctionCall","src":"23338:12:26"},"nodeType":"YulExpressionStatement","src":"23338:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23308:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23316:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23305:2:26"},"nodeType":"YulFunctionCall","src":"23305:30:26"},"nodeType":"YulIf","src":"23302:50:26"},{"nodeType":"YulAssignment","src":"23361:70:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23403:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23414:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23399:3:26"},"nodeType":"YulFunctionCall","src":"23399:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23423:7:26"}],"functionName":{"name":"abi_decode_bytes_fromMemory","nodeType":"YulIdentifier","src":"23371:27:26"},"nodeType":"YulFunctionCall","src":"23371:60:26"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"23361:6:26"}]},{"nodeType":"YulAssignment","src":"23440:36:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23460:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23471:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23456:3:26"},"nodeType":"YulFunctionCall","src":"23456:19:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23450:5:26"},"nodeType":"YulFunctionCall","src":"23450:26:26"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"23440:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payablet_uint256t_bytes_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22926:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"22937:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"22949:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22957:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22965:6:26","type":""},{"name":"value3","nodeType":"YulTypedName","src":"22973:6:26","type":""},{"name":"value4","nodeType":"YulTypedName","src":"22981:6:26","type":""}],"src":"22826:656:26"},{"body":{"nodeType":"YulBlock","src":"23611:333:26","statements":[{"body":{"nodeType":"YulBlock","src":"23657:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23666:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23669:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23659:6:26"},"nodeType":"YulFunctionCall","src":"23659:12:26"},"nodeType":"YulExpressionStatement","src":"23659:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23632:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"23641:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23628:3:26"},"nodeType":"YulFunctionCall","src":"23628:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"23653:2:26","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23624:3:26"},"nodeType":"YulFunctionCall","src":"23624:32:26"},"nodeType":"YulIf","src":"23621:52:26"},{"nodeType":"YulAssignment","src":"23682:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23698:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23692:5:26"},"nodeType":"YulFunctionCall","src":"23692:16:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23682:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"23717:39:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23741:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23752:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23737:3:26"},"nodeType":"YulFunctionCall","src":"23737:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23731:5:26"},"nodeType":"YulFunctionCall","src":"23731:25:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23721:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"23799:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23808:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"23811:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"23801:6:26"},"nodeType":"YulFunctionCall","src":"23801:12:26"},"nodeType":"YulExpressionStatement","src":"23801:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23771:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"23779:18:26","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23768:2:26"},"nodeType":"YulFunctionCall","src":"23768:30:26"},"nodeType":"YulIf","src":"23765:50:26"},{"nodeType":"YulAssignment","src":"23824:70:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23866:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"23877:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23862:3:26"},"nodeType":"YulFunctionCall","src":"23862:22:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23886:7:26"}],"functionName":{"name":"abi_decode_bytes_fromMemory","nodeType":"YulIdentifier","src":"23834:27:26"},"nodeType":"YulFunctionCall","src":"23834:60:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23824:6:26"}]},{"nodeType":"YulAssignment","src":"23903:35:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23923:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"23934:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23919:3:26"},"nodeType":"YulFunctionCall","src":"23919:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23913:5:26"},"nodeType":"YulFunctionCall","src":"23913:25:26"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"23903:6:26"}]}]},"name":"abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23561:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23572:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23584:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23592:6:26","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23600:6:26","type":""}],"src":"23487:457:26"},{"body":{"nodeType":"YulBlock","src":"24001:176:26","statements":[{"body":{"nodeType":"YulBlock","src":"24120:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24122:16:26"},"nodeType":"YulFunctionCall","src":"24122:18:26"},"nodeType":"YulExpressionStatement","src":"24122:18:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24032:1:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24025:6:26"},"nodeType":"YulFunctionCall","src":"24025:9:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24018:6:26"},"nodeType":"YulFunctionCall","src":"24018:17:26"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"24040:1:26"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24047:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"24115:1:26"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"24043:3:26"},"nodeType":"YulFunctionCall","src":"24043:74:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24037:2:26"},"nodeType":"YulFunctionCall","src":"24037:81:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24014:3:26"},"nodeType":"YulFunctionCall","src":"24014:105:26"},"nodeType":"YulIf","src":"24011:131:26"},{"nodeType":"YulAssignment","src":"24151:20:26","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"24166:1:26"},{"name":"y","nodeType":"YulIdentifier","src":"24169:1:26"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"24162:3:26"},"nodeType":"YulFunctionCall","src":"24162:9:26"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"24151:7:26"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"23980:1:26","type":""},{"name":"y","nodeType":"YulTypedName","src":"23983:1:26","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"23989:7:26","type":""}],"src":"23949:228:26"},{"body":{"nodeType":"YulBlock","src":"24229:149:26","statements":[{"body":{"nodeType":"YulBlock","src":"24256:22:26","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"24258:16:26"},"nodeType":"YulFunctionCall","src":"24258:18:26"},"nodeType":"YulExpressionStatement","src":"24258:18:26"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24249:5:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24242:6:26"},"nodeType":"YulFunctionCall","src":"24242:13:26"},"nodeType":"YulIf","src":"24239:39:26"},{"nodeType":"YulAssignment","src":"24287:85:26","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24298:5:26"},{"kind":"number","nodeType":"YulLiteral","src":"24305:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24294:3:26"},"nodeType":"YulFunctionCall","src":"24294:78:26"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24287:3:26"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24211:5:26","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24221:3:26","type":""}],"src":"24182:196:26"},{"body":{"nodeType":"YulBlock","src":"24557:182:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24574:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24585:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24567:6:26"},"nodeType":"YulFunctionCall","src":"24567:21:26"},"nodeType":"YulExpressionStatement","src":"24567:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24608:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24619:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24604:3:26"},"nodeType":"YulFunctionCall","src":"24604:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"24624:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24597:6:26"},"nodeType":"YulFunctionCall","src":"24597:30:26"},"nodeType":"YulExpressionStatement","src":"24597:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24647:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24658:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24643:3:26"},"nodeType":"YulFunctionCall","src":"24643:18:26"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"24663:34:26","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24636:6:26"},"nodeType":"YulFunctionCall","src":"24636:62:26"},"nodeType":"YulExpressionStatement","src":"24636:62:26"},{"nodeType":"YulAssignment","src":"24707:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24719:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24730:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24715:3:26"},"nodeType":"YulFunctionCall","src":"24715:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24707:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24534:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24548:4:26","type":""}],"src":"24383:356:26"},{"body":{"nodeType":"YulBlock","src":"24958:168:26","statements":[{"nodeType":"YulAssignment","src":"24968:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24980:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"24991:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24976:3:26"},"nodeType":"YulFunctionCall","src":"24976:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24968:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25010:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25025:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"25033:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"25021:3:26"},"nodeType":"YulFunctionCall","src":"25021:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25003:6:26"},"nodeType":"YulFunctionCall","src":"25003:74:26"},"nodeType":"YulExpressionStatement","src":"25003:74:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25097:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25108:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25093:3:26"},"nodeType":"YulFunctionCall","src":"25093:18:26"},{"name":"value1","nodeType":"YulIdentifier","src":"25113:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25086:6:26"},"nodeType":"YulFunctionCall","src":"25086:34:26"},"nodeType":"YulExpressionStatement","src":"25086:34:26"}]},"name":"abi_encode_tuple_t_address_t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24919:9:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24930:6:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24938:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24949:4:26","type":""}],"src":"24744:382:26"},{"body":{"nodeType":"YulBlock","src":"25229:287:26","statements":[{"body":{"nodeType":"YulBlock","src":"25275:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25284:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25287:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25277:6:26"},"nodeType":"YulFunctionCall","src":"25277:12:26"},"nodeType":"YulExpressionStatement","src":"25277:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25250:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"25259:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25246:3:26"},"nodeType":"YulFunctionCall","src":"25246:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"25271:2:26","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25242:3:26"},"nodeType":"YulFunctionCall","src":"25242:32:26"},"nodeType":"YulIf","src":"25239:52:26"},{"nodeType":"YulVariableDeclaration","src":"25300:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25319:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25313:5:26"},"nodeType":"YulFunctionCall","src":"25313:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"25304:5:26","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25363:5:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"25338:24:26"},"nodeType":"YulFunctionCall","src":"25338:31:26"},"nodeType":"YulExpressionStatement","src":"25338:31:26"},{"nodeType":"YulAssignment","src":"25378:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"25388:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25378:6:26"}]},{"nodeType":"YulVariableDeclaration","src":"25402:40:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25427:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25438:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25423:3:26"},"nodeType":"YulFunctionCall","src":"25423:18:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25417:5:26"},"nodeType":"YulFunctionCall","src":"25417:25:26"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"25406:7:26","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"25476:7:26"}],"functionName":{"name":"validator_revert_address","nodeType":"YulIdentifier","src":"25451:24:26"},"nodeType":"YulFunctionCall","src":"25451:33:26"},"nodeType":"YulExpressionStatement","src":"25451:33:26"},{"nodeType":"YulAssignment","src":"25493:17:26","value":{"name":"value_1","nodeType":"YulIdentifier","src":"25503:7:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"25493:6:26"}]}]},"name":"abi_decode_tuple_t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25187:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25198:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25210:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25218:6:26","type":""}],"src":"25131:385:26"},{"body":{"nodeType":"YulBlock","src":"25695:154:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25712:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25723:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25705:6:26"},"nodeType":"YulFunctionCall","src":"25705:21:26"},"nodeType":"YulExpressionStatement","src":"25705:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25746:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25757:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25742:3:26"},"nodeType":"YulFunctionCall","src":"25742:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"25762:1:26","type":"","value":"5"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25735:6:26"},"nodeType":"YulFunctionCall","src":"25735:29:26"},"nodeType":"YulExpressionStatement","src":"25735:29:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25784:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25795:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25780:3:26"},"nodeType":"YulFunctionCall","src":"25780:18:26"},{"hexValue":"5356323031","kind":"string","nodeType":"YulLiteral","src":"25800:7:26","type":"","value":"SV201"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25773:6:26"},"nodeType":"YulFunctionCall","src":"25773:35:26"},"nodeType":"YulExpressionStatement","src":"25773:35:26"},{"nodeType":"YulAssignment","src":"25817:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25829:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"25840:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25825:3:26"},"nodeType":"YulFunctionCall","src":"25825:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25817:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_0e1675febfa7cad03c7b3c41f70e04f2b8b253e5d05a679d3dfd65a7f100ca98__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25672:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25686:4:26","type":""}],"src":"25521:328:26"},{"body":{"nodeType":"YulBlock","src":"25991:137:26","statements":[{"nodeType":"YulVariableDeclaration","src":"26001:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26021:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"26015:5:26"},"nodeType":"YulFunctionCall","src":"26015:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"26005:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"26063:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"26071:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26059:3:26"},"nodeType":"YulFunctionCall","src":"26059:17:26"},{"name":"pos","nodeType":"YulIdentifier","src":"26078:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"26083:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"26037:21:26"},"nodeType":"YulFunctionCall","src":"26037:53:26"},"nodeType":"YulExpressionStatement","src":"26037:53:26"},{"nodeType":"YulAssignment","src":"26099:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26110:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"26115:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26106:3:26"},"nodeType":"YulFunctionCall","src":"26106:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26099:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25967:3:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25972:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25983:3:26","type":""}],"src":"25854:274:26"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IAddressProvider_$4138__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_contract$_IAddressProvider_$4138t_contract$_IGovernanceAddressProvider_$4203t_contract$_IPool_$628t_addresst_contract$_IDexAddressProvider_$4176(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_address(value_4)\n        value4 := value_4\n    }\n    function abi_decode_bytes_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        value6 := calldataload(add(headStart, 160))\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_addresst_addresst_uint256t_uint256t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value2 := value_1\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let offset := calldataload(add(headStart, 160))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value5_1, value6_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value5 := value5_1\n        value6 := value6_1\n        value7 := calldataload(add(headStart, 192))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_addresst_uint256t_bytes_calldata_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value3_1, value4_1 := abi_decode_bytes_calldata(add(headStart, offset), dataEnd)\n        value3 := value3_1\n        value4 := value4_1\n        value5 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_array_address_dyn_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, shl(5, length)), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_array$_t_uint256_$dyn_calldata_ptrt_addresst_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        let value2_1, value3_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_1), dataEnd)\n        value2 := value2_1\n        value3 := value3_1\n        let offset_2 := calldataload(add(headStart, 64))\n        if gt(offset_2, _1) { revert(0, 0) }\n        let value4_1, value5_1 := abi_decode_array_address_dyn_calldata(add(headStart, offset_2), dataEnd)\n        value4 := value4_1\n        value5 := value5_1\n        let value := calldataload(add(headStart, 96))\n        validator_revert_address(value)\n        value6 := value\n        let offset_3 := calldataload(add(headStart, 128))\n        if gt(offset_3, _1) { revert(0, 0) }\n        let value7_1, value8_1 := abi_decode_bytes_calldata(add(headStart, offset_3), dataEnd)\n        value7 := value7_1\n        value8 := value8_1\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_contract$_IPool_$628__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_contract$_IGovernanceAddressProvider_$4203__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_985b8f506bc1b9daee5c456197edebf8bf9a5eb98683f22dba958debb0fdd634__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"SV001\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_address(value, pos)\n    {\n        mstore(pos, and(value, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_7a2a4e26842155ea933fe6eb6e3137eb5a296dcdf55721c552be7b4c3cc23759__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"Initializable: contract is alrea\")\n        mstore(add(headStart, 96), \"dy initialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_bytes_calldata(start, length, pos) -> end\n    {\n        mstore(pos, length)\n        calldatacopy(add(pos, 0x20), start, length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 96)\n        tail := abi_encode_bytes_calldata(value1, value2, add(headStart, 96))\n        mstore(add(headStart, 64), value3)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_enum$_Operation_$2751_t_bytes_memory_ptr__to_t_uint8_t_bytes_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_bytes(value1, add(headStart, 64))\n    }\n    function abi_decode_tuple_t_contract$_IVaultsCore_$4439_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"AccessControl: can only renounce\")\n        mstore(add(headStart, 96), \" roles for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_address_t_uint256_t_bytes_calldata_ptr_t_uint256__to_t_uint256_t_address_t_uint256_t_bytes_memory_ptr_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 160)\n        tail := abi_encode_bytes_calldata(value3, value4, add(headStart, 160))\n        mstore(add(headStart, 128), value5)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_contract$_IVaultsDataProvider_$4567_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_4103a63670b349a9676cf644fe9c35170cd4d1b9ec6099358c4cf84fece51732__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"SV002\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_bytes(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 0x20)\n    }\n    function abi_decode_tuple_t_enum$_Operation_$2751t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(0, 0) }\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let _2 := calldataload(_1)\n        let array := allocate_memory(array_allocation_size_bytes(_2))\n        mstore(array, _2)\n        if gt(add(add(_1, _2), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(array, 32), add(_1, 32), _2)\n        mstore(add(add(array, _2), 32), 0)\n        value1 := array\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_uint8(value, pos)\n    { mstore(pos, and(value, 0xff)) }\n    function abi_encode_tuple_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_bytes_memory_ptr_t_uint8__to_t_address_t_array$_t_address_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_address_t_bytes_memory_ptr_t_uint16__fromStack_reversed(headStart, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        let tail_1 := add(headStart, 224)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        let _2 := 32\n        mstore(add(headStart, _2), 224)\n        let pos := tail_1\n        let length := mload(value1)\n        mstore(tail_1, length)\n        pos := add(headStart, 256)\n        let srcPtr := add(value1, _2)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, and(mload(srcPtr), _1))\n            pos := add(pos, _2)\n            srcPtr := add(srcPtr, _2)\n        }\n        mstore(add(headStart, 64), sub(pos, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value2, pos)\n        mstore(add(headStart, 96), sub(tail_2, headStart))\n        let tail_3 := abi_encode_array_uint256_dyn(value3, tail_2)\n        abi_encode_address(value4, add(headStart, 128))\n        mstore(add(headStart, 160), sub(tail_3, headStart))\n        tail := abi_encode_bytes(value5, tail_3)\n        abi_encode_uint8(value6, add(headStart, 192))\n    }\n    function abi_decode_tuple_t_contract$_IMIMO_$4223_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        mstore(pos, \"AccessControl: account \")\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), add(pos, 23), length)\n        let _1 := add(pos, length)\n        mstore(add(_1, 23), \" is missing role \")\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), add(_1, 40), length_1)\n        end := add(add(_1, length_1), 40)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_1992c39b3531f2a2ddcaa89813e534531b16ce70b9621f5e56a38ced23bb4a62__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"SV101\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_decode_bytes_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let array_1 := allocate_memory(array_allocation_size_bytes(_1))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        copy_memory_to_memory(add(offset, 0x20), add(array_1, 0x20), _1)\n        array := array_1\n    }\n    function abi_decode_tuple_t_uint256t_address_payablet_uint256t_bytes_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n        value2 := mload(add(headStart, 64))\n        let offset := mload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes_fromMemory(add(headStart, offset), dataEnd)\n        value4 := mload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256t_bytes_memory_ptrt_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        let offset := mload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes_fromMemory(add(headStart, offset), dataEnd)\n        value2 := mload(add(headStart, 64))\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Strings: hex length insufficient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_rational_115792089237316195423570985008687907853269984665640564039457584007913129639935_by_1__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_stringliteral_0e1675febfa7cad03c7b3c41f70e04f2b8b253e5d05a679d3dfd65a7f100ca98__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 5)\n        mstore(add(headStart, 64), \"SV201\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x180 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x60ED390A GT PUSH2 0xD6 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xBEDC4066 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xBEDC4066 EQ PUSH2 0x457 JUMPI DUP1 PUSH4 0xCCB21BB5 EQ PUSH2 0x477 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x47F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0xA3D11158 EQ PUSH2 0x417 JUMPI DUP1 PUSH4 0xA59A9973 EQ PUSH2 0x437 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86BB48FC GT PUSH2 0xB0 JUMPI DUP1 PUSH4 0x86BB48FC EQ PUSH2 0x38B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x39E JUMPI DUP1 PUSH4 0x920F5C84 EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x60ED390A EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0x70974818 EQ PUSH2 0x34B JUMPI DUP1 PUSH4 0x70D82363 EQ PUSH2 0x36B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x36568ABE GT PUSH2 0x112 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x48B64410 EQ PUSH2 0x2F8 JUMPI DUP1 PUSH4 0x505B6A76 EQ PUSH2 0x318 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x25CA9674 EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x2B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xDBE671F GT PUSH2 0x169 JUMPI DUP1 PUSH4 0xDBE671F EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x1459457A EQ PUSH2 0x21A JUMPI DUP1 PUSH4 0x1AE63F3E EQ PUSH2 0x23A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x71E41D7 EQ PUSH2 0x1BA JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x191 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x1A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CA5 JUMP JUMPDEST PUSH2 0x49F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x1D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x508 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x202 SWAP1 PUSH3 0x10000 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x235 CALLDATASIZE PUSH1 0x4 PUSH2 0x3D01 JUMP JUMPDEST PUSH2 0x663 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x246 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x255 CALLDATASIZE PUSH1 0x4 PUSH2 0x3DBB JUMP JUMPDEST PUSH2 0x84C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x266 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH2 0x275 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E37 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E50 JUMP JUMPDEST PUSH2 0x9B1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0xE8D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x2F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0xEB8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x313 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EB5 JUMP JUMPDEST PUSH2 0xF40 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x324 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x333 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F42 JUMP JUMPDEST PUSH2 0x101A JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0x3CE4 JUMP JUMPDEST PUSH2 0x135A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x357 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x366 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F42 JUMP JUMPDEST PUSH2 0x143C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x377 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x386 CALLDATASIZE PUSH1 0x4 PUSH2 0x3F64 JUMP JUMPDEST PUSH2 0x1712 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x399 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E37 JUMP JUMPDEST PUSH2 0x1AA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A5 PUSH2 0x3FD CALLDATASIZE PUSH1 0x4 PUSH2 0x401B JUMP JUMPDEST PUSH2 0x1DCD JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x40E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x28A PUSH1 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x40F6 JUMP JUMPDEST PUSH2 0x1FF3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x443 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3 SLOAD PUSH2 0x202 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x463 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x202 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1DA PUSH2 0x227B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DA PUSH2 0x49A CALLDATASIZE PUSH1 0x4 PUSH2 0x3E85 JUMP JUMPDEST PUSH2 0x2347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 EQ DUP1 PUSH2 0x502 JUMPI POP PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5C3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E7 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x632 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x656 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x65F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x67E JUMPI PUSH1 0x1 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x682 JUMP JUMPDEST ADDRESS EXTCODESIZE ISZERO JUMPDEST PUSH2 0x6F4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469616C697A61626C653A20636F6E747261637420697320616C726561 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x647920696E697469616C697A6564000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 ISZERO PUSH2 0x733 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000 AND PUSH2 0x101 OR SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x746 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x759 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x76C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x77F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000FFFF AND PUSH3 0x10000 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 DUP2 AND SWAP2 SWAP1 SWAP2 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 SWAP1 DUP2 AND DUP9 DUP5 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x3 DUP1 SLOAD DUP3 AND DUP8 DUP5 AND OR SWAP1 SSTORE PUSH1 0x4 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 DUP5 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x815 PUSH1 0x0 DUP5 PUSH2 0x236D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x844 JUMPI PUSH1 0x1 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00FF AND SWAP1 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x8B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x91E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x942 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x0 DUP5 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x95C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 DUP1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x982 SWAP3 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x99E DUP10 DUP9 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x9A6 PUSH2 0x24B3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xA17 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP4 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA7E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xAA2 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAEF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB13 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB80 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBA4 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBF8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC1C SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA178908500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1789085 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD17 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD79 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD9D SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xDE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE07 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE52 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xE76 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0xE7F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE87 PUSH2 0x24B3 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0xEA9 DUP2 CALLER PUSH2 0x278B JUMP JUMPDEST PUSH2 0xEB3 DUP4 DUP4 PUSH2 0x2809 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0xF36 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x56A JUMP JUMPDEST PUSH2 0x65F DUP3 DUP3 PUSH2 0x28A7 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0xFA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP9 DUP9 DUP7 DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFC3 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x427D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xFEA SWAP3 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x1006 DUP9 DUP9 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x100E PUSH2 0x24B3 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1080 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x10D3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10F7 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xECBCDAB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xECBCDAB SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x115B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x116F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11C6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x11EA SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x124C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1270 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12DA SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1325 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1349 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x1352 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x65F PUSH2 0x24B3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x13C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x60ED390A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x60ED390A SWAP1 PUSH1 0x24 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x141C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1430 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH2 0x65F PUSH2 0x24B3 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x14A2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x14F5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1519 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x157D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1591 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x65D55287 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x15EA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x160E SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xB508BC59 DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x163B SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1658 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x167C SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1709 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0xEB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1778 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1791 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4188 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH1 0x0 PUSH1 0x2 DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x17B8 SWAP3 SWAP2 SWAP1 PUSH2 0x4221 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP1 POP PUSH2 0x17D4 DUP8 DUP8 DUP4 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x17DC PUSH2 0x24B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x182F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1853 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x18B5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x18D9 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x191F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1943 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x198E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x19B2 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x19BB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19C3 PUSH2 0x24B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP8 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 DUP4 SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1A13 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1A37 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A82 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x100E SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xAD3228B676F7D3CD4284A5443F17F1962B36E491B30A40B2405849E597BA5FB5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x1B0C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH5 0x5356303031 PUSH1 0xD8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B5F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B83 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x57F256E3 CALLVALUE DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1BB1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1BCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BDE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1C36 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1C5A SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1CBC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1CE0 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D26 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D4A SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D95 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DB9 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x1DC2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DCA PUSH2 0x24B3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1E2A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356303032000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x1E39 DUP5 DUP7 ADD DUP7 PUSH2 0x432E JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 DUP13 DUP13 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1E52 JUMPI PUSH2 0x1E52 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1E67 SWAP2 SWAP1 PUSH2 0x3CE4 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP10 DUP10 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1E7E JUMPI PUSH2 0x1E7E PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP13 DUP13 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1E98 JUMPI PUSH2 0x1E98 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD PUSH2 0x1EA9 SWAP2 SWAP1 PUSH2 0x43F1 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EBF JUMPI PUSH2 0x1EBF PUSH2 0x41B3 JUMP JUMPDEST EQ ISZERO PUSH2 0x1ED0 JUMPI PUSH2 0x1ED0 DUP3 DUP3 DUP6 PUSH2 0x2926 JUMP JUMPDEST PUSH1 0x1 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1EE4 JUMPI PUSH2 0x1EE4 PUSH2 0x41B3 JUMP JUMPDEST EQ ISZERO PUSH2 0x1F0F JUMPI PUSH2 0x1F0F DUP3 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1F01 JUMPI PUSH2 0x1F01 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 DUP7 PUSH2 0x2B11 JUMP JUMPDEST PUSH1 0x2 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1F23 JUMPI PUSH2 0x1F23 PUSH2 0x41B3 JUMP JUMPDEST EQ ISZERO PUSH2 0x1F4E JUMPI PUSH2 0x1F4E DUP3 DUP14 DUP14 PUSH1 0x0 DUP2 DUP2 LT PUSH2 0x1F40 JUMPI PUSH2 0x1F40 PUSH2 0x43C5 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 MUL ADD CALLDATALOAD DUP4 DUP7 PUSH2 0x3041 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE SWAP1 DUP4 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1FBA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1FDE SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 SWAP15 SWAP14 POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x205A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x207E SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x20CB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20EF SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x215C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2180 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21D4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x21F8 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x47E7EF2400000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP6 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x47E7EF24 SWAP1 PUSH1 0x44 ADD JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x225E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2272 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x22CE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x22F2 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF6326FB3 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x232C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2340 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH2 0x2363 DUP2 CALLER PUSH2 0x278B JUMP JUMPDEST PUSH2 0xEB3 DUP4 DUP4 PUSH2 0x28A7 JUMP JUMPDEST PUSH2 0x65F DUP3 DUP3 PUSH2 0x2809 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE SWAP3 SWAP4 POP PUSH1 0x0 SWAP3 SWAP2 POP PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP7 DUP7 DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x23F7 JUMPI PUSH2 0x23F7 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP5 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2411 JUMPI PUSH2 0x2411 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP1 MSTORE PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0xAB9C4B5D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 AND SWAP1 PUSH4 0xAB9C4B5D SWAP1 PUSH2 0x2478 SWAP1 ADDRESS SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP8 SWAP1 DUP5 SWAP1 DUP14 SWAP1 DUP14 SWAP1 PUSH1 0x4 ADD PUSH2 0x4444 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2492 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x24A6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH32 0x6D9B182300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0x6D9B1823 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2516 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x253A SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2580 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25A4 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST GT ISZERO PUSH2 0x2789 JUMPI PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6D9B1823 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x25FD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2621 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xA9059CBB CALLER PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x6D9B1823 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2683 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x26A7 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x26ED JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2711 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x275C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2780 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST PUSH2 0x2789 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x65F JUMPI PUSH2 0x27C7 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x14 PUSH2 0x35AF JUMP JUMPDEST PUSH2 0x27D2 DUP4 PUSH1 0x20 PUSH2 0x35AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x27E3 SWAP3 SWAP2 SWAP1 PUSH2 0x44FE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE PUSH3 0x461BCD PUSH1 0xE5 SHL DUP3 MSTORE PUSH2 0x56A SWAP2 PUSH1 0x4 ADD PUSH2 0x457F JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND PUSH2 0x65F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x2863 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x65F JUMPI PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP6 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH2 0x2930 DUP2 DUP5 PUSH2 0x37DF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2976 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x299A SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST LT ISZERO PUSH2 0x29E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356313031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A3B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A5F SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0x47E7EF24 SWAP2 DUP7 SWAP2 DUP7 SWAP2 SWAP1 DUP4 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2AB2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2AD6 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH2 0x2AE0 SWAP2 SWAP1 PUSH2 0x4592 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH2 0x2244 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2B2D SWAP2 SWAP1 PUSH2 0x45EE JUMP JUMPDEST SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP SWAP5 POP PUSH2 0x2B43 DUP2 DUP11 DUP11 DUP6 PUSH2 0x3ACA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2B8A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2BAE SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST SWAP1 POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2C12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C36 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C83 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2CA7 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2CFB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2D1F SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xA178908500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP8 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xA1789085 SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2D8B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2D9F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2DF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2E1A SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xD8AED14500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0xD8AED145 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2E92 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2EE9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2F0D SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2F71 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2F85 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP11 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2FCF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2FF3 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST LT ISZERO PUSH2 0x100E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356313031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x305A SWAP2 SWAP1 PUSH2 0x465C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP PUSH2 0x306C DUP2 DUP9 DUP9 DUP6 PUSH2 0x3ACA JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x30C1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x30E5 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3149 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x316D SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x31B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x31D5 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3220 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3244 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3298 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x32BC SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3221BE54 DUP6 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x32E9 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3303 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3317 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x65D55287 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3370 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3394 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x828F8DEF DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x33C1 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x33DE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3402 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3457 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x347B SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x441A3E7000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND SWAP1 PUSH4 0x441A3E70 SWAP1 PUSH1 0x44 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x34DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x34F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP10 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND SWAP2 POP PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x353D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3561 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST LT ISZERO PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356313031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x35BE DUP4 PUSH1 0x2 PUSH2 0x46AC JUMP JUMPDEST PUSH2 0x35C9 SWAP1 PUSH1 0x2 PUSH2 0x43F1 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x35E1 JUMPI PUSH2 0x35E1 PUSH2 0x42BF JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x360B JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x3642 JUMPI PUSH2 0x3642 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x36A5 JUMPI PUSH2 0x36A5 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH2 0x36E1 DUP5 PUSH1 0x2 PUSH2 0x46AC JUMP JUMPDEST PUSH2 0x36EC SWAP1 PUSH1 0x1 PUSH2 0x43F1 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3789 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 DUP6 PUSH1 0xF AND PUSH1 0x10 DUP2 LT PUSH2 0x372D JUMPI PUSH2 0x372D PUSH2 0x43C5 JUMP JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x3743 JUMPI PUSH2 0x3743 PUSH2 0x43C5 JUMP JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 SWAP5 SWAP1 SWAP5 SHR SWAP4 PUSH2 0x3782 DUP2 PUSH2 0x46CB JUMP JUMPDEST SWAP1 POP PUSH2 0x36EF JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x37D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x37F8 SWAP2 SWAP1 PUSH2 0x465C JUMP JUMPDEST SWAP3 POP SWAP3 POP SWAP3 POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3860 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3884 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x0 NOT PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x38D2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x38F6 SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xF2F4EB26 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x394A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x396E SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND SWAP2 PUSH4 0xA1789085 SWAP2 DUP8 SWAP2 DUP3 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x39BE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x39E2 SWAP2 SWAP1 PUSH2 0x4122 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3A2F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3A43 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x16D8A5A9 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3A9C JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3AC0 SWAP2 SWAP1 PUSH2 0x4260 JUMP JUMPDEST SWAP1 POP PUSH2 0x844 DUP3 DUP3 DUP7 DUP7 JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH32 0x2BFAC6BE00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE SWAP2 DUP3 ADD DUP7 SWAP1 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x2BFAC6BE SWAP1 PUSH1 0x24 ADD PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3B2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3B52 SWAP2 SWAP1 PUSH2 0x46E2 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x3B77 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO ISZERO JUMPDEST PUSH2 0x3BC3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x5 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5356323031000000000000000000000000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x56A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x95EA7B300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP7 SWAP1 MSTORE DUP7 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3C2B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x3C4F SWAP2 SWAP1 PUSH2 0x413B JUMP JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x40 MLOAD PUSH2 0x3C68 SWAP2 SWAP1 PUSH2 0x4711 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9A6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9A6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CB7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x37D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1DCA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3CF6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x37D8 DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x3D19 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH2 0x3D24 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD PUSH2 0x3D34 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH2 0x3D44 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH2 0x3D54 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH2 0x3D64 DUP2 PUSH2 0x3CCF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3D84 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x3DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xC0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3DD6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP8 CALLDATALOAD PUSH2 0x3DE1 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP7 POP PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3E12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3E1E DUP11 DUP3 DUP12 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP9 SWAP12 SWAP8 SWAP11 POP SWAP6 SWAP9 SWAP5 SWAP8 SWAP6 SWAP7 PUSH1 0xA0 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3E65 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3E70 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3E98 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x3EAA DUP2 PUSH2 0x3CCF JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xE0 DUP10 DUP12 SUB SLT ISZERO PUSH2 0x3ED1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP9 CALLDATALOAD SWAP8 POP PUSH1 0x20 DUP10 ADD CALLDATALOAD PUSH2 0x3EE3 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP7 POP PUSH1 0x40 DUP10 ADD CALLDATALOAD PUSH2 0x3EF3 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP6 POP PUSH1 0x60 DUP10 ADD CALLDATALOAD SWAP5 POP PUSH1 0x80 DUP10 ADD CALLDATALOAD SWAP4 POP PUSH1 0xA0 DUP10 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F1D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3F29 DUP12 DUP3 DUP13 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP10 SWAP13 SWAP9 SWAP12 POP SWAP7 SWAP10 SWAP6 SWAP9 SWAP5 SWAP8 SWAP5 SWAP6 PUSH1 0xC0 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3F55 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xA0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x3F7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x3F8F DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3FB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x3FBE DUP10 DUP3 DUP11 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP8 SWAP11 SWAP7 SWAP10 POP SWAP5 SWAP8 SWAP5 SWAP7 SWAP6 PUSH1 0x80 SWAP1 SWAP6 ADD CALLDATALOAD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1F DUP5 ADD SLT PUSH2 0x3FE8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4000 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP4 ADD SWAP2 POP DUP4 PUSH1 0x20 DUP3 PUSH1 0x5 SHL DUP6 ADD ADD GT ISZERO PUSH2 0x3DB4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP11 DUP13 SUB SLT ISZERO PUSH2 0x4039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP10 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x4051 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x405D DUP14 DUP4 DUP15 ADD PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 SWAP12 POP SWAP10 POP PUSH1 0x20 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4076 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4082 DUP14 DUP4 DUP15 ADD PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 SWAP10 POP SWAP8 POP PUSH1 0x40 DUP13 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x409B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x40A7 DUP14 DUP4 DUP15 ADD PUSH2 0x3FD6 JUMP JUMPDEST SWAP1 SWAP8 POP SWAP6 POP PUSH1 0x60 DUP13 ADD CALLDATALOAD SWAP2 POP PUSH2 0x40BC DUP3 PUSH2 0x3CCF JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x80 DUP12 ADD CALLDATALOAD SWAP1 DUP1 DUP3 GT ISZERO PUSH2 0x40D2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x40DF DUP13 DUP3 DUP14 ADD PUSH2 0x3D72 JUMP JUMPDEST SWAP2 POP DUP1 SWAP4 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4109 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x4114 DUP2 PUSH2 0x3CCF JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x414D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x37D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP4 MSTORE DUP2 DUP2 PUSH1 0x20 DUP6 ADD CALLDATACOPY POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 ADD ADD MSTORE PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP5 ADD AND DUP5 ADD ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP5 DUP2 MSTORE PUSH1 0x60 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x41A2 PUSH1 0x60 DUP4 ADD DUP6 DUP8 PUSH2 0x415D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x40 DUP4 ADD MSTORE SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x41E4 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x41CC JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE87 JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x420D DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x41C9 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 DUP5 LT PUSH2 0x4241 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP4 DUP3 MSTORE PUSH1 0x40 PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x4258 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x41F5 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4272 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x37D8 DUP2 PUSH2 0x3CCF JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE DUP5 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x42AC PUSH1 0xA0 DUP4 ADD DUP6 DUP8 PUSH2 0x415D JUMP JUMPDEST SWAP1 POP DUP3 PUSH1 0x80 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x42FE JUMPI PUSH2 0x42FE PUSH2 0x42BF JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x4320 JUMPI PUSH2 0x4320 PUSH2 0x42BF JUMP JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4341 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x4350 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x436C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x437D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x4390 PUSH2 0x438B DUP3 PUSH2 0x4306 JUMP JUMPDEST PUSH2 0x42D5 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP7 PUSH1 0x20 DUP4 DUP6 ADD ADD GT ISZERO PUSH2 0x43A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x4404 JUMPI PUSH2 0x4404 PUSH2 0x43DB JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4439 JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x441D JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND DUP5 MSTORE PUSH1 0x20 PUSH1 0xE0 DUP2 DUP7 ADD MSTORE DUP3 DUP12 MLOAD DUP1 DUP6 MSTORE PUSH2 0x100 DUP8 ADD SWAP2 POP DUP3 DUP14 ADD SWAP5 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x4492 JUMPI DUP6 MLOAD DUP6 AND DUP4 MSTORE SWAP5 DUP4 ADD SWAP5 SWAP2 DUP4 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x4474 JUMP JUMPDEST POP POP DUP6 DUP2 SUB PUSH1 0x40 DUP8 ADD MSTORE PUSH2 0x44A6 DUP2 DUP13 PUSH2 0x4409 JUMP JUMPDEST SWAP4 POP POP POP POP DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x44BD DUP2 DUP9 PUSH2 0x4409 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x80 DUP6 ADD MSTORE SWAP1 POP DUP3 DUP2 SUB PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x44E0 DUP2 DUP7 PUSH2 0x41F5 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x44F2 PUSH1 0xC0 DUP4 ADD DUP5 PUSH1 0xFF AND SWAP1 MSTORE JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 DUP2 MSTORE PUSH1 0x0 DUP4 MLOAD PUSH2 0x4536 DUP2 PUSH1 0x17 DUP6 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x41C9 JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x17 SWAP2 DUP5 ADD SWAP2 DUP3 ADD MSTORE DUP4 MLOAD PUSH2 0x4573 DUP2 PUSH1 0x28 DUP5 ADD PUSH1 0x20 DUP9 ADD PUSH2 0x41C9 JUMP JUMPDEST ADD PUSH1 0x28 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x37D8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x41F5 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x45A4 JUMPI PUSH2 0x45A4 PUSH2 0x43DB JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x45BA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x45C8 PUSH2 0x438B DUP3 PUSH2 0x4306 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x45DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4258 DUP3 PUSH1 0x20 DUP4 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x41C9 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x4606 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 MLOAD SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD PUSH2 0x4618 DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x40 DUP8 ADD MLOAD PUSH1 0x60 DUP9 ADD MLOAD SWAP2 SWAP6 POP SWAP4 POP PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x463C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4648 DUP9 DUP3 DUP10 ADD PUSH2 0x45A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD MLOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x4671 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD SWAP3 POP PUSH1 0x20 DUP5 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x468F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x469B DUP7 DUP3 DUP8 ADD PUSH2 0x45A9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD MLOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x46C6 JUMPI PUSH2 0x46C6 PUSH2 0x43DB JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x46DA JUMPI PUSH2 0x46DA PUSH2 0x43DB JUMP JUMPDEST POP PUSH1 0x0 NOT ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x46F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH2 0x4700 DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x20 DUP5 ADD MLOAD SWAP1 SWAP3 POP PUSH2 0x3EAA DUP2 PUSH2 0x3CCF JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4723 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x41C9 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF7 0xAE PUSH13 0x69E575389778ACDFB91993490F SDIV 0x2A MSTORE DUP4 0xCA 0x5D 0xC3 SWAP10 0xE5 BALANCE SWAP9 0xD6 PUSH12 0xAC505164736F6C634300080A STOP CALLER ","sourceMap":"834:15720:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2620:202:3;;;;;;;;;;-1:-1:-1;2620:202:3;;;;;:::i;:::-;;:::i;:::-;;;516:14:26;;509:22;491:41;;479:2;464:18;2620:202:3;;;;;;;;11717:169:15;;;;;;;;;;-1:-1:-1;11717:169:15;;;;;:::i;:::-;;:::i;:::-;;1050:25;;;;;;;;;;-1:-1:-1;1050:25:15;;;;;;;-1:-1:-1;;;;;1050:25:15;;;;;;-1:-1:-1;;;;;1143:55:26;;;1125:74;;1113:2;1098:18;1050:25:15;954:251:26;1696:484:15;;;;;;;;;;-1:-1:-1;1696:484:15;;;;;:::i;:::-;;:::i;4883:498::-;;;;;;;;;;-1:-1:-1;4883:498:15;;;;;:::i;:::-;;:::i;4008:129:3:-;;;;;;;;;;-1:-1:-1;4008:129:3;;;;;:::i;:::-;4082:7;4108:12;;;;;;;;;;:22;;;;4008:129;;;;3636:25:26;;;3624:2;3609:18;4008:129:3;3490:177:26;12621:486:15;;;;;;;;;;-1:-1:-1;12621:486:15;;;;;:::i;:::-;;:::i;4387:145:3:-;;;;;;;;;;-1:-1:-1;4387:145:3;;;;;:::i;:::-;;:::i;5404:214::-;;;;;;;;;;-1:-1:-1;5404:214:3;;;;;:::i;:::-;;:::i;7245:736:15:-;;;;;;;;;;-1:-1:-1;7245:736:15;;;;;:::i;:::-;;:::i;11263:245::-;;;;;;;;;;-1:-1:-1;11263:245:15;;;;;:::i;:::-;;:::i;13223:192::-;;;;;;:::i;:::-;;:::i;10875:245::-;;;;;;;;;;-1:-1:-1;10875:245:15;;;;;:::i;:::-;;:::i;9712:876::-;;;;;;;;;;-1:-1:-1;9712:876:15;;;;;:::i;:::-;;:::i;13755:291::-;;;;;;:::i;:::-;;:::i;2909:145:3:-;;;;;;;;;;-1:-1:-1;2909:145:3;;;;;:::i;:::-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:3;;;;;;;;;;;;;;;2909:145;2853:916:15;;;;;;;;;;-1:-1:-1;2853:916:15;;;;;:::i;:::-;;:::i;2027:49:3:-;;;;;;;;;;-1:-1:-1;2027:49:3;2072:4;2027:49;;12087:245:15;;;;;;;;;;-1:-1:-1;12087:245:15;;;;;:::i;:::-;;:::i;1119:24::-;;;;;;;;;;-1:-1:-1;1119:24:15;;;;-1:-1:-1;;;;;1119:24:15;;;1079:36;;;;;;;;;;-1:-1:-1;1079:36:15;;;;-1:-1:-1;;;;;1079:36:15;;;13485:98;;;:::i;4766:147:3:-;;;;;;;;;;-1:-1:-1;4766:147:3;;;;;:::i;:::-;;:::i;2620:202::-;2705:4;-1:-1:-1;;;;;;2728:47:3;;2743:32;2728:47;;:87;;-1:-1:-1;952:25:11;-1:-1:-1;;;;;;937:40:11;;;2779:36:3;2721:94;2620:202;-1:-1:-1;;2620:202:3:o;11717:169:15:-;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;;;;;;;;;11849:30:::1;::::0;-1:-1:-1;;;11849:30:15;;11873:4:::1;11849:30;::::0;::::1;1125:74:26::0;11802:5:15;;-1:-1:-1;;;;;11822:14:15;::::1;::::0;::::1;::::0;11837:10:::1;::::0;11822:14;;11849:15:::1;::::0;1098:18:26;;11849:30:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11822:58;::::0;-1:-1:-1;;;;;;11822:58:15::1;::::0;;;;;;-1:-1:-1;;;;;10335:55:26;;;11822:58:15::1;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;10290:18;;11822:58:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11814:67;;;::::0;::::1;;11774:112;11717:169:::0;:::o;1696:484::-;2358:13:6;;;;;;;:48;;2394:12;;;;2393:13;2358:48;;;3125:4;1465:19:8;:23;2374:16:6;2350:107;;;;-1:-1:-1;;;2350:107:6;;10929:2:26;2350:107:6;;;10911:21:26;10968:2;10948:18;;;10941:30;11007:34;10987:18;;;10980:62;11078:16;11058:18;;;11051:44;11112:19;;2350:107:6;10727:410:26;2350:107:6;2491:13;;;;;;;2490:14;2514:98;;;;2564:4;2548:20;;2582:19;;;;;;2514:98;-1:-1:-1;;;;;1891:25:15;::::1;1883:34;;;::::0;::::1;;-1:-1:-1::0;;;;;1931:26:15;::::1;1923:35;;;::::0;::::1;;-1:-1:-1::0;;;;;1972:35:15;::::1;1964:44;;;::::0;::::1;;-1:-1:-1::0;;;;;2022:28:15;::::1;2014:37;;;::::0;::::1;;2058:1;:6:::0;;;::::1;::::0;-1:-1:-1;;;;;2058:6:15;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;:1:::1;2070:8:::0;;;;;::::1;::::0;;::::1;;::::0;;;2084:11:::1;:26:::0;;;::::1;::::0;;::::1;;::::0;;2116:6:::1;:14:::0;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;2137:38:::1;-1:-1:-1::0;2168:6:15;2137:10:::1;:38::i;:::-;2638:14:6::0;2634:66;;;2668:13;:21;;;;;;2634:66;2069:637;1696:484:15;;;;;:::o;4883:498::-;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;5084:68:::1;::::0;;;;5111:10:::1;5084:68;::::0;::::1;11405:34:26::0;5131:4:15::1;11455:18:26::0;;;11448:43;11507:18;;;11500:34;;;-1:-1:-1;;;;;5084:26:15;::::1;::::0;::::1;::::0;11317:18:26;;5084:68:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5158:27;5199:9;5210;;5221:8;5188:42;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5158:72;;5236:19;5269:18:::0;5289:14:::1;5258:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;5236:68;;5310:42;5324:5;5331:12;5345:6;5310:13;:42::i;:::-;5358:18;:16;:18::i;:::-;5078:303;;4883:498:::0;;;;;;;:::o;12621:486::-;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;12757:12:::1;12779:5;12757:28;;12791:5;-1:-1:-1::0;;;;;12791:13:15::1;;12813:1;;;;;;;;;-1:-1:-1::0;;;;;12813:1:15::1;-1:-1:-1::0;;;;;12813:6:15::1;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12791:47;::::0;-1:-1:-1;;;;;;12791:47:15::1;::::0;;;;;;-1:-1:-1;;;;;10335:55:26;;;12791:47:15::1;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;;;10290:18;;12791:47:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;12844:60:15::1;::::0;;;;12863:10:::1;12844:60;::::0;::::1;11405:34:26::0;12883:4:15::1;11455:18:26::0;;;11448:43;11507:18;;;11500:34;;;-1:-1:-1;;;;;12844:18:15;::::1;::::0;::::1;::::0;11317::26;;12844:60:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12910:1;;;;;;;;;-1:-1:-1::0;;;;;12910:1:15::1;-1:-1:-1::0;;;;;12910:6:15::1;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:61;::::0;;;;-1:-1:-1;;;;;14050:55:26;;;12910:61:15::1;::::0;::::1;14032:74:26::0;14122:18;;;14115:34;;;14165:18;;;14158:34;;;12910:25:15;;;::::1;::::0;::::1;::::0;14005:18:26;;12910:61:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;12992:1;;;;;;;;;-1:-1:-1::0;;;;;12992:1:15::1;-1:-1:-1::0;;;;;12992:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;12985:28:15::1;;13014:10;13033:1;;;;;;;;;-1:-1:-1::0;;;;;13033:1:15::1;-1:-1:-1::0;;;;;13033:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13026:44;::::0;-1:-1:-1;;;13026:44:15;;13064:4:::1;13026:44;::::0;::::1;1125:74:26::0;-1:-1:-1;;;;;13026:29:15;;;::::1;::::0;::::1;::::0;1098:18:26;;13026:44:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12985:86;::::0;-1:-1:-1;;;;;;12985:86:15::1;::::0;;;;;;-1:-1:-1;;;;;10335:55:26;;;12985:86:15::1;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;10290:18;;12985:86:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12977:95;;;::::0;::::1;;13084:18;:16;:18::i;:::-;12751:356;12621:486:::0;;;:::o;4387:145:3:-;4082:7;4108:12;;;;;;;;;;:22;;;2505:30;2516:4;719:10:9;2505::3;:30::i;:::-;4500:25:::1;4511:4;4517:7;4500:10;:25::i;:::-;4387:145:::0;;;:::o;5404:214::-;-1:-1:-1;;;;;5499:23:3;;719:10:9;5499:23:3;5491:83;;;;-1:-1:-1;;;5491:83:3;;14661:2:26;5491:83:3;;;14643:21:26;14700:2;14680:18;;;14673:30;14739:34;14719:18;;;14712:62;14810:17;14790:18;;;14783:45;14845:19;;5491:83:3;14459:411:26;5491:83:3;5585:26;5597:4;5603:7;5585:11;:26::i;7245:736:15:-;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;7714:28:::1;7756:7;7765:12;7779:9;7790;;7801:8;7745:65;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7714:96;;7816:19;7849;7870:15;7838:48;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7816:70;;7893:59;7907:14;7923:20;7945:6;7893:13;:59::i;:::-;7958:18;:16;:18::i;:::-;7708:273;;7245:736:::0;;;;;;;;:::o;11263:245::-;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;11346:1:::1;;;;;;;;;-1:-1:-1::0;;;;;11346:1:15::1;-1:-1:-1::0;;;;;11346:6:15::1;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:32;::::0;;;;::::1;::::0;::::1;15634:25:26::0;;;15675:18;;;15668:34;;;-1:-1:-1;;;;;11346:15:15;;;::::1;::::0;::::1;::::0;15607:18:26;;11346:32:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11399:1;;;;;;;;;-1:-1:-1::0;;;;;11399:1:15::1;-1:-1:-1::0;;;;;11399:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11392:28:15::1;;11421:10;11440:1;;;;;;;;;-1:-1:-1::0;;;;;11440:1:15::1;-1:-1:-1::0;;;;;11440:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11433:44;::::0;-1:-1:-1;;;11433:44:15;;11471:4:::1;11433:44;::::0;::::1;1125:74:26::0;-1:-1:-1;;;;;11433:29:15;;;::::1;::::0;::::1;::::0;1098:18:26;;11433:44:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11392:86;::::0;-1:-1:-1;;;;;;11392:86:15::1;::::0;;;;;;-1:-1:-1;;;;;10335:55:26;;;11392:86:15::1;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;10290:18;;11392:86:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11384:95;;;::::0;::::1;;11485:18;:16;:18::i;13223:192::-:0;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;13354:32:::1;::::0;;;;13380:4:::1;13354:32;::::0;::::1;1125:74:26::0;13335:12:15;;-1:-1:-1;;;;;13354:17:15;::::1;::::0;::::1;::::0;1098:18:26;;13354:32:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13392:18;:16;:18::i;10875:245::-:0;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;10960:1:::1;;;;;;;;;-1:-1:-1::0;;;;;10960:1:15::1;-1:-1:-1::0;;;;;10960:6:15::1;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;::::0;;;;::::1;::::0;::::1;15634:25:26::0;;;15675:18;;;15668:34;;;-1:-1:-1;;;;;10960:17:15;;;::::1;::::0;::::1;::::0;15607:18:26;;10960:34:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;11000:12;11022:1;;;;;;;;;-1:-1:-1::0;;;;;11022:1:15::1;-1:-1:-1::0;;;;;11022:12:15::1;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;11022:34:15::1;;11057:7;11022:43;;;;;;;;;;;;;3636:25:26::0;;3624:2;3609:18;;3490:177;11022:43:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11080:34;::::0;;;;11095:10:::1;11080:34;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;;;11000:66:15;;-1:-1:-1;;;;;;11080:14:15;::::1;::::0;::::1;::::0;10290:18:26;;11080:34:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11072:43;;;::::0;::::1;9712:876:::0;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;10042:29:::1;10085:7;10094:9;;10105:8;10074:40;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10042:72;;10120:19;10153:15;10170:16;10142:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;10120:67;;10193:50;10207:14;10223:11;10236:6;10193:13;:50::i;:::-;10250:18;:16;:18::i;:::-;10356:1;;;;;;;;;-1:-1:-1::0;;;;;10356:1:15::1;-1:-1:-1::0;;;;;10356:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10349:28:15::1;;10378:10;10397:1;;;;;;;;;-1:-1:-1::0;;;;;10397:1:15::1;-1:-1:-1::0;;;;;10397:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10390:44;::::0;-1:-1:-1;;;10390:44:15;;10428:4:::1;10390:44;::::0;::::1;1125:74:26::0;-1:-1:-1;;;;;10390:29:15;;;::::1;::::0;::::1;::::0;1098:18:26;;10390:44:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10349:86;::::0;-1:-1:-1;;;;;;10349:86:15::1;::::0;;;;;;-1:-1:-1;;;;;10335:55:26;;;10349:86:15::1;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;10290:18;;10349:86:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10341:95;;;::::0;::::1;;10442:18;:16;:18::i;:::-;10547:35;::::0;-1:-1:-1;;;10547:35:15;;10576:4:::1;10547:35;::::0;::::1;1125:74:26::0;10494:14:15;;-1:-1:-1;;;;;10515:19:15;::::1;::::0;::::1;::::0;10535:10:::1;::::0;10515:19;;10547:20:::1;::::0;1098:18:26;;10547:35:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10515:68;::::0;-1:-1:-1;;;;;;10515:68:15::1;::::0;;;;;;-1:-1:-1;;;;;10335:55:26;;;10515:68:15::1;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;10290:18;;10515:68:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;13755:291::-:0;1250:10;2072:4:3;3018:29;;;:12;;:29;:12;:29;;;;;1214:57:15;;;;-1:-1:-1;;;1214:57:15;;9460:2:26;1214:57:15;;;9442:21:26;9499:1;9479:18;;;9472:29;-1:-1:-1;;;9517:18:26;;;9510:35;9562:18;;1214:57:15;9258:328:26;1214:57:15;13848:1:::1;;;;;;;;;-1:-1:-1::0;;;;;13848:1:15::1;-1:-1:-1::0;;;;;13848:6:15::1;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13848:28:15::1;;13885:9;13897:12;13848:62;;;;;;;;;;;;;3636:25:26::0;;3624:2;3609:18;;3490:177;13848:62:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;13931:1;;;;;;;;;-1:-1:-1::0;;;;;13931:1:15::1;-1:-1:-1::0;;;;;13931:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;13924:28:15::1;;13953:10;13972:1;;;;;;;;;-1:-1:-1::0;;;;;13972:1:15::1;-1:-1:-1::0;;;;;13972:9:15::1;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13965:44;::::0;-1:-1:-1;;;13965:44:15;;14003:4:::1;13965:44;::::0;::::1;1125:74:26::0;-1:-1:-1;;;;;13965:29:15;;;::::1;::::0;::::1;::::0;1098:18:26;;13965:44:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13924:86;::::0;-1:-1:-1;;;;;;13924:86:15::1;::::0;;;;;;-1:-1:-1;;;;;10335:55:26;;;13924:86:15::1;::::0;::::1;10317:74:26::0;10407:18;;;10400:34;10290:18;;13924:86:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13916:95;;;::::0;::::1;;14023:18;:16;:18::i;:::-;13755:291:::0;:::o;2853:916::-;3079:11;;3037:4;;-1:-1:-1;;;;;3079:11:15;3057:10;:34;3049:52;;;;-1:-1:-1;;;3049:52:15;;16381:2:26;3049:52:15;;;16363:21:26;16420:1;16400:18;;;16393:29;16458:7;16438:18;;;16431:35;16483:18;;3049:52:15;16179:328:26;3049:52:15;3108:19;;3161:38;;;;3172:6;3161:38;:::i;:::-;3107:92;;;;3205:12;3227:6;;3234:1;3227:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;3205:32;;3243:28;3287:8;;3296:1;3287:11;;;;;;;:::i;:::-;;;;;;;3274:7;;3282:1;3274:10;;;;;;;:::i;:::-;;;;;;;:24;;;;:::i;:::-;3243:55;-1:-1:-1;3321:18:15;3308:9;:31;;;;;;;;:::i;:::-;;3304:115;;;3349:63;3367:5;3374:20;3396:15;3349:17;:63::i;:::-;3441:19;3428:9;:32;;;;;;;;:::i;:::-;;3424:129;;;3470:76;3489:5;3496:7;;3504:1;3496:10;;;;;;;:::i;:::-;;;;;;;3508:20;3530:15;3470:18;:76::i;:::-;3575:15;3562:9;:28;;;;;;;;:::i;:::-;;3558:126;;;3600:77;3620:5;3627:7;;3635:1;3627:10;;;;;;;:::i;:::-;;;;;;;3639:20;3661:15;3600:19;:77::i;:::-;3712:11;;3690:57;;;;;-1:-1:-1;;;;;3712:11:15;;;3690:57;;;10317:74:26;10407:18;;;10400:34;;;3690:13:15;;;;;;10290:18:26;;3690:57:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3760:4:15;;2853:916;-1:-1:-1;;;;;;;;;;;;;;2853:916:15:o;12087:245::-;12157:12;12179:5;12157:28;;12191:5;-1:-1:-1;;;;;12191:13:15;;12213:1;;;;;;;;;-1:-1:-1;;;;;12213:1:15;-1:-1:-1;;;;;12213:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12191:40;;-1:-1:-1;;;;;;12191:40:15;;;;;;;-1:-1:-1;;;;;10335:55:26;;;12191:40:15;;;10317:74:26;10407:18;;;10400:34;;;10290:18;;12191:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12237:53:15;;;;;12256:10;12237:53;;;11405:34:26;12276:4:15;11455:18:26;;;11448:43;11507:18;;;11500:34;;;-1:-1:-1;;;;;12237:18:15;;;;;11317::26;;12237:53:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;12296:1;;;;;;;;;-1:-1:-1;;;;;12296:1:15;-1:-1:-1;;;;;12296:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:31;;;;;-1:-1:-1;;;;;10335:55:26;;;12296:31:15;;;10317:74:26;10407:18;;;10400:34;;;12296:16:15;;;;;;;10290:18:26;;12296:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12151:181;12087:245;;:::o;13485:98::-;13537:1;;;;;;;;;-1:-1:-1;;;;;13537:1:15;-1:-1:-1;;;;;13537:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13537:19:15;;13565:9;13537:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13485:98::o;4766:147:3:-;4082:7;4108:12;;;;;;;;;;:22;;;2505:30;2516:4;719:10:9;2505::3;:30::i;:::-;4880:26:::1;4892:4;4898:7;4880:11;:26::i;6257:110::-:0;6335:25;6346:4;6352:7;6335:10;:25::i;15858:423:15:-;16014:16;;;16028:1;16014:16;;;;;;;;;15964:18;;;;16014:16;;;;;;;;;;-1:-1:-1;;16063:16:15;;;16077:1;16063:16;;;;;;;;;15988:42;;-1:-1:-1;16036:24:15;;16063:16;-1:-1:-1;16063:16:15;;;;;;;;;-1:-1:-1;;16110:16:15;;;16124:1;16110:16;;;;;;;;;16036:43;;-1:-1:-1;16085:22:15;;16110:16;-1:-1:-1;16110:16:15;;;;;;;;;;;-1:-1:-1;16110:16:15;16085:41;;16159:5;16166:6;16133;16140:1;16133:9;;;;;;;;:::i;:::-;;;;;;16144:7;16152:1;16144:10;;;;;;;;:::i;:::-;;;;;;;;;;16132:41;;;;-1:-1:-1;;;;;16132:41:15;;;;;16179:11;;:97;;;;;:11;;;:21;;:97;;16209:4;;16216:6;;16224:7;;16233:5;;16209:4;;16255:6;;16263:12;;16179:97;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15958:323;;;;15858:423;;;:::o;16371:181::-;16418:2;;:9;;;;;;;;16455:1;;-1:-1:-1;;;;;16418:2:15;;:7;;:9;;;;;;;;;;;;;;:2;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;-1:-1:-1;;;16418:34:15;;16446:4;16418:34;;;1125:74:26;-1:-1:-1;;;;;16418:19:15;;;;;;;1098:18:26;;16418:34:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:38;16414:134;;;16474:2;;;;;;;;;-1:-1:-1;;;;;16474:2:15;-1:-1:-1;;;;;16474:7:15;;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16474:18:15;;16493:10;16505:2;;;;;;;;;-1:-1:-1;;;;;16505:2:15;-1:-1:-1;;;;;16505:7:15;;:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;-1:-1:-1;;;16505:34:15;;16533:4;16505:34;;;1125:74:26;-1:-1:-1;;;;;16505:19:15;;;;;;;1098:18:26;;16505:34:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16474:66;;-1:-1:-1;;;;;;16474:66:15;;;;;;;-1:-1:-1;;;;;10335:55:26;;;16474:66:15;;;10317:74:26;10407:18;;;10400:34;10290:18;;16474:66:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16466:75;;;;;;16371:181::o;3335:492:3:-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:3;;;;;;;;;;;;3418:403;;3606:41;3634:7;-1:-1:-1;;;;;3606:41:3;3644:2;3606:19;:41::i;:::-;3718:38;3746:4;3753:2;3718:19;:38::i;:::-;3513:265;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3513:265:3;;;;;;;;;;-1:-1:-1;;;3461:349:3;;;;;;;:::i;6861:233::-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:3;;;;;;;;;;;;6939:149;;6982:6;:12;;;;;;;;;;;-1:-1:-1;;;;;6982:29:3;;;;;;;;;:36;;-1:-1:-1;;6982:36:3;7014:4;6982:36;;;7064:12;719:10:9;;640:96;7064:12:3;-1:-1:-1;;;;;7037:40:3;7055:7;-1:-1:-1;;;;;7037:40:3;7049:4;7037:40;;;;;;;;;;6861:233;;:::o;7219:234::-;2995:4;3018:12;;;;;;;;;;;-1:-1:-1;;;;;3018:29:3;;;;;;;;;;;;7298:149;;;7372:5;7340:12;;;;;;;;;;;-1:-1:-1;;;;;7340:29:3;;;;;;;;;;:37;;-1:-1:-1;;7340:37:3;;;7396:40;719:10:9;;7340:12:3;;7396:40;;7372:5;7396:40;7219:234;;:::o;3884:327:15:-;4007:27;4020:6;4028:5;4007:12;:27::i;:::-;4049:30;;-1:-1:-1;;;4049:30:15;;4073:4;4049:30;;;1125:74:26;4083:20:15;;-1:-1:-1;;;;;4049:15:15;;;;;1098:18:26;;4049:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:54;;4041:72;;;;-1:-1:-1;;;4041:72:15;;22132:2:26;4041:72:15;;;22114:21:26;22171:1;22151:18;;;22144:29;22209:7;22189:18;;;22182:35;22234:18;;4041:72:15;21930:328:26;4041:72:15;4119:1;;;;;;;;;-1:-1:-1;;;;;4119:1:15;-1:-1:-1;;;;;4119:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4152:30;;-1:-1:-1;;;4152:30:15;;4176:4;4152:30;;;1125:74:26;-1:-1:-1;;;;;4119:16:15;;;;;;4144:5;;4185:20;;4152:15;;;;;;1098:18:26;;4152:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;;;;:::i;:::-;4119:87;;-1:-1:-1;;;;;;4119:87:15;;;;;;;-1:-1:-1;;;;;10335:55:26;;;4119:87:15;;;10317:74:26;10407:18;;;10400:34;10290:18;;4119:87:15;10143:297:26;5515:791:15;5669:15;5686:20;5708:17;5727:22;5751:13;5786:6;5768:68;;;;;;;;;;;;:::i;:::-;5668:168;;;;;;;;;;5842:59;5857:8;5867:14;5883:6;5891:9;5842:14;:59::i;:::-;5932:45;;-1:-1:-1;;;5932:45:15;;5971:4;5932:45;;;1125:74:26;5908:21:15;;-1:-1:-1;;;;;5932:30:15;;;;;1098:18:26;;5932:45:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5908:69;;5991:12;-1:-1:-1;;;;;5984:28:15;;6021:1;;;;;;;;;-1:-1:-1;;;;;6021:1:15;-1:-1:-1;;;;;6021:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5984:62;;-1:-1:-1;;;;;;5984:62:15;;;;;;;-1:-1:-1;;;;;10335:55:26;;;5984:62:15;;;10317:74:26;10407:18;;;10400:34;;;10290:18;;5984:62:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6053:1;;;;;;;;;-1:-1:-1;;;;;6053:1:15;-1:-1:-1;;;;;6053:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:65;;;;;-1:-1:-1;;;;;14050:55:26;;;6053:65:15;;;14032:74:26;14122:18;;;14115:34;;;14165:18;;;14158:34;;;6053:25:15;;;;;;;14005:18:26;;6053:65:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6124:1;;;;;;;;;-1:-1:-1;;;;;6124:1:15;-1:-1:-1;;;;;6124:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:34;;;;;;;;15634:25:26;;;15675:18;;;15668:34;;;-1:-1:-1;;;;;6124:14:15;;;;;;;15607:18:26;;6124:34:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6165:1;;;;;;;;;-1:-1:-1;;;;;6165:1:15;-1:-1:-1;;;;;6165:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:48;;;;;;;;15634:25:26;;;15675:18;;;15668:34;;;-1:-1:-1;;;;;6165:17:15;;;;;;;15607:18:26;;6165:48:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6228:39:15;;-1:-1:-1;;;6228:39:15;;6261:4;6228:39;;;1125:74:26;6271:20:15;;-1:-1:-1;;;;;;6228:24:15;;;-1:-1:-1;6228:24:15;;1098:18:26;;6228:39:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63;;6220:81;;;;-1:-1:-1;;;6220:81:15;;22132:2:26;6220:81:15;;;22114:21:26;22171:1;22151:18;;;22144:29;22209:7;22189:18;;;22182:35;22234:18;;6220:81:15;21930:328:26;8248:804:15;8433:15;8450:22;8474:13;8502:6;8491:42;;;;;;;;;;;;:::i;:::-;8432:101;;;;;;8540:60;8555:8;8565:15;8582:6;8590:9;8540:14;:60::i;:::-;8649:10;8669:1;;;;;;;;;-1:-1:-1;;;;;8669:1:15;-1:-1:-1;;;;;8669:9:15;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8649:32;;8687:3;-1:-1:-1;;;;;8687:11:15;;8707:1;;;;;;;;;-1:-1:-1;;;;;8707:1:15;-1:-1:-1;;;;;8707:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8718:28;;-1:-1:-1;;;8718:28:15;;8740:4;8718:28;;;1125:74:26;-1:-1:-1;;;;;8718:13:15;;;;;1098:18:26;;8718:28:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8687:60;;-1:-1:-1;;;;;;8687:60:15;;;;;;;-1:-1:-1;;;;;10335:55:26;;;8687:60:15;;;10317:74:26;10407:18;;;10400:34;10290:18;;8687:60:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8780:1;;;;;;;;;-1:-1:-1;;;;;8780:1:15;-1:-1:-1;;;;;8780:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8780:17:15;;8798:7;8780:26;;;;;;;;;;;;;3636:25:26;;3624:2;3609:18;;3490:177;8780:26:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8812:20;8835:1;;;;;;;;;-1:-1:-1;;;;;8835:1:15;-1:-1:-1;;;;;8835:12:15;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;8835:37:15;;8873:7;8835:46;;;;;;;;;;;;;3636:25:26;;3624:2;3609:18;;3490:177;8835:46:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8812:69;;8918:1;;;;;;;;;-1:-1:-1;;;;;8918:1:15;-1:-1:-1;;;;;8918:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:40;;;;;;;;15634:25:26;;;15675:18;;;15668:34;;;-1:-1:-1;;;;;8918:17:15;;;;;;;15607:18:26;;8918:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8973:40:15;;-1:-1:-1;;;8973:40:15;;9007:4;8973:40;;;1125:74:26;9017:20:15;;-1:-1:-1;;;;;;8973:25:15;;;-1:-1:-1;8973:25:15;;1098:18:26;;8973:40:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:64;;8965:82;;;;-1:-1:-1;;;8965:82:15;;22132:2:26;8965:82:15;;;22114:21:26;22171:1;22151:18;;;22144:29;22209:7;22189:18;;;22182:35;22234:18;;8965:82:15;21930:328:26;1588:441:10;1663:13;1688:19;1720:10;1724:6;1720:1;:10;:::i;:::-;:14;;1733:1;1720:14;:::i;:::-;1710:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1710:25:10;;1688:47;;1745:15;:6;1752:1;1745:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;;1770;:6;1777:1;1770:9;;;;;;;;:::i;:::-;;;;:15;;;;;;;;;;-1:-1:-1;1800:9:10;1812:10;1816:6;1812:1;:10;:::i;:::-;:14;;1825:1;1812:14;:::i;:::-;1800:26;;1795:132;1832:1;1828;:5;1795:132;;;1866:12;1879:5;1887:3;1879:11;1866:25;;;;;;;:::i;:::-;;;;1854:6;1861:1;1854:9;;;;;;;;:::i;:::-;;;;:37;;;;;;;;;;-1:-1:-1;1915:1:10;1905:11;;;;;1835:3;;;:::i;:::-;;;1795:132;;;-1:-1:-1;1944:10:10;;1936:55;;;;-1:-1:-1;;;1936:55:10;;24585:2:26;1936:55:10;;;24567:21:26;;;24604:18;;;24597:30;24663:34;24643:18;;;24636:62;24715:18;;1936:55:10;24383:356:26;1936:55:10;2015:6;1588:441;-1:-1:-1;;;1588:441:10:o;14398:434:15:-;14471:17;14490:22;14514:13;14549:6;14531:61;;;;;;;;;;;;:::i;:::-;14470:122;;;;;;14598:5;-1:-1:-1;;;;;14598:13:15;;14620:1;;;;;;;;;-1:-1:-1;;;;;14620:1:15;-1:-1:-1;;;;;14620:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14598:44;;-1:-1:-1;;;;;;14598:44:15;;;;;;;-1:-1:-1;;;;;10335:55:26;;;14598:44:15;;;10317:74:26;-1:-1:-1;;10407:18:26;;;10400:34;10290:18;;14598:44:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;14648:1;;;;;;;;;-1:-1:-1;;;;;14648:1:15;-1:-1:-1;;;;;14648:6:15;;:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14690:30;;-1:-1:-1;;;14690:30:15;;14714:4;14690:30;;;1125:74:26;-1:-1:-1;;;;;14648:25:15;;;;;;14682:5;;14690:15;;;;;1098:18:26;;14690:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14648:84;;-1:-1:-1;;;;;;14648:84:15;;;;;;;-1:-1:-1;;;;;14050:55:26;;;14648:84:15;;;14032:74:26;14122:18;;;14115:34;14165:18;;;14158:34;;;14005:18;;14648:84:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14738:10;14758:1;;;;;;;;;-1:-1:-1;;;;;14758:1:15;-1:-1:-1;;;;;14758:9:15;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14738:32;;14776:51;14791:8;14801:3;14806:9;14817;15185:327;15350:6;;;:27;;;;;;;;3636:25:26;;;15317:13:15;;;;-1:-1:-1;;;;;15350:6:15;;:17;;3609:18:26;;15350:27:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15316:61;;-1:-1:-1;15316:61:15;-1:-1:-1;;;;;;15391:19:15;;;;;;:43;;-1:-1:-1;;;;;;15414:20:15;;;;15391:43;15383:61;;;;-1:-1:-1;;;15383:61:15;;25723:2:26;15383:61:15;;;25705:21:26;25762:1;25742:18;;;25735:29;25800:7;25780:18;;;25773:35;25825:18;;15383:61:15;25521:328:26;15383:61:15;15451:28;;;;;-1:-1:-1;;;;;10335:55:26;;;15451:28:15;;;10317:74:26;10407:18;;;10400:34;;;15451:13:15;;;;;10290:18:26;;15451:28:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;15485:6;-1:-1:-1;;;;;15485:11:15;15497:9;15485:22;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:332:26;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;-1:-1:-1;;;;;;223:5:26;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:154;-1:-1:-1;;;;;622:5:26;618:54;611:5;608:65;598:93;;687:1;684;677:12;702:247;761:6;814:2;802:9;793:7;789:23;785:32;782:52;;;830:1;827;820:12;782:52;869:9;856:23;888:31;913:5;888:31;:::i;1210:914::-;1406:6;1414;1422;1430;1438;1491:3;1479:9;1470:7;1466:23;1462:33;1459:53;;;1508:1;1505;1498:12;1459:53;1547:9;1534:23;1566:31;1591:5;1566:31;:::i;:::-;1616:5;-1:-1:-1;1673:2:26;1658:18;;1645:32;1686:33;1645:32;1686:33;:::i;:::-;1738:7;-1:-1:-1;1797:2:26;1782:18;;1769:32;1810:33;1769:32;1810:33;:::i;:::-;1862:7;-1:-1:-1;1921:2:26;1906:18;;1893:32;1934:33;1893:32;1934:33;:::i;:::-;1986:7;-1:-1:-1;2045:3:26;2030:19;;2017:33;2059;2017;2059;:::i;:::-;2111:7;2101:17;;;1210:914;;;;;;;;:::o;2129:347::-;2180:8;2190:6;2244:3;2237:4;2229:6;2225:17;2221:27;2211:55;;2262:1;2259;2252:12;2211:55;-1:-1:-1;2285:20:26;;2328:18;2317:30;;2314:50;;;2360:1;2357;2350:12;2314:50;2397:4;2389:6;2385:17;2373:29;;2449:3;2442:4;2433:6;2425;2421:19;2417:30;2414:39;2411:59;;;2466:1;2463;2456:12;2411:59;2129:347;;;;;:::o;2481:819::-;2596:6;2604;2612;2620;2628;2636;2644;2697:3;2685:9;2676:7;2672:23;2668:33;2665:53;;;2714:1;2711;2704:12;2665:53;2753:9;2740:23;2772:31;2797:5;2772:31;:::i;:::-;2822:5;-1:-1:-1;2874:2:26;2859:18;;2846:32;;-1:-1:-1;2925:2:26;2910:18;;2897:32;;-1:-1:-1;2976:2:26;2961:18;;2948:32;;-1:-1:-1;3031:3:26;3016:19;;3003:33;3059:18;3048:30;;3045:50;;;3091:1;3088;3081:12;3045:50;3130:58;3180:7;3171:6;3160:9;3156:22;3130:58;:::i;:::-;2481:819;;;;-1:-1:-1;2481:819:26;;;;;;3289:3;3274:19;;;3261:33;;2481:819;-1:-1:-1;;;;2481:819:26:o;3305:180::-;3364:6;3417:2;3405:9;3396:7;3392:23;3388:32;3385:52;;;3433:1;3430;3423:12;3385:52;-1:-1:-1;3456:23:26;;3305:180;-1:-1:-1;3305:180:26:o;3672:383::-;3749:6;3757;3765;3818:2;3806:9;3797:7;3793:23;3789:32;3786:52;;;3834:1;3831;3824:12;3786:52;3873:9;3860:23;3892:31;3917:5;3892:31;:::i;:::-;3942:5;3994:2;3979:18;;3966:32;;-1:-1:-1;4045:2:26;4030:18;;;4017:32;;3672:383;-1:-1:-1;;;3672:383:26:o;4060:315::-;4128:6;4136;4189:2;4177:9;4168:7;4164:23;4160:32;4157:52;;;4205:1;4202;4195:12;4157:52;4241:9;4228:23;4218:33;;4301:2;4290:9;4286:18;4273:32;4314:31;4339:5;4314:31;:::i;:::-;4364:5;4354:15;;;4060:315;;;;;:::o;4380:961::-;4504:6;4512;4520;4528;4536;4544;4552;4560;4613:3;4601:9;4592:7;4588:23;4584:33;4581:53;;;4630:1;4627;4620:12;4581:53;4666:9;4653:23;4643:33;;4726:2;4715:9;4711:18;4698:32;4739:31;4764:5;4739:31;:::i;:::-;4789:5;-1:-1:-1;4846:2:26;4831:18;;4818:32;4859:33;4818:32;4859:33;:::i;:::-;4911:7;-1:-1:-1;4965:2:26;4950:18;;4937:32;;-1:-1:-1;5016:3:26;5001:19;;4988:33;;-1:-1:-1;5072:3:26;5057:19;;5044:33;5100:18;5089:30;;5086:50;;;5132:1;5129;5122:12;5086:50;5171:58;5221:7;5212:6;5201:9;5197:22;5171:58;:::i;:::-;4380:961;;;;-1:-1:-1;4380:961:26;;;;;;5145:84;;5330:3;5315:19;5302:33;;4380:961;-1:-1:-1;;;;4380:961:26:o;5346:248::-;5414:6;5422;5475:2;5463:9;5454:7;5450:23;5446:32;5443:52;;;5491:1;5488;5481:12;5443:52;-1:-1:-1;;5514:23:26;;;5584:2;5569:18;;;5556:32;;-1:-1:-1;5346:248:26:o;5599:750::-;5705:6;5713;5721;5729;5737;5745;5798:3;5786:9;5777:7;5773:23;5769:33;5766:53;;;5815:1;5812;5805:12;5766:53;5851:9;5838:23;5828:33;;5911:2;5900:9;5896:18;5883:32;5924:31;5949:5;5924:31;:::i;:::-;5974:5;-1:-1:-1;6026:2:26;6011:18;;5998:32;;-1:-1:-1;6081:2:26;6066:18;;6053:32;6108:18;6097:30;;6094:50;;;6140:1;6137;6130:12;6094:50;6179:58;6229:7;6220:6;6209:9;6205:22;6179:58;:::i;:::-;5599:750;;;;-1:-1:-1;5599:750:26;;;;;6338:3;6323:19;;;6310:33;;5599:750;-1:-1:-1;;;;5599:750:26:o;6539:367::-;6602:8;6612:6;6666:3;6659:4;6651:6;6647:17;6643:27;6633:55;;6684:1;6681;6674:12;6633:55;-1:-1:-1;6707:20:26;;6750:18;6739:30;;6736:50;;;6782:1;6779;6772:12;6736:50;6819:4;6811:6;6807:17;6795:29;;6879:3;6872:4;6862:6;6859:1;6855:14;6847:6;6843:27;6839:38;6836:47;6833:67;;;6896:1;6893;6886:12;6911:1512;7098:6;7106;7114;7122;7130;7138;7146;7154;7162;7215:3;7203:9;7194:7;7190:23;7186:33;7183:53;;;7232:1;7229;7222:12;7183:53;7272:9;7259:23;7301:18;7342:2;7334:6;7331:14;7328:34;;;7358:1;7355;7348:12;7328:34;7397:70;7459:7;7450:6;7439:9;7435:22;7397:70;:::i;:::-;7486:8;;-1:-1:-1;7371:96:26;-1:-1:-1;7574:2:26;7559:18;;7546:32;;-1:-1:-1;7590:16:26;;;7587:36;;;7619:1;7616;7609:12;7587:36;7658:72;7722:7;7711:8;7700:9;7696:24;7658:72;:::i;:::-;7749:8;;-1:-1:-1;7632:98:26;-1:-1:-1;7837:2:26;7822:18;;7809:32;;-1:-1:-1;7853:16:26;;;7850:36;;;7882:1;7879;7872:12;7850:36;7921:72;7985:7;7974:8;7963:9;7959:24;7921:72;:::i;:::-;8012:8;;-1:-1:-1;7895:98:26;-1:-1:-1;8097:2:26;8082:18;;8069:32;;-1:-1:-1;8110:31:26;8069:32;8110:31;:::i;:::-;8160:5;;-1:-1:-1;8218:3:26;8203:19;;8190:33;;8235:16;;;8232:36;;;8264:1;8261;8254:12;8232:36;;8303:60;8355:7;8344:8;8333:9;8329:24;8303:60;:::i;:::-;8277:86;;8382:8;8372:18;;;8409:8;8399:18;;;6911:1512;;;;;;;;;;;:::o;8428:315::-;8496:6;8504;8557:2;8545:9;8536:7;8532:23;8528:32;8525:52;;;8573:1;8570;8563:12;8525:52;8612:9;8599:23;8631:31;8656:5;8631:31;:::i;:::-;8681:5;8733:2;8718:18;;;;8705:32;;-1:-1:-1;;;8428:315:26:o;9954:184::-;10024:6;10077:2;10065:9;10056:7;10052:23;10048:32;10045:52;;;10093:1;10090;10083:12;10045:52;-1:-1:-1;10116:16:26;;9954:184;-1:-1:-1;9954:184:26:o;10445:277::-;10512:6;10565:2;10553:9;10544:7;10540:23;10536:32;10533:52;;;10581:1;10578;10571:12;10533:52;10613:9;10607:16;10666:5;10659:13;10652:21;10645:5;10642:32;10632:60;;10688:1;10685;10678:12;11545:325;11633:6;11628:3;11621:19;11685:6;11678:5;11671:4;11666:3;11662:14;11649:43;;11737:1;11730:4;11721:6;11716:3;11712:16;11708:27;11701:38;11603:3;11859:4;-1:-1:-1;;11784:2:26;11776:6;11772:15;11768:88;11763:3;11759:98;11755:109;11748:116;;11545:325;;;;:::o;11875:386::-;12088:6;12077:9;12070:25;12131:2;12126;12115:9;12111:18;12104:30;12051:4;12151:61;12208:2;12197:9;12193:18;12185:6;12177;12151:61;:::i;:::-;12143:69;;12248:6;12243:2;12232:9;12228:18;12221:34;11875:386;;;;;;;:::o;12266:184::-;-1:-1:-1;;;12315:1:26;12308:88;12415:4;12412:1;12405:15;12439:4;12436:1;12429:15;12455:258;12527:1;12537:113;12551:6;12548:1;12545:13;12537:113;;;12627:11;;;12621:18;12608:11;;;12601:39;12573:2;12566:10;12537:113;;;12668:6;12665:1;12662:13;12659:48;;;-1:-1:-1;;12703:1:26;12685:16;;12678:27;12455:258::o;12718:316::-;12759:3;12797:5;12791:12;12824:6;12819:3;12812:19;12840:63;12896:6;12889:4;12884:3;12880:14;12873:4;12866:5;12862:16;12840:63;:::i;:::-;12948:2;12936:15;-1:-1:-1;;12932:88:26;12923:98;;;;13023:4;12919:109;;12718:316;-1:-1:-1;;12718:316:26:o;13039:510::-;13189:4;13229:1;13221:6;13218:13;13208:201;;-1:-1:-1;;;13262:1:26;13255:88;13366:4;13363:1;13356:15;13394:4;13391:1;13384:15;13208:201;13436:6;13425:9;13418:25;13479:2;13474;13463:9;13459:18;13452:30;13499:44;13539:2;13528:9;13524:18;13516:6;13499:44;:::i;:::-;13491:52;13039:510;-1:-1:-1;;;;13039:510:26:o;13554:271::-;13644:6;13697:2;13685:9;13676:7;13672:23;13668:32;13665:52;;;13713:1;13710;13703:12;13665:52;13745:9;13739:16;13764:31;13789:5;13764:31;:::i;14875:580::-;15144:6;15133:9;15126:25;-1:-1:-1;;;;;15191:6:26;15187:55;15182:2;15171:9;15167:18;15160:83;15279:6;15274:2;15263:9;15259:18;15252:34;15322:3;15317:2;15306:9;15302:18;15295:31;15107:4;15343:62;15400:3;15389:9;15385:19;15377:6;15369;15343:62;:::i;:::-;15335:70;;15442:6;15436:3;15425:9;15421:19;15414:35;14875:580;;;;;;;;;:::o;16512:184::-;-1:-1:-1;;;16561:1:26;16554:88;16661:4;16658:1;16651:15;16685:4;16682:1;16675:15;16701:334;16772:2;16766:9;16828:2;16818:13;;-1:-1:-1;;16814:86:26;16802:99;;16931:18;16916:34;;16952:22;;;16913:62;16910:88;;;16978:18;;:::i;:::-;17014:2;17007:22;16701:334;;-1:-1:-1;16701:334:26:o;17040:245::-;17088:4;17121:18;17113:6;17110:30;17107:56;;;17143:18;;:::i;:::-;-1:-1:-1;17200:2:26;17188:15;-1:-1:-1;;17184:88:26;17274:4;17180:99;;17040:245::o;17290:829::-;17381:6;17389;17442:2;17430:9;17421:7;17417:23;17413:32;17410:52;;;17458:1;17455;17448:12;17410:52;17497:9;17484:23;17536:1;17529:5;17526:12;17516:40;;17552:1;17549;17542:12;17516:40;17575:5;-1:-1:-1;17631:2:26;17616:18;;17603:32;17658:18;17647:30;;17644:50;;;17690:1;17687;17680:12;17644:50;17713:22;;17766:4;17758:13;;17754:27;-1:-1:-1;17744:55:26;;17795:1;17792;17785:12;17744:55;17831:2;17818:16;17856:48;17872:31;17900:2;17872:31;:::i;:::-;17856:48;:::i;:::-;17927:2;17920:5;17913:17;17967:7;17962:2;17957;17953;17949:11;17945:20;17942:33;17939:53;;;17988:1;17985;17978:12;17939:53;18043:2;18038;18034;18030:11;18025:2;18018:5;18014:14;18001:45;18087:1;18082:2;18077;18070:5;18066:14;18062:23;18055:34;18108:5;18098:15;;;;;17290:829;;;;;:::o;18124:184::-;-1:-1:-1;;;18173:1:26;18166:88;18273:4;18270:1;18263:15;18297:4;18294:1;18287:15;18313:184;-1:-1:-1;;;18362:1:26;18355:88;18462:4;18459:1;18452:15;18486:4;18483:1;18476:15;18502:128;18542:3;18573:1;18569:6;18566:1;18563:13;18560:39;;;18579:18;;:::i;:::-;-1:-1:-1;18615:9:26;;18502:128::o;18635:435::-;18688:3;18726:5;18720:12;18753:6;18748:3;18741:19;18779:4;18808:2;18803:3;18799:12;18792:19;;18845:2;18838:5;18834:14;18866:1;18876:169;18890:6;18887:1;18884:13;18876:169;;;18951:13;;18939:26;;18985:12;;;;19020:15;;;;18912:1;18905:9;18876:169;;;-1:-1:-1;19061:3:26;;18635:435;-1:-1:-1;;;;;18635:435:26:o;19155:1485::-;19580:4;19628:3;19617:9;19613:19;-1:-1:-1;;;;;19732:2:26;19724:6;19720:15;19709:9;19702:34;19755:2;19793:3;19788:2;19777:9;19773:18;19766:31;19817:6;19852;19846:13;19883:6;19875;19868:22;19921:3;19910:9;19906:19;19899:26;;19960:2;19952:6;19948:15;19934:29;;19981:1;19991:178;20005:6;20002:1;19999:13;19991:178;;;20070:13;;20066:22;;20054:35;;20144:15;;;;20109:12;;;;20027:1;20020:9;19991:178;;;19995:3;;20214:9;20209:3;20205:19;20200:2;20189:9;20185:18;20178:47;20248:41;20285:3;20277:6;20248:41;:::i;:::-;20234:55;;;;;20337:9;20329:6;20325:22;20320:2;20309:9;20305:18;20298:50;20371:44;20408:6;20400;20371:44;:::i;:::-;-1:-1:-1;;;;;9657:54:26;;20466:3;20451:19;;9645:67;20357:58;-1:-1:-1;20520:9:26;20512:6;20508:22;20502:3;20491:9;20487:19;20480:51;20548:32;20573:6;20565;20548:32;:::i;:::-;20540:40;;;20589:45;20629:3;20618:9;20614:19;20606:6;19142:4;19131:16;19119:29;;19075:75;20589:45;19155:1485;;;;;;;;;;:::o;20915:786::-;21326:25;21321:3;21314:38;21296:3;21381:6;21375:13;21397:62;21452:6;21447:2;21442:3;21438:12;21431:4;21423:6;21419:17;21397:62;:::i;:::-;21523:19;21518:2;21478:16;;;21510:11;;;21503:40;21568:13;;21590:63;21568:13;21639:2;21631:11;;21624:4;21612:17;;21590:63;:::i;:::-;21673:17;21692:2;21669:26;;20915:786;-1:-1:-1;;;;20915:786:26:o;21706:219::-;21855:2;21844:9;21837:21;21818:4;21875:44;21915:2;21904:9;21900:18;21892:6;21875:44;:::i;22263:125::-;22303:4;22331:1;22328;22325:8;22322:34;;;22336:18;;:::i;:::-;-1:-1:-1;22373:9:26;;22263:125::o;22393:428::-;22446:5;22499:3;22492:4;22484:6;22480:17;22476:27;22466:55;;22517:1;22514;22507:12;22466:55;22546:6;22540:13;22577:48;22593:31;22621:2;22593:31;:::i;22577:48::-;22650:2;22641:7;22634:19;22696:3;22689:4;22684:2;22676:6;22672:15;22668:26;22665:35;22662:55;;;22713:1;22710;22703:12;22662:55;22726:64;22787:2;22780:4;22771:7;22767:18;22760:4;22752:6;22748:17;22726:64;:::i;22826:656::-;22949:6;22957;22965;22973;22981;23034:3;23022:9;23013:7;23009:23;23005:33;23002:53;;;23051:1;23048;23041:12;23002:53;23080:9;23074:16;23064:26;;23133:2;23122:9;23118:18;23112:25;23146:31;23171:5;23146:31;:::i;:::-;23241:2;23226:18;;23220:25;23289:2;23274:18;;23268:25;23196:5;;-1:-1:-1;23220:25:26;-1:-1:-1;23316:18:26;23305:30;;23302:50;;;23348:1;23345;23338:12;23302:50;23371:60;23423:7;23414:6;23403:9;23399:22;23371:60;:::i;:::-;23361:70;;;23471:3;23460:9;23456:19;23450:26;23440:36;;22826:656;;;;;;;;:::o;23487:457::-;23584:6;23592;23600;23653:2;23641:9;23632:7;23628:23;23624:32;23621:52;;;23669:1;23666;23659:12;23621:52;23698:9;23692:16;23682:26;;23752:2;23741:9;23737:18;23731:25;23779:18;23771:6;23768:30;23765:50;;;23811:1;23808;23801:12;23765:50;23834:60;23886:7;23877:6;23866:9;23862:22;23834:60;:::i;:::-;23824:70;;;23934:2;23923:9;23919:18;23913:25;23903:35;;23487:457;;;;;:::o;23949:228::-;23989:7;24115:1;-1:-1:-1;;24043:74:26;24040:1;24037:81;24032:1;24025:9;24018:17;24014:105;24011:131;;;24122:18;;:::i;:::-;-1:-1:-1;24162:9:26;;23949:228::o;24182:196::-;24221:3;24249:5;24239:39;;24258:18;;:::i;:::-;-1:-1:-1;;;24294:78:26;;24182:196::o;25131:385::-;25210:6;25218;25271:2;25259:9;25250:7;25246:23;25242:32;25239:52;;;25287:1;25284;25277:12;25239:52;25319:9;25313:16;25338:31;25363:5;25338:31;:::i;:::-;25438:2;25423:18;;25417:25;25388:5;;-1:-1:-1;25451:33:26;25417:25;25451:33;:::i;25854:274::-;25983:3;26021:6;26015:13;26037:53;26083:6;26078:3;26071:4;26063:6;26059:17;26037:53;:::i;:::-;26106:16;;;;;25854:274;-1:-1:-1;;25854:274:26:o"},"gasEstimates":{"creation":{"codeDepositCost":"3655000","executionCost":"4122","totalCost":"3659122"},"external":{"DEFAULT_ADMIN_ROLE()":"240","a()":"2394","borrowFromVault(uint256,uint256)":"infinite","depositAndBorrowFromVault(address,uint256,uint256)":"infinite","depositETHAndBorrowFromVault(uint256)":"infinite","depositETHToVault()":"infinite","depositToVault(address,uint256)":"infinite","emptyVault(uint256,address,uint256,bytes,uint256)":"infinite","executeOperation(address[],uint256[],uint256[],address,bytes)":"infinite","ga()":"2381","getRoleAdmin(bytes32)":"2493","grantRole(bytes32,address)":"infinite","hasRole(bytes32,address)":"2705","initialize(address,address,address,address,address)":"infinite","lendingPool()":"2426","leverage(address,uint256,uint256,uint256,bytes,uint256)":"infinite","rebalance(uint256,address,address,uint256,uint256,bytes,uint256)":"infinite","releaseMIMO(address)":"infinite","renounceRole(bytes32,address)":"29000","revokeRole(bytes32,address)":"infinite","supportsInterface(bytes4)":"461","withdrawAsset(address)":"infinite","withdrawFromVault(uint256,uint256)":"infinite"},"internal":{"aggregatorSwap(uint256,contract IERC20,uint256,bytes memory)":"infinite","checkAndSendMIMO()":"infinite","emptyVaultOperation(contract IERC20,uint256,uint256,bytes memory)":"infinite","leverageOperation(contract IERC20,uint256,bytes memory)":"infinite","leverageSwap(bytes memory,contract IERC20)":"infinite","rebalanceOperation(contract IERC20,uint256,uint256,bytes memory)":"infinite","takeFlashLoan(address,uint256,bytes memory)":"infinite"}},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","a()":"0dbe671f","borrowFromVault(uint256,uint256)":"505b6a76","depositAndBorrowFromVault(address,uint256,uint256)":"25ca9674","depositETHAndBorrowFromVault(uint256)":"86bb48fc","depositETHToVault()":"ccb21bb5","depositToVault(address,uint256)":"a3d11158","emptyVault(uint256,address,uint256,bytes,uint256)":"70d82363","executeOperation(address[],uint256[],uint256[],address,bytes)":"920f5c84","ga()":"bedc4066","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","initialize(address,address,address,address,address)":"1459457a","lendingPool()":"a59a9973","leverage(address,uint256,uint256,uint256,bytes,uint256)":"1ae63f3e","rebalance(uint256,address,address,uint256,uint256,bytes,uint256)":"48b64410","releaseMIMO(address)":"60ed390a","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","withdrawAsset(address)":"071e41d7","withdrawFromVault(uint256,uint256)":"70974818"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"contract IAddressProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"borrowFromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"depositAndBorrowFromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"}],\"name\":\"depositETHAndBorrowFromVault\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETHToVault\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositToVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"repayAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dexTxData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dexIndex\",\"type\":\"uint256\"}],\"name\":\"emptyVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"assets\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"premiums\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"params\",\"type\":\"bytes\"}],\"name\":\"executeOperation\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ga\",\"outputs\":[{\"internalType\":\"contract IGovernanceAddressProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IAddressProvider\",\"name\":\"_a\",\"type\":\"address\"},{\"internalType\":\"contract IGovernanceAddressProvider\",\"name\":\"_ga\",\"type\":\"address\"},{\"internalType\":\"contract IPool\",\"name\":\"_lendingPool\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"contract IDexAddressProvider\",\"name\":\"dexAP\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lendingPool\",\"outputs\":[{\"internalType\":\"contract IPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"borrowAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parToSell\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dexTxData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dexIndex\",\"type\":\"uint256\"}],\"name\":\"leverage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"toCollateral\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"fromCollateral\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"fromCollateralAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"parAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"dexTxData\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"dexIndex\",\"type\":\"uint256\"}],\"name\":\"rebalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"minerAddress\",\"type\":\"address\"}],\"name\":\"releaseMIMO\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"}],\"name\":\"withdrawAsset\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawFromVault\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract should be cloned and initialized with a SuperVaultFactory contract\",\"kind\":\"dev\",\"methods\":{\"borrowFromVault(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of PAR to borrow\",\"vaultId\":\"The ID of the vault to borrow from\"}},\"depositAndBorrowFromVault(address,uint256,uint256)\":{\"params\":{\"asset\":\"Address of the collateral type\",\"borrowAmount\":\"Amount of PAR to borrow after depositing\",\"depositAmount\":\"Amount to deposit\"}},\"depositETHAndBorrowFromVault(uint256)\":{\"params\":{\"borrowAmount\":\"The amount of PAR to borrow after depositing ETH\"}},\"depositToVault(address,uint256)\":{\"params\":{\"amount\":\"Amount to deposit\",\"asset\":\"Address of the collateral type\"}},\"emptyVault(uint256,address,uint256,bytes,uint256)\":{\"details\":\"This uses an AAVE V2 flashLoan that will call executeOperation\",\"params\":{\"collateralType\":\"Address of the collateral of the vault\",\"dexIndex\":\"Index to use for swapping the vault collateral for par\",\"dexTxData\":\"Bytes that contain the low-level call to swap the vault asset for par to repay the vault loan\",\"repayAmount\":\"Amount of par that needs to be repaid before all collateral can be withdrawn\",\"vaultId\":\"The Id of the vault to empty\"}},\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"details\":\"This Integrates with AAVE V2 flashLoansThis function is called by the lendingPool during execution of the leverage function\",\"params\":{\"amounts\":\"A uint array with one element corresponding to the amount of the leveraged or rebalanced asset\",\"assets\":\"An address array with one element corresponding to the address of the leveraged or rebalanced asset\",\"params\":\"Bytes sent by the leverage or rebalance function that contains information on the aggregator swap\",\"premiums\":\"A uint array with one element corresponding to the flashLoan fees\"}},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"initialize(address,address,address,address,address)\":{\"details\":\"This replaces the constructor function as in the factory design pattern\",\"params\":{\"_a\":\"The address of the protocol's AddressProvider\",\"_ga\":\"The address of the protocol's GovernanceAddressProvider\",\"_lendingPool\":\"The address of the lendingPool from where flashLoans are taken\",\"_owner\":\"The owner of this SuperVault contract\"}},\"leverage(address,uint256,uint256,uint256,bytes,uint256)\":{\"details\":\"This uses an AAVE V2 flashLoan that will call executeOperation\",\"params\":{\"asset\":\"The address of the asset to leverage\",\"borrowAmount\":\"The amount to be borrowed, e.g. 2 ETH, bringing the total to 3 ETH\",\"depositAmount\":\"The initial starting amount, e.g. 1 ETH\",\"dexIndex\":\"DexAddressProvider index of the aggregator to be used for selling PAR, either OneInch or Paraswap\",\"dexTxData\":\"Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\",\"parToSell\":\"The amount of PAR we'll borrow so we can repay the leverage\"}},\"rebalance(uint256,address,address,uint256,uint256,bytes,uint256)\":{\"details\":\"This uses an AAVE V2 flashLoan that will call executeOperation\",\"params\":{\"dexIndex\":\"DexAddressProvider index representing the aggregator to be used for selling PAR, either OneInch or Paraswap\",\"dexTxData\":\"Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\",\"fromCollateral\":\"Address of the starting collateral that will be reduced\",\"fromCollateralAmount\":\"Amount of starting collateral to deleverage\",\"parAmount\":\"Amount of par that will be deposited to exchange for\",\"toCollateral\":\"Address of the collateral to rebalance to\",\"vaultId\":\"The Id of the vault to reduce the collateral of\"}},\"releaseMIMO(address)\":{\"params\":{\"minerAddress\":\"The address of the MIMO miner\"}},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"withdrawAsset(address)\":{\"params\":{\"asset\":\"The address of the collateral type\"}},\"withdrawFromVault(uint256,uint256)\":{\"params\":{\"amount\":\"The amount of collateral to withdraw\",\"vaultId\":\"The ID of the vault to withdraw from\"}}},\"title\":\"A parallel protocol vault with added functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"borrowFromVault(uint256,uint256)\":{\"notice\":\"Borrow PAR from a vault\"},\"depositAndBorrowFromVault(address,uint256,uint256)\":{\"notice\":\"Deposit collateral into a vault and borrow PARRequires approval of asset for amount before calling\"},\"depositETHAndBorrowFromVault(uint256)\":{\"notice\":\"Wrap ETH and deposit WETH as collateral into a vault, then borrow PAR from vault\"},\"depositETHToVault()\":{\"notice\":\"Wrap ETH and deposit WETH as collateral into a vault\"},\"depositToVault(address,uint256)\":{\"notice\":\"Deposit collateral into a vaultRequires approval of asset for amount before calling\"},\"emptyVault(uint256,address,uint256,bytes,uint256)\":{\"notice\":\"Uses a flashloan to repay all debts for a vault and send all collateral in the vault to the ownerThis vault must have been created by this contract\"},\"executeOperation(address[],uint256[],uint256[],address,bytes)\":{\"notice\":\"Routes a call from a flashloan pool to a leverage or rebalance operation\"},\"initialize(address,address,address,address,address)\":{\"notice\":\"Initializes the Supervault contract\"},\"leverage(address,uint256,uint256,uint256,bytes,uint256)\":{\"notice\":\"Leverage an asset using a flashloan to balance collateral\"},\"rebalance(uint256,address,address,uint256,uint256,bytes,uint256)\":{\"notice\":\"Uses a flashloan to exchange one collateral type for another, e.g. to hold less volatile collateralBoth collateral vaults must have been created by this contract using the depositToVault or depositAndBorrowFromVault functions\"},\"releaseMIMO(address)\":{\"notice\":\"Release MIMO from a MIMO miner to the owner\"},\"withdrawAsset(address)\":{\"notice\":\"Withdraw all of one type of collateral from this contractCan only be used on vaults which have been created by this contract\"},\"withdrawFromVault(uint256,uint256)\":{\"notice\":\"Withdraw collateral from a vaultVault must have been created through leverage, depositToVault, or depositAndBorrowFromVault from this contract\"}},\"notice\":\"You can use this for collateral rebalancing\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperVault.sol\":\"SuperVault\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@aave/core-v3/contracts/interfaces/IPool.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\nimport {IPoolAddressesProvider} from './IPoolAddressesProvider.sol';\\nimport {DataTypes} from '../protocol/libraries/types/DataTypes.sol';\\n\\n/**\\n * @title IPool\\n * @author Aave\\n * @notice Defines the basic interface for an Aave Pool.\\n **/\\ninterface IPool {\\n  /**\\n   * @dev Emitted on mintUnbacked()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address initiating the supply\\n   * @param onBehalfOf The beneficiary of the supplied assets, receiving the aTokens\\n   * @param amount The amount of supplied assets\\n   * @param referralCode The referral code used\\n   **/\\n  event MintUnbacked(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted on backUnbacked()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param backer The address paying for the backing\\n   * @param amount The amount added as backing\\n   * @param fee The amount paid in fees\\n   **/\\n  event BackUnbacked(address indexed reserve, address indexed backer, uint256 amount, uint256 fee);\\n\\n  /**\\n   * @dev Emitted on supply()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address initiating the supply\\n   * @param onBehalfOf The beneficiary of the supply, receiving the aTokens\\n   * @param amount The amount supplied\\n   * @param referralCode The referral code used\\n   **/\\n  event Supply(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted on withdraw()\\n   * @param reserve The address of the underlying asset being withdrawn\\n   * @param user The address initiating the withdrawal, owner of aTokens\\n   * @param to The address that will receive the underlying\\n   * @param amount The amount to be withdrawn\\n   **/\\n  event Withdraw(address indexed reserve, address indexed user, address indexed to, uint256 amount);\\n\\n  /**\\n   * @dev Emitted on borrow() and flashLoan() when debt needs to be opened\\n   * @param reserve The address of the underlying asset being borrowed\\n   * @param user The address of the user initiating the borrow(), receiving the funds on borrow() or just\\n   * initiator of the transaction on flashLoan()\\n   * @param onBehalfOf The address that will be getting the debt\\n   * @param amount The amount borrowed out\\n   * @param interestRateMode The rate mode: 1 for Stable, 2 for Variable\\n   * @param borrowRate The numeric rate at which the user has borrowed, expressed in ray\\n   * @param referralCode The referral code used\\n   **/\\n  event Borrow(\\n    address indexed reserve,\\n    address user,\\n    address indexed onBehalfOf,\\n    uint256 amount,\\n    DataTypes.InterestRateMode interestRateMode,\\n    uint256 borrowRate,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted on repay()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The beneficiary of the repayment, getting his debt reduced\\n   * @param repayer The address of the user initiating the repay(), providing the funds\\n   * @param amount The amount repaid\\n   * @param useATokens True if the repayment is done using aTokens, `false` if done with underlying asset directly\\n   **/\\n  event Repay(\\n    address indexed reserve,\\n    address indexed user,\\n    address indexed repayer,\\n    uint256 amount,\\n    bool useATokens\\n  );\\n\\n  /**\\n   * @dev Emitted on swapBorrowRateMode()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user swapping his rate mode\\n   * @param interestRateMode The current interest rate mode of the position being swapped: 1 for Stable, 2 for Variable\\n   **/\\n  event SwapBorrowRateMode(\\n    address indexed reserve,\\n    address indexed user,\\n    DataTypes.InterestRateMode interestRateMode\\n  );\\n\\n  /**\\n   * @dev Emitted on borrow(), repay() and liquidationCall() when using isolated assets\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param totalDebt The total isolation mode debt for the reserve\\n   */\\n  event IsolationModeTotalDebtUpdated(address indexed asset, uint256 totalDebt);\\n\\n  /**\\n   * @dev Emitted when the user selects a certain asset category for eMode\\n   * @param user The address of the user\\n   * @param categoryId The category id\\n   **/\\n  event UserEModeSet(address indexed user, uint8 categoryId);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralEnabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on setUserUseReserveAsCollateral()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user enabling the usage as collateral\\n   **/\\n  event ReserveUsedAsCollateralDisabled(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on rebalanceStableBorrowRate()\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param user The address of the user for which the rebalance has been executed\\n   **/\\n  event RebalanceStableBorrowRate(address indexed reserve, address indexed user);\\n\\n  /**\\n   * @dev Emitted on flashLoan()\\n   * @param target The address of the flash loan receiver contract\\n   * @param initiator The address initiating the flash loan\\n   * @param asset The address of the asset being flash borrowed\\n   * @param amount The amount flash borrowed\\n   * @param interestRateMode The flashloan mode: 0 for regular flashloan, 1 for Stable debt, 2 for Variable debt\\n   * @param premium The fee flash borrowed\\n   * @param referralCode The referral code used\\n   **/\\n  event FlashLoan(\\n    address indexed target,\\n    address initiator,\\n    address indexed asset,\\n    uint256 amount,\\n    DataTypes.InterestRateMode interestRateMode,\\n    uint256 premium,\\n    uint16 indexed referralCode\\n  );\\n\\n  /**\\n   * @dev Emitted when a borrower is liquidated.\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param liquidatedCollateralAmount The amount of collateral received by the liquidator\\n   * @param liquidator The address of the liquidator\\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  event LiquidationCall(\\n    address indexed collateralAsset,\\n    address indexed debtAsset,\\n    address indexed user,\\n    uint256 debtToCover,\\n    uint256 liquidatedCollateralAmount,\\n    address liquidator,\\n    bool receiveAToken\\n  );\\n\\n  /**\\n   * @dev Emitted when the state of a reserve is updated.\\n   * @param reserve The address of the underlying asset of the reserve\\n   * @param liquidityRate The next liquidity rate\\n   * @param stableBorrowRate The next stable borrow rate\\n   * @param variableBorrowRate The next variable borrow rate\\n   * @param liquidityIndex The next liquidity index\\n   * @param variableBorrowIndex The next variable borrow index\\n   **/\\n  event ReserveDataUpdated(\\n    address indexed reserve,\\n    uint256 liquidityRate,\\n    uint256 stableBorrowRate,\\n    uint256 variableBorrowRate,\\n    uint256 liquidityIndex,\\n    uint256 variableBorrowIndex\\n  );\\n\\n  /**\\n   * @dev Emitted when the protocol treasury receives minted aTokens from the accrued interest.\\n   * @param reserve The address of the reserve\\n   * @param amountMinted The amount minted to the treasury\\n   **/\\n  event MintedToTreasury(address indexed reserve, uint256 amountMinted);\\n\\n  /**\\n   * @dev Mints an `amount` of aTokens to the `onBehalfOf`\\n   * @param asset The address of the underlying asset to mint\\n   * @param amount The amount to mint\\n   * @param onBehalfOf The address that will receive the aTokens\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function mintUnbacked(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @dev Back the current unbacked underlying with `amount` and pay `fee`.\\n   * @param asset The address of the underlying asset to back\\n   * @param amount The amount to back\\n   * @param fee The amount paid in fees\\n   **/\\n  function backUnbacked(\\n    address asset,\\n    uint256 amount,\\n    uint256 fee\\n  ) external;\\n\\n  /**\\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\n   * @param asset The address of the underlying asset to supply\\n   * @param amount The amount to be supplied\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function supply(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @notice Supply with transfer approval of asset to be supplied done via permit function\\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\n   * @param asset The address of the underlying asset to supply\\n   * @param amount The amount to be supplied\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param deadline The deadline timestamp that the permit is valid\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   * @param permitV The V parameter of ERC712 permit sig\\n   * @param permitR The R parameter of ERC712 permit sig\\n   * @param permitS The S parameter of ERC712 permit sig\\n   **/\\n  function supplyWithPermit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode,\\n    uint256 deadline,\\n    uint8 permitV,\\n    bytes32 permitR,\\n    bytes32 permitS\\n  ) external;\\n\\n  /**\\n   * @notice Withdraws an `amount` of underlying asset from the reserve, burning the equivalent aTokens owned\\n   * E.g. User has 100 aUSDC, calls withdraw() and receives 100 USDC, burning the 100 aUSDC\\n   * @param asset The address of the underlying asset to withdraw\\n   * @param amount The underlying amount to be withdrawn\\n   *   - Send the value type(uint256).max in order to withdraw the whole aToken balance\\n   * @param to The address that will receive the underlying, same as msg.sender if the user\\n   *   wants to receive it on his own wallet, or a different address if the beneficiary is a\\n   *   different wallet\\n   * @return The final amount withdrawn\\n   **/\\n  function withdraw(\\n    address asset,\\n    uint256 amount,\\n    address to\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Allows users to borrow a specific `amount` of the reserve underlying asset, provided that the borrower\\n   * already supplied enough collateral, or he was given enough allowance by a credit delegator on the\\n   * corresponding debt token (StableDebtToken or VariableDebtToken)\\n   * - E.g. User borrows 100 USDC passing as `onBehalfOf` his own address, receiving the 100 USDC in his wallet\\n   *   and 100 stable/variable debt tokens, depending on the `interestRateMode`\\n   * @param asset The address of the underlying asset to borrow\\n   * @param amount The amount to be borrowed\\n   * @param interestRateMode The interest rate mode at which the user wants to borrow: 1 for Stable, 2 for Variable\\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   * @param onBehalfOf The address of the user who will receive the debt. Should be the address of the borrower itself\\n   * calling the function if he wants to borrow against his own collateral, or the address of the credit delegator\\n   * if he has been given credit delegation allowance\\n   **/\\n  function borrow(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    uint16 referralCode,\\n    address onBehalfOf\\n  ) external;\\n\\n  /**\\n   * @notice Repays a borrowed `amount` on a specific reserve, burning the equivalent debt tokens owned\\n   * - E.g. User repays 100 USDC, burning 100 variable/stable debt tokens of the `onBehalfOf` address\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @param onBehalfOf The address of the user who will get his debt reduced/removed. Should be the address of the\\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n   * other borrower whose debt should be removed\\n   * @return The final amount repaid\\n   **/\\n  function repay(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    address onBehalfOf\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Repay with transfer approval of asset to be repaid done via permit function\\n   * see: https://eips.ethereum.org/EIPS/eip-2612 and https://eips.ethereum.org/EIPS/eip-713\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @param onBehalfOf Address of the user who will get his debt reduced/removed. Should be the address of the\\n   * user calling the function if he wants to reduce/remove his own debt, or the address of any other\\n   * other borrower whose debt should be removed\\n   * @param deadline The deadline timestamp that the permit is valid\\n   * @param permitV The V parameter of ERC712 permit sig\\n   * @param permitR The R parameter of ERC712 permit sig\\n   * @param permitS The S parameter of ERC712 permit sig\\n   * @return The final amount repaid\\n   **/\\n  function repayWithPermit(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode,\\n    address onBehalfOf,\\n    uint256 deadline,\\n    uint8 permitV,\\n    bytes32 permitR,\\n    bytes32 permitS\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Repays a borrowed `amount` on a specific reserve using the reserve aTokens, burning the\\n   * equivalent debt tokens\\n   * - E.g. User repays 100 USDC using 100 aUSDC, burning 100 variable/stable debt tokens\\n   * @dev  Passing uint256.max as amount will clean up any residual aToken dust balance, if the user aToken\\n   * balance is not enough to cover the whole debt\\n   * @param asset The address of the borrowed underlying asset previously borrowed\\n   * @param amount The amount to repay\\n   * - Send the value type(uint256).max in order to repay the whole debt for `asset` on the specific `debtMode`\\n   * @param interestRateMode The interest rate mode at of the debt the user wants to repay: 1 for Stable, 2 for Variable\\n   * @return The final amount repaid\\n   **/\\n  function repayWithATokens(\\n    address asset,\\n    uint256 amount,\\n    uint256 interestRateMode\\n  ) external returns (uint256);\\n\\n  /**\\n   * @notice Allows a borrower to swap his debt between stable and variable mode, or vice versa\\n   * @param asset The address of the underlying asset borrowed\\n   * @param interestRateMode The rate mode that the user wants to swap to: 1 for Stable, 2 for Variable\\n   **/\\n  function swapBorrowRateMode(address asset, uint256 interestRateMode) external;\\n\\n  /**\\n   * @notice Rebalances the stable interest rate of a user to the current stable rate defined on the reserve.\\n   * - Users can be rebalanced if the following conditions are satisfied:\\n   *     1. Usage ratio is above 95%\\n   *     2. the current supply APY is below REBALANCE_UP_THRESHOLD * maxVariableBorrowRate, which means that too\\n   *        much has been borrowed at a stable rate and suppliers are not earning enough\\n   * @param asset The address of the underlying asset borrowed\\n   * @param user The address of the user to be rebalanced\\n   **/\\n  function rebalanceStableBorrowRate(address asset, address user) external;\\n\\n  /**\\n   * @notice Allows suppliers to enable/disable a specific supplied asset as collateral\\n   * @param asset The address of the underlying asset supplied\\n   * @param useAsCollateral True if the user wants to use the supply as collateral, false otherwise\\n   **/\\n  function setUserUseReserveAsCollateral(address asset, bool useAsCollateral) external;\\n\\n  /**\\n   * @notice Function to liquidate a non-healthy position collateral-wise, with Health Factor below 1\\n   * - The caller (liquidator) covers `debtToCover` amount of debt of the user getting liquidated, and receives\\n   *   a proportionally amount of the `collateralAsset` plus a bonus to cover market risk\\n   * @param collateralAsset The address of the underlying asset used as collateral, to receive as result of the liquidation\\n   * @param debtAsset The address of the underlying borrowed asset to be repaid with the liquidation\\n   * @param user The address of the borrower getting liquidated\\n   * @param debtToCover The debt amount of borrowed `asset` the liquidator wants to cover\\n   * @param receiveAToken True if the liquidators wants to receive the collateral aTokens, `false` if he wants\\n   * to receive the underlying collateral asset directly\\n   **/\\n  function liquidationCall(\\n    address collateralAsset,\\n    address debtAsset,\\n    address user,\\n    uint256 debtToCover,\\n    bool receiveAToken\\n  ) external;\\n\\n  /**\\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\n   * as long as the amount taken plus a fee is returned.\\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\n   * into consideration. For further details please visit https://developers.aave.com\\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanReceiver interface\\n   * @param assets The addresses of the assets being flash-borrowed\\n   * @param amounts The amounts of the assets being flash-borrowed\\n   * @param interestRateModes Types of the debt to open if the flash loan is not returned:\\n   *   0 -> Don't open any debt, just revert if funds can't be transferred from the receiver\\n   *   1 -> Open debt at stable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   *   2 -> Open debt at variable rate for the value of the amount flash-borrowed to the `onBehalfOf` address\\n   * @param onBehalfOf The address  that will receive the debt in the case of using on `modes` 1 or 2\\n   * @param params Variadic packed params to pass to the receiver as extra information\\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function flashLoan(\\n    address receiverAddress,\\n    address[] calldata assets,\\n    uint256[] calldata amounts,\\n    uint256[] calldata interestRateModes,\\n    address onBehalfOf,\\n    bytes calldata params,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @notice Allows smartcontracts to access the liquidity of the pool within one transaction,\\n   * as long as the amount taken plus a fee is returned.\\n   * @dev IMPORTANT There are security concerns for developers of flashloan receiver contracts that must be kept\\n   * into consideration. For further details please visit https://developers.aave.com\\n   * @param receiverAddress The address of the contract receiving the funds, implementing IFlashLoanSimpleReceiver interface\\n   * @param asset The address of the asset being flash-borrowed\\n   * @param amount The amount of the asset being flash-borrowed\\n   * @param params Variadic packed params to pass to the receiver as extra information\\n   * @param referralCode The code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function flashLoanSimple(\\n    address receiverAddress,\\n    address asset,\\n    uint256 amount,\\n    bytes calldata params,\\n    uint16 referralCode\\n  ) external;\\n\\n  /**\\n   * @notice Returns the user account data across all the reserves\\n   * @param user The address of the user\\n   * @return totalCollateralBase The total collateral of the user in the base currency used by the price feed\\n   * @return totalDebtBase The total debt of the user in the base currency used by the price feed\\n   * @return availableBorrowsBase The borrowing power left of the user in the base currency used by the price feed\\n   * @return currentLiquidationThreshold The liquidation threshold of the user\\n   * @return ltv The loan to value of The user\\n   * @return healthFactor The current health factor of the user\\n   **/\\n  function getUserAccountData(address user)\\n    external\\n    view\\n    returns (\\n      uint256 totalCollateralBase,\\n      uint256 totalDebtBase,\\n      uint256 availableBorrowsBase,\\n      uint256 currentLiquidationThreshold,\\n      uint256 ltv,\\n      uint256 healthFactor\\n    );\\n\\n  /**\\n   * @notice Initializes a reserve, activating it, assigning an aToken and debt tokens and an\\n   * interest rate strategy\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param aTokenAddress The address of the aToken that will be assigned to the reserve\\n   * @param stableDebtAddress The address of the StableDebtToken that will be assigned to the reserve\\n   * @param variableDebtAddress The address of the VariableDebtToken that will be assigned to the reserve\\n   * @param interestRateStrategyAddress The address of the interest rate strategy contract\\n   **/\\n  function initReserve(\\n    address asset,\\n    address aTokenAddress,\\n    address stableDebtAddress,\\n    address variableDebtAddress,\\n    address interestRateStrategyAddress\\n  ) external;\\n\\n  /**\\n   * @notice Drop a reserve\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   **/\\n  function dropReserve(address asset) external;\\n\\n  /**\\n   * @notice Updates the address of the interest rate strategy contract\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param rateStrategyAddress The address of the interest rate strategy contract\\n   **/\\n  function setReserveInterestRateStrategyAddress(address asset, address rateStrategyAddress)\\n    external;\\n\\n  /**\\n   * @notice Sets the configuration bitmap of the reserve as a whole\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param asset The address of the underlying asset of the reserve\\n   * @param configuration The new configuration bitmap\\n   **/\\n  function setConfiguration(address asset, DataTypes.ReserveConfigurationMap calldata configuration)\\n    external;\\n\\n  /**\\n   * @notice Returns the configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The configuration of the reserve\\n   **/\\n  function getConfiguration(address asset)\\n    external\\n    view\\n    returns (DataTypes.ReserveConfigurationMap memory);\\n\\n  /**\\n   * @notice Returns the configuration of the user across all the reserves\\n   * @param user The user address\\n   * @return The configuration of the user\\n   **/\\n  function getUserConfiguration(address user)\\n    external\\n    view\\n    returns (DataTypes.UserConfigurationMap memory);\\n\\n  /**\\n   * @notice Returns the normalized income normalized income of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve's normalized income\\n   */\\n  function getReserveNormalizedIncome(address asset) external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the normalized variable debt per unit of asset\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The reserve normalized variable debt\\n   */\\n  function getReserveNormalizedVariableDebt(address asset) external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the state and configuration of the reserve\\n   * @param asset The address of the underlying asset of the reserve\\n   * @return The state and configuration data of the reserve\\n   **/\\n  function getReserveData(address asset) external view returns (DataTypes.ReserveData memory);\\n\\n  /**\\n   * @notice Validates and finalizes an aToken transfer\\n   * @dev Only callable by the overlying aToken of the `asset`\\n   * @param asset The address of the underlying asset of the aToken\\n   * @param from The user from which the aTokens are transferred\\n   * @param to The user receiving the aTokens\\n   * @param amount The amount being transferred/withdrawn\\n   * @param balanceFromBefore The aToken balance of the `from` user before the transfer\\n   * @param balanceToBefore The aToken balance of the `to` user before the transfer\\n   */\\n  function finalizeTransfer(\\n    address asset,\\n    address from,\\n    address to,\\n    uint256 amount,\\n    uint256 balanceFromBefore,\\n    uint256 balanceToBefore\\n  ) external;\\n\\n  /**\\n   * @notice Returns the list of the initialized reserves\\n   * @dev It does not include dropped reserves\\n   * @return The addresses of the reserves\\n   **/\\n  function getReservesList() external view returns (address[] memory);\\n\\n  /**\\n   * @notice Returns the PoolAddressesProvider connected to this contract\\n   * @return The address of the PoolAddressesProvider\\n   **/\\n  function ADDRESSES_PROVIDER() external view returns (IPoolAddressesProvider);\\n\\n  /**\\n   * @notice Updates the protocol fee on the bridging\\n   * @param bridgeProtocolFee The part of the premium sent to the protocol treasury\\n   */\\n  function updateBridgeProtocolFee(uint256 bridgeProtocolFee) external;\\n\\n  /**\\n   * @notice Updates flash loan premiums. Flash loan premium consists of two parts:\\n   * - A part is sent to aToken holders as extra, one time accumulated interest\\n   * - A part is collected by the protocol treasury\\n   * @dev The total premium is calculated on the total borrowed amount\\n   * @dev The premium to protocol is calculated on the total premium, being a percentage of `flashLoanPremiumTotal`\\n   * @dev Only callable by the PoolConfigurator contract\\n   * @param flashLoanPremiumTotal The total premium, expressed in bps\\n   * @param flashLoanPremiumToProtocol The part of the premium sent to the protocol treasury, expressed in bps\\n   */\\n  function updateFlashloanPremiums(\\n    uint128 flashLoanPremiumTotal,\\n    uint128 flashLoanPremiumToProtocol\\n  ) external;\\n\\n  /**\\n   * @notice Configures a new category for the eMode.\\n   * @dev In eMode, the protocol allows very high borrowing power to borrow assets of the same category.\\n   * The category 0 is reserved as it's the default for volatile assets\\n   * @param id The id of the category\\n   * @param config The configuration of the category\\n   */\\n  function configureEModeCategory(uint8 id, DataTypes.EModeCategory memory config) external;\\n\\n  /**\\n   * @notice Returns the data of an eMode category\\n   * @param id The id of the category\\n   * @return The configuration data of the category\\n   */\\n  function getEModeCategoryData(uint8 id) external view returns (DataTypes.EModeCategory memory);\\n\\n  /**\\n   * @notice Allows a user to use the protocol in eMode\\n   * @param categoryId The id of the category\\n   */\\n  function setUserEMode(uint8 categoryId) external;\\n\\n  /**\\n   * @notice Returns the eMode the user is using\\n   * @param user The address of the user\\n   * @return The eMode id\\n   */\\n  function getUserEMode(address user) external view returns (uint256);\\n\\n  /**\\n   * @notice Resets the isolation mode total debt of the given asset to zero\\n   * @dev It requires the given asset has zero debt ceiling\\n   * @param asset The address of the underlying asset to reset the isolationModeTotalDebt\\n   */\\n  function resetIsolationModeTotalDebt(address asset) external;\\n\\n  /**\\n   * @notice Returns the percentage of available liquidity that can be borrowed at once at stable rate\\n   * @return The percentage of available liquidity to borrow, expressed in bps\\n   */\\n  function MAX_STABLE_RATE_BORROW_SIZE_PERCENT() external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the total fee on flash loans\\n   * @return The total fee on flashloans\\n   */\\n  function FLASHLOAN_PREMIUM_TOTAL() external view returns (uint128);\\n\\n  /**\\n   * @notice Returns the part of the bridge fees sent to protocol\\n   * @return The bridge fee sent to the protocol treasury\\n   */\\n  function BRIDGE_PROTOCOL_FEE() external view returns (uint256);\\n\\n  /**\\n   * @notice Returns the part of the flashloan fees sent to protocol\\n   * @return The flashloan fee sent to the protocol treasury\\n   */\\n  function FLASHLOAN_PREMIUM_TO_PROTOCOL() external view returns (uint128);\\n\\n  /**\\n   * @notice Returns the maximum number of reserves supported to be listed in this Pool\\n   * @return The maximum number of reserves supported\\n   */\\n  function MAX_NUMBER_RESERVES() external view returns (uint16);\\n\\n  /**\\n   * @notice Mints the assets accrued through the reserve factor to the treasury in the form of aTokens\\n   * @param assets The list of reserves for which the minting needs to be executed\\n   **/\\n  function mintToTreasury(address[] calldata assets) external;\\n\\n  /**\\n   * @notice Rescue and transfer tokens locked in this contract\\n   * @param token The address of the token\\n   * @param to The address of the recipient\\n   * @param amount The amount of token to transfer\\n   */\\n  function rescueTokens(\\n    address token,\\n    address to,\\n    uint256 amount\\n  ) external;\\n\\n  /**\\n   * @notice Supplies an `amount` of underlying asset into the reserve, receiving in return overlying aTokens.\\n   * - E.g. User supplies 100 USDC and gets in return 100 aUSDC\\n   * @dev Deprecated: Use the `supply` function instead\\n   * @param asset The address of the underlying asset to supply\\n   * @param amount The amount to be supplied\\n   * @param onBehalfOf The address that will receive the aTokens, same as msg.sender if the user\\n   *   wants to receive them on his own wallet, or a different address if the beneficiary of aTokens\\n   *   is a different wallet\\n   * @param referralCode Code used to register the integrator originating the operation, for potential rewards.\\n   *   0 if the action is executed directly by the user, without any middle-man\\n   **/\\n  function deposit(\\n    address asset,\\n    uint256 amount,\\n    address onBehalfOf,\\n    uint16 referralCode\\n  ) external;\\n}\\n\",\"keccak256\":\"0x71a2d4598a4d7f7f34188e2114d7cc2208a372a2d9361c42c744f6d48e7a72cd\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/interfaces/IPoolAddressesProvider.sol\":{\"content\":\"// SPDX-License-Identifier: AGPL-3.0\\npragma solidity 0.8.10;\\n\\n/**\\n * @title IPoolAddressesProvider\\n * @author Aave\\n * @notice Defines the basic interface for a Pool Addresses Provider.\\n **/\\ninterface IPoolAddressesProvider {\\n  /**\\n   * @dev Emitted when the market identifier is updated.\\n   * @param oldMarketId The old id of the market\\n   * @param newMarketId The new id of the market\\n   */\\n  event MarketIdSet(string indexed oldMarketId, string indexed newMarketId);\\n\\n  /**\\n   * @dev Emitted when the pool is updated.\\n   * @param oldAddress The old address of the Pool\\n   * @param newAddress The new address of the Pool\\n   */\\n  event PoolUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool configurator is updated.\\n   * @param oldAddress The old address of the PoolConfigurator\\n   * @param newAddress The new address of the PoolConfigurator\\n   */\\n  event PoolConfiguratorUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle is updated.\\n   * @param oldAddress The old address of the PriceOracle\\n   * @param newAddress The new address of the PriceOracle\\n   */\\n  event PriceOracleUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL manager is updated.\\n   * @param oldAddress The old address of the ACLManager\\n   * @param newAddress The new address of the ACLManager\\n   */\\n  event ACLManagerUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the ACL admin is updated.\\n   * @param oldAddress The old address of the ACLAdmin\\n   * @param newAddress The new address of the ACLAdmin\\n   */\\n  event ACLAdminUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the price oracle sentinel is updated.\\n   * @param oldAddress The old address of the PriceOracleSentinel\\n   * @param newAddress The new address of the PriceOracleSentinel\\n   */\\n  event PriceOracleSentinelUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the pool data provider is updated.\\n   * @param oldAddress The old address of the PoolDataProvider\\n   * @param newAddress The new address of the PoolDataProvider\\n   */\\n  event PoolDataProviderUpdated(address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when a new proxy is created.\\n   * @param id The identifier of the proxy\\n   * @param proxyAddress The address of the created proxy contract\\n   * @param implementationAddress The address of the implementation contract\\n   */\\n  event ProxyCreated(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address indexed implementationAddress\\n  );\\n\\n  /**\\n   * @dev Emitted when a new non-proxied contract address is registered.\\n   * @param id The identifier of the contract\\n   * @param oldAddress The address of the old contract\\n   * @param newAddress The address of the new contract\\n   */\\n  event AddressSet(bytes32 indexed id, address indexed oldAddress, address indexed newAddress);\\n\\n  /**\\n   * @dev Emitted when the implementation of the proxy registered with id is updated\\n   * @param id The identifier of the contract\\n   * @param proxyAddress The address of the proxy contract\\n   * @param oldImplementationAddress The address of the old implementation contract\\n   * @param newImplementationAddress The address of the new implementation contract\\n   */\\n  event AddressSetAsProxy(\\n    bytes32 indexed id,\\n    address indexed proxyAddress,\\n    address oldImplementationAddress,\\n    address indexed newImplementationAddress\\n  );\\n\\n  /**\\n   * @notice Returns the id of the Aave market to which this contract points to.\\n   * @return The market id\\n   **/\\n  function getMarketId() external view returns (string memory);\\n\\n  /**\\n   * @notice Associates an id with a specific PoolAddressesProvider.\\n   * @dev This can be used to create an onchain registry of PoolAddressesProviders to\\n   * identify and validate multiple Aave markets.\\n   * @param newMarketId The market id\\n   */\\n  function setMarketId(string calldata newMarketId) external;\\n\\n  /**\\n   * @notice Returns an address by its identifier.\\n   * @dev The returned address might be an EOA or a contract, potentially proxied\\n   * @dev It returns ZERO if there is no registered address with the given id\\n   * @param id The id\\n   * @return The address of the registered for the specified id\\n   */\\n  function getAddress(bytes32 id) external view returns (address);\\n\\n  /**\\n   * @notice General function to update the implementation of a proxy registered with\\n   * certain `id`. If there is no proxy registered, it will instantiate one and\\n   * set as implementation the `newImplementationAddress`.\\n   * @dev IMPORTANT Use this function carefully, only for ids that don't have an explicit\\n   * setter function, in order to avoid unexpected consequences\\n   * @param id The id\\n   * @param newImplementationAddress The address of the new implementation\\n   */\\n  function setAddressAsProxy(bytes32 id, address newImplementationAddress) external;\\n\\n  /**\\n   * @notice Sets an address for an id replacing the address saved in the addresses map.\\n   * @dev IMPORTANT Use this function carefully, as it will do a hard replacement\\n   * @param id The id\\n   * @param newAddress The address to set\\n   */\\n  function setAddress(bytes32 id, address newAddress) external;\\n\\n  /**\\n   * @notice Returns the address of the Pool proxy.\\n   * @return The Pool proxy address\\n   **/\\n  function getPool() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the Pool, or creates a proxy\\n   * setting the new `pool` implementation when the function is called for the first time.\\n   * @param newPoolImpl The new Pool implementation\\n   **/\\n  function setPoolImpl(address newPoolImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the PoolConfigurator proxy.\\n   * @return The PoolConfigurator proxy address\\n   **/\\n  function getPoolConfigurator() external view returns (address);\\n\\n  /**\\n   * @notice Updates the implementation of the PoolConfigurator, or creates a proxy\\n   * setting the new `PoolConfigurator` implementation when the function is called for the first time.\\n   * @param newPoolConfiguratorImpl The new PoolConfigurator implementation\\n   **/\\n  function setPoolConfiguratorImpl(address newPoolConfiguratorImpl) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle.\\n   * @return The address of the PriceOracle\\n   */\\n  function getPriceOracle() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle.\\n   * @param newPriceOracle The address of the new PriceOracle\\n   */\\n  function setPriceOracle(address newPriceOracle) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL manager.\\n   * @return The address of the ACLManager\\n   */\\n  function getACLManager() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL manager.\\n   * @param newAclManager The address of the new ACLManager\\n   **/\\n  function setACLManager(address newAclManager) external;\\n\\n  /**\\n   * @notice Returns the address of the ACL admin.\\n   * @return The address of the ACL admin\\n   */\\n  function getACLAdmin() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the ACL admin.\\n   * @param newAclAdmin The address of the new ACL admin\\n   */\\n  function setACLAdmin(address newAclAdmin) external;\\n\\n  /**\\n   * @notice Returns the address of the price oracle sentinel.\\n   * @return The address of the PriceOracleSentinel\\n   */\\n  function getPriceOracleSentinel() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the price oracle sentinel.\\n   * @param newPriceOracleSentinel The address of the new PriceOracleSentinel\\n   **/\\n  function setPriceOracleSentinel(address newPriceOracleSentinel) external;\\n\\n  /**\\n   * @notice Returns the address of the data provider.\\n   * @return The address of the DataProvider\\n   */\\n  function getPoolDataProvider() external view returns (address);\\n\\n  /**\\n   * @notice Updates the address of the data provider.\\n   * @param newDataProvider The address of the new DataProvider\\n   **/\\n  function setPoolDataProvider(address newDataProvider) external;\\n}\\n\",\"keccak256\":\"0x73185cd3b952eb691bbf2344b3f7a35cf8b67b33c39275e52e12b80436ea1d5c\",\"license\":\"AGPL-3.0\"},\"@aave/core-v3/contracts/protocol/libraries/types/DataTypes.sol\":{\"content\":\"// SPDX-License-Identifier: BUSL-1.1\\npragma solidity 0.8.10;\\n\\nlibrary DataTypes {\\n  struct ReserveData {\\n    //stores the reserve configuration\\n    ReserveConfigurationMap configuration;\\n    //the liquidity index. Expressed in ray\\n    uint128 liquidityIndex;\\n    //the current supply rate. Expressed in ray\\n    uint128 currentLiquidityRate;\\n    //variable borrow index. Expressed in ray\\n    uint128 variableBorrowIndex;\\n    //the current variable borrow rate. Expressed in ray\\n    uint128 currentVariableBorrowRate;\\n    //the current stable borrow rate. Expressed in ray\\n    uint128 currentStableBorrowRate;\\n    //timestamp of last update\\n    uint40 lastUpdateTimestamp;\\n    //the id of the reserve. Represents the position in the list of the active reserves\\n    uint16 id;\\n    //aToken address\\n    address aTokenAddress;\\n    //stableDebtToken address\\n    address stableDebtTokenAddress;\\n    //variableDebtToken address\\n    address variableDebtTokenAddress;\\n    //address of the interest rate strategy\\n    address interestRateStrategyAddress;\\n    //the current treasury balance, scaled\\n    uint128 accruedToTreasury;\\n    //the outstanding unbacked aTokens minted through the bridging feature\\n    uint128 unbacked;\\n    //the outstanding debt borrowed against this asset in isolation mode\\n    uint128 isolationModeTotalDebt;\\n  }\\n\\n  struct ReserveConfigurationMap {\\n    //bit 0-15: LTV\\n    //bit 16-31: Liq. threshold\\n    //bit 32-47: Liq. bonus\\n    //bit 48-55: Decimals\\n    //bit 56: reserve is active\\n    //bit 57: reserve is frozen\\n    //bit 58: borrowing is enabled\\n    //bit 59: stable rate borrowing enabled\\n    //bit 60: asset is paused\\n    //bit 61: borrowing in isolation mode is enabled\\n    //bit 62-63: reserved\\n    //bit 64-79: reserve factor\\n    //bit 80-115 borrow cap in whole tokens, borrowCap == 0 => no cap\\n    //bit 116-151 supply cap in whole tokens, supplyCap == 0 => no cap\\n    //bit 152-167 liquidation protocol fee\\n    //bit 168-175 eMode category\\n    //bit 176-211 unbacked mint cap in whole tokens, unbackedMintCap == 0 => minting disabled\\n    //bit 212-251 debt ceiling for isolation mode with (ReserveConfiguration::DEBT_CEILING_DECIMALS) decimals\\n    //bit 252-255 unused\\n\\n    uint256 data;\\n  }\\n\\n  struct UserConfigurationMap {\\n    /**\\n     * @dev Bitmap of the users collaterals and borrows. It is divided in pairs of bits, one pair per asset.\\n     * The first bit indicates if an asset is used as collateral by the user, the second whether an\\n     * asset is borrowed by the user.\\n     */\\n    uint256 data;\\n  }\\n\\n  struct EModeCategory {\\n    // each eMode category has a custom ltv and liquidation threshold\\n    uint16 ltv;\\n    uint16 liquidationThreshold;\\n    uint16 liquidationBonus;\\n    // each eMode category may or may not have a custom oracle to override the individual assets price oracles\\n    address priceSource;\\n    string label;\\n  }\\n\\n  enum InterestRateMode {\\n    NONE,\\n    STABLE,\\n    VARIABLE\\n  }\\n\\n  struct ReserveCache {\\n    uint256 currScaledVariableDebt;\\n    uint256 nextScaledVariableDebt;\\n    uint256 currPrincipalStableDebt;\\n    uint256 currAvgStableBorrowRate;\\n    uint256 currTotalStableDebt;\\n    uint256 nextAvgStableBorrowRate;\\n    uint256 nextTotalStableDebt;\\n    uint256 currLiquidityIndex;\\n    uint256 nextLiquidityIndex;\\n    uint256 currVariableBorrowIndex;\\n    uint256 nextVariableBorrowIndex;\\n    uint256 currLiquidityRate;\\n    uint256 currVariableBorrowRate;\\n    uint256 reserveFactor;\\n    ReserveConfigurationMap reserveConfiguration;\\n    address aTokenAddress;\\n    address stableDebtTokenAddress;\\n    address variableDebtTokenAddress;\\n    uint40 reserveLastUpdateTimestamp;\\n    uint40 stableDebtLastUpdateTimestamp;\\n  }\\n\\n  struct ExecuteLiquidationCallParams {\\n    uint256 reservesCount;\\n    uint256 debtToCover;\\n    address collateralAsset;\\n    address debtAsset;\\n    address user;\\n    bool receiveAToken;\\n    address priceOracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteSupplyParams {\\n    address asset;\\n    uint256 amount;\\n    address onBehalfOf;\\n    uint16 referralCode;\\n  }\\n\\n  struct ExecuteBorrowParams {\\n    address asset;\\n    address user;\\n    address onBehalfOf;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint16 referralCode;\\n    bool releaseUnderlying;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct ExecuteRepayParams {\\n    address asset;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    address onBehalfOf;\\n    bool useATokens;\\n  }\\n\\n  struct ExecuteWithdrawParams {\\n    address asset;\\n    uint256 amount;\\n    address to;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ExecuteSetUserEModeParams {\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 categoryId;\\n  }\\n\\n  struct FinalizeTransferParams {\\n    address asset;\\n    address from;\\n    address to;\\n    uint256 amount;\\n    uint256 balanceFromBefore;\\n    uint256 balanceToBefore;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 fromEModeCategory;\\n  }\\n\\n  struct FlashloanParams {\\n    address receiverAddress;\\n    address[] assets;\\n    uint256[] amounts;\\n    uint256[] interestRateModes;\\n    address onBehalfOf;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n    uint256 maxStableRateBorrowSizePercent;\\n    uint256 reservesCount;\\n    address addressesProvider;\\n    uint8 userEModeCategory;\\n    bool isAuthorizedFlashBorrower;\\n  }\\n\\n  struct FlashloanSimpleParams {\\n    address receiverAddress;\\n    address asset;\\n    uint256 amount;\\n    bytes params;\\n    uint16 referralCode;\\n    uint256 flashLoanPremiumToProtocol;\\n    uint256 flashLoanPremiumTotal;\\n  }\\n\\n  struct FlashLoanRepaymentParams {\\n    uint256 amount;\\n    uint256 totalPremium;\\n    uint256 flashLoanPremiumToProtocol;\\n    address asset;\\n    address receiverAddress;\\n    uint16 referralCode;\\n  }\\n\\n  struct CalculateUserAccountDataParams {\\n    UserConfigurationMap userConfig;\\n    uint256 reservesCount;\\n    address user;\\n    address oracle;\\n    uint8 userEModeCategory;\\n  }\\n\\n  struct ValidateBorrowParams {\\n    ReserveCache reserveCache;\\n    UserConfigurationMap userConfig;\\n    address asset;\\n    address userAddress;\\n    uint256 amount;\\n    InterestRateMode interestRateMode;\\n    uint256 maxStableLoanPercent;\\n    uint256 reservesCount;\\n    address oracle;\\n    uint8 userEModeCategory;\\n    address priceOracleSentinel;\\n    bool isolationModeActive;\\n    address isolationModeCollateralAddress;\\n    uint256 isolationModeDebtCeiling;\\n  }\\n\\n  struct ValidateLiquidationCallParams {\\n    ReserveCache debtReserveCache;\\n    uint256 totalDebt;\\n    uint256 healthFactor;\\n    address priceOracleSentinel;\\n  }\\n\\n  struct CalculateInterestRatesParams {\\n    uint256 unbacked;\\n    uint256 liquidityAdded;\\n    uint256 liquidityTaken;\\n    uint256 totalStableDebt;\\n    uint256 totalVariableDebt;\\n    uint256 averageStableBorrowRate;\\n    uint256 reserveFactor;\\n    address reserve;\\n    address aToken;\\n  }\\n\\n  struct InitReserveParams {\\n    address asset;\\n    address aTokenAddress;\\n    address stableDebtAddress;\\n    address variableDebtAddress;\\n    address interestRateStrategyAddress;\\n    uint16 reservesCount;\\n    uint16 maxNumberReserves;\\n  }\\n}\\n\",\"keccak256\":\"0xf3acc235689aae1094d33bfdf90e60b0c3ae1f12c5f095b8cffb69bc6880765c\",\"license\":\"BUSL-1.1\"},\"@openzeppelin/contracts/access/AccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (access/AccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IAccessControl.sol\\\";\\nimport \\\"../utils/Context.sol\\\";\\nimport \\\"../utils/Strings.sol\\\";\\nimport \\\"../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Contract module that allows children to implement role-based access\\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\\n * members except through off-chain means by accessing the contract event logs. Some\\n * applications may benefit from on-chain enumerability, for those cases see\\n * {AccessControlEnumerable}.\\n *\\n * Roles are referred to by their `bytes32` identifier. These should be exposed\\n * in the external API and be unique. The best way to achieve this is by\\n * using `public constant` hash digests:\\n *\\n * ```\\n * bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\");\\n * ```\\n *\\n * Roles can be used to represent a set of permissions. To restrict access to a\\n * function call, use {hasRole}:\\n *\\n * ```\\n * function foo() public {\\n *     require(hasRole(MY_ROLE, msg.sender));\\n *     ...\\n * }\\n * ```\\n *\\n * Roles can be granted and revoked dynamically via the {grantRole} and\\n * {revokeRole} functions. Each role has an associated admin role, and only\\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\\n *\\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\\n * that only accounts with this role will be able to grant or revoke other\\n * roles. More complex role relationships can be created by using\\n * {_setRoleAdmin}.\\n *\\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\\n * grant and revoke this role. Extra precautions should be taken to secure\\n * accounts that have been granted it.\\n */\\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\\n    struct RoleData {\\n        mapping(address => bool) members;\\n        bytes32 adminRole;\\n    }\\n\\n    mapping(bytes32 => RoleData) private _roles;\\n\\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\\n\\n    /**\\n     * @dev Modifier that checks that an account has a specific role. Reverts\\n     * with a standardized message including the required role.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     *\\n     * _Available since v4.1._\\n     */\\n    modifier onlyRole(bytes32 role) {\\n        _checkRole(role, _msgSender());\\n        _;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\\n        return _roles[role].members[account];\\n    }\\n\\n    /**\\n     * @dev Revert with a standard message if `account` is missing `role`.\\n     *\\n     * The format of the revert reason is given by the following regular expression:\\n     *\\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\\n     */\\n    function _checkRole(bytes32 role, address account) internal view virtual {\\n        if (!hasRole(role, account)) {\\n            revert(\\n                string(\\n                    abi.encodePacked(\\n                        \\\"AccessControl: account \\\",\\n                        Strings.toHexString(uint160(account), 20),\\n                        \\\" is missing role \\\",\\n                        Strings.toHexString(uint256(role), 32)\\n                    )\\n                )\\n            );\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\\n        return _roles[role].adminRole;\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) public virtual override {\\n        require(account == _msgSender(), \\\"AccessControl: can only renounce roles for self\\\");\\n\\n        _revokeRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event. Note that unlike {grantRole}, this function doesn't perform any\\n     * checks on the calling account.\\n     *\\n     * [WARNING]\\n     * ====\\n     * This function should only be called from the constructor when setting\\n     * up the initial roles for the system.\\n     *\\n     * Using this function in any other way is effectively circumventing the admin\\n     * system imposed by {AccessControl}.\\n     * ====\\n     *\\n     * NOTE: This function is deprecated in favor of {_grantRole}.\\n     */\\n    function _setupRole(bytes32 role, address account) internal virtual {\\n        _grantRole(role, account);\\n    }\\n\\n    /**\\n     * @dev Sets `adminRole` as ``role``'s admin role.\\n     *\\n     * Emits a {RoleAdminChanged} event.\\n     */\\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\\n        bytes32 previousAdminRole = getRoleAdmin(role);\\n        _roles[role].adminRole = adminRole;\\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\\n    }\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _grantRole(bytes32 role, address account) internal virtual {\\n        if (!hasRole(role, account)) {\\n            _roles[role].members[account] = true;\\n            emit RoleGranted(role, account, _msgSender());\\n        }\\n    }\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * Internal function without access restriction.\\n     */\\n    function _revokeRole(bytes32 role, address account) internal virtual {\\n        if (hasRole(role, account)) {\\n            _roles[role].members[account] = false;\\n            emit RoleRevoked(role, account, _msgSender());\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x4a1a0ba12bf1a33f10d9fe226278cf59675c0b929d29e4da99658a079b27fb84\",\"license\":\"MIT\"},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev External interface of AccessControl declared to support ERC165 detection.\\n */\\ninterface IAccessControl {\\n    /**\\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\\n     *\\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\\n     * {RoleAdminChanged} not being emitted signaling this.\\n     *\\n     * _Available since v3.1._\\n     */\\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\\n\\n    /**\\n     * @dev Emitted when `account` is granted `role`.\\n     *\\n     * `sender` is the account that originated the contract call, an admin role\\n     * bearer except when using {AccessControl-_setupRole}.\\n     */\\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Emitted when `account` is revoked `role`.\\n     *\\n     * `sender` is the account that originated the contract call:\\n     *   - if using `revokeRole`, it is the admin role bearer\\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\\n     */\\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\\n\\n    /**\\n     * @dev Returns `true` if `account` has been granted `role`.\\n     */\\n    function hasRole(bytes32 role, address account) external view returns (bool);\\n\\n    /**\\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\\n     * {revokeRole}.\\n     *\\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\\n     */\\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\\n\\n    /**\\n     * @dev Grants `role` to `account`.\\n     *\\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function grantRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from `account`.\\n     *\\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must have ``role``'s admin role.\\n     */\\n    function revokeRole(bytes32 role, address account) external;\\n\\n    /**\\n     * @dev Revokes `role` from the calling account.\\n     *\\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\\n     * purpose is to provide a mechanism for accounts to lose their privileges\\n     * if they are compromised (such as when a trusted device is misplaced).\\n     *\\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\\n     * event.\\n     *\\n     * Requirements:\\n     *\\n     * - the caller must be `account`.\\n     */\\n    function renounceRole(bytes32 role, address account) external;\\n}\\n\",\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/utils/Initializable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\\n *\\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\\n *\\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\\n *\\n * [CAUTION]\\n * ====\\n * Avoid leaving a contract uninitialized.\\n *\\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\\n * contract, which may impact the proxy. To initialize the implementation contract, you can either invoke the\\n * initializer manually, or you can include a constructor to automatically mark it as initialized when it is deployed:\\n *\\n * [.hljs-theme-light.nopadding]\\n * ```\\n * /// @custom:oz-upgrades-unsafe-allow constructor\\n * constructor() initializer {}\\n * ```\\n * ====\\n */\\nabstract contract Initializable {\\n    /**\\n     * @dev Indicates that the contract has been initialized.\\n     */\\n    bool private _initialized;\\n\\n    /**\\n     * @dev Indicates that the contract is in the process of being initialized.\\n     */\\n    bool private _initializing;\\n\\n    /**\\n     * @dev Modifier to protect an initializer function from being invoked twice.\\n     */\\n    modifier initializer() {\\n        // If the contract is initializing we ignore whether _initialized is set in order to support multiple\\n        // inheritance patterns, but we only do this in the context of a constructor, because in other contexts the\\n        // contract may have been reentered.\\n        require(_initializing ? _isConstructor() : !_initialized, \\\"Initializable: contract is already initialized\\\");\\n\\n        bool isTopLevelCall = !_initializing;\\n        if (isTopLevelCall) {\\n            _initializing = true;\\n            _initialized = true;\\n        }\\n\\n        _;\\n\\n        if (isTopLevelCall) {\\n            _initializing = false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\\n     * {initializer} modifier, directly or indirectly.\\n     */\\n    modifier onlyInitializing() {\\n        require(_initializing, \\\"Initializable: contract is not initializing\\\");\\n        _;\\n    }\\n\\n    function _isConstructor() private view returns (bool) {\\n        return !Address.isContract(address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x4823752b07b8ea4ca971b217e39457930e7cb103c2c91e2a29729e5ca907e4f0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Strings.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x32c202bd28995dd20c4347b7c6467a6d3241c74c8ad3edcbb610cd9205916c45\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/math/SafeMath.sol)\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is generally not needed starting with Solidity 0.8, since the compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xa2f576be637946f767aa56601c26d717f48a0aff44f82e46f13807eea1009a21\",\"license\":\"MIT\"},\"contracts/SuperVault.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/AccessControl.sol\\\";\\nimport \\\"@openzeppelin/contracts/proxy/utils/Initializable.sol\\\";\\nimport { IPool } from \\\"@aave/core-v3/contracts/interfaces/IPool.sol\\\";\\n\\nimport \\\"./interfaces/IAddressProvider.sol\\\";\\nimport \\\"./interfaces/IGovernanceAddressProvider.sol\\\";\\nimport \\\"./interfaces/IVaultsCore.sol\\\";\\nimport \\\"./interfaces/IGenericMiner.sol\\\";\\nimport \\\"./interfaces/IDexAddressProvider.sol\\\";\\n\\n/// @title A parallel protocol vault with added functionality\\n/// @notice You can use this for collateral rebalancing\\n/// @dev This contract should be cloned and initialized with a SuperVaultFactory contract\\ncontract SuperVault is AccessControl, Initializable {\\n  enum Operation {\\n    LEVERAGE,\\n    REBALANCE,\\n    EMPTY\\n  }\\n\\n  struct AggregatorRequest {\\n    uint256 parToSell;\\n    bytes dexTxData;\\n    uint dexIndex;\\n  }\\n\\n  IAddressProvider public a;\\n  IGovernanceAddressProvider public ga;\\n  IPool public lendingPool;\\n  IDexAddressProvider internal _dexAP;\\n\\n  modifier onlyOwner() {\\n    require(hasRole(DEFAULT_ADMIN_ROLE, msg.sender), \\\"SV001\\\");\\n    _;\\n  }\\n\\n  ///@notice Initializes the Supervault contract\\n  ///@dev This replaces the constructor function as in the factory design pattern\\n  ///@param _a The address of the protocol's AddressProvider\\n  ///@param _ga The address of the protocol's GovernanceAddressProvider\\n  ///@param _lendingPool The address of the lendingPool from where flashLoans are taken\\n  ///@param _owner The owner of this SuperVault contract\\n  function initialize(\\n    IAddressProvider _a,\\n    IGovernanceAddressProvider _ga,\\n    IPool _lendingPool,\\n    address _owner,\\n    IDexAddressProvider dexAP\\n  ) external initializer {\\n    require(address(_a) != address(0));\\n    require(address(_ga) != address(0));\\n    require(address(_lendingPool) != address(0));\\n    require(address(dexAP) != address(0));\\n\\n    a = _a;\\n    ga = _ga;\\n    lendingPool = _lendingPool;\\n    _dexAP = dexAP;\\n\\n    _setupRole(DEFAULT_ADMIN_ROLE, _owner);\\n  }\\n\\n  ///@notice Routes a call from a flashloan pool to a leverage or rebalance operation\\n  ///@dev This Integrates with AAVE V2 flashLoans\\n  ///@dev This function is called by the lendingPool during execution of the leverage function\\n  ///@param assets An address array with one element corresponding to the address of the leveraged or rebalanced asset\\n  ///@param amounts A uint array with one element corresponding to the amount of the leveraged or rebalanced asset\\n  ///@param premiums A uint array with one element corresponding to the flashLoan fees\\n  ///@param params Bytes sent by the leverage or rebalance function that contains information on the aggregator swap\\n  function executeOperation(\\n    address[] calldata assets,\\n    uint256[] calldata amounts,\\n    uint256[] calldata premiums,\\n    address,\\n    bytes calldata params\\n  ) external returns (bool) {\\n    require(msg.sender == address(lendingPool), \\\"SV002\\\");\\n    (Operation operation, bytes memory operationParams) = abi.decode(params, (Operation, bytes));\\n    IERC20 asset = IERC20(assets[0]);\\n    uint256 flashloanRepayAmount = amounts[0] + premiums[0];\\n    if (operation == Operation.LEVERAGE) {\\n      leverageOperation(asset, flashloanRepayAmount, operationParams);\\n    }\\n    if (operation == Operation.REBALANCE) {\\n      rebalanceOperation(asset, amounts[0], flashloanRepayAmount, operationParams);\\n    }\\n    if (operation == Operation.EMPTY) {\\n      emptyVaultOperation(asset, amounts[0], flashloanRepayAmount, operationParams);\\n    }\\n\\n    asset.approve(address(lendingPool), flashloanRepayAmount);\\n    return true;\\n  }\\n\\n  ///@notice Used by executeOperation to call an aggregator to swap and deposit the swapped asset into a vault\\n  function leverageOperation(\\n    IERC20 token,\\n    uint256 flashloanRepayAmount,\\n    bytes memory params\\n  ) internal {\\n    leverageSwap(params, token);\\n\\n    require(token.balanceOf(address(this)) >= flashloanRepayAmount, \\\"SV101\\\");\\n    a.core().deposit(address(token), token.balanceOf(address(this)) - flashloanRepayAmount);\\n  }\\n\\n  ///@notice Leverage an asset using a flashloan to balance collateral\\n  ///@dev This uses an AAVE V2 flashLoan that will call executeOperation\\n  ///@param asset The address of the asset to leverage\\n  ///@param depositAmount The initial starting amount, e.g. 1 ETH\\n  ///@param borrowAmount The amount to be borrowed, e.g. 2 ETH, bringing the total to 3 ETH\\n  ///@param parToSell The amount of PAR we'll borrow so we can repay the leverage\\n  ///@param dexTxData Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\\n  ///@param dexIndex DexAddressProvider index of the aggregator to be used for selling PAR, either OneInch or Paraswap\\n  function leverage(\\n    address asset,\\n    uint256 depositAmount, //\\n    uint256 borrowAmount, //\\n    uint256 parToSell, //\\n    bytes calldata dexTxData,\\n    uint dexIndex \\n  ) external onlyOwner {\\n    IERC20(asset).transferFrom(msg.sender, address(this), depositAmount);\\n    bytes memory leverageParams = abi.encode(parToSell, dexTxData, dexIndex);\\n    bytes memory params = abi.encode(Operation.LEVERAGE, leverageParams);\\n    takeFlashLoan(asset, borrowAmount, params);\\n    checkAndSendMIMO();\\n  }\\n\\n  ///@notice Used by executeOperation to flashloan an asset, call an aggregator to swap for toAsset, and then rebalance the vault\\n  function rebalanceOperation(\\n    IERC20 fromCollateral,\\n    uint256 amount,\\n    uint256 flashloanRepayAmount,\\n    bytes memory params\\n  ) internal {\\n    (uint256 vaultId, address toCollateral, uint256 parAmount, bytes memory dexTxData, uint dexIndex) = abi\\n      .decode(params, (uint256, address, uint256, bytes, uint ));\\n    aggregatorSwap(dexIndex, fromCollateral, amount, dexTxData);\\n\\n    uint256 depositAmount = IERC20(toCollateral).balanceOf(address(this));\\n\\n    IERC20(toCollateral).approve(address(a.core()), depositAmount);\\n\\n    a.core().depositAndBorrow(toCollateral, depositAmount, parAmount);\\n    a.core().repay(vaultId, parAmount);\\n\\n    a.core().withdraw(vaultId, flashloanRepayAmount);\\n\\n    require(fromCollateral.balanceOf(address(this)) >= flashloanRepayAmount, \\\"SV101\\\");\\n  }\\n\\n  ///@notice Uses a flashloan to exchange one collateral type for another, e.g. to hold less volatile collateral\\n  ///@notice Both collateral vaults must have been created by this contract using the depositToVault or depositAndBorrowFromVault functions\\n  ///@dev This uses an AAVE V2 flashLoan that will call executeOperation\\n  ///@param vaultId The Id of the vault to reduce the collateral of\\n  ///@param toCollateral Address of the collateral to rebalance to\\n  ///@param fromCollateral Address of the starting collateral that will be reduced\\n  ///@param fromCollateralAmount Amount of starting collateral to deleverage\\n  ///@param parAmount Amount of par that will be deposited to exchange for\\n  ///@param dexTxData Bytes that will be passed to executeOperation that encodes args for the aggregator Swap\\n  ///@param dexIndex DexAddressProvider index representing the aggregator to be used for selling PAR, either OneInch or Paraswap\\n  function rebalance(\\n    uint256 vaultId, // vaultId to deleverage\\n    address toCollateral,\\n    address fromCollateral, // save some gas by just passing in collateral type instead of querying VaultsDataProvider for it\\n    uint256 fromCollateralAmount, // amount of collateral to reduce in main vault and borrow from Aave first\\n    uint256 parAmount, // amount of PAR to repay and deleverage\\n    bytes calldata dexTxData,\\n    uint dexIndex \\n  ) external onlyOwner {\\n    bytes memory rebalanceParams = abi.encode(vaultId, toCollateral, parAmount, dexTxData, dexIndex);\\n    bytes memory params = abi.encode(Operation.REBALANCE, rebalanceParams);\\n\\n    takeFlashLoan(fromCollateral, fromCollateralAmount, params);\\n    checkAndSendMIMO();\\n  }\\n\\n  ///@notice Used by executeOperation to repay all debt for a vault, withdraw collateral from the vault, and send the collateral back to the user\\n  ///@notice There will likely be some leftover par after repaying the loan; that will also be sent back to the user\\n  function emptyVaultOperation(\\n    IERC20 vaultCollateral,\\n    uint256 amount,\\n    uint256 flashloanRepayAmount,\\n    bytes memory params\\n  ) internal {\\n    // Use par to repay debt\\n    (uint256 vaultId, bytes memory dexTxData, uint dexIndex) = abi.decode(params, (uint256, bytes, uint));\\n\\n    aggregatorSwap(dexIndex, vaultCollateral, amount, dexTxData); // swap assets for par to repay back loan\\n\\n    IERC20 par = IERC20(a.stablex());\\n    par.approve(address(a.core()), par.balanceOf(address(this)));\\n\\n    // Repay the par debt\\n    a.core().repayAll(vaultId);\\n    uint256 vaultBalance = a.vaultsData().vaultCollateralBalance(vaultId);\\n    // Withdraw all collateral\\n    a.core().withdraw(vaultId, vaultBalance);\\n\\n    require(vaultCollateral.balanceOf(address(this)) >= flashloanRepayAmount, \\\"SV101\\\");\\n  }\\n\\n  ///@notice Uses a flashloan to repay all debts for a vault and send all collateral in the vault to the owner\\n  ///@notice This vault must have been created by this contract\\n  ///@dev This uses an AAVE V2 flashLoan that will call executeOperation\\n  ///@param vaultId The Id of the vault to empty\\n  ///@param collateralType Address of the collateral of the vault\\n  ///@param repayAmount Amount of par that needs to be repaid before all collateral can be withdrawn\\n  ///@param dexTxData Bytes that contain the low-level call to swap the vault asset for par to repay the vault loan\\n  ///@param dexIndex Index to use for swapping the vault collateral for par\\n  function emptyVault(\\n    uint256 vaultId,\\n    address collateralType,\\n    uint256 repayAmount, // Amount, in collateral type, needed to borrow to repay current vault debt\\n    bytes calldata dexTxData,\\n    uint dexIndex \\n  ) external onlyOwner {\\n    // Flashloan collateral and swap for par to repay any outstanding vault debt\\n    bytes memory emptyVaultParams = abi.encode(vaultId, dexTxData, dexIndex);\\n    bytes memory params = abi.encode(Operation.EMPTY, emptyVaultParams);\\n    takeFlashLoan(collateralType, repayAmount, params);\\n\\n    checkAndSendMIMO();\\n\\n    // Send remaining par, mimo, and collateral back to the owner\\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this))));\\n    checkAndSendMIMO();\\n\\n    IERC20 collateral = IERC20(collateralType);\\n    collateral.transfer(msg.sender, collateral.balanceOf(address(this)));\\n  }\\n\\n  ///@notice Withdraw collateral from a vault\\n  ///@notice Vault must have been created through leverage, depositToVault, or depositAndBorrowFromVault from this contract\\n  ///@param vaultId The ID of the vault to withdraw from\\n  ///@param amount The amount of collateral to withdraw\\n  function withdrawFromVault(uint256 vaultId, uint256 amount) external onlyOwner {\\n    a.core().withdraw(vaultId, amount);\\n    IERC20 asset = IERC20(a.vaultsData().vaultCollateralType(vaultId));\\n    require(asset.transfer(msg.sender, amount));\\n  }\\n\\n  ///@notice Borrow PAR from a vault\\n  ///@param vaultId The ID of the vault to borrow from\\n  ///@param amount The amount of PAR to borrow\\n  function borrowFromVault(uint256 vaultId, uint256 amount) external onlyOwner {\\n    a.core().borrow(vaultId, amount);\\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this))));\\n    checkAndSendMIMO();\\n  }\\n\\n  ///@notice Withdraw all of one type of collateral from this contract\\n  ///@notice Can only be used on vaults which have been created by this contract\\n  ///@param asset The address of the collateral type\\n  function withdrawAsset(address asset) external onlyOwner {\\n    IERC20 token = IERC20(asset);\\n    require(token.transfer(msg.sender, token.balanceOf(address(this))));\\n  }\\n\\n  ///@notice Deposit collateral into a vault\\n  ///@notice Requires approval of asset for amount before calling\\n  ///@param asset Address of the collateral type\\n  ///@param amount Amount to deposit\\n  function depositToVault(address asset, uint256 amount) external {\\n    IERC20 token = IERC20(asset);\\n    token.approve(address(a.core()), amount);\\n    token.transferFrom(msg.sender, address(this), amount);\\n    a.core().deposit(asset, amount);\\n  }\\n\\n  ///@notice Deposit collateral into a vault and borrow PAR\\n  ///@notice Requires approval of asset for amount before calling\\n  ///@param asset Address of the collateral type\\n  ///@param depositAmount Amount to deposit\\n  ///@param borrowAmount Amount of PAR to borrow after depositing\\n  function depositAndBorrowFromVault(\\n    address asset,\\n    uint256 depositAmount,\\n    uint256 borrowAmount\\n  ) external onlyOwner {\\n    IERC20 token = IERC20(asset);\\n    token.approve(address(a.core()), depositAmount);\\n    token.transferFrom(msg.sender, address(this), depositAmount);\\n    a.core().depositAndBorrow(asset, depositAmount, borrowAmount);\\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this)))); //par\\n    checkAndSendMIMO();\\n  }\\n\\n  ///@notice Release MIMO from a MIMO miner to the owner\\n  ///@param minerAddress The address of the MIMO miner\\n  function releaseMIMO(address minerAddress) external payable onlyOwner {\\n    IGenericMiner miner = IGenericMiner(minerAddress);\\n    miner.releaseMIMO(address(this));\\n    checkAndSendMIMO();\\n  }\\n\\n  ///@notice Wrap ETH and deposit WETH as collateral into a vault\\n  function depositETHToVault() external payable {\\n    a.core().depositETH{ value: msg.value }();\\n  }\\n\\n  ///@notice Wrap ETH and deposit WETH as collateral into a vault, then borrow PAR from vault\\n  ///@param borrowAmount The amount of PAR to borrow after depositing ETH\\n  function depositETHAndBorrowFromVault(uint256 borrowAmount) external payable onlyOwner {\\n    a.core().depositETHAndBorrow{ value: msg.value }(borrowAmount);\\n    require(IERC20(a.stablex()).transfer(msg.sender, IERC20(a.stablex()).balanceOf(address(this)))); //par\\n    checkAndSendMIMO();\\n  }\\n\\n  ///@notice Helper function to call an aggregator to swap PAR for a leveraged asset\\n  ///@dev This helper function is used to limit the number of local variables in the leverageOperation function\\n  ///@param params The params passed from the leverageOperation function for the aggregator call\\n  ///@param token The leveraged asset to swap PAR for\\n  function leverageSwap(bytes memory params, IERC20 token) internal {\\n    (uint256 parToSell, bytes memory dexTxData, uint dexIndex) = abi.decode(\\n      params,\\n      (uint256, bytes, uint )\\n    );\\n    token.approve(address(a.core()), 2**256 - 1);\\n    a.core().depositAndBorrow(address(token), token.balanceOf(address(this)), parToSell);\\n    IERC20 par = IERC20(a.stablex());\\n    aggregatorSwap(dexIndex, par, parToSell, dexTxData);\\n  }\\n\\n  ///@notice Helper function to approve and swap an asset using an aggregator\\n  ///@param dexIndex The DexAddressProvider index of aggregator to use to swap\\n  ///@param token The starting token to swap for another asset\\n  ///@param amount The amount of starting token to swap for\\n  ///@param dexTxData The low-level data to call the aggregator with\\n  function aggregatorSwap(\\n    uint256 dexIndex,\\n    IERC20 token,\\n    uint256 amount,\\n    bytes memory dexTxData\\n  ) internal {\\n    (address proxy, address router) = _dexAP.dexMapping(dexIndex);\\n    require(proxy != address(0) && router != address(0), \\\"SV201\\\"); \\n    token.approve(proxy, amount);\\n    router.call(dexTxData);\\n  }\\n\\n  ///@notice Helper function to format arguments to take a flashloan\\n  ///@dev The flashloan call will call the executeOperation function on this contract\\n  ///@param asset The address of the asset to loan\\n  ///@param amount The amount to borrow\\n  ///@param params The params that will be sent to executeOperation after the asset is borrowed\\n  function takeFlashLoan(\\n    address asset,\\n    uint256 amount,\\n    bytes memory params\\n  ) internal {\\n    uint8 referralCode;\\n    address[] memory assets = new address[](1);\\n    uint256[] memory amounts = new uint256[](1);\\n    uint256[] memory modes = new uint256[](1);\\n    (assets[0], amounts[0]) = (asset, amount);\\n    lendingPool.flashLoan(address(this), assets, amounts, modes, address(this), params, referralCode);\\n  }\\n\\n  ///@notice Helper function to transfer all MIMO owned by this contract to the Owner\\n  function checkAndSendMIMO() internal {\\n    if (ga.mimo().balanceOf(address(this)) > 0) {\\n      require(ga.mimo().transfer(msg.sender, ga.mimo().balanceOf(address(this))));\\n    }\\n  }\\n}\\n\",\"keccak256\":\"0x7279a612bd7b4d54dfa3379a60a218005c254abb98a4b0f229516ffea05ebe40\",\"license\":\"MIT\"},\"contracts/interfaces/IAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IVaultsCore.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\nimport \\\"./IVaultsDataProvider.sol\\\";\\n\\ninterface IAddressProvider {\\n  function core() external view returns (IVaultsCore);\\n\\n  function priceFeed() external view returns (IPriceFeed);\\n\\n  function vaultsData() external view returns (IVaultsDataProvider);\\n\\n  function stablex() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa3ac066f3ba8906c2878659051a04bdfeb9c51b5905c43ae2c2b0c4cae2ca6ad\",\"license\":\"MIT\"},\"contracts/interfaces/IDexAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IAddressProvider.sol\\\";\\n\\ninterface IDexAddressProvider {\\n  event DexSet(uint8);\\n\\n  struct Dex {\\n    address proxy;\\n    address router;\\n  }\\n\\n  function setDexMapping(\\n    uint256 _index,\\n    address _proxy,\\n    address _dex\\n  ) external;\\n\\n  function parallel() external view returns (IAddressProvider);\\n\\n  function dexMapping(uint256 index) external view returns (address, address);\\n}\\n\",\"keccak256\":\"0xacdad8dde089d2fc6bfc6f330cbb286b93ded49d332c4848315e6016a858d014\",\"license\":\"MIT\"},\"contracts/interfaces/IGenericMiner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IGovernanceAddressProvider.sol\\\";\\n\\ninterface IGenericMiner {\\n  function a() external view returns (IGovernanceAddressProvider);\\n\\n  function releaseMIMO(address _user) external;\\n}\\n\",\"keccak256\":\"0x1894fecb65fa6870c7256904d61eb5177ff336ac1db99a345185b7ca99382efb\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\n\\npragma solidity 0.8.10;\\n\\nimport \\\"./IMIMO.sol\\\";\\n\\ninterface IGovernanceAddressProvider {\\n  function mimo() external view returns (IMIMO);\\n}\\n\",\"keccak256\":\"0x6d168fe23f98505c106df55c352b79af187ef097f6c43e01b6549c167e1ba422\",\"license\":\"MIT\"},\"contracts/interfaces/IMIMO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMIMO is IERC20 {\\n  function burn(address account, uint256 amount) external;\\n\\n  function mint(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x8ef70608ed2c643e525624223b353b1be86b0883fc6fb0afb68cd58d00d29acd\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\ninterface IPriceFeed {\\n  event OracleUpdated(address indexed asset, address oracle, address sender);\\n  event EurOracleUpdated(address oracle, address sender);\\n\\n  function setAssetOracle(address _asset, address _oracle) external;\\n\\n  function setEurOracle(address _oracle) external;\\n\\n  function getAssetPrice(address _asset) external view returns (uint256);\\n\\n  function convertFrom(address _asset, uint256 _amount) external view returns (uint256);\\n\\n  function convertTo(address _asset, uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x64a9b6e8e410c67ebfcd062edd558baa12cc36c6386b4438185f36da608f96b8\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\ninterface IVaultsCore {\\n  event Opened(uint256 indexed vaultId, address indexed collateralType, address indexed owner);\\n  event Deposited(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Withdrawn(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Borrowed(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Repaid(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Liquidated(\\n    uint256 indexed vaultId,\\n    uint256 debtRepaid,\\n    uint256 collateralLiquidated,\\n    address indexed owner,\\n    address indexed sender\\n  );\\n\\n  event InsurancePaid(uint256 indexed vaultId, uint256 insuranceAmount, address indexed sender);\\n\\n  function deposit(address _collateralType, uint256 _amount) external;\\n\\n  function depositETH() external payable;\\n\\n  function depositByVaultId(uint256 _vaultId, uint256 _amount) external;\\n\\n  function depositETHByVaultId(uint256 _vaultId) external payable;\\n\\n  function depositAndBorrow(\\n    address _collateralType,\\n    uint256 _depositAmount,\\n    uint256 _borrowAmount\\n  ) external;\\n\\n  function depositETHAndBorrow(uint256 _borrowAmount) external payable;\\n\\n  function withdraw(uint256 _vaultId, uint256 _amount) external;\\n\\n  function withdrawETH(uint256 _vaultId, uint256 _amount) external;\\n\\n  function borrow(uint256 _vaultId, uint256 _amount) external;\\n\\n  function repayAll(uint256 _vaultId) external;\\n\\n  function repay(uint256 _vaultId, uint256 _amount) external;\\n\\n  function liquidate(uint256 _vaultId) external;\\n\\n  function liquidatePartial(uint256 _vaultId, uint256 _amount) external;\\n\\n  function upgrade(address payable _newVaultsCore) external;\\n\\n  function acceptUpgrade(address payable _oldVaultsCore) external;\\n\\n  function cumulativeRates(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x59430fa5f393ce3513b51a535decafd3ce61a76bb1e2a0db8dc08241151e46ab\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsDataProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\nimport \\\"../interfaces/IAddressProvider.sol\\\";\\n\\ninterface IVaultsDataProvider {\\n  struct Vault {\\n    // borrowedType support USDX / PAR\\n    address collateralType;\\n    address owner;\\n    uint256 collateralBalance;\\n    uint256 baseDebt;\\n    uint256 createdAt;\\n  }\\n\\n  //Write\\n  function createVault(address _collateralType, address _owner) external returns (uint256);\\n\\n  function setCollateralBalance(uint256 _id, uint256 _balance) external;\\n\\n  function setBaseDebt(uint256 _id, uint256 _newBaseDebt) external;\\n\\n  // Read\\n  function a() external view returns (IAddressProvider);\\n\\n  function baseDebt(address _collateralType) external view returns (uint256);\\n\\n  function vaultCount() external view returns (uint256);\\n\\n  function vaults(uint256 _id) external view returns (Vault memory);\\n\\n  function vaultOwner(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralType(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralBalance(uint256 _id) external view returns (uint256);\\n\\n  function vaultBaseDebt(uint256 _id) external view returns (uint256);\\n\\n  function vaultId(address _collateralType, address _owner) external view returns (uint256);\\n\\n  function vaultExists(uint256 _id) external view returns (bool);\\n\\n  function vaultDebt(uint256 _vaultId) external view returns (uint256);\\n\\n  function debt() external view returns (uint256);\\n\\n  function collateralDebt(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xda47cb8642592934e706573b467c63f9dcb0d43068bb7162abfeffc6818dd706\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1214,"contract":"contracts/SuperVault.sol:SuperVault","label":"_roles","offset":0,"slot":"0","type":"t_mapping(t_bytes32,t_struct(RoleData)1209_storage)"},{"astId":1658,"contract":"contracts/SuperVault.sol:SuperVault","label":"_initialized","offset":0,"slot":"1","type":"t_bool"},{"astId":1661,"contract":"contracts/SuperVault.sol:SuperVault","label":"_initializing","offset":1,"slot":"1","type":"t_bool"},{"astId":2761,"contract":"contracts/SuperVault.sol:SuperVault","label":"a","offset":2,"slot":"1","type":"t_contract(IAddressProvider)4138"},{"astId":2764,"contract":"contracts/SuperVault.sol:SuperVault","label":"ga","offset":0,"slot":"2","type":"t_contract(IGovernanceAddressProvider)4203"},{"astId":2767,"contract":"contracts/SuperVault.sol:SuperVault","label":"lendingPool","offset":0,"slot":"3","type":"t_contract(IPool)628"},{"astId":2770,"contract":"contracts/SuperVault.sol:SuperVault","label":"_dexAP","offset":0,"slot":"4","type":"t_contract(IDexAddressProvider)4176"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_contract(IAddressProvider)4138":{"encoding":"inplace","label":"contract IAddressProvider","numberOfBytes":"20"},"t_contract(IDexAddressProvider)4176":{"encoding":"inplace","label":"contract IDexAddressProvider","numberOfBytes":"20"},"t_contract(IGovernanceAddressProvider)4203":{"encoding":"inplace","label":"contract IGovernanceAddressProvider","numberOfBytes":"20"},"t_contract(IPool)628":{"encoding":"inplace","label":"contract IPool","numberOfBytes":"20"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_bytes32,t_struct(RoleData)1209_storage)":{"encoding":"mapping","key":"t_bytes32","label":"mapping(bytes32 => struct AccessControl.RoleData)","numberOfBytes":"32","value":"t_struct(RoleData)1209_storage"},"t_struct(RoleData)1209_storage":{"encoding":"inplace","label":"struct AccessControl.RoleData","members":[{"astId":1206,"contract":"contracts/SuperVault.sol:SuperVault","label":"members","offset":0,"slot":"0","type":"t_mapping(t_address,t_bool)"},{"astId":1208,"contract":"contracts/SuperVault.sol:SuperVault","label":"adminRole","offset":0,"slot":"1","type":"t_bytes32"}],"numberOfBytes":"64"}}},"userdoc":{"kind":"user","methods":{"borrowFromVault(uint256,uint256)":{"notice":"Borrow PAR from a vault"},"depositAndBorrowFromVault(address,uint256,uint256)":{"notice":"Deposit collateral into a vault and borrow PARRequires approval of asset for amount before calling"},"depositETHAndBorrowFromVault(uint256)":{"notice":"Wrap ETH and deposit WETH as collateral into a vault, then borrow PAR from vault"},"depositETHToVault()":{"notice":"Wrap ETH and deposit WETH as collateral into a vault"},"depositToVault(address,uint256)":{"notice":"Deposit collateral into a vaultRequires approval of asset for amount before calling"},"emptyVault(uint256,address,uint256,bytes,uint256)":{"notice":"Uses a flashloan to repay all debts for a vault and send all collateral in the vault to the ownerThis vault must have been created by this contract"},"executeOperation(address[],uint256[],uint256[],address,bytes)":{"notice":"Routes a call from a flashloan pool to a leverage or rebalance operation"},"initialize(address,address,address,address,address)":{"notice":"Initializes the Supervault contract"},"leverage(address,uint256,uint256,uint256,bytes,uint256)":{"notice":"Leverage an asset using a flashloan to balance collateral"},"rebalance(uint256,address,address,uint256,uint256,bytes,uint256)":{"notice":"Uses a flashloan to exchange one collateral type for another, e.g. to hold less volatile collateralBoth collateral vaults must have been created by this contract using the depositToVault or depositAndBorrowFromVault functions"},"releaseMIMO(address)":{"notice":"Release MIMO from a MIMO miner to the owner"},"withdrawAsset(address)":{"notice":"Withdraw all of one type of collateral from this contractCan only be used on vaults which have been created by this contract"},"withdrawFromVault(uint256,uint256)":{"notice":"Withdraw collateral from a vaultVault must have been created through leverage, depositToVault, or depositAndBorrowFromVault from this contract"}},"notice":"You can use this for collateral rebalancing","version":1}}},"contracts/SuperVaultFactory.sol":{"SuperVaultFactory":{"abi":[{"inputs":[{"internalType":"address","name":"_base","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"superVaultContract","type":"address"}],"name":"NewSuperVaultContract","type":"event"},{"inputs":[],"name":"base","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes","name":"_initdata","type":"bytes"}],"name":"clone","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_4083":{"entryPoint":null,"id":4083,"parameterSlots":1,"returnSlots":0},"abi_decode_tuple_t_address_fromMemory":{"entryPoint":103,"id":null,"parameterSlots":2,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:306:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"95:209:26","statements":[{"body":{"nodeType":"YulBlock","src":"141:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"150:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"153:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"143:6:26"},"nodeType":"YulFunctionCall","src":"143:12:26"},"nodeType":"YulExpressionStatement","src":"143:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"116:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"125:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"112:3:26"},"nodeType":"YulFunctionCall","src":"112:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"137:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"108:3:26"},"nodeType":"YulFunctionCall","src":"108:32:26"},"nodeType":"YulIf","src":"105:52:26"},{"nodeType":"YulVariableDeclaration","src":"166:29:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"185:9:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"179:5:26"},"nodeType":"YulFunctionCall","src":"179:16:26"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"170:5:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"258:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"267:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"270:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"260:6:26"},"nodeType":"YulFunctionCall","src":"260:12:26"},"nodeType":"YulExpressionStatement","src":"260:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"217:5:26"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"228:5:26"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"243:3:26","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"248:1:26","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"239:3:26"},"nodeType":"YulFunctionCall","src":"239:11:26"},{"kind":"number","nodeType":"YulLiteral","src":"252:1:26","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"235:3:26"},"nodeType":"YulFunctionCall","src":"235:19:26"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"224:3:26"},"nodeType":"YulFunctionCall","src":"224:31:26"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"214:2:26"},"nodeType":"YulFunctionCall","src":"214:42:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"207:6:26"},"nodeType":"YulFunctionCall","src":"207:50:26"},"nodeType":"YulIf","src":"204:70:26"},{"nodeType":"YulAssignment","src":"283:15:26","value":{"name":"value","nodeType":"YulIdentifier","src":"293:5:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"283:6:26"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"61:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"72:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"84:6:26","type":""}],"src":"14:290:26"}]},"contents":"{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"608060405234801561001057600080fd5b5060405161061938038061061983398101604081905261002f91610067565b6001600160a01b03811661004257600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055610097565b60006020828403121561007957600080fd5b81516001600160a01b038116811461009057600080fd5b9392505050565b610573806100a66000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635001f3b51461003b5780638ca89f7714610084575b600080fd5b60005461005b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009761009236600461042e565b610099565b005b600080546100bc9073ffffffffffffffffffffffffffffffffffffffff16610166565b905061011583838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff851692915050610233565b5060405173ffffffffffffffffffffffffffffffffffffffff8216815233907f34996d63f401753006a33d329b44f5c29e112100b41591878d324ee1db2703629060200160405180910390a2505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff811661022e5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064015b60405180910390fd5b919050565b606061027583836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061027c565b9392505050565b606061028b8484600085610293565b949350505050565b60608247101561030b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610225565b73ffffffffffffffffffffffffffffffffffffffff85163b61036f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610225565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161039891906104d0565b60006040518083038185875af1925050503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b50915091506103ea8282866103f5565b979650505050505050565b60608315610404575081610275565b8251156104145782518084602001fd5b8160405162461bcd60e51b815260040161022591906104ec565b6000806020838503121561044157600080fd5b823567ffffffffffffffff8082111561045957600080fd5b818501915085601f83011261046d57600080fd5b81358181111561047c57600080fd5b86602082850101111561048e57600080fd5b60209290920196919550909350505050565b60005b838110156104bb5781810151838201526020016104a3565b838111156104ca576000848401525b50505050565b600082516104e28184602087016104a0565b9190910192915050565b602081526000825180602084015261050b8160408501602087016104a0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220d3fa5ccbc1360e99884b4749bf4422e59df16c9171b0c4b03efce5d26e2725d464736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x619 CODESIZE SUB DUP1 PUSH2 0x619 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x67 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x42 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x97 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x79 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x90 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x573 DUP1 PUSH2 0xA6 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8CA89F77 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x5B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xBC SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x166 JUMP JUMPDEST SWAP1 POP PUSH2 0x115 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP3 SWAP2 POP POP PUSH2 0x233 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0x34996D63F401753006A33D329B44F5C29E112100B41591878D324EE1DB270362 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x275 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416464726573733A206C6F772D6C6576656C2063616C6C206661696C65640000 DUP2 MSTORE POP PUSH2 0x27C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x293 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x225 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3EA DUP3 DUP3 DUP7 PUSH2 0x3F5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x404 JUMPI POP DUP2 PUSH2 0x275 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x414 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4E2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x50B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 STATICCALL 0x5C 0xCB 0xC1 CALLDATASIZE 0xE SWAP10 DUP9 0x4B SELFBALANCE 0x49 0xBF DIFFICULTY 0x22 0xE5 SWAP14 CALL PUSH13 0x9171B0C4B03EFCE5D26E2725D4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"196:518:16:-:0;;;392:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;440:28:16;;432:37;;;;;;476:4;:12;;-1:-1:-1;;;;;;476:12:16;-1:-1:-1;;;;;476:12:16;;;;;;;;;;196:518;;14:290:26;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:26;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:26:o;:::-;196:518:16;;;;;;"},"deployedBytecode":{"functionDebugData":{"@base_4061":{"entryPoint":null,"id":4061,"parameterSlots":0,"returnSlots":0},"@clone_1594":{"entryPoint":358,"id":1594,"parameterSlots":1,"returnSlots":1},"@clone_4107":{"entryPoint":153,"id":4107,"parameterSlots":2,"returnSlots":0},"@functionCallWithValue_1962":{"entryPoint":659,"id":1962,"parameterSlots":4,"returnSlots":1},"@functionCall_1872":{"entryPoint":563,"id":1872,"parameterSlots":2,"returnSlots":1},"@functionCall_1892":{"entryPoint":636,"id":1892,"parameterSlots":3,"returnSlots":1},"@isContract_1821":{"entryPoint":null,"id":1821,"parameterSlots":1,"returnSlots":1},"@verifyCallResult_2097":{"entryPoint":1013,"id":2097,"parameterSlots":3,"returnSlots":1},"abi_decode_tuple_t_bytes_calldata_ptr":{"entryPoint":1070,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1232,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1260,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1184,"id":null,"parameterSlots":3,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2943:26","statements":[{"nodeType":"YulBlock","src":"6:3:26","statements":[]},{"body":{"nodeType":"YulBlock","src":"115:125:26","statements":[{"nodeType":"YulAssignment","src":"125:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"137:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"148:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"133:3:26"},"nodeType":"YulFunctionCall","src":"133:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"125:4:26"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"167:9:26"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"182:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"190:42:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"178:3:26"},"nodeType":"YulFunctionCall","src":"178:55:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"160:6:26"},"nodeType":"YulFunctionCall","src":"160:74:26"},"nodeType":"YulExpressionStatement","src":"160:74:26"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"84:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"95:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"106:4:26","type":""}],"src":"14:226:26"},{"body":{"nodeType":"YulBlock","src":"334:502:26","statements":[{"body":{"nodeType":"YulBlock","src":"380:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"389:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"392:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"382:6:26"},"nodeType":"YulFunctionCall","src":"382:12:26"},"nodeType":"YulExpressionStatement","src":"382:12:26"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"355:7:26"},{"name":"headStart","nodeType":"YulIdentifier","src":"364:9:26"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"351:3:26"},"nodeType":"YulFunctionCall","src":"351:23:26"},{"kind":"number","nodeType":"YulLiteral","src":"376:2:26","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"347:3:26"},"nodeType":"YulFunctionCall","src":"347:32:26"},"nodeType":"YulIf","src":"344:52:26"},{"nodeType":"YulVariableDeclaration","src":"405:37:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"432:9:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"419:12:26"},"nodeType":"YulFunctionCall","src":"419:23:26"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"409:6:26","type":""}]},{"nodeType":"YulVariableDeclaration","src":"451:28:26","value":{"kind":"number","nodeType":"YulLiteral","src":"461:18:26","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"455:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"506:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"515:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"518:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"508:6:26"},"nodeType":"YulFunctionCall","src":"508:12:26"},"nodeType":"YulExpressionStatement","src":"508:12:26"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"494:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"502:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"491:2:26"},"nodeType":"YulFunctionCall","src":"491:14:26"},"nodeType":"YulIf","src":"488:34:26"},{"nodeType":"YulVariableDeclaration","src":"531:32:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"545:9:26"},{"name":"offset","nodeType":"YulIdentifier","src":"556:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"541:3:26"},"nodeType":"YulFunctionCall","src":"541:22:26"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"535:2:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"611:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"620:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"623:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"613:6:26"},"nodeType":"YulFunctionCall","src":"613:12:26"},"nodeType":"YulExpressionStatement","src":"613:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"590:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"594:4:26","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"586:3:26"},"nodeType":"YulFunctionCall","src":"586:13:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"601:7:26"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"582:3:26"},"nodeType":"YulFunctionCall","src":"582:27:26"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"575:6:26"},"nodeType":"YulFunctionCall","src":"575:35:26"},"nodeType":"YulIf","src":"572:55:26"},{"nodeType":"YulVariableDeclaration","src":"636:30:26","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"663:2:26"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"650:12:26"},"nodeType":"YulFunctionCall","src":"650:16:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"640:6:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"693:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"702:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"705:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"695:6:26"},"nodeType":"YulFunctionCall","src":"695:12:26"},"nodeType":"YulExpressionStatement","src":"695:12:26"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"681:6:26"},{"name":"_1","nodeType":"YulIdentifier","src":"689:2:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"678:2:26"},"nodeType":"YulFunctionCall","src":"678:14:26"},"nodeType":"YulIf","src":"675:34:26"},{"body":{"nodeType":"YulBlock","src":"759:16:26","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"768:1:26","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"771:1:26","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"761:6:26"},"nodeType":"YulFunctionCall","src":"761:12:26"},"nodeType":"YulExpressionStatement","src":"761:12:26"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"732:2:26"},{"name":"length","nodeType":"YulIdentifier","src":"736:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"728:3:26"},"nodeType":"YulFunctionCall","src":"728:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"745:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"724:3:26"},"nodeType":"YulFunctionCall","src":"724:24:26"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"750:7:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"721:2:26"},"nodeType":"YulFunctionCall","src":"721:37:26"},"nodeType":"YulIf","src":"718:57:26"},{"nodeType":"YulAssignment","src":"784:21:26","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"798:2:26"},{"kind":"number","nodeType":"YulLiteral","src":"802:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"794:3:26"},"nodeType":"YulFunctionCall","src":"794:11:26"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"784:6:26"}]},{"nodeType":"YulAssignment","src":"814:16:26","value":{"name":"length","nodeType":"YulIdentifier","src":"824:6:26"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"814:6:26"}]}]},"name":"abi_decode_tuple_t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"292:9:26","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"303:7:26","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"315:6:26","type":""},{"name":"value1","nodeType":"YulTypedName","src":"323:6:26","type":""}],"src":"245:591:26"},{"body":{"nodeType":"YulBlock","src":"1015:172:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1032:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1043:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1025:6:26"},"nodeType":"YulFunctionCall","src":"1025:21:26"},"nodeType":"YulExpressionStatement","src":"1025:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1066:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1077:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1062:3:26"},"nodeType":"YulFunctionCall","src":"1062:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"1082:2:26","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1055:6:26"},"nodeType":"YulFunctionCall","src":"1055:30:26"},"nodeType":"YulExpressionStatement","src":"1055:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1105:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1116:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1101:3:26"},"nodeType":"YulFunctionCall","src":"1101:18:26"},{"hexValue":"455243313136373a20637265617465206661696c6564","kind":"string","nodeType":"YulLiteral","src":"1121:24:26","type":"","value":"ERC1167: create failed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1094:6:26"},"nodeType":"YulFunctionCall","src":"1094:52:26"},"nodeType":"YulExpressionStatement","src":"1094:52:26"},{"nodeType":"YulAssignment","src":"1155:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1167:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1178:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1163:3:26"},"nodeType":"YulFunctionCall","src":"1163:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1155:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"992:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1006:4:26","type":""}],"src":"841:346:26"},{"body":{"nodeType":"YulBlock","src":"1366:228:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1383:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1394:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1376:6:26"},"nodeType":"YulFunctionCall","src":"1376:21:26"},"nodeType":"YulExpressionStatement","src":"1376:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1417:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1428:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1413:3:26"},"nodeType":"YulFunctionCall","src":"1413:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"1433:2:26","type":"","value":"38"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1406:6:26"},"nodeType":"YulFunctionCall","src":"1406:30:26"},"nodeType":"YulExpressionStatement","src":"1406:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1456:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1467:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1452:3:26"},"nodeType":"YulFunctionCall","src":"1452:18:26"},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f","kind":"string","nodeType":"YulLiteral","src":"1472:34:26","type":"","value":"Address: insufficient balance fo"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1445:6:26"},"nodeType":"YulFunctionCall","src":"1445:62:26"},"nodeType":"YulExpressionStatement","src":"1445:62:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1527:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1538:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1523:3:26"},"nodeType":"YulFunctionCall","src":"1523:18:26"},{"hexValue":"722063616c6c","kind":"string","nodeType":"YulLiteral","src":"1543:8:26","type":"","value":"r call"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1516:6:26"},"nodeType":"YulFunctionCall","src":"1516:36:26"},"nodeType":"YulExpressionStatement","src":"1516:36:26"},{"nodeType":"YulAssignment","src":"1561:27:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1573:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1584:3:26","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1569:3:26"},"nodeType":"YulFunctionCall","src":"1569:19:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1561:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1343:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1357:4:26","type":""}],"src":"1192:402:26"},{"body":{"nodeType":"YulBlock","src":"1773:179:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1790:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1801:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1783:6:26"},"nodeType":"YulFunctionCall","src":"1783:21:26"},"nodeType":"YulExpressionStatement","src":"1783:21:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1824:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1835:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1820:3:26"},"nodeType":"YulFunctionCall","src":"1820:18:26"},{"kind":"number","nodeType":"YulLiteral","src":"1840:2:26","type":"","value":"29"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1813:6:26"},"nodeType":"YulFunctionCall","src":"1813:30:26"},"nodeType":"YulExpressionStatement","src":"1813:30:26"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1863:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1874:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1859:3:26"},"nodeType":"YulFunctionCall","src":"1859:18:26"},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","kind":"string","nodeType":"YulLiteral","src":"1879:31:26","type":"","value":"Address: call to non-contract"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:26"},"nodeType":"YulFunctionCall","src":"1852:59:26"},"nodeType":"YulExpressionStatement","src":"1852:59:26"},{"nodeType":"YulAssignment","src":"1920:26:26","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1932:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"1943:2:26","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1928:3:26"},"nodeType":"YulFunctionCall","src":"1928:18:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1920:4:26"}]}]},"name":"abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1750:9:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1764:4:26","type":""}],"src":"1599:353:26"},{"body":{"nodeType":"YulBlock","src":"2010:205:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2020:10:26","value":{"kind":"number","nodeType":"YulLiteral","src":"2029:1:26","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2024:1:26","type":""}]},{"body":{"nodeType":"YulBlock","src":"2089:63:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2114:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2119:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2110:3:26"},"nodeType":"YulFunctionCall","src":"2110:11:26"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2133:3:26"},{"name":"i","nodeType":"YulIdentifier","src":"2138:1:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2129:3:26"},"nodeType":"YulFunctionCall","src":"2129:11:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2123:5:26"},"nodeType":"YulFunctionCall","src":"2123:18:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2103:6:26"},"nodeType":"YulFunctionCall","src":"2103:39:26"},"nodeType":"YulExpressionStatement","src":"2103:39:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2050:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2053:6:26"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2047:2:26"},"nodeType":"YulFunctionCall","src":"2047:13:26"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2061:19:26","statements":[{"nodeType":"YulAssignment","src":"2063:15:26","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2072:1:26"},{"kind":"number","nodeType":"YulLiteral","src":"2075:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2068:3:26"},"nodeType":"YulFunctionCall","src":"2068:10:26"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2063:1:26"}]}]},"pre":{"nodeType":"YulBlock","src":"2043:3:26","statements":[]},"src":"2039:113:26"},{"body":{"nodeType":"YulBlock","src":"2178:31:26","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2191:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2196:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2187:3:26"},"nodeType":"YulFunctionCall","src":"2187:16:26"},{"kind":"number","nodeType":"YulLiteral","src":"2205:1:26","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2180:6:26"},"nodeType":"YulFunctionCall","src":"2180:27:26"},"nodeType":"YulExpressionStatement","src":"2180:27:26"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2167:1:26"},{"name":"length","nodeType":"YulIdentifier","src":"2170:6:26"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2164:2:26"},"nodeType":"YulFunctionCall","src":"2164:13:26"},"nodeType":"YulIf","src":"2161:48:26"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1988:3:26","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1993:3:26","type":""},{"name":"length","nodeType":"YulTypedName","src":"1998:6:26","type":""}],"src":"1957:258:26"},{"body":{"nodeType":"YulBlock","src":"2357:137:26","statements":[{"nodeType":"YulVariableDeclaration","src":"2367:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2387:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2381:5:26"},"nodeType":"YulFunctionCall","src":"2381:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2371:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2429:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2437:4:26","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2425:3:26"},"nodeType":"YulFunctionCall","src":"2425:17:26"},{"name":"pos","nodeType":"YulIdentifier","src":"2444:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2449:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2403:21:26"},"nodeType":"YulFunctionCall","src":"2403:53:26"},"nodeType":"YulExpressionStatement","src":"2403:53:26"},{"nodeType":"YulAssignment","src":"2465:23:26","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2476:3:26"},{"name":"length","nodeType":"YulIdentifier","src":"2481:6:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2472:3:26"},"nodeType":"YulFunctionCall","src":"2472:16:26"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2465:3:26"}]}]},"name":"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2333:3:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2338:6:26","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2349:3:26","type":""}],"src":"2220:274:26"},{"body":{"nodeType":"YulBlock","src":"2620:321:26","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2637:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2648:2:26","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2630:6:26"},"nodeType":"YulFunctionCall","src":"2630:21:26"},"nodeType":"YulExpressionStatement","src":"2630:21:26"},{"nodeType":"YulVariableDeclaration","src":"2660:27:26","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2680:6:26"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2674:5:26"},"nodeType":"YulFunctionCall","src":"2674:13:26"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2664:6:26","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2707:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2718:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2703:3:26"},"nodeType":"YulFunctionCall","src":"2703:18:26"},{"name":"length","nodeType":"YulIdentifier","src":"2723:6:26"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2696:6:26"},"nodeType":"YulFunctionCall","src":"2696:34:26"},"nodeType":"YulExpressionStatement","src":"2696:34:26"},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2765:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2773:2:26","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2761:3:26"},"nodeType":"YulFunctionCall","src":"2761:15:26"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2782:9:26"},{"kind":"number","nodeType":"YulLiteral","src":"2793:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2778:3:26"},"nodeType":"YulFunctionCall","src":"2778:18:26"},{"name":"length","nodeType":"YulIdentifier","src":"2798:6:26"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2739:21:26"},"nodeType":"YulFunctionCall","src":"2739:66:26"},"nodeType":"YulExpressionStatement","src":"2739:66:26"},{"nodeType":"YulAssignment","src":"2814:121:26","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2830:9:26"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2849:6:26"},{"kind":"number","nodeType":"YulLiteral","src":"2857:2:26","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2845:3:26"},"nodeType":"YulFunctionCall","src":"2845:15:26"},{"kind":"number","nodeType":"YulLiteral","src":"2862:66:26","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2841:3:26"},"nodeType":"YulFunctionCall","src":"2841:88:26"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2826:3:26"},"nodeType":"YulFunctionCall","src":"2826:104:26"},{"kind":"number","nodeType":"YulLiteral","src":"2932:2:26","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2822:3:26"},"nodeType":"YulFunctionCall","src":"2822:113:26"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2814:4:26"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2589:9:26","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2600:6:26","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2611:4:26","type":""}],"src":"2499:442:26"}]},"contents":"{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value0 := add(_2, 32)\n        value1 := length\n    }\n    function abi_encode_tuple_t_stringliteral_68ca40b61460257f14e69f48b1a4dbc812e9afc6932f127ef8084544457b3335__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"ERC1167: create failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 64)\n    }\n}","id":26,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c80635001f3b51461003b5780638ca89f7714610084575b600080fd5b60005461005b9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b61009761009236600461042e565b610099565b005b600080546100bc9073ffffffffffffffffffffffffffffffffffffffff16610166565b905061011583838080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152505073ffffffffffffffffffffffffffffffffffffffff851692915050610233565b5060405173ffffffffffffffffffffffffffffffffffffffff8216815233907f34996d63f401753006a33d329b44f5c29e112100b41591878d324ee1db2703629060200160405180910390a2505050565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f091505073ffffffffffffffffffffffffffffffffffffffff811661022e5760405162461bcd60e51b815260206004820152601660248201527f455243313136373a20637265617465206661696c65640000000000000000000060448201526064015b60405180910390fd5b919050565b606061027583836040518060400160405280601e81526020017f416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564000081525061027c565b9392505050565b606061028b8484600085610293565b949350505050565b60608247101561030b5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610225565b73ffffffffffffffffffffffffffffffffffffffff85163b61036f5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610225565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161039891906104d0565b60006040518083038185875af1925050503d80600081146103d5576040519150601f19603f3d011682016040523d82523d6000602084013e6103da565b606091505b50915091506103ea8282866103f5565b979650505050505050565b60608315610404575081610275565b8251156104145782518084602001fd5b8160405162461bcd60e51b815260040161022591906104ec565b6000806020838503121561044157600080fd5b823567ffffffffffffffff8082111561045957600080fd5b818501915085601f83011261046d57600080fd5b81358181111561047c57600080fd5b86602082850101111561048e57600080fd5b60209290920196919550909350505050565b60005b838110156104bb5781810151838201526020016104a3565b838111156104ca576000848401525b50505050565b600082516104e28184602087016104a0565b9190910192915050565b602081526000825180602084015261050b8160408501602087016104a0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220d3fa5ccbc1360e99884b4749bf4422e59df16c9171b0c4b03efce5d26e2725d464736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x5001F3B5 EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x8CA89F77 EQ PUSH2 0x84 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH2 0x5B SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x97 PUSH2 0x92 CALLDATASIZE PUSH1 0x4 PUSH2 0x42E JUMP JUMPDEST PUSH2 0x99 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0xBC SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x166 JUMP JUMPDEST SWAP1 POP PUSH2 0x115 DUP4 DUP4 DUP1 DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP4 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 SWAP3 ADD SWAP2 SWAP1 SWAP2 MSTORE POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP3 SWAP2 POP POP PUSH2 0x233 JUMP JUMPDEST POP PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP2 MSTORE CALLER SWAP1 PUSH32 0x34996D63F401753006A33D329B44F5C29E112100B41591878D324EE1DB270362 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD PUSH32 0x3D602D80600A3D3981F3363D3D373D3D3D363D73000000000000000000000000 DUP2 MSTORE DUP3 PUSH1 0x60 SHL PUSH1 0x14 DUP3 ADD MSTORE PUSH32 0x5AF43D82803E903D91602B57FD5BF30000000000000000000000000000000000 PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP2 POP POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH2 0x22E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313136373A20637265617465206661696C656400000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x275 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1E DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x416464726573733A206C6F772D6C6576656C2063616C6C206661696C65640000 DUP2 MSTORE POP PUSH2 0x27C JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x28B DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x293 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x30B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A20696E73756666696369656E742062616C616E636520666F PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x722063616C6C0000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x225 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND EXTCODESIZE PUSH2 0x36F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x225 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 DUP8 PUSH1 0x40 MLOAD PUSH2 0x398 SWAP2 SWAP1 PUSH2 0x4D0 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x3D5 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x3DA JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x3EA DUP3 DUP3 DUP7 PUSH2 0x3F5 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x404 JUMPI POP DUP2 PUSH2 0x275 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x414 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x4EC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x20 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x441 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x46D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x47C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP7 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x48E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x20 SWAP3 SWAP1 SWAP3 ADD SWAP7 SWAP2 SWAP6 POP SWAP1 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4BB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x4A3 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x4CA JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD PUSH2 0x4E2 DUP2 DUP5 PUSH1 0x20 DUP8 ADD PUSH2 0x4A0 JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x50B DUP2 PUSH1 0x40 DUP6 ADD PUSH1 0x20 DUP8 ADD PUSH2 0x4A0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP2 SWAP1 SWAP2 ADD PUSH1 0x40 ADD SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD3 STATICCALL 0x5C 0xCB 0xC1 CALLDATASIZE 0xE SWAP10 DUP9 0x4B SELFBALANCE 0x49 0xBF DIFFICULTY 0x22 0xE5 SWAP14 CALL PUSH13 0x9171B0C4B03EFCE5D26E2725D4 PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"196:518:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;368:19;;;;;;;;;;;;190:42:26;178:55;;;160:74;;148:2;133:18;368:19:16;;;;;;;497:215;;;;;;:::i;:::-;;:::i;:::-;;;551:26;580:4;;:12;;:4;;:10;:12::i;:::-;551:41;;598:42;630:9;;598:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;598:31:16;;;;:42;-1:-1:-1;;598:31:16;:42::i;:::-;-1:-1:-1;654:53:16;;;178:55:26;;160:74;;676:10:16;;654:53;;148:2:26;133:18;654:53:16;;;;;;;545:167;497:215;;:::o;958:515:5:-;1015:16;1083:4;1077:11;1113:66;1108:3;1101:79;1226:14;1220:4;1216:25;1209:4;1204:3;1200:14;1193:49;1278:66;1271:4;1266:3;1262:14;1255:90;1385:4;1380:3;1377:1;1370:20;1358:32;-1:-1:-1;;1417:22:5;;;1409:57;;;;-1:-1:-1;;;1409:57:5;;1043:2:26;1409:57:5;;;1025:21:26;1082:2;1062:18;;;1055:30;1121:24;1101:18;;;1094:52;1163:18;;1409:57:5;;;;;;;;;958:515;;;:::o;3466:173:8:-;3541:12;3572:60;3585:6;3593:4;3572:60;;;;;;;;;;;;;;;;;:12;:60::i;:::-;3565:67;3466:173;-1:-1:-1;;;3466:173:8:o;3861:223::-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:8:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:8;;1394:2:26;5137:81:8;;;1376:21:26;1433:2;1413:18;;;1406:30;1472:34;1452:18;;;1445:62;1543:8;1523:18;;;1516:36;1569:19;;5137:81:8;1192:402:26;5137:81:8;1465:19;;;;5228:60;;;;-1:-1:-1;;;5228:60:8;;1801:2:26;5228:60:8;;;1783:21:26;1840:2;1820:18;;;1813:30;1879:31;1859:18;;;1852:59;1928:18;;5228:60:8;1599:353:26;5228:60:8;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:8:o;7561:692::-;7707:12;7735:7;7731:516;;;-1:-1:-1;7765:10:8;7758:17;;7731:516;7876:17;;:21;7872:365;;8070:10;8064:17;8130:15;8117:10;8113:2;8109:19;8102:44;7872:365;8209:12;8202:20;;-1:-1:-1;;;8202:20:8;;;;;;;;:::i;245:591:26:-;315:6;323;376:2;364:9;355:7;351:23;347:32;344:52;;;392:1;389;382:12;344:52;432:9;419:23;461:18;502:2;494:6;491:14;488:34;;;518:1;515;508:12;488:34;556:6;545:9;541:22;531:32;;601:7;594:4;590:2;586:13;582:27;572:55;;623:1;620;613:12;572:55;663:2;650:16;689:2;681:6;678:14;675:34;;;705:1;702;695:12;675:34;750:7;745:2;736:6;732:2;728:15;724:24;721:37;718:57;;;771:1;768;761:12;718:57;802:2;794:11;;;;;824:6;;-1:-1:-1;245:591:26;;-1:-1:-1;;;;245:591:26:o;1957:258::-;2029:1;2039:113;2053:6;2050:1;2047:13;2039:113;;;2129:11;;;2123:18;2110:11;;;2103:39;2075:2;2068:10;2039:113;;;2170:6;2167:1;2164:13;2161:48;;;2205:1;2196:6;2191:3;2187:16;2180:27;2161:48;;1957:258;;;:::o;2220:274::-;2349:3;2387:6;2381:13;2403:53;2449:6;2444:3;2437:4;2429:6;2425:17;2403:53;:::i;:::-;2472:16;;;;;2220:274;-1:-1:-1;;2220:274:26:o;2499:442::-;2648:2;2637:9;2630:21;2611:4;2680:6;2674:13;2723:6;2718:2;2707:9;2703:18;2696:34;2739:66;2798:6;2793:2;2782:9;2778:18;2773:2;2765:6;2761:15;2739:66;:::i;:::-;2857:2;2845:15;2862:66;2841:88;2826:104;;;;2932:2;2822:113;;2499:442;-1:-1:-1;;2499:442:26:o"},"gasEstimates":{"creation":{"codeDepositCost":"279000","executionCost":"infinite","totalCost":"infinite"},"external":{"base()":"2279","clone(bytes)":"infinite"}},"methodIdentifiers":{"base()":"5001f3b5","clone(bytes)":"8ca89f77"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_base\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"superVaultContract\",\"type\":\"address\"}],\"name\":\"NewSuperVaultContract\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"base\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_initdata\",\"type\":\"bytes\"}],\"name\":\"clone\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/SuperVaultFactory.sol\":\"SuperVaultFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/Clones.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/Clones.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev https://eips.ethereum.org/EIPS/eip-1167[EIP 1167] is a standard for\\n * deploying minimal proxy contracts, also known as \\\"clones\\\".\\n *\\n * > To simply and cheaply clone contract functionality in an immutable way, this standard specifies\\n * > a minimal bytecode implementation that delegates all calls to a known, fixed address.\\n *\\n * The library includes functions to deploy a proxy using either `create` (traditional deployment) or `create2`\\n * (salted deterministic deployment). It also includes functions to predict the addresses of clones deployed using the\\n * deterministic method.\\n *\\n * _Available since v3.4._\\n */\\nlibrary Clones {\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create opcode, which should never revert.\\n     */\\n    function clone(address implementation) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create(0, ptr, 0x37)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create failed\\\");\\n    }\\n\\n    /**\\n     * @dev Deploys and returns the address of a clone that mimics the behaviour of `implementation`.\\n     *\\n     * This function uses the create2 opcode and a `salt` to deterministically deploy\\n     * the clone. Using the same `implementation` and `salt` multiple time will revert, since\\n     * the clones cannot be deployed twice at the same address.\\n     */\\n    function cloneDeterministic(address implementation, bytes32 salt) internal returns (address instance) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n            instance := create2(0, ptr, 0x37, salt)\\n        }\\n        require(instance != address(0), \\\"ERC1167: create2 failed\\\");\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(\\n        address implementation,\\n        bytes32 salt,\\n        address deployer\\n    ) internal pure returns (address predicted) {\\n        assembly {\\n            let ptr := mload(0x40)\\n            mstore(ptr, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n            mstore(add(ptr, 0x14), shl(0x60, implementation))\\n            mstore(add(ptr, 0x28), 0x5af43d82803e903d91602b57fd5bf3ff00000000000000000000000000000000)\\n            mstore(add(ptr, 0x38), shl(0x60, deployer))\\n            mstore(add(ptr, 0x4c), salt)\\n            mstore(add(ptr, 0x6c), keccak256(ptr, 0x37))\\n            predicted := keccak256(add(ptr, 0x37), 0x55)\\n        }\\n    }\\n\\n    /**\\n     * @dev Computes the address of a clone deployed using {Clones-cloneDeterministic}.\\n     */\\n    function predictDeterministicAddress(address implementation, bytes32 salt)\\n        internal\\n        view\\n        returns (address predicted)\\n    {\\n        return predictDeterministicAddress(implementation, salt, address(this));\\n    }\\n}\\n\",\"keccak256\":\"0x1cc0efb01cbf008b768fd7b334786a6e358809198bb7e67f1c530af4957c6a21\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"contracts/SuperVaultFactory.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/proxy/Clones.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Address.sol\\\";\\n\\ncontract SuperVaultFactory {\\n  using Address for address;\\n  using Clones for address;\\n\\n  event NewSuperVaultContract(address indexed owner, address superVaultContract);\\n\\n  address public base;\\n\\n  constructor(address _base) public {\\n    require(address(_base) != address(0));\\n\\n    base = _base;\\n  }\\n\\n  function clone(bytes calldata _initdata) public {\\n    address superVaultContract = base.clone();\\n    superVaultContract.functionCall(_initdata);\\n  \\n    emit NewSuperVaultContract(msg.sender, superVaultContract);\\n  }\\n}\\n\",\"keccak256\":\"0x9264edf010d65f4f5aaa941b66199c998baea8df401b9e93ca55fbf3eed65a90\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":4061,"contract":"contracts/SuperVaultFactory.sol:SuperVaultFactory","label":"base","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IAddressProvider.sol":{"IAddressProvider":{"abi":[{"inputs":[],"name":"core","outputs":[{"internalType":"contract IVaultsCore","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"priceFeed","outputs":[{"internalType":"contract IPriceFeed","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"stablex","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vaultsData","outputs":[{"internalType":"contract IVaultsDataProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"core()":"f2f4eb26","priceFeed()":"741bef1a","stablex()":"16d8a5a9","vaultsData()":"65d55287"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"core\",\"outputs\":[{\"internalType\":\"contract IVaultsCore\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract IPriceFeed\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stablex\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultsData\",\"outputs\":[{\"internalType\":\"contract IVaultsDataProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IAddressProvider.sol\":\"IAddressProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IVaultsCore.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\nimport \\\"./IVaultsDataProvider.sol\\\";\\n\\ninterface IAddressProvider {\\n  function core() external view returns (IVaultsCore);\\n\\n  function priceFeed() external view returns (IPriceFeed);\\n\\n  function vaultsData() external view returns (IVaultsDataProvider);\\n\\n  function stablex() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa3ac066f3ba8906c2878659051a04bdfeb9c51b5905c43ae2c2b0c4cae2ca6ad\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\ninterface IPriceFeed {\\n  event OracleUpdated(address indexed asset, address oracle, address sender);\\n  event EurOracleUpdated(address oracle, address sender);\\n\\n  function setAssetOracle(address _asset, address _oracle) external;\\n\\n  function setEurOracle(address _oracle) external;\\n\\n  function getAssetPrice(address _asset) external view returns (uint256);\\n\\n  function convertFrom(address _asset, uint256 _amount) external view returns (uint256);\\n\\n  function convertTo(address _asset, uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x64a9b6e8e410c67ebfcd062edd558baa12cc36c6386b4438185f36da608f96b8\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\ninterface IVaultsCore {\\n  event Opened(uint256 indexed vaultId, address indexed collateralType, address indexed owner);\\n  event Deposited(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Withdrawn(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Borrowed(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Repaid(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Liquidated(\\n    uint256 indexed vaultId,\\n    uint256 debtRepaid,\\n    uint256 collateralLiquidated,\\n    address indexed owner,\\n    address indexed sender\\n  );\\n\\n  event InsurancePaid(uint256 indexed vaultId, uint256 insuranceAmount, address indexed sender);\\n\\n  function deposit(address _collateralType, uint256 _amount) external;\\n\\n  function depositETH() external payable;\\n\\n  function depositByVaultId(uint256 _vaultId, uint256 _amount) external;\\n\\n  function depositETHByVaultId(uint256 _vaultId) external payable;\\n\\n  function depositAndBorrow(\\n    address _collateralType,\\n    uint256 _depositAmount,\\n    uint256 _borrowAmount\\n  ) external;\\n\\n  function depositETHAndBorrow(uint256 _borrowAmount) external payable;\\n\\n  function withdraw(uint256 _vaultId, uint256 _amount) external;\\n\\n  function withdrawETH(uint256 _vaultId, uint256 _amount) external;\\n\\n  function borrow(uint256 _vaultId, uint256 _amount) external;\\n\\n  function repayAll(uint256 _vaultId) external;\\n\\n  function repay(uint256 _vaultId, uint256 _amount) external;\\n\\n  function liquidate(uint256 _vaultId) external;\\n\\n  function liquidatePartial(uint256 _vaultId, uint256 _amount) external;\\n\\n  function upgrade(address payable _newVaultsCore) external;\\n\\n  function acceptUpgrade(address payable _oldVaultsCore) external;\\n\\n  function cumulativeRates(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x59430fa5f393ce3513b51a535decafd3ce61a76bb1e2a0db8dc08241151e46ab\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsDataProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\nimport \\\"../interfaces/IAddressProvider.sol\\\";\\n\\ninterface IVaultsDataProvider {\\n  struct Vault {\\n    // borrowedType support USDX / PAR\\n    address collateralType;\\n    address owner;\\n    uint256 collateralBalance;\\n    uint256 baseDebt;\\n    uint256 createdAt;\\n  }\\n\\n  //Write\\n  function createVault(address _collateralType, address _owner) external returns (uint256);\\n\\n  function setCollateralBalance(uint256 _id, uint256 _balance) external;\\n\\n  function setBaseDebt(uint256 _id, uint256 _newBaseDebt) external;\\n\\n  // Read\\n  function a() external view returns (IAddressProvider);\\n\\n  function baseDebt(address _collateralType) external view returns (uint256);\\n\\n  function vaultCount() external view returns (uint256);\\n\\n  function vaults(uint256 _id) external view returns (Vault memory);\\n\\n  function vaultOwner(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralType(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralBalance(uint256 _id) external view returns (uint256);\\n\\n  function vaultBaseDebt(uint256 _id) external view returns (uint256);\\n\\n  function vaultId(address _collateralType, address _owner) external view returns (uint256);\\n\\n  function vaultExists(uint256 _id) external view returns (bool);\\n\\n  function vaultDebt(uint256 _vaultId) external view returns (uint256);\\n\\n  function debt() external view returns (uint256);\\n\\n  function collateralDebt(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xda47cb8642592934e706573b467c63f9dcb0d43068bb7162abfeffc6818dd706\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IDexAddressProvider.sol":{"IDexAddressProvider":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"","type":"uint8"}],"name":"DexSet","type":"event"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"dexMapping","outputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"parallel","outputs":[{"internalType":"contract IAddressProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_index","type":"uint256"},{"internalType":"address","name":"_proxy","type":"address"},{"internalType":"address","name":"_dex","type":"address"}],"name":"setDexMapping","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"dexMapping(uint256)":"2bfac6be","parallel()":"3df06b59","setDexMapping(uint256,address,address)":"0932dc91"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"DexSet\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"dexMapping\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parallel\",\"outputs\":[{\"internalType\":\"contract IAddressProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_proxy\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dex\",\"type\":\"address\"}],\"name\":\"setDexMapping\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IDexAddressProvider.sol\":\"IDexAddressProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IVaultsCore.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\nimport \\\"./IVaultsDataProvider.sol\\\";\\n\\ninterface IAddressProvider {\\n  function core() external view returns (IVaultsCore);\\n\\n  function priceFeed() external view returns (IPriceFeed);\\n\\n  function vaultsData() external view returns (IVaultsDataProvider);\\n\\n  function stablex() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa3ac066f3ba8906c2878659051a04bdfeb9c51b5905c43ae2c2b0c4cae2ca6ad\",\"license\":\"MIT\"},\"contracts/interfaces/IDexAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IAddressProvider.sol\\\";\\n\\ninterface IDexAddressProvider {\\n  event DexSet(uint8);\\n\\n  struct Dex {\\n    address proxy;\\n    address router;\\n  }\\n\\n  function setDexMapping(\\n    uint256 _index,\\n    address _proxy,\\n    address _dex\\n  ) external;\\n\\n  function parallel() external view returns (IAddressProvider);\\n\\n  function dexMapping(uint256 index) external view returns (address, address);\\n}\\n\",\"keccak256\":\"0xacdad8dde089d2fc6bfc6f330cbb286b93ded49d332c4848315e6016a858d014\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\ninterface IPriceFeed {\\n  event OracleUpdated(address indexed asset, address oracle, address sender);\\n  event EurOracleUpdated(address oracle, address sender);\\n\\n  function setAssetOracle(address _asset, address _oracle) external;\\n\\n  function setEurOracle(address _oracle) external;\\n\\n  function getAssetPrice(address _asset) external view returns (uint256);\\n\\n  function convertFrom(address _asset, uint256 _amount) external view returns (uint256);\\n\\n  function convertTo(address _asset, uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x64a9b6e8e410c67ebfcd062edd558baa12cc36c6386b4438185f36da608f96b8\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\ninterface IVaultsCore {\\n  event Opened(uint256 indexed vaultId, address indexed collateralType, address indexed owner);\\n  event Deposited(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Withdrawn(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Borrowed(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Repaid(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Liquidated(\\n    uint256 indexed vaultId,\\n    uint256 debtRepaid,\\n    uint256 collateralLiquidated,\\n    address indexed owner,\\n    address indexed sender\\n  );\\n\\n  event InsurancePaid(uint256 indexed vaultId, uint256 insuranceAmount, address indexed sender);\\n\\n  function deposit(address _collateralType, uint256 _amount) external;\\n\\n  function depositETH() external payable;\\n\\n  function depositByVaultId(uint256 _vaultId, uint256 _amount) external;\\n\\n  function depositETHByVaultId(uint256 _vaultId) external payable;\\n\\n  function depositAndBorrow(\\n    address _collateralType,\\n    uint256 _depositAmount,\\n    uint256 _borrowAmount\\n  ) external;\\n\\n  function depositETHAndBorrow(uint256 _borrowAmount) external payable;\\n\\n  function withdraw(uint256 _vaultId, uint256 _amount) external;\\n\\n  function withdrawETH(uint256 _vaultId, uint256 _amount) external;\\n\\n  function borrow(uint256 _vaultId, uint256 _amount) external;\\n\\n  function repayAll(uint256 _vaultId) external;\\n\\n  function repay(uint256 _vaultId, uint256 _amount) external;\\n\\n  function liquidate(uint256 _vaultId) external;\\n\\n  function liquidatePartial(uint256 _vaultId, uint256 _amount) external;\\n\\n  function upgrade(address payable _newVaultsCore) external;\\n\\n  function acceptUpgrade(address payable _oldVaultsCore) external;\\n\\n  function cumulativeRates(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x59430fa5f393ce3513b51a535decafd3ce61a76bb1e2a0db8dc08241151e46ab\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsDataProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\nimport \\\"../interfaces/IAddressProvider.sol\\\";\\n\\ninterface IVaultsDataProvider {\\n  struct Vault {\\n    // borrowedType support USDX / PAR\\n    address collateralType;\\n    address owner;\\n    uint256 collateralBalance;\\n    uint256 baseDebt;\\n    uint256 createdAt;\\n  }\\n\\n  //Write\\n  function createVault(address _collateralType, address _owner) external returns (uint256);\\n\\n  function setCollateralBalance(uint256 _id, uint256 _balance) external;\\n\\n  function setBaseDebt(uint256 _id, uint256 _newBaseDebt) external;\\n\\n  // Read\\n  function a() external view returns (IAddressProvider);\\n\\n  function baseDebt(address _collateralType) external view returns (uint256);\\n\\n  function vaultCount() external view returns (uint256);\\n\\n  function vaults(uint256 _id) external view returns (Vault memory);\\n\\n  function vaultOwner(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralType(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralBalance(uint256 _id) external view returns (uint256);\\n\\n  function vaultBaseDebt(uint256 _id) external view returns (uint256);\\n\\n  function vaultId(address _collateralType, address _owner) external view returns (uint256);\\n\\n  function vaultExists(uint256 _id) external view returns (bool);\\n\\n  function vaultDebt(uint256 _vaultId) external view returns (uint256);\\n\\n  function debt() external view returns (uint256);\\n\\n  function collateralDebt(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xda47cb8642592934e706573b467c63f9dcb0d43068bb7162abfeffc6818dd706\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IGenericMiner.sol":{"IGenericMiner":{"abi":[{"inputs":[],"name":"a","outputs":[{"internalType":"contract IGovernanceAddressProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_user","type":"address"}],"name":"releaseMIMO","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"a()":"0dbe671f","releaseMIMO(address)":"60ed390a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"contract IGovernanceAddressProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"releaseMIMO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGenericMiner.sol\":\"IGenericMiner\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/interfaces/IGenericMiner.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IGovernanceAddressProvider.sol\\\";\\n\\ninterface IGenericMiner {\\n  function a() external view returns (IGovernanceAddressProvider);\\n\\n  function releaseMIMO(address _user) external;\\n}\\n\",\"keccak256\":\"0x1894fecb65fa6870c7256904d61eb5177ff336ac1db99a345185b7ca99382efb\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\n\\npragma solidity 0.8.10;\\n\\nimport \\\"./IMIMO.sol\\\";\\n\\ninterface IGovernanceAddressProvider {\\n  function mimo() external view returns (IMIMO);\\n}\\n\",\"keccak256\":\"0x6d168fe23f98505c106df55c352b79af187ef097f6c43e01b6549c167e1ba422\",\"license\":\"MIT\"},\"contracts/interfaces/IMIMO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMIMO is IERC20 {\\n  function burn(address account, uint256 amount) external;\\n\\n  function mint(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x8ef70608ed2c643e525624223b353b1be86b0883fc6fb0afb68cd58d00d29acd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IGovernanceAddressProvider.sol":{"IGovernanceAddressProvider":{"abi":[{"inputs":[],"name":"mimo","outputs":[{"internalType":"contract IMIMO","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"mimo()":"6d9b1823"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"mimo\",\"outputs\":[{\"internalType\":\"contract IMIMO\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IGovernanceAddressProvider.sol\":\"IGovernanceAddressProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/interfaces/IGovernanceAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\n\\npragma solidity 0.8.10;\\n\\nimport \\\"./IMIMO.sol\\\";\\n\\ninterface IGovernanceAddressProvider {\\n  function mimo() external view returns (IMIMO);\\n}\\n\",\"keccak256\":\"0x6d168fe23f98505c106df55c352b79af187ef097f6c43e01b6549c167e1ba422\",\"license\":\"MIT\"},\"contracts/interfaces/IMIMO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMIMO is IERC20 {\\n  function burn(address account, uint256 amount) external;\\n\\n  function mint(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x8ef70608ed2c643e525624223b353b1be86b0883fc6fb0afb68cd58d00d29acd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IMIMO.sol":{"IMIMO":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","mint(address,uint256)":"40c10f19","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMIMO.sol\":\"IMIMO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC20/IERC20.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address to, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0xbbc8ac883ac3c0078ce5ad3e288fbb3ffcc8a30c3a98c0fda0114d64fc44fca2\",\"license\":\"MIT\"},\"contracts/interfaces/IMIMO.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity 0.8.10;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\n\\ninterface IMIMO is IERC20 {\\n  function burn(address account, uint256 amount) external;\\n\\n  function mint(address account, uint256 amount) external;\\n}\\n\",\"keccak256\":\"0x8ef70608ed2c643e525624223b353b1be86b0883fc6fb0afb68cd58d00d29acd\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IPriceFeed.sol":{"IPriceFeed":{"abi":[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"oracle","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"}],"name":"EurOracleUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"asset","type":"address"},{"indexed":false,"internalType":"address","name":"oracle","type":"address"},{"indexed":false,"internalType":"address","name":"sender","type":"address"}],"name":"OracleUpdated","type":"event"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"convertFrom","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"convertTo","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"}],"name":"getAssetPrice","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_asset","type":"address"},{"internalType":"address","name":"_oracle","type":"address"}],"name":"setAssetOracle","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_oracle","type":"address"}],"name":"setEurOracle","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"convertFrom(address,uint256)":"724091e0","convertTo(address,uint256)":"9bfa5181","getAssetPrice(address)":"b3596f07","setAssetOracle(address,address)":"62adfe7a","setEurOracle(address)":"3947e586"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"EurOracleUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oracle\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"OracleUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"convertFrom\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"convertTo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"}],\"name\":\"getAssetPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setAssetOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_oracle\",\"type\":\"address\"}],\"name\":\"setEurOracle\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IPriceFeed.sol\":\"IPriceFeed\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\ninterface IPriceFeed {\\n  event OracleUpdated(address indexed asset, address oracle, address sender);\\n  event EurOracleUpdated(address oracle, address sender);\\n\\n  function setAssetOracle(address _asset, address _oracle) external;\\n\\n  function setEurOracle(address _oracle) external;\\n\\n  function getAssetPrice(address _asset) external view returns (uint256);\\n\\n  function convertFrom(address _asset, uint256 _amount) external view returns (uint256);\\n\\n  function convertTo(address _asset, uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x64a9b6e8e410c67ebfcd062edd558baa12cc36c6386b4438185f36da608f96b8\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IVaultsCore.sol":{"IVaultsCore":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"Borrowed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"insuranceAmount","type":"uint256"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"InsurancePaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"debtRepaid","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"collateralLiquidated","type":"uint256"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"Liquidated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":true,"internalType":"address","name":"collateralType","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"}],"name":"Opened","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"Repaid","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"vaultId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"Withdrawn","type":"event"},{"inputs":[{"internalType":"address payable","name":"_oldVaultsCore","type":"address"}],"name":"acceptUpgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"borrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_collateralType","type":"address"}],"name":"cumulativeRates","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_collateralType","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"deposit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_collateralType","type":"address"},{"internalType":"uint256","name":"_depositAmount","type":"uint256"},{"internalType":"uint256","name":"_borrowAmount","type":"uint256"}],"name":"depositAndBorrow","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"depositByVaultId","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_borrowAmount","type":"uint256"}],"name":"depositETHAndBorrow","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"depositETHByVaultId","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"liquidate","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"liquidatePartial","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"repay","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"repayAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address payable","name":"_newVaultsCore","type":"address"}],"name":"upgrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"acceptUpgrade(address)":"cfc1b419","borrow(uint256,uint256)":"0ecbcdab","cumulativeRates(address)":"85d36cd7","deposit(address,uint256)":"47e7ef24","depositAndBorrow(address,uint256,uint256)":"a1789085","depositByVaultId(uint256,uint256)":"ce281041","depositETH()":"f6326fb3","depositETHAndBorrow(uint256)":"57f256e3","depositETHByVaultId(uint256)":"d18343f3","liquidate(uint256)":"415f1240","liquidatePartial(uint256,uint256)":"1e6b6267","repay(uint256,uint256)":"d8aed145","repayAll(uint256)":"3221be54","upgrade(address)":"0900f010","withdraw(uint256,uint256)":"441a3e70","withdrawETH(uint256,uint256)":"c7cdea37"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Borrowed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"insuranceAmount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"InsurancePaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"debtRepaid\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"collateralLiquidated\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Liquidated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"Opened\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Repaid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"vaultId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_oldVaultsCore\",\"type\":\"address\"}],\"name\":\"acceptUpgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"borrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralType\",\"type\":\"address\"}],\"name\":\"cumulativeRates\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralType\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralType\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_depositAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"}],\"name\":\"depositAndBorrow\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositByVaultId\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_borrowAmount\",\"type\":\"uint256\"}],\"name\":\"depositETHAndBorrow\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"}],\"name\":\"depositETHByVaultId\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"liquidatePartial\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"}],\"name\":\"repayAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newVaultsCore\",\"type\":\"address\"}],\"name\":\"upgrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVaultsCore.sol\":\"IVaultsCore\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IVaultsCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\ninterface IVaultsCore {\\n  event Opened(uint256 indexed vaultId, address indexed collateralType, address indexed owner);\\n  event Deposited(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Withdrawn(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Borrowed(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Repaid(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Liquidated(\\n    uint256 indexed vaultId,\\n    uint256 debtRepaid,\\n    uint256 collateralLiquidated,\\n    address indexed owner,\\n    address indexed sender\\n  );\\n\\n  event InsurancePaid(uint256 indexed vaultId, uint256 insuranceAmount, address indexed sender);\\n\\n  function deposit(address _collateralType, uint256 _amount) external;\\n\\n  function depositETH() external payable;\\n\\n  function depositByVaultId(uint256 _vaultId, uint256 _amount) external;\\n\\n  function depositETHByVaultId(uint256 _vaultId) external payable;\\n\\n  function depositAndBorrow(\\n    address _collateralType,\\n    uint256 _depositAmount,\\n    uint256 _borrowAmount\\n  ) external;\\n\\n  function depositETHAndBorrow(uint256 _borrowAmount) external payable;\\n\\n  function withdraw(uint256 _vaultId, uint256 _amount) external;\\n\\n  function withdrawETH(uint256 _vaultId, uint256 _amount) external;\\n\\n  function borrow(uint256 _vaultId, uint256 _amount) external;\\n\\n  function repayAll(uint256 _vaultId) external;\\n\\n  function repay(uint256 _vaultId, uint256 _amount) external;\\n\\n  function liquidate(uint256 _vaultId) external;\\n\\n  function liquidatePartial(uint256 _vaultId, uint256 _amount) external;\\n\\n  function upgrade(address payable _newVaultsCore) external;\\n\\n  function acceptUpgrade(address payable _oldVaultsCore) external;\\n\\n  function cumulativeRates(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x59430fa5f393ce3513b51a535decafd3ce61a76bb1e2a0db8dc08241151e46ab\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IVaultsDataProvider.sol":{"IVaultsDataProvider":{"abi":[{"inputs":[],"name":"a","outputs":[{"internalType":"contract IAddressProvider","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_collateralType","type":"address"}],"name":"baseDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_collateralType","type":"address"}],"name":"collateralDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_collateralType","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"name":"createVault","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"debt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_newBaseDebt","type":"uint256"}],"name":"setBaseDebt","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"},{"internalType":"uint256","name":"_balance","type":"uint256"}],"name":"setCollateralBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"vaultBaseDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"vaultCollateralBalance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"vaultCollateralType","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"vaultCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_vaultId","type":"uint256"}],"name":"vaultDebt","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"vaultExists","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_collateralType","type":"address"},{"internalType":"address","name":"_owner","type":"address"}],"name":"vaultId","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"vaultOwner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_id","type":"uint256"}],"name":"vaults","outputs":[{"components":[{"internalType":"address","name":"collateralType","type":"address"},{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"collateralBalance","type":"uint256"},{"internalType":"uint256","name":"baseDebt","type":"uint256"},{"internalType":"uint256","name":"createdAt","type":"uint256"}],"internalType":"struct IVaultsDataProvider.Vault","name":"","type":"tuple"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"a()":"0dbe671f","baseDebt(address)":"4e571cb0","collateralDebt(address)":"12aa5dc6","createVault(address,address)":"cc92d31c","debt()":"0dca59c1","setBaseDebt(uint256,uint256)":"ef18fcb4","setCollateralBalance(uint256,uint256)":"c7eb222b","vaultBaseDebt(uint256)":"c8c5c815","vaultCollateralBalance(uint256)":"828f8def","vaultCollateralType(uint256)":"b508bc59","vaultCount()":"a7c6a100","vaultDebt(uint256)":"d310f49b","vaultExists(uint256)":"dcd68128","vaultId(address,address)":"bd44815f","vaultOwner(uint256)":"3c2ecfe5","vaults(uint256)":"8c64ea4a"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"a\",\"outputs\":[{\"internalType\":\"contract IAddressProvider\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralType\",\"type\":\"address\"}],\"name\":\"baseDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralType\",\"type\":\"address\"}],\"name\":\"collateralDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"createVault\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"debt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_newBaseDebt\",\"type\":\"uint256\"}],\"name\":\"setBaseDebt\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_balance\",\"type\":\"uint256\"}],\"name\":\"setCollateralBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"vaultBaseDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"vaultCollateralBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"vaultCollateralType\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vaultCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_vaultId\",\"type\":\"uint256\"}],\"name\":\"vaultDebt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"vaultExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"vaultId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"vaultOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"vaults\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"collateralType\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"collateralBalance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"createdAt\",\"type\":\"uint256\"}],\"internalType\":\"struct IVaultsDataProvider.Vault\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IVaultsDataProvider.sol\":\"IVaultsDataProvider\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IAddressProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\nimport \\\"./IVaultsCore.sol\\\";\\nimport \\\"./IPriceFeed.sol\\\";\\nimport \\\"./IVaultsDataProvider.sol\\\";\\n\\ninterface IAddressProvider {\\n  function core() external view returns (IVaultsCore);\\n\\n  function priceFeed() external view returns (IPriceFeed);\\n\\n  function vaultsData() external view returns (IVaultsDataProvider);\\n\\n  function stablex() external view returns (address);\\n}\\n\",\"keccak256\":\"0xa3ac066f3ba8906c2878659051a04bdfeb9c51b5905c43ae2c2b0c4cae2ca6ad\",\"license\":\"MIT\"},\"contracts/interfaces/IPriceFeed.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity 0.8.10;\\n\\ninterface IPriceFeed {\\n  event OracleUpdated(address indexed asset, address oracle, address sender);\\n  event EurOracleUpdated(address oracle, address sender);\\n\\n  function setAssetOracle(address _asset, address _oracle) external;\\n\\n  function setEurOracle(address _oracle) external;\\n\\n  function getAssetPrice(address _asset) external view returns (uint256);\\n\\n  function convertFrom(address _asset, uint256 _amount) external view returns (uint256);\\n\\n  function convertTo(address _asset, uint256 _amount) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x64a9b6e8e410c67ebfcd062edd558baa12cc36c6386b4438185f36da608f96b8\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsCore.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\n\\ninterface IVaultsCore {\\n  event Opened(uint256 indexed vaultId, address indexed collateralType, address indexed owner);\\n  event Deposited(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Withdrawn(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Borrowed(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Repaid(uint256 indexed vaultId, uint256 amount, address indexed sender);\\n  event Liquidated(\\n    uint256 indexed vaultId,\\n    uint256 debtRepaid,\\n    uint256 collateralLiquidated,\\n    address indexed owner,\\n    address indexed sender\\n  );\\n\\n  event InsurancePaid(uint256 indexed vaultId, uint256 insuranceAmount, address indexed sender);\\n\\n  function deposit(address _collateralType, uint256 _amount) external;\\n\\n  function depositETH() external payable;\\n\\n  function depositByVaultId(uint256 _vaultId, uint256 _amount) external;\\n\\n  function depositETHByVaultId(uint256 _vaultId) external payable;\\n\\n  function depositAndBorrow(\\n    address _collateralType,\\n    uint256 _depositAmount,\\n    uint256 _borrowAmount\\n  ) external;\\n\\n  function depositETHAndBorrow(uint256 _borrowAmount) external payable;\\n\\n  function withdraw(uint256 _vaultId, uint256 _amount) external;\\n\\n  function withdrawETH(uint256 _vaultId, uint256 _amount) external;\\n\\n  function borrow(uint256 _vaultId, uint256 _amount) external;\\n\\n  function repayAll(uint256 _vaultId) external;\\n\\n  function repay(uint256 _vaultId, uint256 _amount) external;\\n\\n  function liquidate(uint256 _vaultId) external;\\n\\n  function liquidatePartial(uint256 _vaultId, uint256 _amount) external;\\n\\n  function upgrade(address payable _newVaultsCore) external;\\n\\n  function acceptUpgrade(address payable _oldVaultsCore) external;\\n\\n  function cumulativeRates(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0x59430fa5f393ce3513b51a535decafd3ce61a76bb1e2a0db8dc08241151e46ab\",\"license\":\"MIT\"},\"contracts/interfaces/IVaultsDataProvider.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma experimental ABIEncoderV2;\\npragma solidity 0.8.10;\\nimport \\\"../interfaces/IAddressProvider.sol\\\";\\n\\ninterface IVaultsDataProvider {\\n  struct Vault {\\n    // borrowedType support USDX / PAR\\n    address collateralType;\\n    address owner;\\n    uint256 collateralBalance;\\n    uint256 baseDebt;\\n    uint256 createdAt;\\n  }\\n\\n  //Write\\n  function createVault(address _collateralType, address _owner) external returns (uint256);\\n\\n  function setCollateralBalance(uint256 _id, uint256 _balance) external;\\n\\n  function setBaseDebt(uint256 _id, uint256 _newBaseDebt) external;\\n\\n  // Read\\n  function a() external view returns (IAddressProvider);\\n\\n  function baseDebt(address _collateralType) external view returns (uint256);\\n\\n  function vaultCount() external view returns (uint256);\\n\\n  function vaults(uint256 _id) external view returns (Vault memory);\\n\\n  function vaultOwner(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralType(uint256 _id) external view returns (address);\\n\\n  function vaultCollateralBalance(uint256 _id) external view returns (uint256);\\n\\n  function vaultBaseDebt(uint256 _id) external view returns (uint256);\\n\\n  function vaultId(address _collateralType, address _owner) external view returns (uint256);\\n\\n  function vaultExists(uint256 _id) external view returns (bool);\\n\\n  function vaultDebt(uint256 _vaultId) external view returns (uint256);\\n\\n  function debt() external view returns (uint256);\\n\\n  function collateralDebt(address _collateralType) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xda47cb8642592934e706573b467c63f9dcb0d43068bb7162abfeffc6818dd706\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/interfaces/IWETH.sol":{"IWETH":{"abi":[{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IWETH.sol\":\"IWETH\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":3000},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IWETH.sol\":{\"content\":\"pragma solidity 0.8.10;\\n\\ninterface IWETH {\\n  function balanceOf(address user) external view returns (uint256);\\n\\n  function deposit() external payable;\\n\\n  function transfer(address to, uint256 value) external returns (bool);\\n\\n  function approve(address to, uint256 value) external returns (bool);\\n\\n  function withdraw(uint256) external;\\n\\n  function transferFrom(\\n    address sender,\\n    address recipient,\\n    uint256 amount\\n  ) external returns (bool);\\n}\\n\",\"keccak256\":\"0xf0625d784d81fd5f7dc4387cd752da2c1e251e9080b06699721738f66b7c7803\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}