{"id":"4716bd9b2afa14ac7dc70c13cf0f1a1a","_format":"hh-sol-build-info-1","solcVersion":"0.6.12","solcLongVersion":"0.6.12+commit.27d51765","input":{"language":"Solidity","sources":{"contracts/interfaces/IMasterContract.sol":{"content":"pragma solidity 0.6.12;\n\ninterface IMasterContract {\n    /// @notice Init function that gets called from `BoringFactory.deploy`.\n    /// Also kown as the constructor for cloned contracts.\n    /// Any ETH send to `BoringFactory.deploy` ends up here.\n    /// @param data Can be abi encoded arguments or anything else.\n    function init(bytes calldata data) external payable;\n}"},"contracts/Utils/BoringFactory.sol":{"content":"\npragma solidity 0.6.12;\nimport \"../interfaces/IMasterContract.sol\";\n\n// solhint-disable no-inline-assembly\n\ncontract BoringFactory {\n    event LogDeploy(address indexed masterContract, bytes data, address indexed cloneAddress);\n\n    /// @notice Mapping from clone contracts to their masterContract.\n    mapping(address => address) public masterContractOf;\n\n    /// @notice Deploys a given master Contract as a clone.\n    /// Any ETH transferred with this call is forwarded to the new clone.\n    /// Emits `LogDeploy`.\n    /// @param masterContract The address of the contract to clone.\n    /// @param data Additional abi encoded calldata that is passed to the new clone via `IMasterContract.init`.\n    /// @param useCreate2 Creates the clone by using the CREATE2 opcode, in this case `data` will be used as salt.\n    /// @return cloneAddress Address of the created clone contract.\n    function deploy(\n        address masterContract,\n        bytes calldata data,\n        bool useCreate2\n    ) public payable returns (address cloneAddress) {\n        require(masterContract != address(0), \"BoringFactory: No masterContract\");\n        bytes20 targetBytes = bytes20(masterContract); // Takes the first 20 bytes of the masterContract's address\n\n        if (useCreate2) {\n            // each masterContract has different code already. So clones are distinguished by their data only.\n            bytes32 salt = keccak256(data);\n\n            // Creates clone, more info here: https://blog.openzeppelin.com/deep-dive-into-the-minimal-proxy-contract/\n            assembly {\n                let clone := mload(0x40)\n                mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n                mstore(add(clone, 0x14), targetBytes)\n                mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n                cloneAddress := create2(0, clone, 0x37, salt)\n            }\n        } else {\n            assembly {\n                let clone := mload(0x40)\n                mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\n                mstore(add(clone, 0x14), targetBytes)\n                mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\n                cloneAddress := create(0, clone, 0x37)\n            }\n        }\n        masterContractOf[cloneAddress] = masterContract;\n\n        IMasterContract(cloneAddress).init{value: msg.value}(data);\n\n        emit LogDeploy(masterContract, data, cloneAddress);\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"contracts/Utils/BoringFactory.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/Utils/BoringFactory.sol","start":-1},"type":"Warning"},{"component":"general","errorCode":"1878","formattedMessage":"contracts/interfaces/IMasterContract.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/interfaces/IMasterContract.sol","start":-1},"type":"Warning"}],"sources":{"contracts/Utils/BoringFactory.sol":{"ast":{"absolutePath":"contracts/Utils/BoringFactory.sol","exportedSymbols":{"BoringFactory":[80]},"id":81,"license":null,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.6",".12"],"nodeType":"PragmaDirective","src":"1:23:0"},{"absolutePath":"contracts/interfaces/IMasterContract.sol","file":"../interfaces/IMasterContract.sol","id":2,"nodeType":"ImportDirective","scope":81,"sourceUnit":90,"src":"25:43:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":null,"fullyImplemented":true,"id":80,"linearizedBaseContracts":[80],"name":"BoringFactory","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":null,"id":10,"name":"LogDeploy","nodeType":"EventDefinition","parameters":{"id":9,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4,"indexed":true,"mutability":"mutable","name":"masterContract","nodeType":"VariableDeclaration","overrides":null,"scope":10,"src":"154:30:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3,"name":"address","nodeType":"ElementaryTypeName","src":"154:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":6,"indexed":false,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":10,"src":"186:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":5,"name":"bytes","nodeType":"ElementaryTypeName","src":"186:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":8,"indexed":true,"mutability":"mutable","name":"cloneAddress","nodeType":"VariableDeclaration","overrides":null,"scope":10,"src":"198:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":7,"name":"address","nodeType":"ElementaryTypeName","src":"198:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"153:74:0"},"src":"138:90:0"},{"constant":false,"documentation":{"id":11,"nodeType":"StructuredDocumentation","src":"234:65:0","text":"@notice Mapping from clone contracts to their masterContract."},"functionSelector":"bafe4f14","id":15,"mutability":"mutable","name":"masterContractOf","nodeType":"VariableDeclaration","overrides":null,"scope":80,"src":"304:51:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"typeName":{"id":14,"keyType":{"id":12,"name":"address","nodeType":"ElementaryTypeName","src":"312:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"304:27:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"},"valueType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"323:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"value":null,"visibility":"public"},{"body":{"id":78,"nodeType":"Block","src":"1040:1516:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":33,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":28,"name":"masterContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1058:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"hexValue":"30","id":31,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1084:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":30,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1076:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":29,"name":"address","nodeType":"ElementaryTypeName","src":"1076:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":32,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1076:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1058:28:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"426f72696e67466163746f72793a204e6f206d6173746572436f6e7472616374","id":34,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1088:34:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_ca263bb3a1d34921c755bbb7d563d78653106aed124fb087e2484c54b7a9af02","typeString":"literal_string \"BoringFactory: No masterContract\""},"value":"BoringFactory: No masterContract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ca263bb3a1d34921c755bbb7d563d78653106aed124fb087e2484c54b7a9af02","typeString":"literal_string \"BoringFactory: No masterContract\""}],"id":27,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1050:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":35,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1050:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":36,"nodeType":"ExpressionStatement","src":"1050:73:0"},{"assignments":[38],"declarations":[{"constant":false,"id":38,"mutability":"mutable","name":"targetBytes","nodeType":"VariableDeclaration","overrides":null,"scope":78,"src":"1133:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"},"typeName":{"id":37,"name":"bytes20","nodeType":"ElementaryTypeName","src":"1133:7:0","typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"value":null,"visibility":"internal"}],"id":43,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":41,"name":"masterContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"1163:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":40,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1155:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes20_$","typeString":"type(bytes20)"},"typeName":{"id":39,"name":"bytes20","nodeType":"ElementaryTypeName","src":"1155:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":42,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1155:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes20","typeString":"bytes20"}},"nodeType":"VariableDeclarationStatement","src":"1133:45:0"},{"condition":{"argumentTypes":null,"id":44,"name":"useCreate2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"1253:10:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":54,"nodeType":"Block","src":"1958:405:0","statements":[{"AST":{"nodeType":"YulBlock","src":"1981:372:0","statements":[{"nodeType":"YulVariableDeclaration","src":"1999:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2018:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2012:5:0"},"nodeType":"YulFunctionCall","src":"2012:11:0"},"variables":[{"name":"clone","nodeType":"YulTypedName","src":"2003:5:0","type":""}]},{"expression":{"arguments":[{"name":"clone","nodeType":"YulIdentifier","src":"2047:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"2054:66:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2040:6:0"},"nodeType":"YulFunctionCall","src":"2040:81:0"},"nodeType":"YulExpressionStatement","src":"2040:81:0"},{"expression":{"arguments":[{"arguments":[{"name":"clone","nodeType":"YulIdentifier","src":"2149:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"2156:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2145:3:0"},"nodeType":"YulFunctionCall","src":"2145:16:0"},{"name":"targetBytes","nodeType":"YulIdentifier","src":"2163:11:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2138:6:0"},"nodeType":"YulFunctionCall","src":"2138:37:0"},"nodeType":"YulExpressionStatement","src":"2138:37:0"},{"expression":{"arguments":[{"arguments":[{"name":"clone","nodeType":"YulIdentifier","src":"2203:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"2210:4:0","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2199:3:0"},"nodeType":"YulFunctionCall","src":"2199:16:0"},{"kind":"number","nodeType":"YulLiteral","src":"2217:66:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2192:6:0"},"nodeType":"YulFunctionCall","src":"2192:92:0"},"nodeType":"YulExpressionStatement","src":"2192:92:0"},{"nodeType":"YulAssignment","src":"2301:38:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2324:1:0","type":"","value":"0"},{"name":"clone","nodeType":"YulIdentifier","src":"2327:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"2334:4:0","type":"","value":"0x37"}],"functionName":{"name":"create","nodeType":"YulIdentifier","src":"2317:6:0"},"nodeType":"YulFunctionCall","src":"2317:22:0"},"variableNames":[{"name":"cloneAddress","nodeType":"YulIdentifier","src":"2301:12:0"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":25,"isOffset":false,"isSlot":false,"src":"2301:12:0","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"2163:11:0","valueSize":1}],"id":53,"nodeType":"InlineAssembly","src":"1972:381:0"}]},"id":55,"nodeType":"IfStatement","src":"1249:1114:0","trueBody":{"id":52,"nodeType":"Block","src":"1265:687:0","statements":[{"assignments":[46],"declarations":[{"constant":false,"id":46,"mutability":"mutable","name":"salt","nodeType":"VariableDeclaration","overrides":null,"scope":52,"src":"1390:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":45,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1390:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":50,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":48,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"1415:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"id":47,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1405:9:0","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1405:15:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1390:30:0"},{"AST":{"nodeType":"YulBlock","src":"1563:379:0","statements":[{"nodeType":"YulVariableDeclaration","src":"1581:24:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1600:4:0","type":"","value":"0x40"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1594:5:0"},"nodeType":"YulFunctionCall","src":"1594:11:0"},"variables":[{"name":"clone","nodeType":"YulTypedName","src":"1585:5:0","type":""}]},{"expression":{"arguments":[{"name":"clone","nodeType":"YulIdentifier","src":"1629:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"1636:66:0","type":"","value":"0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1622:6:0"},"nodeType":"YulFunctionCall","src":"1622:81:0"},"nodeType":"YulExpressionStatement","src":"1622:81:0"},{"expression":{"arguments":[{"arguments":[{"name":"clone","nodeType":"YulIdentifier","src":"1731:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"1738:4:0","type":"","value":"0x14"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1727:3:0"},"nodeType":"YulFunctionCall","src":"1727:16:0"},{"name":"targetBytes","nodeType":"YulIdentifier","src":"1745:11:0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1720:6:0"},"nodeType":"YulFunctionCall","src":"1720:37:0"},"nodeType":"YulExpressionStatement","src":"1720:37:0"},{"expression":{"arguments":[{"arguments":[{"name":"clone","nodeType":"YulIdentifier","src":"1785:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"1792:4:0","type":"","value":"0x28"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1781:3:0"},"nodeType":"YulFunctionCall","src":"1781:16:0"},{"kind":"number","nodeType":"YulLiteral","src":"1799:66:0","type":"","value":"0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1774:6:0"},"nodeType":"YulFunctionCall","src":"1774:92:0"},"nodeType":"YulExpressionStatement","src":"1774:92:0"},{"nodeType":"YulAssignment","src":"1883:45:0","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1907:1:0","type":"","value":"0"},{"name":"clone","nodeType":"YulIdentifier","src":"1910:5:0"},{"kind":"number","nodeType":"YulLiteral","src":"1917:4:0","type":"","value":"0x37"},{"name":"salt","nodeType":"YulIdentifier","src":"1923:4:0"}],"functionName":{"name":"create2","nodeType":"YulIdentifier","src":"1899:7:0"},"nodeType":"YulFunctionCall","src":"1899:29:0"},"variableNames":[{"name":"cloneAddress","nodeType":"YulIdentifier","src":"1883:12:0"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":25,"isOffset":false,"isSlot":false,"src":"1883:12:0","valueSize":1},{"declaration":46,"isOffset":false,"isSlot":false,"src":"1923:4:0","valueSize":1},{"declaration":38,"isOffset":false,"isSlot":false,"src":"1745:11:0","valueSize":1}],"id":51,"nodeType":"InlineAssembly","src":"1554:388:0"}]}},{"expression":{"argumentTypes":null,"id":60,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"id":56,"name":"masterContractOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":15,"src":"2372:16:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_address_$","typeString":"mapping(address => address)"}},"id":58,"indexExpression":{"argumentTypes":null,"id":57,"name":"cloneAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2389:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2372:30:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":59,"name":"masterContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2405:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2372:47:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":61,"nodeType":"ExpressionStatement","src":"2372:47:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":69,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2483:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}],"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":63,"name":"cloneAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2446:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":62,"name":"IMasterContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":89,"src":"2430:15:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IMasterContract_$89_$","typeString":"type(contract IMasterContract)"}},"id":64,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2430:29:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IMasterContract_$89","typeString":"contract IMasterContract"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"init","nodeType":"MemberAccess","referencedDeclaration":88,"src":"2430:34:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$returns$__$","typeString":"function (bytes memory) payable external"}},"id":68,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":66,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2472:3:0","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":67,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2472:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2430:52:0","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_bytes_memory_ptr_$returns$__$value","typeString":"function (bytes memory) payable external"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2430:58:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"ExpressionStatement","src":"2430:58:0"},{"eventCall":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":73,"name":"masterContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2514:14:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"argumentTypes":null,"id":74,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2530:4:0","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},{"argumentTypes":null,"id":75,"name":"cloneAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":25,"src":"2536:12:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"},{"typeIdentifier":"t_address","typeString":"address"}],"id":72,"name":"LogDeploy","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":10,"src":"2504:9:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_address_$returns$__$","typeString":"function (address,bytes memory,address)"}},"id":76,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2504:45:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":77,"nodeType":"EmitStatement","src":"2499:50:0"}]},"documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"362:519:0","text":"@notice Deploys a given master Contract as a clone.\n Any ETH transferred with this call is forwarded to the new clone.\n Emits `LogDeploy`.\n @param masterContract The address of the contract to clone.\n @param data Additional abi encoded calldata that is passed to the new clone via `IMasterContract.init`.\n @param useCreate2 Creates the clone by using the CREATE2 opcode, in this case `data` will be used as salt.\n @return cloneAddress Address of the created clone contract."},"functionSelector":"1f54245b","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"deploy","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"masterContract","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"911:22:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"911:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"943:19:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":19,"name":"bytes","nodeType":"ElementaryTypeName","src":"943:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"useCreate2","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"972:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":21,"name":"bool","nodeType":"ElementaryTypeName","src":"972:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"901:92:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"cloneAddress","nodeType":"VariableDeclaration","overrides":null,"scope":79,"src":"1018:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":24,"name":"address","nodeType":"ElementaryTypeName","src":"1018:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"1017:22:0"},"scope":80,"src":"886:1670:0","stateMutability":"payable","virtual":false,"visibility":"public"}],"scope":81,"src":"109:2449:0"}],"src":"1:2557:0"},"id":0},"contracts/interfaces/IMasterContract.sol":{"ast":{"absolutePath":"contracts/interfaces/IMasterContract.sol","exportedSymbols":{"IMasterContract":[89]},"id":90,"license":null,"nodeType":"SourceUnit","nodes":[{"id":82,"literals":["solidity","0.6",".12"],"nodeType":"PragmaDirective","src":"0:23:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":null,"fullyImplemented":false,"id":89,"linearizedBaseContracts":[89],"name":"IMasterContract","nodeType":"ContractDefinition","nodes":[{"body":null,"documentation":{"id":83,"nodeType":"StructuredDocumentation","src":"57:258:1","text":"@notice Init function that gets called from `BoringFactory.deploy`.\n Also kown as the constructor for cloned contracts.\n Any ETH send to `BoringFactory.deploy` ends up here.\n @param data Can be abi encoded arguments or anything else."},"functionSelector":"4ddf47d4","id":88,"implemented":false,"kind":"function","modifiers":[],"name":"init","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","overrides":null,"scope":88,"src":"334:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":84,"name":"bytes","nodeType":"ElementaryTypeName","src":"334:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"value":null,"visibility":"internal"}],"src":"333:21:1"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"371:0:1"},"scope":89,"src":"320:52:1","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":90,"src":"25:349:1"}],"src":"0:374:1"},"id":1}},"contracts":{"contracts/Utils/BoringFactory.sol":{"BoringFactory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"masterContract","type":"address"},{"indexed":false,"internalType":"bytes","name":"data","type":"bytes"},{"indexed":true,"internalType":"address","name":"cloneAddress","type":"address"}],"name":"LogDeploy","type":"event"},{"inputs":[{"internalType":"address","name":"masterContract","type":"address"},{"internalType":"bytes","name":"data","type":"bytes"},{"internalType":"bool","name":"useCreate2","type":"bool"}],"name":"deploy","outputs":[{"internalType":"address","name":"cloneAddress","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"masterContractOf","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"deploy(address,bytes,bool)":{"params":{"data":"Additional abi encoded calldata that is passed to the new clone via `IMasterContract.init`.","masterContract":"The address of the contract to clone.","useCreate2":"Creates the clone by using the CREATE2 opcode, in this case `data` will be used as salt."},"returns":{"cloneAddress":"Address of the created clone contract."}}},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"608060405234801561001057600080fd5b50610398806100206000396000f3fe6080604052600436106100295760003560e01c80631f54245b1461002e578063bafe4f14146100cc575b600080fd5b6100b06004803603606081101561004457600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561006f57600080fd5b82018360208201111561008157600080fd5b803590602001918460018302840111640100000000831117156100a357600080fd5b91935091503515156100ff565b604080516001600160a01b039092168252519081900360200190f35b3480156100d857600080fd5b506100b0600480360360208110156100ef57600080fd5b50356001600160a01b0316610347565b60006001600160a01b03851661015c576040805162461bcd60e51b815260206004820181905260248201527f426f72696e67466163746f72793a204e6f206d6173746572436f6e7472616374604482015290519081900360640190fd5b606085901b82156101d357600085856040518083838082843760405192018290038220733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8352601483018890526e5af43d82803e903d91602b57fd5bf360881b60288401529550909350849250603791508390506000f593505050610218565b604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09250505b6001600160a01b038281166000818152602081815260409182902080546001600160a01b031916948b169490941790935551631377d1f560e21b815260048101928352602481018790529091634ddf47d491349189918991908190604401848480828437600081840152601f19601f82011690508083019250505093505050506000604051808303818588803b1580156102b157600080fd5b505af11580156102c5573d6000803e3d6000fd5b5050505050816001600160a01b0316866001600160a01b03167fd62166f3c2149208e51788b1401cc356bf5da1fc6c7886a32e18570f57d88b3b878760405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a350949350505050565b6000602081905290815260409020546001600160a01b03168156fea264697066735822122004f5f714b8c429061d16f6450b14b9ce0e62fae684014e377c65bdacedc1b69664736f6c634300060c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x398 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F54245B EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xBAFE4F14 EQ PUSH2 0xCC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD ISZERO ISZERO PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x15C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72696E67466163746F72793A204E6F206D6173746572436F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP6 SWAP1 SHL DUP3 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP4 MSTORE PUSH1 0x14 DUP4 ADD DUP9 SWAP1 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP5 ADD MSTORE SWAP6 POP SWAP1 SWAP4 POP DUP5 SWAP3 POP PUSH1 0x37 SWAP2 POP DUP4 SWAP1 POP PUSH1 0x0 CREATE2 SWAP4 POP POP POP PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP12 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE MLOAD PUSH4 0x1377D1F5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 PUSH4 0x4DDF47D4 SWAP2 CALLVALUE SWAP2 DUP10 SWAP2 DUP10 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x44 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD62166F3C2149208E51788B1401CC356BF5DA1FC6C7886A32E18570F57D88B3B DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP6 POP SWAP1 SWAP4 POP POP POP POP LOG3 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV CREATE2 0xF7 EQ 0xB8 0xC4 0x29 MOD SAR AND 0xF6 GASLIMIT SIGNEXTEND EQ 0xB9 0xCE 0xE PUSH3 0xFAE684 ADD 0x4E CALLDATACOPY PUSH29 0x65BDACEDC1B69664736F6C634300060C00330000000000000000000000 ","sourceMap":"109:2449:0:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"6080604052600436106100295760003560e01c80631f54245b1461002e578063bafe4f14146100cc575b600080fd5b6100b06004803603606081101561004457600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561006f57600080fd5b82018360208201111561008157600080fd5b803590602001918460018302840111640100000000831117156100a357600080fd5b91935091503515156100ff565b604080516001600160a01b039092168252519081900360200190f35b3480156100d857600080fd5b506100b0600480360360208110156100ef57600080fd5b50356001600160a01b0316610347565b60006001600160a01b03851661015c576040805162461bcd60e51b815260206004820181905260248201527f426f72696e67466163746f72793a204e6f206d6173746572436f6e7472616374604482015290519081900360640190fd5b606085901b82156101d357600085856040518083838082843760405192018290038220733d602d80600a3d3981f3363d3d373d3d3d363d7360601b8352601483018890526e5af43d82803e903d91602b57fd5bf360881b60288401529550909350849250603791508390506000f593505050610218565b604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528160148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09250505b6001600160a01b038281166000818152602081815260409182902080546001600160a01b031916948b169490941790935551631377d1f560e21b815260048101928352602481018790529091634ddf47d491349189918991908190604401848480828437600081840152601f19601f82011690508083019250505093505050506000604051808303818588803b1580156102b157600080fd5b505af11580156102c5573d6000803e3d6000fd5b5050505050816001600160a01b0316866001600160a01b03167fd62166f3c2149208e51788b1401cc356bf5da1fc6c7886a32e18570f57d88b3b878760405180806020018281038252848482818152602001925080828437600083820152604051601f909101601f19169092018290039550909350505050a350949350505050565b6000602081905290815260409020546001600160a01b03168156fea264697066735822122004f5f714b8c429061d16f6450b14b9ce0e62fae684014e377c65bdacedc1b69664736f6c634300060c0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1F54245B EQ PUSH2 0x2E JUMPI DUP1 PUSH4 0xBAFE4F14 EQ PUSH2 0xCC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 CALLDATALOAD AND SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x40 DUP2 ADD PUSH1 0x20 DUP3 ADD CALLDATALOAD PUSH5 0x100000000 DUP2 GT ISZERO PUSH2 0x6F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 ADD DUP4 PUSH1 0x20 DUP3 ADD GT ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP2 DUP5 PUSH1 0x1 DUP4 MUL DUP5 ADD GT PUSH5 0x100000000 DUP4 GT OR ISZERO PUSH2 0xA3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP4 POP SWAP2 POP CALLDATALOAD ISZERO ISZERO PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0xEF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x347 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x15C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F72696E67466163746F72793A204E6F206D6173746572436F6E7472616374 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP6 SWAP1 SHL DUP3 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 DUP4 DUP4 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x40 MLOAD SWAP3 ADD DUP3 SWAP1 SUB DUP3 KECCAK256 PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP4 MSTORE PUSH1 0x14 DUP4 ADD DUP9 SWAP1 MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP5 ADD MSTORE SWAP6 POP SWAP1 SWAP4 POP DUP5 SWAP3 POP PUSH1 0x37 SWAP2 POP DUP4 SWAP1 POP PUSH1 0x0 CREATE2 SWAP4 POP POP POP PUSH2 0x218 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0x3D602D80600A3D3981F3363D3D373D3D3D363D73 PUSH1 0x60 SHL DUP2 MSTORE DUP2 PUSH1 0x14 DUP3 ADD MSTORE PUSH15 0x5AF43D82803E903D91602B57FD5BF3 PUSH1 0x88 SHL PUSH1 0x28 DUP3 ADD MSTORE PUSH1 0x37 DUP2 PUSH1 0x0 CREATE SWAP3 POP POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP5 DUP12 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE MLOAD PUSH4 0x1377D1F5 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 DUP4 MSTORE PUSH1 0x24 DUP2 ADD DUP8 SWAP1 MSTORE SWAP1 SWAP2 PUSH4 0x4DDF47D4 SWAP2 CALLVALUE SWAP2 DUP10 SWAP2 DUP10 SWAP2 SWAP1 DUP2 SWAP1 PUSH1 0x44 ADD DUP5 DUP5 DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP2 DUP5 ADD MSTORE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND SWAP1 POP DUP1 DUP4 ADD SWAP3 POP POP POP SWAP4 POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x2C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD62166F3C2149208E51788B1401CC356BF5DA1FC6C7886A32E18570F57D88B3B DUP8 DUP8 PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP5 DUP5 DUP3 DUP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP DUP1 DUP3 DUP5 CALLDATACOPY PUSH1 0x0 DUP4 DUP3 ADD MSTORE PUSH1 0x40 MLOAD PUSH1 0x1F SWAP1 SWAP2 ADD PUSH1 0x1F NOT AND SWAP1 SWAP3 ADD DUP3 SWAP1 SUB SWAP6 POP SWAP1 SWAP4 POP POP POP POP LOG3 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV CREATE2 0xF7 EQ 0xB8 0xC4 0x29 MOD SAR AND 0xF6 GASLIMIT SIGNEXTEND EQ 0xB9 0xCE 0xE PUSH3 0xFAE684 ADD 0x4E CALLDATACOPY PUSH29 0x65BDACEDC1B69664736F6C634300060C00330000000000000000000000 ","sourceMap":"109:2449:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;886:1670;;;;;;;;;;;;;;;;-1:-1:-1;;;;;886:1670:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;886:1670:0;-1:-1:-1;886:1670:0;;;;:::i;:::-;;;;-1:-1:-1;;;;;886:1670:0;;;;;;;;;;;;;;304:51;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;304:51:0;-1:-1:-1;;;;;304:51:0;;:::i;886:1670::-;1018:20;-1:-1:-1;;;;;1058:28:0;;1050:73;;;;;-1:-1:-1;;;1050:73:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1155:23;;;;1249:1114;;;;1390:12;1415:4;;1405:15;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1622:81:0;;1738:4;1727:16;;1720:37;;;-1:-1:-1;;;1792:4:0;1781:16;;1774:92;1405:15;-1:-1:-1;1405:15:0;;-1:-1:-1;1405:15:0;;-1:-1:-1;1917:4:0;;-1:-1:-1;1405:15:0;;-1:-1:-1;;1899:29:0;1883:45;;;1563:379;;;;2018:4;2012:11;-1:-1:-1;;;2047:5:0;2040:81;2163:11;2156:4;2149:5;2145:16;2138:37;-1:-1:-1;;;2210:4:0;2203:5;2199:16;2192:92;2334:4;2327:5;2324:1;2317:22;2301:38;;;1981:372;-1:-1:-1;;;;;2372:30:0;;;:16;:30;;;;;;;;;;;;:47;;-1:-1:-1;;;;;;2372:47:0;;;;;;;;;;;2430:58;-1:-1:-1;;;2430:58:0;;;;;;;;;;;;;;2372:30;;2430:34;;2472:9;;2483:4;;2430:58;;;;;;;2483:4;2430:58;;2483:4;2430:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2536:12;-1:-1:-1;;;;;2504:45:0;2514:14;-1:-1:-1;;;;;2504:45:0;;2530:4;;2504:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2504:45:0;;;;;;;;-1:-1:-1;2504:45:0;;-1:-1:-1;;;;2504:45:0;886:1670;;;;;;;:::o;304:51::-;;;;;;;;;;;;;-1:-1:-1;;;;;304:51:0;;:::o"},"gasEstimates":{"creation":{"codeDepositCost":"184000","executionCost":"226","totalCost":"184226"},"external":{"deploy(address,bytes,bool)":"infinite","masterContractOf(address)":"1166"}},"methodIdentifiers":{"deploy(address,bytes,bool)":"1f54245b","masterContractOf(address)":"bafe4f14"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"name\":\"LogDeploy\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"masterContract\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"useCreate2\",\"type\":\"bool\"}],\"name\":\"deploy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"cloneAddress\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"masterContractOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"deploy(address,bytes,bool)\":{\"params\":{\"data\":\"Additional abi encoded calldata that is passed to the new clone via `IMasterContract.init`.\",\"masterContract\":\"The address of the contract to clone.\",\"useCreate2\":\"Creates the clone by using the CREATE2 opcode, in this case `data` will be used as salt.\"},\"returns\":{\"cloneAddress\":\"Address of the created clone contract.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deploy(address,bytes,bool)\":{\"notice\":\"Deploys a given master Contract as a clone. Any ETH transferred with this call is forwarded to the new clone. Emits `LogDeploy`.\"},\"masterContractOf(address)\":{\"notice\":\"Mapping from clone contracts to their masterContract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Utils/BoringFactory.sol\":\"BoringFactory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Utils/BoringFactory.sol\":{\"content\":\"\\npragma solidity 0.6.12;\\nimport \\\"../interfaces/IMasterContract.sol\\\";\\n\\n// solhint-disable no-inline-assembly\\n\\ncontract BoringFactory {\\n    event LogDeploy(address indexed masterContract, bytes data, address indexed cloneAddress);\\n\\n    /// @notice Mapping from clone contracts to their masterContract.\\n    mapping(address => address) public masterContractOf;\\n\\n    /// @notice Deploys a given master Contract as a clone.\\n    /// Any ETH transferred with this call is forwarded to the new clone.\\n    /// Emits `LogDeploy`.\\n    /// @param masterContract The address of the contract to clone.\\n    /// @param data Additional abi encoded calldata that is passed to the new clone via `IMasterContract.init`.\\n    /// @param useCreate2 Creates the clone by using the CREATE2 opcode, in this case `data` will be used as salt.\\n    /// @return cloneAddress Address of the created clone contract.\\n    function deploy(\\n        address masterContract,\\n        bytes calldata data,\\n        bool useCreate2\\n    ) public payable returns (address cloneAddress) {\\n        require(masterContract != address(0), \\\"BoringFactory: No masterContract\\\");\\n        bytes20 targetBytes = bytes20(masterContract); // Takes the first 20 bytes of the masterContract's address\\n\\n        if (useCreate2) {\\n            // each masterContract has different code already. So clones are distinguished by their data only.\\n            bytes32 salt = keccak256(data);\\n\\n            // Creates clone, more info here: https://blog.openzeppelin.com/deep-dive-into-the-minimal-proxy-contract/\\n            assembly {\\n                let clone := mload(0x40)\\n                mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n                mstore(add(clone, 0x14), targetBytes)\\n                mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n                cloneAddress := create2(0, clone, 0x37, salt)\\n            }\\n        } else {\\n            assembly {\\n                let clone := mload(0x40)\\n                mstore(clone, 0x3d602d80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000)\\n                mstore(add(clone, 0x14), targetBytes)\\n                mstore(add(clone, 0x28), 0x5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000)\\n                cloneAddress := create(0, clone, 0x37)\\n            }\\n        }\\n        masterContractOf[cloneAddress] = masterContract;\\n\\n        IMasterContract(cloneAddress).init{value: msg.value}(data);\\n\\n        emit LogDeploy(masterContract, data, cloneAddress);\\n    }\\n}\",\"keccak256\":\"0x9b92382065aca08fbe3ee7e61291448eb3aeb8d44844db1a3b2850d7fa4a9855\"},\"contracts/interfaces/IMasterContract.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IMasterContract {\\n    /// @notice Init function that gets called from `BoringFactory.deploy`.\\n    /// Also kown as the constructor for cloned contracts.\\n    /// Any ETH send to `BoringFactory.deploy` ends up here.\\n    /// @param data Can be abi encoded arguments or anything else.\\n    function init(bytes calldata data) external payable;\\n}\",\"keccak256\":\"0xf0fcaa65fab991cdc52ad33338a03a30b17c1c9c3330007f930dee7d0bb716e4\"}},\"version\":1}","storageLayout":{"storage":[{"astId":15,"contract":"contracts/Utils/BoringFactory.sol:BoringFactory","label":"masterContractOf","offset":0,"slot":"0","type":"t_mapping(t_address,t_address)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_mapping(t_address,t_address)":{"encoding":"mapping","key":"t_address","label":"mapping(address => address)","numberOfBytes":"32","value":"t_address"}}},"userdoc":{"kind":"user","methods":{"deploy(address,bytes,bool)":{"notice":"Deploys a given master Contract as a clone. Any ETH transferred with this call is forwarded to the new clone. Emits `LogDeploy`."},"masterContractOf(address)":{"notice":"Mapping from clone contracts to their masterContract."}},"version":1}}},"contracts/interfaces/IMasterContract.sol":{"IMasterContract":{"abi":[{"inputs":[{"internalType":"bytes","name":"data","type":"bytes"}],"name":"init","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"init(bytes)":{"params":{"data":"Can be abi encoded arguments or anything else."}}},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"init(bytes)":"4ddf47d4"}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"init\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"init(bytes)\":{\"params\":{\"data\":\"Can be abi encoded arguments or anything else.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"init(bytes)\":{\"notice\":\"Init function that gets called from `BoringFactory.deploy`. Also kown as the constructor for cloned contracts. Any ETH send to `BoringFactory.deploy` ends up here.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/IMasterContract.sol\":\"IMasterContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/IMasterContract.sol\":{\"content\":\"pragma solidity 0.6.12;\\n\\ninterface IMasterContract {\\n    /// @notice Init function that gets called from `BoringFactory.deploy`.\\n    /// Also kown as the constructor for cloned contracts.\\n    /// Any ETH send to `BoringFactory.deploy` ends up here.\\n    /// @param data Can be abi encoded arguments or anything else.\\n    function init(bytes calldata data) external payable;\\n}\",\"keccak256\":\"0xf0fcaa65fab991cdc52ad33338a03a30b17c1c9c3330007f930dee7d0bb716e4\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"init(bytes)":{"notice":"Init function that gets called from `BoringFactory.deploy`. Also kown as the constructor for cloned contracts. Any ETH send to `BoringFactory.deploy` ends up here."}},"version":1}}}}}}