{"id":"7de4f8f504350bf1655f9ee34c691167","_format":"hh-sol-build-info-1","solcVersion":"0.6.12","solcLongVersion":"0.6.12+commit.27d51765","input":{"language":"Solidity","sources":{"contracts/OpenZeppelin/utils/EnumerableMap.sol":{"content":"\n\npragma solidity 0.6.12;\n\n/**\n * @dev Library for managing an enumerable variant of Solidity's\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n * type.\n *\n * Maps have the following properties:\n *\n * - Entries are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\n *\n *     // Declare a set state variable\n *     EnumerableMap.UintToAddressMap private myMap;\n * }\n * ```\n *\n * As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are\n * supported.\n */\nlibrary EnumerableMap {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Map type with\n    // bytes32 keys and values.\n    // The Map implementation uses private functions, and user-facing\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\n    // the underlying Map.\n    // This means that we can only create new EnumerableMaps for types that fit\n    // in bytes32.\n\n    struct MapEntry {\n        bytes32 _key;\n        bytes32 _value;\n    }\n\n    struct Map {\n        // Storage of map keys and values\n        MapEntry[] _entries;\n\n        // Position of the entry defined by a key in the `entries` array, plus 1\n        // because index 0 means a key is not in the map.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function _set(Map storage map, bytes32 key, bytes32 value) private returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        if (keyIndex == 0) { // Equivalent to !contains(map, key)\n            map._entries.push(MapEntry({ _key: key, _value: value }));\n            // The entry is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            map._indexes[key] = map._entries.length;\n            return true;\n        } else {\n            map._entries[keyIndex - 1]._value = value;\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a key-value pair from a map. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\n        // We read and store the key's index to prevent multiple reads from the same storage slot\n        uint256 keyIndex = map._indexes[key];\n\n        if (keyIndex != 0) { // Equivalent to contains(map, key)\n            // To delete a key-value pair from the _entries array in O(1), we swap the entry to delete with the last one\n            // in the array, and then remove the last entry (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = keyIndex - 1;\n            uint256 lastIndex = map._entries.length - 1;\n\n            // When the entry to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            MapEntry storage lastEntry = map._entries[lastIndex];\n\n            // Move the last entry to the index where the entry to delete is\n            map._entries[toDeleteIndex] = lastEntry;\n            // Update the index for the moved entry\n            map._indexes[lastEntry._key] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved entry was stored\n            map._entries.pop();\n\n            // Delete the index for the deleted slot\n            delete map._indexes[key];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function _contains(Map storage map, bytes32 key) private view returns (bool) {\n        return map._indexes[key] != 0;\n    }\n\n    /**\n     * @dev Returns the number of key-value pairs in the map. O(1).\n     */\n    function _length(Map storage map) private view returns (uint256) {\n        return map._entries.length;\n    }\n\n   /**\n    * @dev Returns the key-value pair stored at position `index` in the map. O(1).\n    *\n    * Note that there are no guarantees on the ordering of entries inside the\n    * array, and it may change when more entries are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Map storage map, uint256 index) private view returns (bytes32, bytes32) {\n        require(map._entries.length > index, \"EnumerableMap: index out of bounds\");\n\n        MapEntry storage entry = map._entries[index];\n        return (entry._key, entry._value);\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     */\n    function _tryGet(Map storage map, bytes32 key) private view returns (bool, bytes32) {\n        uint256 keyIndex = map._indexes[key];\n        if (keyIndex == 0) return (false, 0); // Equivalent to contains(map, key)\n        return (true, map._entries[keyIndex - 1]._value); // All indexes are 1-based\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\n        uint256 keyIndex = map._indexes[key];\n        require(keyIndex != 0, \"EnumerableMap: nonexistent key\"); // Equivalent to contains(map, key)\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\n    }\n\n    /**\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\n     */\n    function _get(Map storage map, bytes32 key, string memory errorMessage) private view returns (bytes32) {\n        uint256 keyIndex = map._indexes[key];\n        require(keyIndex != 0, errorMessage); // Equivalent to contains(map, key)\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\n    }\n\n    // UintToAddressMap\n\n    struct UintToAddressMap {\n        Map _inner;\n    }\n\n    /**\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\n     * key. O(1).\n     *\n     * Returns true if the key was added to the map, that is if it was not\n     * already present.\n     */\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\n        return _set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the key was removed from the map, that is if it was present.\n     */\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\n        return _remove(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns true if the key is in the map. O(1).\n     */\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\n        return _contains(map._inner, bytes32(key));\n    }\n\n    /**\n     * @dev Returns the number of elements in the map. O(1).\n     */\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\n        return _length(map._inner);\n    }\n\n   /**\n    * @dev Returns the element stored at position `index` in the set. O(1).\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\n        return (uint256(key), address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Tries to returns the value associated with `key`.  O(1).\n     * Does not revert if `key` is not in the map.\n     *\n     * _Available since v3.4._\n     */\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\n        (bool success, bytes32 value) = _tryGet(map._inner, bytes32(key));\n        return (success, address(uint160(uint256(value))));\n    }\n\n    /**\n     * @dev Returns the value associated with `key`.  O(1).\n     *\n     * Requirements:\n     *\n     * - `key` must be in the map.\n     */\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\n        return address(uint160(uint256(_get(map._inner, bytes32(key)))));\n    }\n\n    /**\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryGet}.\n     */\n    function get(UintToAddressMap storage map, uint256 key, string memory errorMessage) internal view returns (address) {\n        return address(uint160(uint256(_get(map._inner, bytes32(key), errorMessage))));\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"1878","formattedMessage":"contracts/OpenZeppelin/utils/EnumerableMap.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n","message":"SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.","severity":"warning","sourceLocation":{"end":-1,"file":"contracts/OpenZeppelin/utils/EnumerableMap.sol","start":-1},"type":"Warning"}],"sources":{"contracts/OpenZeppelin/utils/EnumerableMap.sol":{"ast":{"absolutePath":"contracts/OpenZeppelin/utils/EnumerableMap.sol","exportedSymbols":{"EnumerableMap":[559]},"id":560,"license":null,"nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","0.6",".12"],"nodeType":"PragmaDirective","src":"2:23:0"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2,"nodeType":"StructuredDocumentation","src":"27:705:0","text":" @dev Library for managing an enumerable variant of Solidity's\n https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\n type.\n Maps have the following properties:\n - Entries are added, removed, and checked for existence in constant time\n (O(1)).\n - Entries are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableMap for EnumerableMap.UintToAddressMap;\n     // Declare a set state variable\n     EnumerableMap.UintToAddressMap private myMap;\n }\n ```\n As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are\n supported."},"fullyImplemented":true,"id":559,"linearizedBaseContracts":[559],"name":"EnumerableMap","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableMap.MapEntry","id":7,"members":[{"constant":false,"id":4,"mutability":"mutable","name":"_key","nodeType":"VariableDeclaration","overrides":null,"scope":7,"src":"1245:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1245:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":6,"mutability":"mutable","name":"_value","nodeType":"VariableDeclaration","overrides":null,"scope":7,"src":"1267:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":5,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1267:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"name":"MapEntry","nodeType":"StructDefinition","scope":559,"src":"1219:69:0","visibility":"public"},{"canonicalName":"EnumerableMap.Map","id":15,"members":[{"constant":false,"id":10,"mutability":"mutable","name":"_entries","nodeType":"VariableDeclaration","overrides":null,"scope":15,"src":"1357:19:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage_ptr","typeString":"struct EnumerableMap.MapEntry[]"},"typeName":{"baseType":{"contractScope":null,"id":8,"name":"MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":7,"src":"1357:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry"}},"id":9,"length":null,"nodeType":"ArrayTypeName","src":"1357:10:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage_ptr","typeString":"struct EnumerableMap.MapEntry[]"}},"value":null,"visibility":"internal"},{"constant":false,"id":14,"mutability":"mutable","name":"_indexes","nodeType":"VariableDeclaration","overrides":null,"scope":15,"src":"1526:37:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":13,"keyType":{"id":11,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1535:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1526:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":12,"name":"uint256","nodeType":"ElementaryTypeName","src":"1546:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"value":null,"visibility":"internal"}],"name":"Map","nodeType":"StructDefinition","scope":559,"src":"1294:276:0","visibility":"public"},{"body":{"id":76,"nodeType":"Block","src":"1879:596:0","statements":[{"assignments":[28],"declarations":[{"constant":false,"id":28,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","overrides":null,"scope":76,"src":"1987:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":27,"name":"uint256","nodeType":"ElementaryTypeName","src":"1987:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":33,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":29,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2006:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":30,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"2006:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":32,"indexExpression":{"argumentTypes":null,"id":31,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2019:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2006:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1987:36:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":36,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":34,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2038:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":35,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2050:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2038:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":74,"nodeType":"Block","src":"2377:92:0","statements":[{"expression":{"argumentTypes":null,"id":70,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":61,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2391:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":66,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"2391:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":67,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":63,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":28,"src":"2404:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2415:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"2404:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2391:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"id":68,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6,"src":"2391:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":69,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2427:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2391:41:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":71,"nodeType":"ExpressionStatement","src":"2391:41:0"},{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":72,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2453:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":26,"id":73,"nodeType":"Return","src":"2446:12:0"}]},"id":75,"nodeType":"IfStatement","src":"2034:435:0","trueBody":{"id":60,"nodeType":"Block","src":"2053:318:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":43,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2139:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":44,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":22,"src":"2152:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":42,"name":"MapEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2122:8:0","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MapEntry_$7_storage_ptr_$","typeString":"type(struct EnumerableMap.MapEntry storage pointer)"}},"id":45,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["_key","_value"],"nodeType":"FunctionCall","src":"2122:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_memory_ptr","typeString":"struct EnumerableMap.MapEntry memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MapEntry_$7_memory_ptr","typeString":"struct EnumerableMap.MapEntry memory"}],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":37,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2104:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":40,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"2104:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":41,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2104:17:0","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_struct$_MapEntry_$7_storage_$returns$__$","typeString":"function (struct EnumerableMap.MapEntry storage ref)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2104:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":47,"nodeType":"ExpressionStatement","src":"2104:57:0"},{"expression":{"argumentTypes":null,"id":56,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":48,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2296:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":51,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"2296:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":52,"indexExpression":{"argumentTypes":null,"id":50,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":20,"src":"2309:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2296:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":53,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"2316:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":54,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"2316:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":55,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"2316:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2296:39:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":57,"nodeType":"ExpressionStatement","src":"2296:39:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":58,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2356:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":26,"id":59,"nodeType":"Return","src":"2349:11:0"}]}}]},"documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"1576:216:0","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":77,"implemented":true,"kind":"function","modifiers":[],"name":"_set","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":23,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":77,"src":"1811:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":17,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"1811:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":77,"src":"1828:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":19,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1828:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":22,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":77,"src":"1841:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":21,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1841:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"1810:45:0"},"returnParameters":{"id":26,"nodeType":"ParameterList","parameters":[{"constant":false,"id":25,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":77,"src":"1873:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":24,"name":"bool","nodeType":"ElementaryTypeName","src":"1873:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"1872:6:0"},"scope":559,"src":"1797:678:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":157,"nodeType":"Block","src":"2713:1447:0","statements":[{"assignments":[88],"declarations":[{"constant":false,"id":88,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","overrides":null,"scope":157,"src":"2821:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":87,"name":"uint256","nodeType":"ElementaryTypeName","src":"2821:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":93,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":89,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"2840:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":90,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"2840:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":92,"indexExpression":{"argumentTypes":null,"id":91,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"2853:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2840:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2821:36:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":94,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"2872:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2884:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2872:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":155,"nodeType":"Block","src":"4117:37:0","statements":[{"expression":{"argumentTypes":null,"hexValue":"66616c7365","id":153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4138:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":86,"id":154,"nodeType":"Return","src":"4131:12:0"}]},"id":156,"nodeType":"IfStatement","src":"2868:1286:0","trueBody":{"id":152,"nodeType":"Block","src":"2887:1224:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"toDeleteIndex","nodeType":"VariableDeclaration","overrides":null,"scope":152,"src":"3228:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":97,"name":"uint256","nodeType":"ElementaryTypeName","src":"3228:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":102,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":99,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":88,"src":"3252:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3263:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3252:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3228:36:0"},{"assignments":[104],"declarations":[{"constant":false,"id":104,"mutability":"mutable","name":"lastIndex","nodeType":"VariableDeclaration","overrides":null,"scope":152,"src":"3278:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":103,"name":"uint256","nodeType":"ElementaryTypeName","src":"3278:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":110,"initialValue":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":105,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3298:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":106,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"3298:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3298:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3320:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3298:23:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3278:43:0"},{"assignments":[112],"declarations":[{"constant":false,"id":112,"mutability":"mutable","name":"lastEntry","nodeType":"VariableDeclaration","overrides":null,"scope":152,"src":"3561:26:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry"},"typeName":{"contractScope":null,"id":111,"name":"MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":7,"src":"3561:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry"}},"value":null,"visibility":"internal"}],"id":117,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":113,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3590:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"3590:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":116,"indexExpression":{"argumentTypes":null,"id":115,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":104,"src":"3603:9:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3590:23:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3561:52:0"},{"expression":{"argumentTypes":null,"id":124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":118,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3705:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":121,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"3705:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":122,"indexExpression":{"argumentTypes":null,"id":120,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3718:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3705:27:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"id":123,"name":"lastEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"3735:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry storage pointer"}},"src":"3705:39:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"id":125,"nodeType":"ExpressionStatement","src":"3705:39:0"},{"expression":{"argumentTypes":null,"id":135,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":126,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3810:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":130,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"3810:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":131,"indexExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":128,"name":"lastEntry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":112,"src":"3823:9:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry storage pointer"}},"id":129,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4,"src":"3823:14:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3810:28:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":134,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":132,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"3841:13:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"argumentTypes":null,"hexValue":"31","id":133,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3857:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3841:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3810:48:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":136,"nodeType":"ExpressionStatement","src":"3810:48:0"},{"expression":{"argumentTypes":null,"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":137,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"3964:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":140,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"3964:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":141,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","referencedDeclaration":null,"src":"3964:16:0","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$__$returns$__$","typeString":"function ()"}},"id":142,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3964:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":143,"nodeType":"ExpressionStatement","src":"3964:18:0"},{"expression":{"argumentTypes":null,"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4050:24:0","subExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":144,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":80,"src":"4057:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":145,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"4057:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":147,"indexExpression":{"argumentTypes":null,"id":146,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"4070:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4057:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":149,"nodeType":"ExpressionStatement","src":"4050:24:0"},{"expression":{"argumentTypes":null,"hexValue":"74727565","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4096:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":86,"id":151,"nodeType":"Return","src":"4089:11:0"}]}}]},"documentation":{"id":78,"nodeType":"StructuredDocumentation","src":"2481:157:0","text":" @dev Removes a key-value pair from a map. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":158,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":80,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":158,"src":"2660:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":79,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"2660:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"},{"constant":false,"id":82,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":158,"src":"2677:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2677:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"2659:30:0"},"returnParameters":{"id":86,"nodeType":"ParameterList","parameters":[{"constant":false,"id":85,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":158,"src":"2707:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":84,"name":"bool","nodeType":"ElementaryTypeName","src":"2707:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"2706:6:0"},"scope":559,"src":"2643:1517:0","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"4316:46:0","statements":[{"expression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":168,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":161,"src":"4333:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":169,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"4333:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":171,"indexExpression":{"argumentTypes":null,"id":170,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":163,"src":"4346:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4333:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4354:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4333:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":167,"id":174,"nodeType":"Return","src":"4326:29:0"}]},"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"4166:68:0","text":" @dev Returns true if the key is in the map. O(1)."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":176,"src":"4258:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":160,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"4258:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"},{"constant":false,"id":163,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":176,"src":"4275:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":162,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4275:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4257:30:0"},"returnParameters":{"id":167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":166,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":176,"src":"4310:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":165,"name":"bool","nodeType":"ElementaryTypeName","src":"4310:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"4309:6:0"},"scope":559,"src":"4239:123:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":188,"nodeType":"Block","src":"4517:43:0","statements":[{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":184,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":179,"src":"4534:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":185,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"4534:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"4534:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":183,"id":187,"nodeType":"Return","src":"4527:26:0"}]},"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"4368:79:0","text":" @dev Returns the number of key-value pairs in the map. O(1)."},"id":189,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":180,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":189,"src":"4469:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":178,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"4469:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"}],"src":"4468:17:0"},"returnParameters":{"id":183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":182,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":189,"src":"4508:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":181,"name":"uint256","nodeType":"ElementaryTypeName","src":"4508:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4507:9:0"},"scope":559,"src":"4452:108:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":223,"nodeType":"Block","src":"4988:189:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":202,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5006:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":203,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"5006:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":204,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":null,"src":"5006:19:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"argumentTypes":null,"id":205,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5028:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5006:27:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"456e756d657261626c654d61703a20696e646578206f7574206f6620626f756e6473","id":207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5035:36:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_86631030b9066a18616a068fc09fce83d18af4765cb1d2166fa475228f4db155","typeString":"literal_string \"EnumerableMap: index out of bounds\""},"value":"EnumerableMap: index out of bounds"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86631030b9066a18616a068fc09fce83d18af4765cb1d2166fa475228f4db155","typeString":"literal_string \"EnumerableMap: index out of bounds\""}],"id":201,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4998:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4998:74:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":209,"nodeType":"ExpressionStatement","src":"4998:74:0"},{"assignments":[211],"declarations":[{"constant":false,"id":211,"mutability":"mutable","name":"entry","nodeType":"VariableDeclaration","overrides":null,"scope":223,"src":"5083:22:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry"},"typeName":{"contractScope":null,"id":210,"name":"MapEntry","nodeType":"UserDefinedTypeName","referencedDeclaration":7,"src":"5083:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry"}},"value":null,"visibility":"internal"}],"id":216,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":212,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":192,"src":"5108:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":213,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"5108:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":215,"indexExpression":{"argumentTypes":null,"id":214,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":194,"src":"5121:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5108:19:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"nodeType":"VariableDeclarationStatement","src":"5083:44:0"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":217,"name":"entry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"5145:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry storage pointer"}},"id":218,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_key","nodeType":"MemberAccess","referencedDeclaration":4,"src":"5145:10:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"expression":{"argumentTypes":null,"id":219,"name":"entry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":211,"src":"5157:5:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage_ptr","typeString":"struct EnumerableMap.MapEntry storage pointer"}},"id":220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6,"src":"5157:12:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":221,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5144:26:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"functionReturnParameters":200,"id":222,"nodeType":"Return","src":"5137:33:0"}]},"documentation":{"id":190,"nodeType":"StructuredDocumentation","src":"4565:333:0","text":" @dev Returns the key-value pair stored at position `index` in the map. O(1).\n Note that there are no guarantees on the ordering of entries inside the\n array, and it may change when more entries are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":224,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":224,"src":"4916:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":191,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"4916:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"},{"constant":false,"id":194,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":224,"src":"4933:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":193,"name":"uint256","nodeType":"ElementaryTypeName","src":"4933:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"4915:32:0"},"returnParameters":{"id":200,"nodeType":"ParameterList","parameters":[{"constant":false,"id":197,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":224,"src":"4970:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":196,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4970:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":199,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":224,"src":"4979:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":198,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4979:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"4969:18:0"},"scope":559,"src":"4903:274:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":261,"nodeType":"Block","src":"5403:220:0","statements":[{"assignments":[237],"declarations":[{"constant":false,"id":237,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","overrides":null,"scope":261,"src":"5413:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":236,"name":"uint256","nodeType":"ElementaryTypeName","src":"5413:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":242,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":238,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"5432:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":239,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"5432:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":241,"indexExpression":{"argumentTypes":null,"id":240,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"5445:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5432:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5413:36:0"},{"condition":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":243,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5463:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"argumentTypes":null,"hexValue":"30","id":244,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5475:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5463:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":null,"id":250,"nodeType":"IfStatement","src":"5459:36:0","trueBody":{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"66616c7365","id":246,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5486:5:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"argumentTypes":null,"hexValue":"30","id":247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5493:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":248,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5485:10:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":235,"id":249,"nodeType":"Return","src":"5478:17:0"}},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"hexValue":"74727565","id":251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5549:4:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":252,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"5555:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"5555:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":257,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":254,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":237,"src":"5568:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5579:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5568:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5555:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"id":258,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6,"src":"5555:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":259,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5548:41:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"functionReturnParameters":235,"id":260,"nodeType":"Return","src":"5541:48:0"}]},"documentation":{"id":225,"nodeType":"StructuredDocumentation","src":"5183:131:0","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map."},"id":262,"implemented":true,"kind":"function","modifiers":[],"name":"_tryGet","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":262,"src":"5336:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":226,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"5336:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":262,"src":"5353:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5353:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5335:30:0"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":232,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":262,"src":"5388:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":231,"name":"bool","nodeType":"ElementaryTypeName","src":"5388:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":262,"src":"5394:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":233,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5394:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5387:15:0"},"scope":559,"src":"5319:304:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":294,"nodeType":"Block","src":"5850:232:0","statements":[{"assignments":[273],"declarations":[{"constant":false,"id":273,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","overrides":null,"scope":294,"src":"5860:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"5860:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":278,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":274,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"5879:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":275,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"5879:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":277,"indexExpression":{"argumentTypes":null,"id":276,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":267,"src":"5892:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5879:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5860:36:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":280,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"5914:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5926:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5914:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"hexValue":"456e756d657261626c654d61703a206e6f6e6578697374656e74206b6579","id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5929:32:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""},"value":"EnumerableMap: nonexistent key"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d3551e30d3095fd81287b88f7139bb09818e34280e85ee821994ebaebbed7072","typeString":"literal_string \"EnumerableMap: nonexistent key\""}],"id":279,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5906:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5906:56:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":285,"nodeType":"ExpressionStatement","src":"5906:56:0"},{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":286,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":265,"src":"6015:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":287,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"6015:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":291,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":290,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":288,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"6028:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":289,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6039:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6028:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6015:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"id":292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6,"src":"6015:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":271,"id":293,"nodeType":"Return","src":"6008:40:0"}]},"documentation":{"id":263,"nodeType":"StructuredDocumentation","src":"5629:141:0","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"_get","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":268,"nodeType":"ParameterList","parameters":[{"constant":false,"id":265,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":295,"src":"5789:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":264,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"5789:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":295,"src":"5806:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":266,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5806:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5788:30:0"},"returnParameters":{"id":271,"nodeType":"ParameterList","parameters":[{"constant":false,"id":270,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":295,"src":"5841:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":269,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5841:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"5840:9:0"},"scope":559,"src":"5775:307:0","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":329,"nodeType":"Block","src":"6467:212:0","statements":[{"assignments":[308],"declarations":[{"constant":false,"id":308,"mutability":"mutable","name":"keyIndex","nodeType":"VariableDeclaration","overrides":null,"scope":329,"src":"6477:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"6477:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"id":313,"initialValue":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":309,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6496:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":310,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":14,"src":"6496:12:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":312,"indexExpression":{"argumentTypes":null,"id":311,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"6509:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6496:17:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6477:36:0"},{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":315,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"6531:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"argumentTypes":null,"hexValue":"30","id":316,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6543:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6531:13:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"id":318,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6546:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":314,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6523:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6523:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":320,"nodeType":"ExpressionStatement","src":"6523:36:0"},{"expression":{"argumentTypes":null,"expression":{"argumentTypes":null,"baseExpression":{"argumentTypes":null,"expression":{"argumentTypes":null,"id":321,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"6612:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map storage pointer"}},"id":322,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_entries","nodeType":"MemberAccess","referencedDeclaration":10,"src":"6612:12:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_MapEntry_$7_storage_$dyn_storage","typeString":"struct EnumerableMap.MapEntry storage ref[] storage ref"}},"id":326,"indexExpression":{"argumentTypes":null,"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"argumentTypes":null,"id":323,"name":"keyIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"6625:8:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"argumentTypes":null,"hexValue":"31","id":324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6636:1:0","subdenomination":null,"typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6625:12:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6612:26:0","typeDescriptions":{"typeIdentifier":"t_struct$_MapEntry_$7_storage","typeString":"struct EnumerableMap.MapEntry storage ref"}},"id":327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_value","nodeType":"MemberAccess","referencedDeclaration":6,"src":"6612:33:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":306,"id":328,"nodeType":"Return","src":"6605:40:0"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"6088:271:0","text":" @dev Same as {_get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {_tryGet}."},"id":330,"implemented":true,"kind":"function","modifiers":[],"name":"_get","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":303,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":330,"src":"6378:15:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":297,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"6378:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"},{"constant":false,"id":300,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":330,"src":"6395:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":299,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6395:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":302,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":330,"src":"6408:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":301,"name":"string","nodeType":"ElementaryTypeName","src":"6408:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"6377:58:0"},"returnParameters":{"id":306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":305,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":330,"src":"6458:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":304,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6458:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"src":"6457:9:0"},"scope":559,"src":"6364:315:0","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableMap.UintToAddressMap","id":333,"members":[{"constant":false,"id":332,"mutability":"mutable","name":"_inner","nodeType":"VariableDeclaration","overrides":null,"scope":333,"src":"6744:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"},"typeName":{"contractScope":null,"id":331,"name":"Map","nodeType":"UserDefinedTypeName","referencedDeclaration":15,"src":"6744:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage_ptr","typeString":"struct EnumerableMap.Map"}},"value":null,"visibility":"internal"}],"name":"UintToAddressMap","nodeType":"StructDefinition","scope":559,"src":"6710:51:0","visibility":"public"},{"body":{"id":364,"nodeType":"Block","src":"7083:88:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":346,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7105:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":347,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"7105:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":350,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":338,"src":"7125:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7117:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":348,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7117:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":351,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7117:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":358,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":340,"src":"7155:5:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7147:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":356,"name":"uint160","nodeType":"ElementaryTypeName","src":"7147:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7147:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":355,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7139:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":354,"name":"uint256","nodeType":"ElementaryTypeName","src":"7139:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7139:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":353,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7131:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7131:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":361,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7131:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":345,"name":"_set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":77,"src":"7100:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Map_$15_storage_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32,bytes32) returns (bool)"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7100:64:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":344,"id":363,"nodeType":"Return","src":"7093:71:0"}]},"documentation":{"id":334,"nodeType":"StructuredDocumentation","src":"6767:216:0","text":" @dev Adds a key-value pair to a map, or updates the value for an existing\n key. O(1).\n Returns true if the key was added to the map, that is if it was not\n already present."},"id":365,"implemented":true,"kind":"function","modifiers":[],"name":"set","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":336,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":365,"src":"7001:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":335,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"7001:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"},{"constant":false,"id":338,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":365,"src":"7031:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"7031:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":340,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":365,"src":"7044:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":339,"name":"address","nodeType":"ElementaryTypeName","src":"7044:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"7000:58:0"},"returnParameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":343,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":365,"src":"7077:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":342,"name":"bool","nodeType":"ElementaryTypeName","src":"7077:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"7076:6:0"},"scope":559,"src":"6988:183:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":384,"nodeType":"Block","src":"7413:57:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":376,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":368,"src":"7438:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":377,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"7438:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":380,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":370,"src":"7458:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7450:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7450:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7450:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":375,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"7430:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Map_$15_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) returns (bool)"}},"id":382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7430:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":374,"id":383,"nodeType":"Return","src":"7423:40:0"}]},"documentation":{"id":366,"nodeType":"StructuredDocumentation","src":"7177:148:0","text":" @dev Removes a value from a set. O(1).\n Returns true if the key was removed from the map, that is if it was present."},"id":385,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":368,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":385,"src":"7346:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":367,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"7346:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"},{"constant":false,"id":370,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":385,"src":"7376:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":369,"name":"uint256","nodeType":"ElementaryTypeName","src":"7376:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7345:43:0"},"returnParameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":385,"src":"7407:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":372,"name":"bool","nodeType":"ElementaryTypeName","src":"7407:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"7406:6:0"},"scope":559,"src":"7330:140:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":404,"nodeType":"Block","src":"7639:59:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":396,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"7666:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":397,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"7666:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":400,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":390,"src":"7686:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":399,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7678:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":398,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7678:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7678:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":395,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":176,"src":"7656:9:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$15_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool)"}},"id":402,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7656:35:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":394,"id":403,"nodeType":"Return","src":"7649:42:0"}]},"documentation":{"id":386,"nodeType":"StructuredDocumentation","src":"7476:68:0","text":" @dev Returns true if the key is in the map. O(1)."},"id":405,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":388,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":405,"src":"7567:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":387,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"7567:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":405,"src":"7597:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"7597:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7566:43:0"},"returnParameters":{"id":394,"nodeType":"ParameterList","parameters":[{"constant":false,"id":393,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":405,"src":"7633:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":392,"name":"bool","nodeType":"ElementaryTypeName","src":"7633:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"}],"src":"7632:6:0"},"scope":559,"src":"7549:149:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":418,"nodeType":"Block","src":"7859:43:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":414,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"7884:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":415,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"7884:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}],"id":413,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"7876:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$15_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableMap.Map storage pointer) view returns (uint256)"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7876:19:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":412,"id":417,"nodeType":"Return","src":"7869:26:0"}]},"documentation":{"id":406,"nodeType":"StructuredDocumentation","src":"7704:72:0","text":" @dev Returns the number of elements in the map. O(1)."},"id":419,"implemented":true,"kind":"function","modifiers":[],"name":"length","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":419,"src":"7797:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":407,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"7797:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"}],"src":"7796:30:0"},"returnParameters":{"id":412,"nodeType":"ParameterList","parameters":[{"constant":false,"id":411,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":419,"src":"7850:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":410,"name":"uint256","nodeType":"ElementaryTypeName","src":"7850:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"7849:9:0"},"scope":559,"src":"7781:121:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":457,"nodeType":"Block","src":"8328:135:0","statements":[{"assignments":[432,434],"declarations":[{"constant":false,"id":432,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":457,"src":"8339:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8339:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":457,"src":"8352:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":433,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8352:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":440,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":436,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":422,"src":"8373:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"8373:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"argumentTypes":null,"id":438,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"8385:5:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":435,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":224,"src":"8369:3:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$15_storage_ptr_$_t_uint256_$returns$_t_bytes32_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,uint256) view returns (bytes32,bytes32)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8369:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bytes32_$_t_bytes32_$","typeString":"tuple(bytes32,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"8338:53:0"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":443,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"8417:3:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":442,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8409:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":441,"name":"uint256","nodeType":"ElementaryTypeName","src":"8409:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8409:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":451,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"8447:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":450,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8439:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":449,"name":"uint256","nodeType":"ElementaryTypeName","src":"8439:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8439:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":448,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8431:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":447,"name":"uint160","nodeType":"ElementaryTypeName","src":"8431:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8431:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":446,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":445,"name":"address","nodeType":"ElementaryTypeName","src":"8423:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":455,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8408:48:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_address_payable_$","typeString":"tuple(uint256,address payable)"}},"functionReturnParameters":430,"id":456,"nodeType":"Return","src":"8401:55:0"}]},"documentation":{"id":420,"nodeType":"StructuredDocumentation","src":"7907:318:0","text":" @dev Returns the element stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":458,"implemented":true,"kind":"function","modifiers":[],"name":"at","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":422,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":458,"src":"8242:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":421,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"8242:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","overrides":null,"scope":458,"src":"8272:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"8272:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8241:45:0"},"returnParameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":427,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":458,"src":"8310:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":426,"name":"uint256","nodeType":"ElementaryTypeName","src":"8310:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":429,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":458,"src":"8319:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":428,"name":"address","nodeType":"ElementaryTypeName","src":"8319:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8309:18:0"},"scope":559,"src":"8230:233:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":496,"nodeType":"Block","src":"8740:142:0","statements":[{"assignments":[471,473],"declarations":[{"constant":false,"id":471,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","overrides":null,"scope":496,"src":"8751:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":470,"name":"bool","nodeType":"ElementaryTypeName","src":"8751:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":473,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","overrides":null,"scope":496,"src":"8765:13:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":472,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8765:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":null,"visibility":"internal"}],"id":482,"initialValue":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":475,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":461,"src":"8790:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":476,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"8790:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":479,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":463,"src":"8810:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":478,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8802:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":477,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8802:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8802:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":474,"name":"_tryGet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":262,"src":"8782:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$15_storage_ptr_$_t_bytes32_$returns$_t_bool_$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bool,bytes32)"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8782:33:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes32_$","typeString":"tuple(bool,bytes32)"}},"nodeType":"VariableDeclarationStatement","src":"8750:65:0"},{"expression":{"argumentTypes":null,"components":[{"argumentTypes":null,"id":483,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":471,"src":"8833:7:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":490,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8866:5:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":489,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8858:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":488,"name":"uint256","nodeType":"ElementaryTypeName","src":"8858:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8858:14:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8850:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":486,"name":"uint160","nodeType":"ElementaryTypeName","src":"8850:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8850:23:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8842:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":484,"name":"address","nodeType":"ElementaryTypeName","src":"8842:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8842:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"id":494,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8832:43:0","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_address_payable_$","typeString":"tuple(bool,address payable)"}},"functionReturnParameters":469,"id":495,"nodeType":"Return","src":"8825:50:0"}]},"documentation":{"id":459,"nodeType":"StructuredDocumentation","src":"8469:169:0","text":" @dev Tries to returns the value associated with `key`.  O(1).\n Does not revert if `key` is not in the map.\n _Available since v3.4._"},"id":497,"implemented":true,"kind":"function","modifiers":[],"name":"tryGet","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":464,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":497,"src":"8659:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":460,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"8659:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"},{"constant":false,"id":463,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":497,"src":"8689:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":462,"name":"uint256","nodeType":"ElementaryTypeName","src":"8689:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"8658:43:0"},"returnParameters":{"id":469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":466,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":497,"src":"8725:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":465,"name":"bool","nodeType":"ElementaryTypeName","src":"8725:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"value":null,"visibility":"internal"},{"constant":false,"id":468,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":497,"src":"8731:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"8731:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"8724:15:0"},"scope":559,"src":"8643:239:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":525,"nodeType":"Block","src":"9122:81:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":514,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"9168:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":515,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"9168:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":518,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":502,"src":"9188:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":517,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9180:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":516,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9180:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9180:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":513,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[295,330],"referencedDeclaration":295,"src":"9163:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$15_storage_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32) view returns (bytes32)"}},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9163:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":512,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9155:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"9155:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9155:39:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":510,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9147:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":509,"name":"uint160","nodeType":"ElementaryTypeName","src":"9147:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":522,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9147:48:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":508,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9139:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"9139:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9139:57:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":506,"id":524,"nodeType":"Return","src":"9132:64:0"}]},"documentation":{"id":498,"nodeType":"StructuredDocumentation","src":"8888:141:0","text":" @dev Returns the value associated with `key`.  O(1).\n Requirements:\n - `key` must be in the map."},"id":526,"implemented":true,"kind":"function","modifiers":[],"name":"get","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":500,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":526,"src":"9047:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":499,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"9047:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"},{"constant":false,"id":502,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":526,"src":"9077:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":501,"name":"uint256","nodeType":"ElementaryTypeName","src":"9077:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"}],"src":"9046:43:0"},"returnParameters":{"id":506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":505,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":526,"src":"9113:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":504,"name":"address","nodeType":"ElementaryTypeName","src":"9113:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"9112:9:0"},"scope":559,"src":"9034:169:0","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":557,"nodeType":"Block","src":"9599:95:0","statements":[{"expression":{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"arguments":[{"argumentTypes":null,"expression":{"argumentTypes":null,"id":545,"name":"map","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"9645:3:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap storage pointer"}},"id":546,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":332,"src":"9645:10:0","typeDescriptions":{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"}},{"argumentTypes":null,"arguments":[{"argumentTypes":null,"id":549,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":531,"src":"9665:3:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":548,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9657:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":547,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9657:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9657:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"argumentTypes":null,"id":551,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":533,"src":"9671:12:0","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Map_$15_storage","typeString":"struct EnumerableMap.Map storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":544,"name":"_get","nodeType":"Identifier","overloadedDeclarations":[295,330],"referencedDeclaration":330,"src":"9640:4:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Map_$15_storage_ptr_$_t_bytes32_$_t_string_memory_ptr_$returns$_t_bytes32_$","typeString":"function (struct EnumerableMap.Map storage pointer,bytes32,string memory) view returns (bytes32)"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9640:44:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":543,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9632:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":542,"name":"uint256","nodeType":"ElementaryTypeName","src":"9632:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":553,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9632:53:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":541,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9624:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":540,"name":"uint160","nodeType":"ElementaryTypeName","src":"9624:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9624:62:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":539,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9616:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":538,"name":"address","nodeType":"ElementaryTypeName","src":"9616:7:0","typeDescriptions":{"typeIdentifier":null,"typeString":null}}},"id":555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9616:71:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":537,"id":556,"nodeType":"Return","src":"9609:78:0"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"9209:269:0","text":" @dev Same as {get}, with a custom error message when `key` is not in the map.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryGet}."},"id":558,"implemented":true,"kind":"function","modifiers":[],"name":"get","nodeType":"FunctionDefinition","overrides":null,"parameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"map","nodeType":"VariableDeclaration","overrides":null,"scope":558,"src":"9496:28:0","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"},"typeName":{"contractScope":null,"id":528,"name":"UintToAddressMap","nodeType":"UserDefinedTypeName","referencedDeclaration":333,"src":"9496:16:0","typeDescriptions":{"typeIdentifier":"t_struct$_UintToAddressMap_$333_storage_ptr","typeString":"struct EnumerableMap.UintToAddressMap"}},"value":null,"visibility":"internal"},{"constant":false,"id":531,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","overrides":null,"scope":558,"src":"9526:11:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":530,"name":"uint256","nodeType":"ElementaryTypeName","src":"9526:7:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":null,"visibility":"internal"},{"constant":false,"id":533,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","overrides":null,"scope":558,"src":"9539:26:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":532,"name":"string","nodeType":"ElementaryTypeName","src":"9539:6:0","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"value":null,"visibility":"internal"}],"src":"9495:71:0"},"returnParameters":{"id":537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":536,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","overrides":null,"scope":558,"src":"9590:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":535,"name":"address","nodeType":"ElementaryTypeName","src":"9590:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"value":null,"visibility":"internal"}],"src":"9589:9:0"},"scope":559,"src":"9483:211:0","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":560,"src":"733:8963:0"}],"src":"2:9695:0"},"id":0}},"contracts":{"contracts/OpenZeppelin/utils/EnumerableMap.sol":{"EnumerableMap":{"abi":[],"devdoc":{"details":"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are supported.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fab831cc6cccf27d63c7864d1cee96f76e7c0e1425a6eec30c0f1dc66ed856d964736f6c634300060c0033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xB8 BALANCE 0xCC PUSH13 0xCCF27D63C7864D1CEE96F76E7C 0xE EQ 0x25 0xA6 0xEE 0xC3 0xC 0xF SAR 0xC6 PUSH15 0xD856D964736F6C634300060C003300 ","sourceMap":"733:8963:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220fab831cc6cccf27d63c7864d1cee96f76e7c0e1425a6eec30c0f1dc66ed856d964736f6c634300060c0033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0xB8 BALANCE 0xCC PUSH13 0xCCF27D63C7864D1CEE96F76E7C 0xE EQ 0x25 0xA6 0xEE 0xC3 0xC 0xF SAR 0xC6 PUSH15 0xD856D964736F6C634300060C003300 ","sourceMap":"733:8963:0:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_at(struct EnumerableMap.Map storage pointer,uint256)":"infinite","_contains(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","_get(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","_get(struct EnumerableMap.Map storage pointer,bytes32,string memory)":"infinite","_length(struct EnumerableMap.Map storage pointer)":"infinite","_remove(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","_set(struct EnumerableMap.Map storage pointer,bytes32,bytes32)":"infinite","_tryGet(struct EnumerableMap.Map storage pointer,bytes32)":"infinite","at(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","contains(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","get(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","get(struct EnumerableMap.UintToAddressMap storage pointer,uint256,string memory)":"infinite","length(struct EnumerableMap.UintToAddressMap storage pointer)":"infinite","remove(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite","set(struct EnumerableMap.UintToAddressMap storage pointer,uint256,address)":"infinite","tryGet(struct EnumerableMap.UintToAddressMap storage pointer,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing an enumerable variant of Solidity's https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`] type. Maps have the following properties: - Entries are added, removed, and checked for existence in constant time (O(1)). - Entries are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableMap for EnumerableMap.UintToAddressMap;     // Declare a set state variable     EnumerableMap.UintToAddressMap private myMap; } ``` As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are supported.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/OpenZeppelin/utils/EnumerableMap.sol\":\"EnumerableMap\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/OpenZeppelin/utils/EnumerableMap.sol\":{\"content\":\"\\n\\npragma solidity 0.6.12;\\n\\n/**\\n * @dev Library for managing an enumerable variant of Solidity's\\n * https://solidity.readthedocs.io/en/latest/types.html#mapping-types[`mapping`]\\n * type.\\n *\\n * Maps have the following properties:\\n *\\n * - Entries are added, removed, and checked for existence in constant time\\n * (O(1)).\\n * - Entries are enumerated in O(n). No guarantees are made on the ordering.\\n *\\n * ```\\n * contract Example {\\n *     // Add the library methods\\n *     using EnumerableMap for EnumerableMap.UintToAddressMap;\\n *\\n *     // Declare a set state variable\\n *     EnumerableMap.UintToAddressMap private myMap;\\n * }\\n * ```\\n *\\n * As of v3.0.0, only maps of type `uint256 -> address` (`UintToAddressMap`) are\\n * supported.\\n */\\nlibrary EnumerableMap {\\n    // To implement this library for multiple types with as little code\\n    // repetition as possible, we write it in terms of a generic Map type with\\n    // bytes32 keys and values.\\n    // The Map implementation uses private functions, and user-facing\\n    // implementations (such as Uint256ToAddressMap) are just wrappers around\\n    // the underlying Map.\\n    // This means that we can only create new EnumerableMaps for types that fit\\n    // in bytes32.\\n\\n    struct MapEntry {\\n        bytes32 _key;\\n        bytes32 _value;\\n    }\\n\\n    struct Map {\\n        // Storage of map keys and values\\n        MapEntry[] _entries;\\n\\n        // Position of the entry defined by a key in the `entries` array, plus 1\\n        // because index 0 means a key is not in the map.\\n        mapping (bytes32 => uint256) _indexes;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function _set(Map storage map, bytes32 key, bytes32 value) private returns (bool) {\\n        // We read and store the key's index to prevent multiple reads from the same storage slot\\n        uint256 keyIndex = map._indexes[key];\\n\\n        if (keyIndex == 0) { // Equivalent to !contains(map, key)\\n            map._entries.push(MapEntry({ _key: key, _value: value }));\\n            // The entry is stored at length-1, but we add 1 to all indexes\\n            // and use 0 as a sentinel value\\n            map._indexes[key] = map._entries.length;\\n            return true;\\n        } else {\\n            map._entries[keyIndex - 1]._value = value;\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Removes a key-value pair from a map. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function _remove(Map storage map, bytes32 key) private returns (bool) {\\n        // We read and store the key's index to prevent multiple reads from the same storage slot\\n        uint256 keyIndex = map._indexes[key];\\n\\n        if (keyIndex != 0) { // Equivalent to contains(map, key)\\n            // To delete a key-value pair from the _entries array in O(1), we swap the entry to delete with the last one\\n            // in the array, and then remove the last entry (sometimes called as 'swap and pop').\\n            // This modifies the order of the array, as noted in {at}.\\n\\n            uint256 toDeleteIndex = keyIndex - 1;\\n            uint256 lastIndex = map._entries.length - 1;\\n\\n            // When the entry to delete is the last one, the swap operation is unnecessary. However, since this occurs\\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\\n\\n            MapEntry storage lastEntry = map._entries[lastIndex];\\n\\n            // Move the last entry to the index where the entry to delete is\\n            map._entries[toDeleteIndex] = lastEntry;\\n            // Update the index for the moved entry\\n            map._indexes[lastEntry._key] = toDeleteIndex + 1; // All indexes are 1-based\\n\\n            // Delete the slot where the moved entry was stored\\n            map._entries.pop();\\n\\n            // Delete the index for the deleted slot\\n            delete map._indexes[key];\\n\\n            return true;\\n        } else {\\n            return false;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function _contains(Map storage map, bytes32 key) private view returns (bool) {\\n        return map._indexes[key] != 0;\\n    }\\n\\n    /**\\n     * @dev Returns the number of key-value pairs in the map. O(1).\\n     */\\n    function _length(Map storage map) private view returns (uint256) {\\n        return map._entries.length;\\n    }\\n\\n   /**\\n    * @dev Returns the key-value pair stored at position `index` in the map. O(1).\\n    *\\n    * Note that there are no guarantees on the ordering of entries inside the\\n    * array, and it may change when more entries are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function _at(Map storage map, uint256 index) private view returns (bytes32, bytes32) {\\n        require(map._entries.length > index, \\\"EnumerableMap: index out of bounds\\\");\\n\\n        MapEntry storage entry = map._entries[index];\\n        return (entry._key, entry._value);\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     */\\n    function _tryGet(Map storage map, bytes32 key) private view returns (bool, bytes32) {\\n        uint256 keyIndex = map._indexes[key];\\n        if (keyIndex == 0) return (false, 0); // Equivalent to contains(map, key)\\n        return (true, map._entries[keyIndex - 1]._value); // All indexes are 1-based\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function _get(Map storage map, bytes32 key) private view returns (bytes32) {\\n        uint256 keyIndex = map._indexes[key];\\n        require(keyIndex != 0, \\\"EnumerableMap: nonexistent key\\\"); // Equivalent to contains(map, key)\\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\\n    }\\n\\n    /**\\n     * @dev Same as {_get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {_tryGet}.\\n     */\\n    function _get(Map storage map, bytes32 key, string memory errorMessage) private view returns (bytes32) {\\n        uint256 keyIndex = map._indexes[key];\\n        require(keyIndex != 0, errorMessage); // Equivalent to contains(map, key)\\n        return map._entries[keyIndex - 1]._value; // All indexes are 1-based\\n    }\\n\\n    // UintToAddressMap\\n\\n    struct UintToAddressMap {\\n        Map _inner;\\n    }\\n\\n    /**\\n     * @dev Adds a key-value pair to a map, or updates the value for an existing\\n     * key. O(1).\\n     *\\n     * Returns true if the key was added to the map, that is if it was not\\n     * already present.\\n     */\\n    function set(UintToAddressMap storage map, uint256 key, address value) internal returns (bool) {\\n        return _set(map._inner, bytes32(key), bytes32(uint256(uint160(value))));\\n    }\\n\\n    /**\\n     * @dev Removes a value from a set. O(1).\\n     *\\n     * Returns true if the key was removed from the map, that is if it was present.\\n     */\\n    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {\\n        return _remove(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns true if the key is in the map. O(1).\\n     */\\n    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {\\n        return _contains(map._inner, bytes32(key));\\n    }\\n\\n    /**\\n     * @dev Returns the number of elements in the map. O(1).\\n     */\\n    function length(UintToAddressMap storage map) internal view returns (uint256) {\\n        return _length(map._inner);\\n    }\\n\\n   /**\\n    * @dev Returns the element stored at position `index` in the set. O(1).\\n    * Note that there are no guarantees on the ordering of values inside the\\n    * array, and it may change when more values are added or removed.\\n    *\\n    * Requirements:\\n    *\\n    * - `index` must be strictly less than {length}.\\n    */\\n    function at(UintToAddressMap storage map, uint256 index) internal view returns (uint256, address) {\\n        (bytes32 key, bytes32 value) = _at(map._inner, index);\\n        return (uint256(key), address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Tries to returns the value associated with `key`.  O(1).\\n     * Does not revert if `key` is not in the map.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryGet(UintToAddressMap storage map, uint256 key) internal view returns (bool, address) {\\n        (bool success, bytes32 value) = _tryGet(map._inner, bytes32(key));\\n        return (success, address(uint160(uint256(value))));\\n    }\\n\\n    /**\\n     * @dev Returns the value associated with `key`.  O(1).\\n     *\\n     * Requirements:\\n     *\\n     * - `key` must be in the map.\\n     */\\n    function get(UintToAddressMap storage map, uint256 key) internal view returns (address) {\\n        return address(uint160(uint256(_get(map._inner, bytes32(key)))));\\n    }\\n\\n    /**\\n     * @dev Same as {get}, with a custom error message when `key` is not in the map.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryGet}.\\n     */\\n    function get(UintToAddressMap storage map, uint256 key, string memory errorMessage) internal view returns (address) {\\n        return address(uint160(uint256(_get(map._inner, bytes32(key), errorMessage))));\\n    }\\n}\\n\",\"keccak256\":\"0x1cd67522af50c7bc50a98bd17b299e8c15172a7a66120c8f9e47667bcc92db32\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}}}}}