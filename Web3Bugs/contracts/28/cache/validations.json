{
  "version": "3.4",
  "log": [
    {
      "contracts/Access/ListFactory.sol:ListFactory": {
        "src": "contracts/Access/ListFactory.sol:48",
        "version": {
          "withMetadata": "ead71efe317dee04f2dc8bca16d74891feeeefa57edd32a59a8cbd5d0507f26d",
          "withoutMetadata": "d691b11258cb2b69aa93cb2f7950a30c54802327668a70c188e8defff34d3da0",
          "linkedWithoutMetadata": "d691b11258cb2b69aa93cb2f7950a30c54802327668a70c188e8defff34d3da0"
        },
        "inherit": [
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Utils/CloneFactory.sol:CloneFactory"
        ],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "initListFactory(address,address,uint256)",
          "numberOfChildren()",
          "deprecateFactory(address)",
          "setMinimumFee(uint256)",
          "setDividends(address payable)",
          "deployPointList(address,address[],uint256[])",
          "transferAnyERC20Token(address,uint256)",
          "()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:52"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:55"
            },
            {
              "label": "pointListTemplate",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:58"
            },
            {
              "label": "newAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:61"
            },
            {
              "label": "minimumFee",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:64"
            },
            {
              "label": "isChild",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:67"
            },
            {
              "label": "lists",
              "offset": 0,
              "slot": "5",
              "type": "t_array(t_address)dyn_storage",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:70"
            },
            {
              "label": "misoDiv",
              "offset": 0,
              "slot": "6",
              "type": "t_address_payable",
              "contract": "ListFactory",
              "src": "contracts/Access/ListFactory.sol:73"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Access/MISOAccessControls.sol:MISOAccessControls": {
        "src": "contracts/Access/MISOAccessControls.sol:9",
        "version": {
          "withMetadata": "e06910283456a5ebfdae327004499342ba1442b14603db49e2000a96f72ca57b",
          "withoutMetadata": "a21d264d3562d13dc44755223fc62d00ddc3ae36517d291a951e77488c57043e",
          "linkedWithoutMetadata": "a21d264d3562d13dc44755223fc62d00ddc3ae36517d291a951e77488c57043e"
        },
        "inherit": [
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "hasMinterRole(address)",
          "hasSmartContractRole(address)",
          "hasOperatorRole(address)",
          "addMinterRole(address)",
          "removeMinterRole(address)",
          "addSmartContractRole(address)",
          "removeSmartContractRole(address)",
          "addOperatorRole(address)",
          "removeOperatorRole(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Access/MISOAccessFactory.sol:MISOAccessFactory": {
        "src": "contracts/Access/MISOAccessFactory.sol:7",
        "version": {
          "withMetadata": "5808068835d04843bf0db8dfd440fa2a12e2029eb806d01d1262f676c5fb4a47",
          "withoutMetadata": "eda12d3738f3eeae25140807bab3c680c3ecbbe8c743c632aa0cd5ce72e69b0b",
          "linkedWithoutMetadata": "eda12d3738f3eeae25140807bab3c680c3ecbbe8c743c632aa0cd5ce72e69b0b"
        },
        "inherit": [
          "contracts/Utils/CloneFactory.sol:CloneFactory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initMISOAccessFactory(uint256,address)",
          "numberOfChildren()",
          "deployAccessControl(address)",
          "updateAccessTemplate(address)",
          "setDev(address)",
          "setMinimumFee(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "MISOAccessFactory",
              "src": "contracts/Access/MISOAccessFactory.sol:10"
            },
            {
              "label": "accessControlTemplate",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "MISOAccessFactory",
              "src": "contracts/Access/MISOAccessFactory.sol:13"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAccessFactory",
              "src": "contracts/Access/MISOAccessFactory.sol:16"
            },
            {
              "label": "minimumFee",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MISOAccessFactory",
              "src": "contracts/Access/MISOAccessFactory.sol:19"
            },
            {
              "label": "devaddr",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MISOAccessFactory",
              "src": "contracts/Access/MISOAccessFactory.sol:22"
            },
            {
              "label": "children",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MISOAccessFactory",
              "src": "contracts/Access/MISOAccessFactory.sol:25"
            },
            {
              "label": "isChild",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_bool)",
              "contract": "MISOAccessFactory",
              "src": "contracts/Access/MISOAccessFactory.sol:28"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_bool)": {
              "label": "mapping(address => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess": {
        "src": "contracts/Access/MISOAdminAccess.sol:6",
        "version": {
          "withMetadata": "3483b13526f4fab30bb84be84ac60b8d95cb0093af98b602d7c44cb1351224aa",
          "withoutMetadata": "3f6f3e4218f2d4df44f150267f384bebea854c413d92d3e6a258eefb36cb89f9",
          "linkedWithoutMetadata": "3f6f3e4218f2d4df44f150267f384bebea854c413d92d3e6a258eefb36cb89f9"
        },
        "inherit": [
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initAccessControls(address)",
          "hasAdminRole(address)",
          "addAdminRole(address)",
          "removeAdminRole(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Access/PointList.sol:PointList": {
        "src": "contracts/Access/PointList.sol:16",
        "version": {
          "withMetadata": "c828972b4ecad3bf11078f2400c1ee78f8a8453316fef48c6f45dc2903552be5",
          "withoutMetadata": "cd6b7bed551d9ac557a5fb85d5cd1302288e5a449995dde2a9fe607828b7ba37",
          "linkedWithoutMetadata": "cd6b7bed551d9ac557a5fb85d5cd1302288e5a449995dde2a9fe607828b7ba37"
        },
        "inherit": [
          "contracts/Access/MISOAccessControls.sol:MISOAccessControls",
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IPointList.sol:IPointList"
        ],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "()",
          "initPointList(address)",
          "isInList(address)",
          "hasPoints(address,uint256)",
          "setPoints(address[],uint256[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            },
            {
              "label": "points",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "PointList",
              "src": "contracts/Access/PointList.sol:20"
            },
            {
              "label": "totalPoints",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "PointList",
              "src": "contracts/Access/PointList.sol:23"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Access/TokenList.sol:TokenList": {
        "src": "contracts/Access/TokenList.sol:9",
        "version": {
          "withMetadata": "0089dc1ecb872c2c6039d6dba29f0baccc537707b631ed427b59b283eeee2b82",
          "withoutMetadata": "2e9ee0840c3e19bfd7226294aff090647e025aac53b4bfd5a3294ccbc2b2a4c0",
          "linkedWithoutMetadata": "2e9ee0840c3e19bfd7226294aff090647e025aac53b4bfd5a3294ccbc2b2a4c0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "initPointList(address)",
          "isInList(address)",
          "hasPoints(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)28483",
              "contract": "TokenList",
              "src": "contracts/Access/TokenList.sol:11"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "TokenList",
              "src": "contracts/Access/TokenList.sol:14"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IERC20)28483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Auctions/BatchAuction.sol:BatchAuction": {
        "src": "contracts/Auctions/BatchAuction.sol:54",
        "version": {
          "withMetadata": "6ee1fe55f52cf62c0ddb3779f5debfa1ea9c2601a53f50723fcd351b5cf35419",
          "withoutMetadata": "dd602ac64f0e790006b99a37ca4954a23ca691de30461d01a1eda84f1fb52870",
          "linkedWithoutMetadata": "dd602ac64f0e790006b99a37ca4954a23ca691de30461d01a1eda84f1fb52870"
        },
        "inherit": [
          "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/Utils/Documents.sol:Documents",
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Utils/BoringBatchable.sol:BoringBatchable",
          "contracts/Utils/BoringBatchable.sol:BaseBoringBatchable",
          "contracts/Access/MISOAccessControls.sol:MISOAccessControls",
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IMisoMarket.sol:IMisoMarket"
        ],
        "libraries": [
          "contracts/Utils/BoringMath.sol:BoringMath",
          "contracts/Utils/BoringMath.sol:BoringMath128",
          "contracts/Utils/BoringMath.sol:BoringMath64",
          "contracts/Utils/BoringERC20.sol:BoringERC20"
        ],
        "methods": [
          "initAuction(address,address,uint256,uint256,uint256,address,uint256,address,address,address payable)",
          "()",
          "marketParticipationAgreement()",
          "commitEth(address payable,bool)",
          "commitTokens(uint256,bool)",
          "commitTokensFrom(address,uint256,bool)",
          "tokenPrice()",
          "finalize()",
          "cancelAuction()",
          "withdrawTokens()",
          "withdrawTokens(address payable)",
          "tokensClaimable(address)",
          "auctionSuccessful()",
          "auctionEnded()",
          "finalized()",
          "finalizeTimeExpired()",
          "setDocument(string,string)",
          "setDocuments(string[],string[])",
          "removeDocument(string)",
          "setList(address)",
          "enableList(bool)",
          "setAuctionTime(uint256,uint256)",
          "setAuctionPrice(uint256)",
          "setAuctionWallet(address payable)",
          "init(bytes)",
          "initMarket(bytes)",
          "getBatchAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,address,address,address payable)",
          "getBaseInformation()",
          "getTotalTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Utils/BoringBatchable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            },
            {
              "label": "_documents",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:17"
            },
            {
              "label": "_docIndexes",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_uint32)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:19"
            },
            {
              "label": "_docNames",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:36"
            },
            {
              "label": "marketInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(MarketInfo)1286_storage",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:74"
            },
            {
              "label": "marketStatus",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(MarketStatus)1297_storage",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:84"
            },
            {
              "label": "auctionToken",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:86"
            },
            {
              "label": "paymentCurrency",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:88"
            },
            {
              "label": "pointList",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:90"
            },
            {
              "label": "wallet",
              "offset": 0,
              "slot": "12",
              "type": "t_address_payable",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:91"
            },
            {
              "label": "commitments",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:93"
            },
            {
              "label": "claimed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "BatchAuction",
              "src": "contracts/Auctions/BatchAuction.sol:95"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)": {
              "label": "mapping(string => struct Documents.Document)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint32)": {
              "label": "mapping(string => uint32)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Document)26300_storage": {
              "label": "struct Documents.Document",
              "members": [
                {
                  "label": "docIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastModified",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MarketInfo)1286_storage": {
              "label": "struct BatchAuction.MarketInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketStatus)1297_storage": {
              "label": "struct BatchAuction.MarketStatus",
              "members": [
                {
                  "label": "commitmentsTotal",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minimumCommitmentAmount",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "finalized",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "usePointList",
                  "type": "t_bool",
                  "offset": 1,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Auctions/Crowdsale.sol:Crowdsale": {
        "src": "contracts/Auctions/Crowdsale.sol:54",
        "version": {
          "withMetadata": "300a266bd75372c7c8df3024849191145daeaf12f3ac32c7ecef0263e490e381",
          "withoutMetadata": "a6d9c0da9c0142455c25502944be5c7fd8247ad5b67162554845d6a66e720557",
          "linkedWithoutMetadata": "a6d9c0da9c0142455c25502944be5c7fd8247ad5b67162554845d6a66e720557"
        },
        "inherit": [
          "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/Utils/Documents.sol:Documents",
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Utils/BoringBatchable.sol:BoringBatchable",
          "contracts/Utils/BoringBatchable.sol:BaseBoringBatchable",
          "contracts/Access/MISOAccessControls.sol:MISOAccessControls",
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IMisoMarket.sol:IMisoMarket"
        ],
        "libraries": [
          "contracts/Utils/BoringMath.sol:BoringMath",
          "contracts/Utils/BoringMath.sol:BoringMath128",
          "contracts/Utils/BoringMath.sol:BoringMath64",
          "contracts/Utils/BoringERC20.sol:BoringERC20"
        ],
        "methods": [
          "initCrowdsale(address,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address payable)",
          "()",
          "marketParticipationAgreement()",
          "commitEth(address payable,bool)",
          "commitTokens(uint256,bool)",
          "commitTokensFrom(address,uint256,bool)",
          "calculateCommitment(uint256)",
          "withdrawTokens()",
          "withdrawTokens(address payable)",
          "tokensClaimable(address)",
          "finalize()",
          "cancelAuction()",
          "tokenPrice()",
          "getTokenAmount(uint256)",
          "isOpen()",
          "auctionSuccessful()",
          "auctionEnded()",
          "finalized()",
          "finalizeTimeExpired()",
          "setDocument(string,string)",
          "setDocuments(string[],string[])",
          "removeDocument(string)",
          "setList(address)",
          "enableList(bool)",
          "setAuctionTime(uint256,uint256)",
          "setAuctionPrice(uint256,uint256)",
          "setAuctionWallet(address payable)",
          "init(bytes)",
          "initMarket(bytes)",
          "getCrowdsaleInitData(address,address,address,uint256,uint256,uint256,uint256,uint256,address,address,address payable)",
          "getBaseInformation()",
          "getTotalTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Utils/BoringBatchable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            },
            {
              "label": "_documents",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:17"
            },
            {
              "label": "_docIndexes",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_uint32)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:19"
            },
            {
              "label": "_docNames",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:36"
            },
            {
              "label": "marketPrice",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(MarketPrice)2611_storage",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:81"
            },
            {
              "label": "marketInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(MarketInfo)2620_storage",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:91"
            },
            {
              "label": "marketStatus",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(MarketStatus)2629_storage",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:101"
            },
            {
              "label": "auctionToken",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:104"
            },
            {
              "label": "wallet",
              "offset": 0,
              "slot": "10",
              "type": "t_address_payable",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:106"
            },
            {
              "label": "paymentCurrency",
              "offset": 0,
              "slot": "11",
              "type": "t_address",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:108"
            },
            {
              "label": "pointList",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:110"
            },
            {
              "label": "commitments",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:113"
            },
            {
              "label": "claimed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "Crowdsale",
              "src": "contracts/Auctions/Crowdsale.sol:115"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)": {
              "label": "mapping(string => struct Documents.Document)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint32)": {
              "label": "mapping(string => uint32)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Document)26300_storage": {
              "label": "struct Documents.Document",
              "members": [
                {
                  "label": "docIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastModified",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MarketInfo)2620_storage": {
              "label": "struct Crowdsale.MarketInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketPrice)2611_storage": {
              "label": "struct Crowdsale.MarketPrice",
              "members": [
                {
                  "label": "rate",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "goal",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketStatus)2629_storage": {
              "label": "struct Crowdsale.MarketStatus",
              "members": [
                {
                  "label": "commitmentsTotal",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "finalized",
                  "type": "t_bool",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "usePointList",
                  "type": "t_bool",
                  "offset": 17,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Auctions/DutchAuction.sol:DutchAuction": {
        "src": "contracts/Auctions/DutchAuction.sol:57",
        "version": {
          "withMetadata": "baca91b6b516ac73f56de5ea5ca572216e2560424ec3581cf36c903d5e626c79",
          "withoutMetadata": "756a442a5fdd26cb61cc994259537a57e89302084afe93229e6e9bf607d797e9",
          "linkedWithoutMetadata": "756a442a5fdd26cb61cc994259537a57e89302084afe93229e6e9bf607d797e9"
        },
        "inherit": [
          "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/Utils/Documents.sol:Documents",
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Utils/BoringBatchable.sol:BoringBatchable",
          "contracts/Utils/BoringBatchable.sol:BaseBoringBatchable",
          "contracts/Access/MISOAccessControls.sol:MISOAccessControls",
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IMisoMarket.sol:IMisoMarket"
        ],
        "libraries": [
          "contracts/Utils/BoringMath.sol:BoringMath",
          "contracts/Utils/BoringMath.sol:BoringMath128",
          "contracts/Utils/BoringMath.sol:BoringMath64",
          "contracts/Utils/BoringERC20.sol:BoringERC20"
        ],
        "methods": [
          "initAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address payable)",
          "tokenPrice()",
          "priceFunction()",
          "clearingPrice()",
          "()",
          "marketParticipationAgreement()",
          "commitEth(address payable,bool)",
          "commitTokens(uint256,bool)",
          "commitTokensFrom(address,uint256,bool)",
          "priceDrop()",
          "tokensClaimable(address)",
          "totalTokensCommitted()",
          "calculateCommitment(uint256)",
          "isOpen()",
          "auctionSuccessful()",
          "auctionEnded()",
          "finalized()",
          "finalizeTimeExpired()",
          "cancelAuction()",
          "finalize()",
          "withdrawTokens()",
          "withdrawTokens(address payable)",
          "setDocument(string,string)",
          "setDocuments(string[],string[])",
          "removeDocument(string)",
          "setList(address)",
          "enableList(bool)",
          "setAuctionTime(uint256,uint256)",
          "setAuctionPrice(uint256,uint256)",
          "setAuctionWallet(address payable)",
          "init(bytes)",
          "initMarket(bytes)",
          "getAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address payable)",
          "getBaseInformation()",
          "getTotalTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Utils/BoringBatchable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            },
            {
              "label": "_documents",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:17"
            },
            {
              "label": "_docIndexes",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_uint32)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:19"
            },
            {
              "label": "_docNames",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:36"
            },
            {
              "label": "marketInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(MarketInfo)4210_storage",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:75"
            },
            {
              "label": "marketPrice",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(MarketPrice)4217_storage",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:82"
            },
            {
              "label": "marketStatus",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(MarketStatus)4226_storage",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:91"
            },
            {
              "label": "auctionToken",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:94"
            },
            {
              "label": "paymentCurrency",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:96"
            },
            {
              "label": "wallet",
              "offset": 0,
              "slot": "11",
              "type": "t_address_payable",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:98"
            },
            {
              "label": "pointList",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:100"
            },
            {
              "label": "commitments",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:103"
            },
            {
              "label": "claimed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "DutchAuction",
              "src": "contracts/Auctions/DutchAuction.sol:105"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)": {
              "label": "mapping(string => struct Documents.Document)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint32)": {
              "label": "mapping(string => uint32)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Document)26300_storage": {
              "label": "struct Documents.Document",
              "members": [
                {
                  "label": "docIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastModified",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MarketInfo)4210_storage": {
              "label": "struct DutchAuction.MarketInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketPrice)4217_storage": {
              "label": "struct DutchAuction.MarketPrice",
              "members": [
                {
                  "label": "startPrice",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "minimumPrice",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketStatus)4226_storage": {
              "label": "struct DutchAuction.MarketStatus",
              "members": [
                {
                  "label": "commitmentsTotal",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "finalized",
                  "type": "t_bool",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "usePointList",
                  "type": "t_bool",
                  "offset": 17,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Auctions/HyperbolicAuction.sol:HyperbolicAuction": {
        "src": "contracts/Auctions/HyperbolicAuction.sol:58",
        "version": {
          "withMetadata": "6f4a990efe2f9b9641a1045ea79409ae00d6aefec7bd8568d5135bf2a65542d4",
          "withoutMetadata": "d21ebe95c9e64ccccc2dc9128e0bc473dfbbad0a97883a07a1a28b48060ba83c",
          "linkedWithoutMetadata": "d21ebe95c9e64ccccc2dc9128e0bc473dfbbad0a97883a07a1a28b48060ba83c"
        },
        "inherit": [
          "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/Utils/Documents.sol:Documents",
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Utils/BoringBatchable.sol:BoringBatchable",
          "contracts/Utils/BoringBatchable.sol:BaseBoringBatchable",
          "contracts/Access/MISOAccessControls.sol:MISOAccessControls",
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IMisoMarket.sol:IMisoMarket"
        ],
        "libraries": [
          "contracts/Utils/BoringERC20.sol:BoringERC20",
          "contracts/Utils/BoringMath.sol:BoringMath",
          "contracts/Utils/BoringMath.sol:BoringMath128",
          "contracts/Utils/BoringMath.sol:BoringMath64"
        ],
        "methods": [
          "initAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address payable)",
          "tokenPrice()",
          "priceFunction()",
          "clearingPrice()",
          "()",
          "marketParticipationAgreement()",
          "commitEth(address payable,bool)",
          "commitTokens(uint256,bool)",
          "commitTokensFrom(address,uint256,bool)",
          "totalTokensCommitted()",
          "calculateCommitment(uint256)",
          "auctionSuccessful()",
          "auctionEnded()",
          "finalized()",
          "finalizeTimeExpired()",
          "finalize()",
          "cancelAuction()",
          "tokensClaimable(address)",
          "withdrawTokens()",
          "withdrawTokens(address payable)",
          "setDocument(string,string)",
          "setDocuments(string[],string[])",
          "removeDocument(string)",
          "setList(address)",
          "enableList(bool)",
          "setAuctionTime(uint256,uint256)",
          "setAuctionPrice(uint256)",
          "setAuctionWallet(address payable)",
          "init(bytes)",
          "initMarket(bytes)",
          "getAuctionInitData(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address payable)",
          "getBaseInformation()",
          "getTotalTokens()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Utils/BoringBatchable.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            },
            {
              "label": "_documents",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:17"
            },
            {
              "label": "_docIndexes",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_string_memory_ptr,t_uint32)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:19"
            },
            {
              "label": "_docNames",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:21"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:36"
            },
            {
              "label": "marketInfo",
              "offset": 0,
              "slot": "6",
              "type": "t_struct(MarketInfo)5859_storage",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:76"
            },
            {
              "label": "marketPrice",
              "offset": 0,
              "slot": "7",
              "type": "t_struct(MarketPrice)5866_storage",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:85"
            },
            {
              "label": "marketStatus",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(MarketStatus)5875_storage",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:94"
            },
            {
              "label": "auctionToken",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:97"
            },
            {
              "label": "paymentCurrency",
              "offset": 0,
              "slot": "10",
              "type": "t_address",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:99"
            },
            {
              "label": "wallet",
              "offset": 0,
              "slot": "11",
              "type": "t_address_payable",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:101"
            },
            {
              "label": "pointList",
              "offset": 0,
              "slot": "12",
              "type": "t_address",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:103"
            },
            {
              "label": "commitments",
              "offset": 0,
              "slot": "13",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:106"
            },
            {
              "label": "claimed",
              "offset": 0,
              "slot": "14",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "HyperbolicAuction",
              "src": "contracts/Auctions/HyperbolicAuction.sol:108"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)": {
              "label": "mapping(string => struct Documents.Document)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint32)": {
              "label": "mapping(string => uint32)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Document)26300_storage": {
              "label": "struct Documents.Document",
              "members": [
                {
                  "label": "docIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastModified",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(MarketInfo)5859_storage": {
              "label": "struct HyperbolicAuction.MarketInfo",
              "members": [
                {
                  "label": "startTime",
                  "type": "t_uint64",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "endTime",
                  "type": "t_uint64",
                  "offset": 8,
                  "slot": "0"
                },
                {
                  "label": "totalTokens",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketPrice)5866_storage": {
              "label": "struct HyperbolicAuction.MarketPrice",
              "members": [
                {
                  "label": "minimumPrice",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "alpha",
                  "type": "t_uint128",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketStatus)5875_storage": {
              "label": "struct HyperbolicAuction.MarketStatus",
              "members": [
                {
                  "label": "commitmentsTotal",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "finalized",
                  "type": "t_bool",
                  "offset": 16,
                  "slot": "0"
                },
                {
                  "label": "usePointList",
                  "type": "t_bool",
                  "offset": 17,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Farms/MISOMasterChef.sol:MISOMasterChef": {
        "src": "contracts/Farms/MISOMasterChef.sol:41",
        "version": {
          "withMetadata": "2361e9b2a16c4fa94d0fcd6207ef99c282183293e8176c93497232ebf6924bc4",
          "withoutMetadata": "be05f4ac1717da1b87b8170e0294b71f58ef23e17fb8e6b53f3b2c8813e4be95",
          "linkedWithoutMetadata": "be05f4ac1717da1b87b8170e0294b71f58ef23e17fb8e6b53f3b2c8813e4be95"
        },
        "inherit": [
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Access/MISOAccessControls.sol:MISOAccessControls",
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IMisoFarm.sol:IMisoFarm"
        ],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath",
          "contracts/OpenZeppelin/token/ERC20/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "initFarm(address,uint256,uint256,address,address)",
          "initFarm(bytes)",
          "getInitData(address,uint256,uint256,address,address)",
          "setBonus(uint256,uint256)",
          "poolLength()",
          "addToken(uint256,address,bool)",
          "set(uint256,uint256,bool)",
          "getMultiplier(uint256,uint256)",
          "pendingRewards(uint256,address)",
          "massUpdatePools()",
          "updatePool(uint256)",
          "deposit(uint256,uint256)",
          "withdraw(uint256,uint256)",
          "emergencyWithdraw(uint256)",
          "tokensRemaining()",
          "tokenDebt()",
          "blocksRemaining()",
          "claimTips()",
          "dev(address)",
          "setDevPercentage(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            },
            {
              "label": "rewards",
              "offset": 1,
              "slot": "1",
              "type": "t_contract(IERC20)28483",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:72"
            },
            {
              "label": "devaddr",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:74"
            },
            {
              "label": "devPercentage",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:76"
            },
            {
              "label": "tips",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:78"
            },
            {
              "label": "bonusEndBlock",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:82"
            },
            {
              "label": "rewardsPerBlock",
              "offset": 0,
              "slot": "6",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:84"
            },
            {
              "label": "bonusMultiplier",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:86"
            },
            {
              "label": "totalRewardDebt",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:88"
            },
            {
              "label": "initialised",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:93"
            },
            {
              "label": "poolInfo",
              "offset": 0,
              "slot": "10",
              "type": "t_array(t_struct(PoolInfo)7496_storage)dyn_storage",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:96"
            },
            {
              "label": "userInfo",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7487_storage))",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:98"
            },
            {
              "label": "totalAllocPoint",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:100"
            },
            {
              "label": "startBlock",
              "offset": 0,
              "slot": "13",
              "type": "t_uint256",
              "contract": "MISOMasterChef",
              "src": "contracts/Farms/MISOMasterChef.sol:102"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_struct(PoolInfo)7496_storage)dyn_storage": {
              "label": "struct MISOMasterChef.PoolInfo[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)28483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(UserInfo)7487_storage)": {
              "label": "mapping(address => struct MISOMasterChef.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_mapping(t_address,t_struct(UserInfo)7487_storage))": {
              "label": "mapping(uint256 => mapping(address => struct MISOMasterChef.UserInfo))",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(PoolInfo)7496_storage": {
              "label": "struct MISOMasterChef.PoolInfo",
              "members": [
                {
                  "label": "lpToken",
                  "type": "t_contract(IERC20)28483",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "allocPoint",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "lastRewardBlock",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "accRewardsPerShare",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserInfo)7487_storage": {
              "label": "struct MISOMasterChef.UserInfo",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "rewardDebt",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/CalculationsSushiswap.sol:CalculationsSushiswap": {
        "src": "contracts/Helper/CalculationsSushiswap.sol:32",
        "version": {
          "withMetadata": "9571df413fd8e4623387d7ff785e4cfce93e0c40f0bb0a2fc7cac2566f70ae24",
          "withoutMetadata": "286368923e920388a4cdbd5970b63a0184ba02dbaa972cee8ce858e06619b922",
          "linkedWithoutMetadata": "286368923e920388a4cdbd5970b63a0184ba02dbaa972cee8ce858e06619b922"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "getNormalizedValueUsdc(address,uint256)",
          "getPriceUsdc(address)",
          "getPriceFromRouter(address,address)",
          "getPriceFromRouterUsdc(address)",
          "isLpToken(address)",
          "getRouterForLpToken(address)",
          "getLpTokenTotalLiquidityUsdc(address)",
          "getLpTokenPriceUsdc(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "CalculationsSushiswap",
            "src": "contracts/Helper/CalculationsSushiswap.sol:45"
          },
          {
            "kind": "state-variable-assignment",
            "name": "ethAddress",
            "src": "contracts/Helper/CalculationsSushiswap.sol:42"
          },
          {
            "kind": "state-variable-assignment",
            "name": "zeroAddress",
            "src": "contracts/Helper/CalculationsSushiswap.sol:43"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "primaryRouterAddress",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:33"
            },
            {
              "label": "primaryFactoryAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:34"
            },
            {
              "label": "secondaryRouterAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:35"
            },
            {
              "label": "secondaryFactoryAddress",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:36"
            },
            {
              "label": "wethAddress",
              "offset": 0,
              "slot": "4",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:37"
            },
            {
              "label": "usdcAddress",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:38"
            },
            {
              "label": "primaryRouter",
              "offset": 0,
              "slot": "6",
              "type": "t_contract(PriceRouter)8628",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:39"
            },
            {
              "label": "secondaryRouter",
              "offset": 0,
              "slot": "7",
              "type": "t_contract(PriceRouter)8628",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:40"
            },
            {
              "label": "ethAddress",
              "offset": 0,
              "slot": "8",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:42"
            },
            {
              "label": "zeroAddress",
              "offset": 0,
              "slot": "9",
              "type": "t_address",
              "contract": "CalculationsSushiswap",
              "src": "contracts/Helper/CalculationsSushiswap.sol:43"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(PriceRouter)8628": {
              "label": "contract PriceRouter",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/CalculationsSushiswap.sol:Pair": {
        "src": "contracts/Helper/CalculationsSushiswap.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "token0()",
          "token1()",
          "totalSupply()",
          "decimals()",
          "getReserves()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/CalculationsSushiswap.sol:PriceRouter": {
        "src": "contracts/Helper/CalculationsSushiswap.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getAmountsOut(uint256,address[])",
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:BaseHelper": {
        "src": "contracts/Helper/MISOHelper.sol:121",
        "version": {
          "withMetadata": "a3d810a74dcf83475874e86577fa8a1829dbf34da012978d01ba8dbabf2248cd",
          "withoutMetadata": "e300156acad46272754254e25220bd59cc69781d7188a82d31b24fb309686ad7",
          "linkedWithoutMetadata": "e300156acad46272754254e25220bd59cc69781d7188a82d31b24fb309686ad7"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "setContracts(address,address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "market",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IMisoMarketFactory)10570",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:122"
            },
            {
              "label": "tokenFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IMisoTokenFactory)9492",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:123"
            },
            {
              "label": "farmFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IMisoFarmFactory)9724",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:124"
            },
            {
              "label": "launcher",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:125"
            },
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:128"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoFarmFactory)9724": {
              "label": "contract IMisoFarmFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoMarketFactory)10570": {
              "label": "contract IMisoMarketFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoTokenFactory)9492": {
              "label": "contract IMisoTokenFactory",
              "numberOfBytes": "20"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:DocumentHepler": {
        "src": "contracts/Helper/MISOHelper.sol:35",
        "version": {
          "withMetadata": "88d2b21295e9a7ec4f4273b1418888f0c64cf9ca81dd1b1ea2dcd2e006daebfa",
          "withoutMetadata": "5764ecee7ac94344e2d327bc9c27fbc3b61b8736394044f595e4daf79baf879e",
          "linkedWithoutMetadata": "5764ecee7ac94344e2d327bc9c27fbc3b61b8736394044f595e4daf79baf879e"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDocuments(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:FarmHelper": {
        "src": "contracts/Helper/MISOHelper.sol:181",
        "version": {
          "withMetadata": "41f73814e033b7cf3b426d2a4b08a90202846799bdf226de983fe53ce645c50a",
          "withoutMetadata": "0d89ce9a80ad7f11ecd81b83ba22e1e6d43e912b7020f9b65dc8295094ccde6d",
          "linkedWithoutMetadata": "0d89ce9a80ad7f11ecd81b83ba22e1e6d43e912b7020f9b65dc8295094ccde6d"
        },
        "inherit": [
          "contracts/Helper/MISOHelper.sol:TokenHelper",
          "contracts/Helper/MISOHelper.sol:BaseHelper"
        ],
        "libraries": [],
        "methods": [
          "getPools(address)",
          "getFarms()",
          "getFarms(uint256,uint256,uint256)",
          "getFarms(uint256,uint256)",
          "getFarmDetail(address,address)",
          "getUserPoolsInfos(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "market",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IMisoMarketFactory)10570",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:122"
            },
            {
              "label": "tokenFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IMisoTokenFactory)9492",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:123"
            },
            {
              "label": "farmFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IMisoFarmFactory)9724",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:124"
            },
            {
              "label": "launcher",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:125"
            },
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:128"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoFarmFactory)9724": {
              "label": "contract IMisoFarmFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoMarketFactory)10570": {
              "label": "contract IMisoMarketFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoTokenFactory)9492": {
              "label": "contract IMisoTokenFactory",
              "numberOfBytes": "20"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IBaseAuction": {
        "src": "contracts/Helper/MISOHelper.sol:359",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getBaseInformation()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IBatchAuction": {
        "src": "contracts/Helper/MISOHelper.sol:412",
        "inherit": [
          "contracts/Helper/MISOHelper.sol:IMisoMarket"
        ],
        "libraries": [],
        "methods": [
          "marketStatus()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:ICrowdsale": {
        "src": "contracts/Helper/MISOHelper.sol:394",
        "inherit": [
          "contracts/Helper/MISOHelper.sol:IMisoMarket"
        ],
        "libraries": [],
        "methods": [
          "marketStatus()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IDocument": {
        "src": "contracts/Helper/MISOHelper.sol:29",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDocument(string)",
          "getDocumentCount()",
          "getDocumentName(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IDutchAuction": {
        "src": "contracts/Helper/MISOHelper.sol:402",
        "inherit": [
          "contracts/Helper/MISOHelper.sol:IMisoMarket"
        ],
        "libraries": [],
        "methods": [
          "marketStatus()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IERC20": {
        "src": "contracts/Helper/MISOHelper.sol:65",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "allowance(address,address)",
          "name()",
          "symbol()",
          "decimals()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IFarm": {
        "src": "contracts/Helper/MISOHelper.sol:166",
        "inherit": [],
        "libraries": [],
        "methods": [
          "poolInfo(uint256)",
          "rewards()",
          "poolLength()",
          "rewardsPerBlock()",
          "bonusMultiplier()",
          "userInfo(uint256,address)",
          "pendingRewards(uint256,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IHyperbolicAuction": {
        "src": "contracts/Helper/MISOHelper.sol:421",
        "inherit": [
          "contracts/Helper/MISOHelper.sol:IMisoMarket"
        ],
        "libraries": [],
        "methods": [
          "marketStatus()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IMisoFarmFactory": {
        "src": "contracts/Helper/MISOHelper.sol:160",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTemplateId(address)",
          "numberOfFarms()",
          "farms(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IMisoMarket": {
        "src": "contracts/Helper/MISOHelper.sol:375",
        "inherit": [],
        "libraries": [],
        "methods": [
          "paymentCurrency()",
          "auctionToken()",
          "marketPrice()",
          "marketInfo()",
          "auctionSuccessful()",
          "commitments(address)",
          "claimed(address)",
          "tokensClaimable(address)",
          "hasAdminRole(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IMisoMarketFactory": {
        "src": "contracts/Helper/MISOHelper.sol:368",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getMarketTemplateId(address)",
          "getMarkets()",
          "numberOfAuctions()",
          "auctions(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IMisoTokenFactory": {
        "src": "contracts/Helper/MISOHelper.sol:73",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokens()",
          "tokens(uint256)",
          "numberOfTokens()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IUniswapFactory": {
        "src": "contracts/Helper/MISOHelper.sol:10",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPair(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:IUniswapPair": {
        "src": "contracts/Helper/MISOHelper.sol:14",
        "inherit": [],
        "libraries": [],
        "methods": [
          "balanceOf(address)",
          "allowance(address)",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:MISOHelper": {
        "src": "contracts/Helper/MISOHelper.sol:721",
        "version": {
          "withMetadata": "db17e6ac7db78019a0e6298bccbb44355a431d75c23b940ceeb51e05b7533c43",
          "withoutMetadata": "a1c3e42ae1ea435290814a5c9e27d694e729a2596d039c8a65cd52c8aff274c2",
          "linkedWithoutMetadata": "a1c3e42ae1ea435290814a5c9e27d694e729a2596d039c8a65cd52c8aff274c2"
        },
        "inherit": [
          "contracts/Helper/MISOHelper.sol:FarmHelper",
          "contracts/Helper/MISOHelper.sol:MarketHelper",
          "contracts/Helper/MISOHelper.sol:DocumentHepler",
          "contracts/Helper/MISOHelper.sol:TokenHelper",
          "contracts/Helper/MISOHelper.sol:BaseHelper"
        ],
        "libraries": [],
        "methods": [
          "(address,address,address,address,address)",
          "getTokens()",
          "getTokens(uint256,uint256,uint256)",
          "getTokens(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MISOHelper",
            "src": "contracts/Helper/MISOHelper.sol:723"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "market",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IMisoMarketFactory)10570",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:122"
            },
            {
              "label": "tokenFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IMisoTokenFactory)9492",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:123"
            },
            {
              "label": "farmFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IMisoFarmFactory)9724",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:124"
            },
            {
              "label": "launcher",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:125"
            },
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:128"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoFarmFactory)9724": {
              "label": "contract IMisoFarmFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoMarketFactory)10570": {
              "label": "contract IMisoMarketFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoTokenFactory)9492": {
              "label": "contract IMisoTokenFactory",
              "numberOfBytes": "20"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:MarketHelper": {
        "src": "contracts/Helper/MISOHelper.sol:429",
        "version": {
          "withMetadata": "755ee81b656a2adc49db616693dffb2af3b99554597789c9ff6a2fed7d514725",
          "withoutMetadata": "ebf4e0c3a60dc7b92b2c4b48a1e19c78b65392bbc8f9f4dbef5fa32116d35365",
          "linkedWithoutMetadata": "ebf4e0c3a60dc7b92b2c4b48a1e19c78b65392bbc8f9f4dbef5fa32116d35365"
        },
        "inherit": [
          "contracts/Helper/MISOHelper.sol:DocumentHepler",
          "contracts/Helper/MISOHelper.sol:TokenHelper",
          "contracts/Helper/MISOHelper.sol:BaseHelper"
        ],
        "libraries": [],
        "methods": [
          "getMarkets(uint256,uint256,uint256)",
          "getMarkets(uint256,uint256)",
          "getMarkets()",
          "getCrowdsaleInfo(address)",
          "getDutchAuctionInfo(address payable)",
          "getBatchAuctionInfo(address payable)",
          "getHyperbolicAuctionInfo(address payable)",
          "getUserMarketInfo(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "market",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IMisoMarketFactory)10570",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:122"
            },
            {
              "label": "tokenFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IMisoTokenFactory)9492",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:123"
            },
            {
              "label": "farmFactory",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IMisoFarmFactory)9724",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:124"
            },
            {
              "label": "launcher",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:125"
            },
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "BaseHelper",
              "src": "contracts/Helper/MISOHelper.sol:128"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoFarmFactory)9724": {
              "label": "contract IMisoFarmFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoMarketFactory)10570": {
              "label": "contract IMisoMarketFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoTokenFactory)9492": {
              "label": "contract IMisoTokenFactory",
              "numberOfBytes": "20"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/MISOHelper.sol:TokenHelper": {
        "src": "contracts/Helper/MISOHelper.sol:79",
        "version": {
          "withMetadata": "17ae15a4285fdb4dd89cca220c1f633db6a3fa7d98f17f779722d9c06fd734b5",
          "withoutMetadata": "faa9447a2ee2e24ab18bd62ae8ba00a773664a1e07dc629b1d6f6adc47d8008f",
          "linkedWithoutMetadata": "faa9447a2ee2e24ab18bd62ae8ba00a773664a1e07dc629b1d6f6adc47d8008f"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getTokensInfo(address[])",
          "getTokenInfo(address)",
          "allowance(address,address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/PairsHelper.sol:IUniqueAddressesHelper": {
        "src": "contracts/Helper/PairsHelper.sol:26",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniqueAddresses(address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/PairsHelper.sol:IUniswapV2Factory": {
        "src": "contracts/Helper/PairsHelper.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/PairsHelper.sol:IUniswapV2Pair": {
        "src": "contracts/Helper/PairsHelper.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [
          "token0()",
          "token1()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/PairsHelper.sol:IUniswapV2Router": {
        "src": "contracts/Helper/PairsHelper.sol:17",
        "inherit": [],
        "libraries": [],
        "methods": [
          "WETH()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Helper/PairsHelper.sol:PairsHelper": {
        "src": "contracts/Helper/PairsHelper.sol:33",
        "version": {
          "withMetadata": "b38a09eee6c413413aadd8e7de807029ec3da14689c5b90f32894f2b801e16fc",
          "withoutMetadata": "1361ba1daf0b503a072da55a7adec6848af80e19dd7033a18bf66052d07b4a23",
          "linkedWithoutMetadata": "1361ba1daf0b503a072da55a7adec6848af80e19dd7033a18bf66052d07b4a23"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "(address,address)",
          "pairsLength(address)",
          "pagesLength(address,uint256,uint256)",
          "pagesLength(address,uint256)",
          "pairsAddresses(address,uint256,uint256,uint256)",
          "tokensAddresses(address,uint256,uint256,uint256)",
          "tokensAddresses(address,uint256,uint256)",
          "tokensAddresses(address)",
          "pairsAddresses(address,uint256,uint256)",
          "pairsAddresses(address)",
          "updateSlot(bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PairsHelper",
            "src": "contracts/Helper/PairsHelper.sol:39"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "PairsHelper",
              "src": "contracts/Helper/PairsHelper.sol:34"
            },
            {
              "label": "wethAddress",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "PairsHelper",
              "src": "contracts/Helper/PairsHelper.sol:35"
            },
            {
              "label": "uniqueAddressesHelperAddress",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "PairsHelper",
              "src": "contracts/Helper/PairsHelper.sol:36"
            },
            {
              "label": "uniqueAddressesHelper",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IUniqueAddressesHelper)11929",
              "contract": "PairsHelper",
              "src": "contracts/Helper/PairsHelper.sol:37"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IUniqueAddressesHelper)11929": {
              "label": "contract IUniqueAddressesHelper",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Liquidity/PostAuctionLauncher.sol:PostAuctionLauncher": {
        "src": "contracts/Liquidity/PostAuctionLauncher.sol:54",
        "version": {
          "withMetadata": "c46e3d80bd7aec34fb2a30f2603b82a181c9d71eef8c0f90d47fa417fca0ebc5",
          "withoutMetadata": "ec62eedb3a0b294c1f912dc4fde9545c5402041e689c15900d2f713dc4524280",
          "linkedWithoutMetadata": "ec62eedb3a0b294c1f912dc4fde9545c5402041e689c15900d2f713dc4524280"
        },
        "inherit": [
          "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:ReentrancyGuard",
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Access/MISOAccessControls.sol:MISOAccessControls",
          "contracts/Access/MISOAdminAccess.sol:MISOAdminAccess",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/Utils/BoringMath.sol:BoringMath",
          "contracts/Utils/BoringMath.sol:BoringMath128",
          "contracts/Utils/BoringMath.sol:BoringMath64",
          "contracts/Utils/BoringMath.sol:BoringMath32",
          "contracts/Utils/BoringMath.sol:BoringMath16",
          "contracts/UniswapV2/UniswapV2Library.sol:UniswapV2Library"
        ],
        "methods": [
          "(address)",
          "initAuctionLauncher(address,address,address,address,uint256,uint256)",
          "()",
          "depositETH()",
          "depositToken1(uint256)",
          "depositToken2(uint256)",
          "marketConnected()",
          "finalize()",
          "getTokenAmounts()",
          "withdrawLPTokens()",
          "withdrawDeposits()",
          "setWallet(address payable)",
          "cancelLauncher()",
          "createPool()",
          "getToken1Balance()",
          "getToken2Balance()",
          "getLPTokenAddress()",
          "getLPBalance()",
          "init(bytes)",
          "initLauncher(bytes)",
          "getLauncherInitData(address,address,address,address,uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "PostAuctionLauncher",
            "src": "contracts/Liquidity/PostAuctionLauncher.sol:105"
          },
          {
            "kind": "state-variable-immutable",
            "name": "weth",
            "src": "contracts/Liquidity/PostAuctionLauncher.sol:77"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "initAccess",
              "offset": 0,
              "slot": "1",
              "type": "t_bool",
              "contract": "MISOAdminAccess",
              "src": "contracts/Access/MISOAdminAccess.sol:9"
            },
            {
              "label": "_status",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:36"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IERC20)28483",
              "contract": "PostAuctionLauncher",
              "src": "contracts/Liquidity/PostAuctionLauncher.sol:71"
            },
            {
              "label": "token2",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IERC20)28483",
              "contract": "PostAuctionLauncher",
              "src": "contracts/Liquidity/PostAuctionLauncher.sol:73"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_contract(IUniswapV2Factory)25043",
              "contract": "PostAuctionLauncher",
              "src": "contracts/Liquidity/PostAuctionLauncher.sol:75"
            },
            {
              "label": "tokenPair",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "PostAuctionLauncher",
              "src": "contracts/Liquidity/PostAuctionLauncher.sol:81"
            },
            {
              "label": "wallet",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "PostAuctionLauncher",
              "src": "contracts/Liquidity/PostAuctionLauncher.sol:83"
            },
            {
              "label": "market",
              "offset": 0,
              "slot": "8",
              "type": "t_contract(IMisoAuction)28603",
              "contract": "PostAuctionLauncher",
              "src": "contracts/Liquidity/PostAuctionLauncher.sol:85"
            },
            {
              "label": "launcherInfo",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(LauncherInfo)12486_storage",
              "contract": "PostAuctionLauncher",
              "src": "contracts/Liquidity/PostAuctionLauncher.sol:94"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_contract(IERC20)28483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoAuction)28603": {
              "label": "contract IMisoAuction",
              "numberOfBytes": "20"
            },
            "t_contract(IUniswapV2Factory)25043": {
              "label": "contract IUniswapV2Factory",
              "numberOfBytes": "20"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(LauncherInfo)12486_storage": {
              "label": "struct PostAuctionLauncher.LauncherInfo",
              "members": [
                {
                  "label": "locktime",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "unlock",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "liquidityPercent",
                  "type": "t_uint16",
                  "offset": 12,
                  "slot": "0"
                },
                {
                  "label": "launched",
                  "type": "t_bool",
                  "offset": 14,
                  "slot": "0"
                },
                {
                  "label": "liquidityAdded",
                  "type": "t_uint128",
                  "offset": 15,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint16": {
              "label": "uint16",
              "numberOfBytes": "2"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/MISOFarmFactory.sol:MISOFarmFactory": {
        "src": "contracts/MISOFarmFactory.sol:47",
        "version": {
          "withMetadata": "95973e667c8baa24ef85039048dfb67a841d2d4da452fa6df46b01c9c6745ec0",
          "withoutMetadata": "1e20a130582258282e7f7f0edf9481ce3b5d7d41141eb5662ded6c6b198cb60d",
          "linkedWithoutMetadata": "1e20a130582258282e7f7f0edf9481ce3b5d7d41141eb5662ded6c6b198cb60d"
        },
        "inherit": [
          "contracts/Utils/CloneFactory.sol:CloneFactory"
        ],
        "libraries": [],
        "methods": [
          "initMISOFarmFactory(address,address payable,uint256,uint256)",
          "setMinimumFee(uint256)",
          "setIntegratorFeePct(uint256)",
          "setDividends(address payable)",
          "setLocked(bool)",
          "setCurrentTemplateId(uint256,uint256)",
          "hasFarmMinterRole(address)",
          "deployFarm(uint256,address payable)",
          "createFarm(uint256,address payable,bytes)",
          "addFarmTemplate(address)",
          "removeFarmTemplate(uint256)",
          "getFarmTemplate(uint256)",
          "getTemplateId(address)",
          "numberOfFarms()",
          "getFarms()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:50"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:54"
            },
            {
              "label": "locked",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:56"
            },
            {
              "label": "farmInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(Farm)13528_storage)",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:66"
            },
            {
              "label": "farms",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:69"
            },
            {
              "label": "farmTemplateId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:72"
            },
            {
              "label": "farmTemplates",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:75"
            },
            {
              "label": "farmTemplateToId",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:78"
            },
            {
              "label": "currentTemplateId",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:81"
            },
            {
              "label": "minimumFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:84"
            },
            {
              "label": "integratorFeePct",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:85"
            },
            {
              "label": "misoDiv",
              "offset": 0,
              "slot": "9",
              "type": "t_address_payable",
              "contract": "MISOFarmFactory",
              "src": "contracts/MISOFarmFactory.sol:88"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Farm)13528_storage)": {
              "label": "mapping(address => struct MISOFarmFactory.Farm)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Farm)13528_storage": {
              "label": "struct MISOFarmFactory.Farm",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/MISOFermenter.sol:MISOFermenter": {
        "src": "contracts/MISOFermenter.sol:48",
        "version": {
          "withMetadata": "dab62e056efe08b646bbd63845729980c98d076af00b300ea914d33a57aea5c9",
          "withoutMetadata": "c69a4c613d78daaaf9ea5a6f1723582640f66d1f72479c989e1fe57cde92fbe1",
          "linkedWithoutMetadata": "c69a4c613d78daaaf9ea5a6f1723582640f66d1f72479c989e1fe57cde92fbe1"
        },
        "inherit": [
          "contracts/Utils/CloneFactory.sol:CloneFactory"
        ],
        "libraries": [],
        "methods": [
          "initMISOFermenter(address)",
          "setLocked(bool)",
          "hasVaultMinterRole(address)",
          "createEscrow(uint256)",
          "addEscrowTemplate(address)",
          "removeEscrowTemplate(uint256)",
          "getEscrowTemplate(uint256)",
          "getTemplateId(address)",
          "numberOfTokens()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:51"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:55"
            },
            {
              "label": "locked",
              "offset": 21,
              "slot": "0",
              "type": "t_bool",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:57"
            },
            {
              "label": "escrows",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:67"
            },
            {
              "label": "escrowTemplateId",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:70"
            },
            {
              "label": "escrowTemplates",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:73"
            },
            {
              "label": "escrowTemplateToId",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:76"
            },
            {
              "label": "isChildEscrow",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_struct(Fermenter)14174_storage)",
              "contract": "MISOFermenter",
              "src": "contracts/MISOFermenter.sol:79"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Fermenter)14174_storage)": {
              "label": "mapping(address => struct MISOFermenter.Fermenter)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_struct(Fermenter)14174_storage": {
              "label": "struct MISOFermenter.Fermenter",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/MISOLauncher.sol:MISOLauncher": {
        "src": "contracts/MISOLauncher.sol:50",
        "version": {
          "withMetadata": "94682a1ccd31f5d2aab7933e3c2cedf8211025992f7d1e84338ddb28dc31327b",
          "withoutMetadata": "42c8c3d0d760ea6761d1c8933e05e46ff676040ea3bcc32d7335e757a3da19a6",
          "linkedWithoutMetadata": "42c8c3d0d760ea6761d1c8933e05e46ff676040ea3bcc32d7335e757a3da19a6"
        },
        "inherit": [
          "contracts/Utils/SafeTransfer.sol:SafeTransfer"
        ],
        "libraries": [
          "contracts/Utils/BoringMath.sol:BoringMath",
          "contracts/Utils/BoringMath.sol:BoringMath128",
          "contracts/Utils/BoringMath.sol:BoringMath64"
        ],
        "methods": [
          "()",
          "initMISOLauncher(address,address,address)",
          "setMinimumFee(uint256)",
          "setIntegratorFeePct(uint256)",
          "setDividends(address payable)",
          "setLocked(bool)",
          "setCurrentTemplateId(uint256,uint256)",
          "hasLauncherMinterRole(address)",
          "deployLauncher(uint256,address payable)",
          "createLauncher(uint256,address,uint256,address payable,bytes)",
          "addLiquidityLauncherTemplate(address)",
          "removeLiquidityLauncherTemplate(uint256)",
          "getLiquidityLauncherTemplate(uint256)",
          "getTemplateId(address)",
          "numberOfLiquidityLauncherContracts()",
          "minimumFee()",
          "getLauncherTemplateId(address)",
          "getLaunchers()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:57"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:61"
            },
            {
              "label": "launchers",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:71"
            },
            {
              "label": "launcherTemplateId",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:74"
            },
            {
              "label": "WETH",
              "offset": 0,
              "slot": "3",
              "type": "t_address",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:77"
            },
            {
              "label": "bentoBox",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IBentoBoxFactory)28402",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:78"
            },
            {
              "label": "launcherTemplates",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:81"
            },
            {
              "label": "launcherTemplateToId",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:84"
            },
            {
              "label": "currentTemplateId",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:87"
            },
            {
              "label": "launcherInfo",
              "offset": 0,
              "slot": "8",
              "type": "t_mapping(t_address,t_struct(Launcher)14537_storage)",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:90"
            },
            {
              "label": "launcherFees",
              "offset": 0,
              "slot": "9",
              "type": "t_struct(LauncherFees)14573_storage",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:99"
            },
            {
              "label": "locked",
              "offset": 0,
              "slot": "10",
              "type": "t_bool",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:102"
            },
            {
              "label": "misoDiv",
              "offset": 1,
              "slot": "10",
              "type": "t_address_payable",
              "contract": "MISOLauncher",
              "src": "contracts/MISOLauncher.sol:105"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBentoBoxFactory)28402": {
              "label": "contract IBentoBoxFactory",
              "numberOfBytes": "20"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Launcher)14537_storage)": {
              "label": "mapping(address => struct MISOLauncher.Launcher)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Launcher)14537_storage": {
              "label": "struct MISOLauncher.Launcher",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_uint64",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint128",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(LauncherFees)14573_storage": {
              "label": "struct MISOLauncher.LauncherFees",
              "members": [
                {
                  "label": "minimumFee",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "integratorFeePct",
                  "type": "t_uint32",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/MISOMarket.sol:MISOMarket": {
        "src": "contracts/MISOMarket.sol:50",
        "version": {
          "withMetadata": "1b4e18b571a5e176a5a1912c44d22a51f0537f7fdeb9a8093a3af4b368fb17f2",
          "withoutMetadata": "cfe06aaa1373a8ad3391159401ed5072aa39eb511aae1f8849e4e526926377df",
          "linkedWithoutMetadata": "cfe06aaa1373a8ad3391159401ed5072aa39eb511aae1f8849e4e526926377df"
        },
        "inherit": [
          "contracts/Utils/SafeTransfer.sol:SafeTransfer"
        ],
        "libraries": [
          "contracts/Utils/BoringMath.sol:BoringMath",
          "contracts/Utils/BoringMath.sol:BoringMath128",
          "contracts/Utils/BoringMath.sol:BoringMath64"
        ],
        "methods": [
          "()",
          "initMISOMarket(address,address,address[])",
          "setMinimumFee(uint256)",
          "setLocked(bool)",
          "setIntegratorFeePct(uint256)",
          "setDividends(address payable)",
          "setCurrentTemplateId(uint256,uint256)",
          "hasMarketMinterRole(address)",
          "deployMarket(uint256,address payable)",
          "createMarket(uint256,address,uint256,address payable,bytes)",
          "addAuctionTemplate(address)",
          "removeAuctionTemplate(uint256)",
          "getAuctionTemplate(uint256)",
          "getTemplateId(address)",
          "numberOfAuctions()",
          "minimumFee()",
          "getMarkets()",
          "getMarketTemplateId(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:57"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:61"
            },
            {
              "label": "auctions",
              "offset": 0,
              "slot": "1",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:71"
            },
            {
              "label": "auctionTemplateId",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:74"
            },
            {
              "label": "bentoBox",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IBentoBoxFactory)28402",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:76"
            },
            {
              "label": "auctionTemplates",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:79"
            },
            {
              "label": "auctionTemplateToId",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:82"
            },
            {
              "label": "currentTemplateId",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:85"
            },
            {
              "label": "auctionInfo",
              "offset": 0,
              "slot": "7",
              "type": "t_mapping(t_address,t_struct(Auction)15327_storage)",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:88"
            },
            {
              "label": "marketFees",
              "offset": 0,
              "slot": "8",
              "type": "t_struct(MarketFees)15360_storage",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:97"
            },
            {
              "label": "locked",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:100"
            },
            {
              "label": "misoDiv",
              "offset": 1,
              "slot": "9",
              "type": "t_address_payable",
              "contract": "MISOMarket",
              "src": "contracts/MISOMarket.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IBentoBoxFactory)28402": {
              "label": "contract IBentoBoxFactory",
              "numberOfBytes": "20"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Auction)15327_storage)": {
              "label": "mapping(address => struct MISOMarket.Auction)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Auction)15327_storage": {
              "label": "struct MISOMarket.Auction",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_uint64",
                  "offset": 1,
                  "slot": "0"
                },
                {
                  "label": "index",
                  "type": "t_uint128",
                  "offset": 9,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_struct(MarketFees)15360_storage": {
              "label": "struct MISOMarket.MarketFees",
              "members": [
                {
                  "label": "minimumFee",
                  "type": "t_uint128",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "integratorFeePct",
                  "type": "t_uint32",
                  "offset": 16,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "32"
            },
            "t_uint128": {
              "label": "uint128",
              "numberOfBytes": "16"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/MISOTokenFactory.sol:MISOTokenFactory": {
        "src": "contracts/MISOTokenFactory.sol:49",
        "version": {
          "withMetadata": "90e7d3e067e83b8818678654e291a97af5e350fe847bf0991e65b64d44855e3e",
          "withoutMetadata": "78e58d5acc85279a6f64d354deb86098e89140161236273451abffaadc1814b4",
          "linkedWithoutMetadata": "78e58d5acc85279a6f64d354deb86098e89140161236273451abffaadc1814b4"
        },
        "inherit": [
          "contracts/Utils/SafeTransfer.sol:SafeTransfer",
          "contracts/Utils/CloneFactory.sol:CloneFactory"
        ],
        "libraries": [],
        "methods": [
          "()",
          "initMISOTokenFactory(address)",
          "setMinimumFee(uint256)",
          "setIntegratorFeePct(uint256)",
          "setDividends(address payable)",
          "setLocked(bool)",
          "setCurrentTemplateId(uint256,uint256)",
          "hasTokenMinterRole(address)",
          "deployToken(uint256,address payable)",
          "createToken(uint256,address payable,bytes)",
          "addTokenTemplate(address)",
          "removeTokenTemplate(uint256)",
          "numberOfTokens()",
          "getTokens()",
          "getTokenTemplate(uint256)",
          "getTemplateId(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:52"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:56"
            },
            {
              "label": "tokenInfo",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_struct(Token)16164_storage)",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:66"
            },
            {
              "label": "tokens",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_address)dyn_storage",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:69"
            },
            {
              "label": "tokenTemplateId",
              "offset": 0,
              "slot": "3",
              "type": "t_uint256",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:72"
            },
            {
              "label": "tokenTemplates",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_uint256,t_address)",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:75"
            },
            {
              "label": "tokenTemplateToId",
              "offset": 0,
              "slot": "5",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:78"
            },
            {
              "label": "currentTemplateId",
              "offset": 0,
              "slot": "6",
              "type": "t_mapping(t_uint256,t_uint256)",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:81"
            },
            {
              "label": "minimumFee",
              "offset": 0,
              "slot": "7",
              "type": "t_uint256",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:84"
            },
            {
              "label": "integratorFeePct",
              "offset": 0,
              "slot": "8",
              "type": "t_uint256",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:85"
            },
            {
              "label": "locked",
              "offset": 0,
              "slot": "9",
              "type": "t_bool",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:88"
            },
            {
              "label": "misoDiv",
              "offset": 1,
              "slot": "9",
              "type": "t_address_payable",
              "contract": "MISOTokenFactory",
              "src": "contracts/MISOTokenFactory.sol:91"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_address_payable": {
              "label": "address payable",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_struct(Token)16164_storage)": {
              "label": "mapping(address => struct MISOTokenFactory.Token)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_address)": {
              "label": "mapping(uint256 => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_uint256)": {
              "label": "mapping(uint256 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(Token)16164_storage": {
              "label": "struct MISOTokenFactory.Token",
              "members": [
                {
                  "label": "exists",
                  "type": "t_bool",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "templateId",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "index",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl": {
        "src": "contracts/OpenZeppelin/access/AccessControl.sol:41",
        "inherit": [
          "contracts/OpenZeppelin/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/OpenZeppelin/utils/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "hasRole(bytes32,address)",
          "getRoleMemberCount(bytes32)",
          "getRoleMember(bytes32,uint256)",
          "getRoleAdmin(bytes32)",
          "grantRole(bytes32,address)",
          "revokeRole(bytes32,address)",
          "renounceRole(bytes32,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/access/Ownable.sol:Ownable": {
        "src": "contracts/OpenZeppelin/access/Ownable.sol:18",
        "inherit": [
          "contracts/OpenZeppelin/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "owner()",
          "renounceOwnership()",
          "transferOwnership(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Ownable",
            "src": "contracts/OpenZeppelin/access/Ownable.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Ownable",
              "src": "contracts/OpenZeppelin/access/Ownable.sol:19"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/access/TimelockController.sol:TimelockController": {
        "src": "contracts/OpenZeppelin/access/TimelockController.sol:24",
        "version": {
          "withMetadata": "65a35a2cf1109bc4b8a804a0ecf991280958345ca19cf711ea09f95b88dd405f",
          "withoutMetadata": "65a35a2cf1109bc4b8a804a0ecf991280958345ca19cf711ea09f95b88dd405f",
          "linkedWithoutMetadata": "65a35a2cf1109bc4b8a804a0ecf991280958345ca19cf711ea09f95b88dd405f"
        },
        "inherit": [
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context"
        ],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(uint256,address[],address[])",
          "()",
          "isOperation(bytes32)",
          "isOperationPending(bytes32)",
          "isOperationReady(bytes32)",
          "isOperationDone(bytes32)",
          "getTimestamp(bytes32)",
          "getMinDelay()",
          "hashOperation(address,uint256,bytes,bytes32,bytes32)",
          "hashOperationBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "schedule(address,uint256,bytes,bytes32,bytes32,uint256)",
          "scheduleBatch(address[],uint256[],bytes[],bytes32,bytes32,uint256)",
          "cancel(bytes32)",
          "execute(address,uint256,bytes,bytes32,bytes32)",
          "executeBatch(address[],uint256[],bytes[],bytes32,bytes32)",
          "updateDelay(uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TimelockController",
            "src": "contracts/OpenZeppelin/access/TimelockController.sol:57"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "_timestamps",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_bytes32,t_uint256)",
              "contract": "TimelockController",
              "src": "contracts/OpenZeppelin/access/TimelockController.sol:31"
            },
            {
              "label": "_minDelay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TimelockController",
              "src": "contracts/OpenZeppelin/access/TimelockController.sol:32"
            }
          ],
          "types": {
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath": {
        "src": "contracts/OpenZeppelin/math/SafeMath.sol:18",
        "version": {
          "withMetadata": "4fd2a56e45fb19ad710d798c77293ac5b6eebc609537f60c5d58f0efda80df22",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/token/ERC20/SafeERC20.sol:SafeERC20": {
        "src": "contracts/OpenZeppelin/token/ERC20/SafeERC20.sol:18",
        "version": {
          "withMetadata": "2ea493f69a652826b354dff9b944c4782deaa996fb824b0ba56780e02bf49ebc",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath",
          "contracts/OpenZeppelin/utils/Address.sol:Address"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol:TokenTimelock": {
        "src": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol:14",
        "version": {
          "withMetadata": "8f6359462038604051e6660f3887550bf27319c67c98dec5badf7f241cf9a5c3",
          "withoutMetadata": "8f6359462038604051e6660f3887550bf27319c67c98dec5badf7f241cf9a5c3",
          "linkedWithoutMetadata": "8f6359462038604051e6660f3887550bf27319c67c98dec5badf7f241cf9a5c3"
        },
        "inherit": [],
        "libraries": [
          "contracts/OpenZeppelin/token/ERC20/SafeERC20.sol:SafeERC20"
        ],
        "methods": [
          "(address,address,uint256)",
          "token()",
          "beneficiary()",
          "releaseTime()",
          "release()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "TokenTimelock",
            "src": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol:26"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_token",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IERC20)28483",
              "contract": "TokenTimelock",
              "src": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol:18"
            },
            {
              "label": "_beneficiary",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "TokenTimelock",
              "src": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol:21"
            },
            {
              "label": "_releaseTime",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "TokenTimelock",
              "src": "contracts/OpenZeppelin/token/ERC20/TokenTimelock.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IERC20)28483": {
              "label": "contract IERC20",
              "numberOfBytes": "20"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/utils/Address.sol:Address": {
        "src": "contracts/OpenZeppelin/utils/Address.sol:7",
        "version": {
          "withMetadata": "7d32f473c512a2c0ae9dddb2e7dd97d17eeea5dc5e0107120be70ebb521101eb",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/OpenZeppelin/utils/Address.sol:166"
          },
          {
            "kind": "delegatecall",
            "src": "contracts/OpenZeppelin/utils/Address.sol:166"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/utils/Context.sol:Context": {
        "src": "contracts/OpenZeppelin/utils/Context.sol:15",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/utils/Counters.sol:Counters": {
        "src": "contracts/OpenZeppelin/utils/Counters.sol:18",
        "version": {
          "withMetadata": "f81dd8a16397f18ac494b737b0900f0fd13580b80edd87a0cdb949843829eef0",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/utils/EnumerableSet.sol:EnumerableSet": {
        "src": "contracts/OpenZeppelin/utils/EnumerableSet.sol:28",
        "version": {
          "withMetadata": "68053640d92739d42729b31233d95ef477c0dbc086e74dd161ee6dc0aa35937b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/utils/Pausable.sol:Pausable": {
        "src": "contracts/OpenZeppelin/utils/Pausable.sol:16",
        "inherit": [
          "contracts/OpenZeppelin/utils/Context.sol:Context"
        ],
        "libraries": [],
        "methods": [
          "paused()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Pausable",
            "src": "contracts/OpenZeppelin/utils/Pausable.sol:32"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_paused",
              "offset": 0,
              "slot": "0",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/OpenZeppelin/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:ReentrancyGuard": {
        "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:21",
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "ReentrancyGuard",
            "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:38"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "_status",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "ReentrancyGuard",
              "src": "contracts/OpenZeppelin/utils/ReentrancyGuard.sol:36"
            }
          ],
          "types": {
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Recipes/MISORecipe01.sol:IMISOFarmFactory": {
        "src": "contracts/Recipes/MISORecipe01.sol:53",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createFarm(address,uint256,uint256,address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Recipes/MISORecipe01.sol:IMISOMarket": {
        "src": "contracts/Recipes/MISORecipe01.sol:22",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createCrowdsale(address,uint256,address,uint256,uint256,uint256,uint256,address,address payable,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Recipes/MISORecipe01.sol:IMISOTokenFactory": {
        "src": "contracts/Recipes/MISORecipe01.sol:12",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createToken(string,string,uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Recipes/MISORecipe01.sol:IMasterChef": {
        "src": "contracts/Recipes/MISORecipe01.sol:64",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initFarm(address,uint256,uint256,address,address)",
          "addToken(uint256,address,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Recipes/MISORecipe01.sol:IPoolLiquidity": {
        "src": "contracts/Recipes/MISORecipe01.sol:38",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initPoolLiquidity(address,address,address,address,address,address,uint256,uint256,uint256)",
          "getLPTokenAddress()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Recipes/MISORecipe01.sol:MISORecipe01": {
        "src": "contracts/Recipes/MISORecipe01.sol:75",
        "version": {
          "withMetadata": "7b00711deb3a7afaafa02b38948afb356abd44879089bccd1c239892c1a09b55",
          "withoutMetadata": "c89008d1f1997f9c7be3b38f5b71efe6db34d0b1c942ee020f80d90affb83140",
          "linkedWithoutMetadata": "c89008d1f1997f9c7be3b38f5b71efe6db34d0b1c942ee020f80d90affb83140"
        },
        "inherit": [],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,address,address,address,address,address)",
          "prepareMiso(string,string,address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "MISORecipe01",
            "src": "contracts/Recipes/MISORecipe01.sol:96"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "tokenFactory",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(IMISOTokenFactory)19699",
              "contract": "MISORecipe01",
              "src": "contracts/Recipes/MISORecipe01.sol:79"
            },
            {
              "label": "misoMarket",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IMISOMarket)19725",
              "contract": "MISORecipe01",
              "src": "contracts/Recipes/MISORecipe01.sol:80"
            },
            {
              "label": "weth",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(IWETH)28948",
              "contract": "MISORecipe01",
              "src": "contracts/Recipes/MISORecipe01.sol:81"
            },
            {
              "label": "misoLauncher",
              "offset": 0,
              "slot": "3",
              "type": "t_contract(IMisoLauncher)28667",
              "contract": "MISORecipe01",
              "src": "contracts/Recipes/MISORecipe01.sol:82"
            },
            {
              "label": "farmFactory",
              "offset": 0,
              "slot": "4",
              "type": "t_contract(IMISOFarmFactory)19770",
              "contract": "MISORecipe01",
              "src": "contracts/Recipes/MISORecipe01.sol:83"
            },
            {
              "label": "uniswapFactory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "MISORecipe01",
              "src": "contracts/Recipes/MISORecipe01.sol:85"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_contract(IMISOFarmFactory)19770": {
              "label": "contract IMISOFarmFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMISOMarket)19725": {
              "label": "contract IMISOMarket",
              "numberOfBytes": "20"
            },
            "t_contract(IMISOTokenFactory)19699": {
              "label": "contract IMISOTokenFactory",
              "numberOfBytes": "20"
            },
            "t_contract(IMisoLauncher)28667": {
              "label": "contract IMisoLauncher",
              "numberOfBytes": "20"
            },
            "t_contract(IWETH)28948": {
              "label": "contract IWETH",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Tokens/ERC20.sol:ERC20": {
        "src": "contracts/Tokens/ERC20.sol:32",
        "version": {
          "withMetadata": "54d3231f46e29b5b74a0f4fb3425d9d92cbb63c48c3fcb00fce5bcf7c9fb8f8d",
          "withoutMetadata": "d42df9f7f8b65b1cb680837db8d1cb309b7bf07e52511e343d19fd846f8b196b",
          "linkedWithoutMetadata": "d42df9f7f8b65b1cb680837db8d1cb309b7bf07e52511e343d19fd846f8b196b"
        },
        "inherit": [
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:34"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:36"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:44"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "7",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:45"
            },
            {
              "label": "_initialized",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Tokens/ERC20/ERC20Burnable.sol:ERC20Burnable": {
        "src": "contracts/Tokens/ERC20/ERC20Burnable.sol:12",
        "inherit": [
          "contracts/Tokens/ERC20.sol:ERC20",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "burn(uint256)",
          "burnFrom(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:34"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:36"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:44"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "7",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:45"
            },
            {
              "label": "_initialized",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Tokens/ERC20/ERC20Pausable.sol:ERC20Pausable": {
        "src": "contracts/Tokens/ERC20/ERC20Pausable.sol:15",
        "inherit": [
          "contracts/OpenZeppelin/utils/Pausable.sol:Pausable",
          "contracts/Tokens/ERC20.sol:ERC20",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:34"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:36"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:44"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "7",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:45"
            },
            {
              "label": "_initialized",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:46"
            },
            {
              "label": "_paused",
              "offset": 2,
              "slot": "7",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/OpenZeppelin/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Tokens/FixedToken.sol:FixedToken": {
        "src": "contracts/Tokens/FixedToken.sol:19",
        "version": {
          "withMetadata": "9ab16cb405edad8761238fbaeaf60bb77ec41c48c45c5853a5ce6a10fc693cc9",
          "withoutMetadata": "c6cf8cf61472d850fbaab47616601303e53f30133c70486f146d13851785c96f",
          "linkedWithoutMetadata": "c6cf8cf61472d850fbaab47616601303e53f30133c70486f146d13851785c96f"
        },
        "inherit": [
          "contracts/interfaces/IMisoToken.sol:IMisoToken",
          "contracts/Tokens/ERC20.sol:ERC20",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initToken(string,string,address,uint256)",
          "init(bytes)",
          "initToken(bytes)",
          "getInitData(string,string,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:34"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:36"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:44"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "7",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:45"
            },
            {
              "label": "_initialized",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:46"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Tokens/MintableToken.sol:MintableToken": {
        "src": "contracts/Tokens/MintableToken.sol:21",
        "version": {
          "withMetadata": "3d4052bded526bdb5c53d190e0fd4d642149819960ec61b17e000a0938ff39ae",
          "withoutMetadata": "bceb0cf1c16055bb4fd76063f23b5ea670cbe10c13ad80cc91145b4928f8c3dd",
          "linkedWithoutMetadata": "bceb0cf1c16055bb4fd76063f23b5ea670cbe10c13ad80cc91145b4928f8c3dd"
        },
        "inherit": [
          "contracts/interfaces/IMisoToken.sol:IMisoToken",
          "contracts/Tokens/ERC20/ERC20Pausable.sol:ERC20Pausable",
          "contracts/OpenZeppelin/utils/Pausable.sol:Pausable",
          "contracts/Tokens/ERC20/ERC20Burnable.sol:ERC20Burnable",
          "contracts/Tokens/ERC20.sol:ERC20",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "initToken(string,string,address,uint256)",
          "init(bytes)",
          "initToken(bytes)",
          "getInitData(string,string,address,uint256)",
          "mint(address,uint256)",
          "pause()",
          "unpause()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:34"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:36"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:44"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "8",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:45"
            },
            {
              "label": "_initialized",
              "offset": 1,
              "slot": "8",
              "type": "t_bool",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:46"
            },
            {
              "label": "_paused",
              "offset": 2,
              "slot": "8",
              "type": "t_bool",
              "contract": "Pausable",
              "src": "contracts/OpenZeppelin/utils/Pausable.sol:27"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Tokens/SushiToken.sol:SushiToken": {
        "src": "contracts/Tokens/SushiToken.sol:21",
        "version": {
          "withMetadata": "5437fe831091281dbfecfd2484933ecf0688a45960f560174ffbb0059ceee8f9",
          "withoutMetadata": "d34937177befc4032bf78a05f76dd4801757d027490713c7b24b0dd79882a80e",
          "linkedWithoutMetadata": "d34937177befc4032bf78a05f76dd4801757d027490713c7b24b0dd79882a80e"
        },
        "inherit": [
          "contracts/Tokens/ERC20.sol:ERC20",
          "contracts/OpenZeppelin/access/AccessControl.sol:AccessControl",
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IERC20.sol:IERC20",
          "contracts/interfaces/IMisoToken.sol:IMisoToken"
        ],
        "libraries": [],
        "methods": [
          "initToken(string,string,address,uint256)",
          "init(bytes)",
          "initToken(bytes)",
          "getInitData(string,string,address,uint256)",
          "mint(address,uint256)",
          "delegates(address)",
          "delegate(address)",
          "delegateBySig(address,uint256,uint256,uint8,bytes32,bytes32)",
          "getCurrentVotes(address)",
          "getPriorVotes(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_roles",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)",
              "contract": "AccessControl",
              "src": "contracts/OpenZeppelin/access/AccessControl.sol:49"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "1",
              "type": "t_bytes32",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:34"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:36"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:37"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:39"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "5",
              "type": "t_uint256",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:41"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:43"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "7",
              "type": "t_string_storage",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:44"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "8",
              "type": "t_uint8",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:45"
            },
            {
              "label": "_initialized",
              "offset": 1,
              "slot": "8",
              "type": "t_bool",
              "contract": "ERC20",
              "src": "contracts/Tokens/ERC20.sol:46"
            },
            {
              "label": "_delegates",
              "offset": 0,
              "slot": "9",
              "type": "t_mapping(t_address,t_address)",
              "contract": "SushiToken",
              "src": "contracts/Tokens/SushiToken.sol:82"
            },
            {
              "label": "checkpoints",
              "offset": 0,
              "slot": "10",
              "type": "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)21307_storage))",
              "contract": "SushiToken",
              "src": "contracts/Tokens/SushiToken.sol:91"
            },
            {
              "label": "numCheckpoints",
              "offset": 0,
              "slot": "11",
              "type": "t_mapping(t_address,t_uint32)",
              "contract": "SushiToken",
              "src": "contracts/Tokens/SushiToken.sol:94"
            },
            {
              "label": "sigNonces",
              "offset": 0,
              "slot": "12",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "SushiToken",
              "src": "contracts/Tokens/SushiToken.sol:103"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_uint32,t_struct(Checkpoint)21307_storage))": {
              "label": "mapping(address => mapping(uint32 => struct SushiToken.Checkpoint))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint32)": {
              "label": "mapping(address => uint32)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_struct(RoleData)16860_storage)": {
              "label": "mapping(bytes32 => struct AccessControl.RoleData)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint32,t_struct(Checkpoint)21307_storage)": {
              "label": "mapping(uint32 => struct SushiToken.Checkpoint)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Checkpoint)21307_storage": {
              "label": "struct SushiToken.Checkpoint",
              "members": [
                {
                  "label": "fromBlock",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "votes",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(RoleData)16860_storage": {
              "label": "struct AccessControl.RoleData",
              "members": [
                {
                  "label": "members",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "adminRole",
                  "type": "t_bytes32",
                  "offset": 0,
                  "slot": "2"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Tokens/USDC.sol:USDC": {
        "src": "contracts/Tokens/USDC.sol:33",
        "version": {
          "withMetadata": "82cfac4fa5da6f77a984b62f0a65511e7da10b374dce81956f4d67671f08c282",
          "withoutMetadata": "d0f7007dd9b9643d5f275a55660b763ca90004da51717881072ddcfc8cbe341d",
          "linkedWithoutMetadata": "d0f7007dd9b9643d5f275a55660b763ca90004da51717881072ddcfc8cbe341d"
        },
        "inherit": [
          "contracts/OpenZeppelin/utils/Context.sol:Context",
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath",
          "contracts/OpenZeppelin/utils/Address.sol:Address"
        ],
        "methods": [
          "initToken(string,string,address,uint256)",
          "init(bytes)",
          "initToken(bytes)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "transferFrom(address,address,uint256)",
          "increaseAllowance(address,uint256)",
          "decreaseAllowance(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "0",
              "type": "t_bytes32",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:36"
            },
            {
              "label": "_balances",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:38"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:39"
            },
            {
              "label": "_allowances",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:41"
            },
            {
              "label": "_totalSupply",
              "offset": 0,
              "slot": "4",
              "type": "t_uint256",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:43"
            },
            {
              "label": "_name",
              "offset": 0,
              "slot": "5",
              "type": "t_string_storage",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:45"
            },
            {
              "label": "_symbol",
              "offset": 0,
              "slot": "6",
              "type": "t_string_storage",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:46"
            },
            {
              "label": "_decimals",
              "offset": 0,
              "slot": "7",
              "type": "t_uint8",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:47"
            },
            {
              "label": "_initialized",
              "offset": 1,
              "slot": "7",
              "type": "t_bool",
              "contract": "USDC",
              "src": "contracts/Tokens/USDC.sol:48"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/UniswapV2ERC20.sol:UniswapV2ERC20": {
        "src": "contracts/UniswapV2/UniswapV2ERC20.sol:5",
        "version": {
          "withMetadata": "315476e5be44f2e82cfc7c41d87d60060c8ae49290142dad6b8081252295b8ca",
          "withoutMetadata": "9fd692993ff71103f36a7e7da4c754a025dd70856e7af10af111690363ea62bf",
          "linkedWithoutMetadata": "9fd692993ff71103f36a7e7da4c754a025dd70856e7af10af111690363ea62bf"
        },
        "inherit": [],
        "libraries": [
          "contracts/UniswapV2/libraries/SafeMath.sol:SafeMathUniswap"
        ],
        "methods": [
          "()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV2ERC20",
            "src": "contracts/UniswapV2/UniswapV2ERC20.sol:23"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:11"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:12"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:13"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:15"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:18"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/UniswapV2Factory.sol:UniswapV2Factory": {
        "src": "contracts/UniswapV2/UniswapV2Factory.sol:6",
        "version": {
          "withMetadata": "437cf51d3ef57e0d0a85cc8b5849fe8e196c1877fff86e32e153ad79266f6ccd",
          "withoutMetadata": "956baacc1269bce2bc284fce7d0670c671749cd73c80e68fdbd84cc3be13fbea",
          "linkedWithoutMetadata": "956baacc1269bce2bc284fce7d0670c671749cd73c80e68fdbd84cc3be13fbea"
        },
        "inherit": [
          "contracts/UniswapV2/interfaces/IUniswapV2Factory.sol:IUniswapV2Factory"
        ],
        "libraries": [],
        "methods": [
          "(address)",
          "allPairsLength()",
          "pairCodeHash()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setMigrator(address)",
          "setFeeToSetter(address)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV2Factory",
            "src": "contracts/UniswapV2/UniswapV2Factory.sol:16"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "feeTo",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "UniswapV2Factory",
              "src": "contracts/UniswapV2/UniswapV2Factory.sol:7"
            },
            {
              "label": "feeToSetter",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "UniswapV2Factory",
              "src": "contracts/UniswapV2/UniswapV2Factory.sol:8"
            },
            {
              "label": "migrator",
              "offset": 0,
              "slot": "2",
              "type": "t_address",
              "contract": "UniswapV2Factory",
              "src": "contracts/UniswapV2/UniswapV2Factory.sol:9"
            },
            {
              "label": "getPair",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_mapping(t_address,t_address))",
              "contract": "UniswapV2Factory",
              "src": "contracts/UniswapV2/UniswapV2Factory.sol:11"
            },
            {
              "label": "allPairs",
              "offset": 0,
              "slot": "4",
              "type": "t_array(t_address)dyn_storage",
              "contract": "UniswapV2Factory",
              "src": "contracts/UniswapV2/UniswapV2Factory.sol:12"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
              "label": "address[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_address))": {
              "label": "mapping(address => mapping(address => address))",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/UniswapV2Library.sol:UniswapV2Library": {
        "src": "contracts/UniswapV2/UniswapV2Library.sol:7",
        "version": {
          "withMetadata": "f93c34d5696f8c57b4c8f36d5d47deabfb69126910ee1c4868ef6fd671305eff",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/UniswapV2/libraries/SafeMath.sol:SafeMathUniswap"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/UniswapV2Pair.sol:IMigrator": {
        "src": "contracts/UniswapV2/UniswapV2Pair.sol:11",
        "inherit": [],
        "libraries": [],
        "methods": [
          "desiredLiquidity()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/UniswapV2Pair.sol:UniswapV2Pair": {
        "src": "contracts/UniswapV2/UniswapV2Pair.sol:16",
        "version": {
          "withMetadata": "901651c851bbb4455e226bfd9bc8a8f6b5ce3ded12f349f993faa3c25e7c9d76",
          "withoutMetadata": "06ef370fb7137e351b73299644079ab6b040991de81004ce6b0877f754395f6e",
          "linkedWithoutMetadata": "06ef370fb7137e351b73299644079ab6b040991de81004ce6b0877f754395f6e"
        },
        "inherit": [
          "contracts/UniswapV2/UniswapV2ERC20.sol:UniswapV2ERC20"
        ],
        "libraries": [
          "contracts/UniswapV2/libraries/SafeMath.sol:SafeMathUniswap",
          "contracts/UniswapV2/libraries/UQ112x112.sol:UQ112x112",
          "contracts/UniswapV2/libraries/Math.sol:MathUniswap"
        ],
        "methods": [
          "getReserves()",
          "()",
          "initialize(address,address)",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "UniswapV2Pair",
            "src": "contracts/UniswapV2/UniswapV2Pair.sol:66"
          },
          {
            "kind": "state-variable-assignment",
            "name": "unlocked",
            "src": "contracts/UniswapV2/UniswapV2Pair.sol:35"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "totalSupply",
              "offset": 0,
              "slot": "0",
              "type": "t_uint256",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:11"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:12"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "2",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:13"
            },
            {
              "label": "DOMAIN_SEPARATOR",
              "offset": 0,
              "slot": "3",
              "type": "t_bytes32",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:15"
            },
            {
              "label": "nonces",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "UniswapV2ERC20",
              "src": "contracts/UniswapV2/UniswapV2ERC20.sol:18"
            },
            {
              "label": "factory",
              "offset": 0,
              "slot": "5",
              "type": "t_address",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:23"
            },
            {
              "label": "token0",
              "offset": 0,
              "slot": "6",
              "type": "t_address",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:24"
            },
            {
              "label": "token1",
              "offset": 0,
              "slot": "7",
              "type": "t_address",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:25"
            },
            {
              "label": "reserve0",
              "offset": 0,
              "slot": "8",
              "type": "t_uint112",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:27"
            },
            {
              "label": "reserve1",
              "offset": 14,
              "slot": "8",
              "type": "t_uint112",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:28"
            },
            {
              "label": "blockTimestampLast",
              "offset": 28,
              "slot": "8",
              "type": "t_uint32",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:29"
            },
            {
              "label": "price0CumulativeLast",
              "offset": 0,
              "slot": "9",
              "type": "t_uint256",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:31"
            },
            {
              "label": "price1CumulativeLast",
              "offset": 0,
              "slot": "10",
              "type": "t_uint256",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:32"
            },
            {
              "label": "kLast",
              "offset": 0,
              "slot": "11",
              "type": "t_uint256",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:33"
            },
            {
              "label": "unlocked",
              "offset": 0,
              "slot": "12",
              "type": "t_uint256",
              "contract": "UniswapV2Pair",
              "src": "contracts/UniswapV2/UniswapV2Pair.sol:35"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_uint112": {
              "label": "uint112",
              "numberOfBytes": "14"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/interfaces/IERC20.sol:IERC20Uniswap": {
        "src": "contracts/UniswapV2/interfaces/IERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/interfaces/IUniswapV2Callee.sol:IUniswapV2Callee": {
        "src": "contracts/UniswapV2/interfaces/IUniswapV2Callee.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "uniswapV2Call(address,uint256,uint256,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/interfaces/IUniswapV2Factory.sol:IUniswapV2Factory": {
        "src": "contracts/UniswapV2/interfaces/IUniswapV2Factory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "feeTo()",
          "feeToSetter()",
          "migrator()",
          "getPair(address,address)",
          "allPairs(uint256)",
          "allPairsLength()",
          "pairCodeHash()",
          "createPair(address,address)",
          "setFeeTo(address)",
          "setFeeToSetter(address)",
          "setMigrator(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/interfaces/IUniswapV2Pair.sol:IUniswapV2Pair": {
        "src": "contracts/UniswapV2/interfaces/IUniswapV2Pair.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)",
          "MINIMUM_LIQUIDITY()",
          "factory()",
          "token0()",
          "token1()",
          "getReserves()",
          "price0CumulativeLast()",
          "price1CumulativeLast()",
          "kLast()",
          "mint(address)",
          "burn(address)",
          "swap(uint256,uint256,address,bytes)",
          "skim(address)",
          "sync()",
          "initialize(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/libraries/Math.sol:MathUniswap": {
        "src": "contracts/UniswapV2/libraries/Math.sol:5",
        "version": {
          "withMetadata": "587b496ea2fa5dd1c9b308d127dfca654cc8d55d1ab091db0534b673a7d0f0ed",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/libraries/SafeMath.sol:SafeMathUniswap": {
        "src": "contracts/UniswapV2/libraries/SafeMath.sol:5",
        "version": {
          "withMetadata": "b213133c9a57d4c4d3110c0545a8d29dcbf9395266a4a9e9abf6bff7739a5982",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/libraries/UQ112x112.sol:UQ112x112": {
        "src": "contracts/UniswapV2/libraries/UQ112x112.sol:8",
        "version": {
          "withMetadata": "8164cb69dd6a584ba952ffdff8449aab7129d8ce69f5398cfc88d59914431845",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringBatchable.sol:BaseBoringBatchable": {
        "src": "contracts/Utils/BoringBatchable.sol:12",
        "version": {
          "withMetadata": "66ed5786f0b428445bc25733de7f476bca86f1fe4c5722a7c34411fe52d13d11",
          "withoutMetadata": "ff6b999f1d07a3b922410d05661c149ced4e06775f62284a159049d4a5f4c358",
          "linkedWithoutMetadata": "ff6b999f1d07a3b922410d05661c149ced4e06775f62284a159049d4a5f4c358"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "batch(bytes[],bool)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Utils/BoringBatchable.sol:39"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringBatchable.sol:BoringBatchable": {
        "src": "contracts/Utils/BoringBatchable.sol:47",
        "version": {
          "withMetadata": "c8bf01428515e0275149ff2981f12d70fa7971f65fb978a1550a65cd5e6182f4",
          "withoutMetadata": "c705d1b8ad607ffe2d4077447b63689083c6e871987907f6eb97d8e1b26e6d67",
          "linkedWithoutMetadata": "c705d1b8ad607ffe2d4077447b63689083c6e871987907f6eb97d8e1b26e6d67"
        },
        "inherit": [
          "contracts/Utils/BoringBatchable.sol:BaseBoringBatchable"
        ],
        "libraries": [],
        "methods": [
          "permitToken(address,address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "delegatecall",
            "src": "contracts/Utils/BoringBatchable.sol:39"
          }
        ],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringERC20.sol:BoringERC20": {
        "src": "contracts/Utils/BoringERC20.sol:6",
        "version": {
          "withMetadata": "a8df9be6a404162a25cdf46c65547185f227977c6a1eee1d69ae620f1028d784",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringMath.sol:BoringMath": {
        "src": "contracts/Utils/BoringMath.sol:6",
        "version": {
          "withMetadata": "75eba4bb91570a8f868fc89abd0c247a166ae707d77284176f5264de6ce892f8",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringMath.sol:BoringMath128": {
        "src": "contracts/Utils/BoringMath.sol:47",
        "version": {
          "withMetadata": "95b5bef2fc73ed93a06d2c7c3d45b65d727d370903363b2b857519d8fde501c2",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringMath.sol:BoringMath16": {
        "src": "contracts/Utils/BoringMath.sol:80",
        "version": {
          "withMetadata": "db29b8557b574f85f08c9bb8a79ca1587187e8a292765bf4c3bdb5eac0cbfe44",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringMath.sol:BoringMath32": {
        "src": "contracts/Utils/BoringMath.sol:69",
        "version": {
          "withMetadata": "a1f5ee7f8fee878bcda586d02a6dc871c8871ac7d78290eb849a6161fcb4ee1d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringMath.sol:BoringMath64": {
        "src": "contracts/Utils/BoringMath.sol:58",
        "version": {
          "withMetadata": "ff2384cb62977192b0bc53e087a771cd9cd1db0a1f74f8cfb21af72a7338a1ec",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/CloneFactory.sol:CloneFactory": {
        "src": "contracts/Utils/CloneFactory.sol:32",
        "version": {
          "withMetadata": "c727f2b88908524ea0050870a088e13c3b58e5a727e8711a8c60067a9b87dea2",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/Documents.sol:Documents": {
        "src": "contracts/Utils/Documents.sol:8",
        "version": {
          "withMetadata": "f66d5d7f56a83085cdc48970c8b2ecf92b8354bb36f97c9e8eff77349e1b6e09",
          "withoutMetadata": "5e534a63baae2753fc4457c0d96f337a859b6fe966ceb09e84f051de149fabf6",
          "linkedWithoutMetadata": "5e534a63baae2753fc4457c0d96f337a859b6fe966ceb09e84f051de149fabf6"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "getDocument(string)",
          "getAllDocuments()",
          "getDocumentCount()",
          "getDocumentName(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "_documents",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:17"
            },
            {
              "label": "_docIndexes",
              "offset": 0,
              "slot": "1",
              "type": "t_mapping(t_string_memory_ptr,t_uint32)",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:19"
            },
            {
              "label": "_docNames",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_string_storage)dyn_storage",
              "contract": "Documents",
              "src": "contracts/Utils/Documents.sol:21"
            }
          ],
          "types": {
            "t_array(t_string_storage)dyn_storage": {
              "label": "string[]",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_struct(Document)26300_storage)": {
              "label": "mapping(string => struct Documents.Document)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_string_memory_ptr,t_uint32)": {
              "label": "mapping(string => uint32)",
              "numberOfBytes": "32"
            },
            "t_string_memory_ptr": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_struct(Document)26300_storage": {
              "label": "struct Documents.Document",
              "members": [
                {
                  "label": "docIndex",
                  "type": "t_uint32",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lastModified",
                  "type": "t_uint64",
                  "offset": 4,
                  "slot": "0"
                },
                {
                  "label": "data",
                  "type": "t_string_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_uint32": {
              "label": "uint32",
              "numberOfBytes": "4"
            },
            "t_uint64": {
              "label": "uint64",
              "numberOfBytes": "8"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/Owned.sol:Owned": {
        "src": "contracts/Utils/Owned.sol:7",
        "version": {
          "withMetadata": "ce939fbaa11463c75a80f0157db6c32ff2e4d1dff54810aed2bd65343b3e1b32",
          "withoutMetadata": "833fb824cdd0db3a7e09a8fd3e4dcf8b1357431793665336ad42c22676ccb8de",
          "linkedWithoutMetadata": "833fb824cdd0db3a7e09a8fd3e4dcf8b1357431793665336ad42c22676ccb8de"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "owner()",
          "isOwner()",
          "transferOwnership(address)",
          "acceptOwnership()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "mOwner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/Utils/Owned.sol:9"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "0",
              "type": "t_bool",
              "contract": "Owned",
              "src": "contracts/Utils/Owned.sol:10"
            },
            {
              "label": "newOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Owned",
              "src": "contracts/Utils/Owned.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/SafeMathPlus.sol:SafeMathPlus": {
        "src": "contracts/Utils/SafeMathPlus.sol:11",
        "version": {
          "withMetadata": "d6bcc0cbcafc9d2f56343560d80e9c41c5352b69e52053ea1b9697ca4efc38df",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/SafeTransfer.sol:SafeTransfer": {
        "src": "contracts/Utils/SafeTransfer.sol:3",
        "version": {
          "withMetadata": "f2dfcd756ad9404bd80fa1797f815f44207b81355333410101b46058b185c685",
          "withoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b",
          "linkedWithoutMetadata": "ac0db523ddc3e330f735df7b3b0b24460531c71290a891170e840f8f67d5ff6b"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/Timelock.sol:Timelock": {
        "src": "contracts/Utils/Timelock.sol:14",
        "version": {
          "withMetadata": "4dbb5cdb32ca6dcb9c250fccd32a7a5d0dc196f0da27802a7ad875bc663bdae7",
          "withoutMetadata": "4dbb5cdb32ca6dcb9c250fccd32a7a5d0dc196f0da27802a7ad875bc663bdae7",
          "linkedWithoutMetadata": "4dbb5cdb32ca6dcb9c250fccd32a7a5d0dc196f0da27802a7ad875bc663bdae7"
        },
        "inherit": [],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath"
        ],
        "methods": [
          "(address,uint256)",
          "()",
          "setDelay(uint256)",
          "acceptAdmin()",
          "setPendingAdmin(address)",
          "queueTransaction(address,uint256,string,bytes,uint256)",
          "cancelTransaction(address,uint256,string,bytes,uint256)",
          "executeTransaction(address,uint256,string,bytes,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "Timelock",
            "src": "contracts/Utils/Timelock.sol:36"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "admin",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts/Utils/Timelock.sol:28"
            },
            {
              "label": "pendingAdmin",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "Timelock",
              "src": "contracts/Utils/Timelock.sol:29"
            },
            {
              "label": "delay",
              "offset": 0,
              "slot": "2",
              "type": "t_uint256",
              "contract": "Timelock",
              "src": "contracts/Utils/Timelock.sol:30"
            },
            {
              "label": "admin_initialized",
              "offset": 0,
              "slot": "3",
              "type": "t_bool",
              "contract": "Timelock",
              "src": "contracts/Utils/Timelock.sol:31"
            },
            {
              "label": "queuedTransactions",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_bytes32,t_bool)",
              "contract": "Timelock",
              "src": "contracts/Utils/Timelock.sol:33"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_bool)": {
              "label": "mapping(bytes32 => bool)",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Vault/GnosisSafeFactory.sol:GnosisSafeFactory": {
        "src": "contracts/Vault/GnosisSafeFactory.sol:9",
        "version": {
          "withMetadata": "7314aa42c37fe3c018a2e7dab40ad9b7f7fdd532140a80c5e2c914dc453ea14c",
          "withoutMetadata": "03311a8017d8696db3e86f0045f0f614b45809a52b4dc697b6e8df9e44d421b0",
          "linkedWithoutMetadata": "03311a8017d8696db3e86f0045f0f614b45809a52b4dc697b6e8df9e44d421b0"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "initGnosisVault(address,address,address)",
          "setSafeGnosis(address)",
          "setProxyFactory(address)",
          "createSafe(address[],uint256,address,bytes,address,address,uint256,address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "safeGnosis",
              "offset": 0,
              "slot": "0",
              "type": "t_contract(ISafeGnosis)28834",
              "contract": "GnosisSafeFactory",
              "src": "contracts/Vault/GnosisSafeFactory.sol:12"
            },
            {
              "label": "proxyFactory",
              "offset": 0,
              "slot": "1",
              "type": "t_contract(IGnosisProxyFactory)28496",
              "contract": "GnosisSafeFactory",
              "src": "contracts/Vault/GnosisSafeFactory.sol:15"
            },
            {
              "label": "accessControls",
              "offset": 0,
              "slot": "2",
              "type": "t_contract(MISOAccessControls)583",
              "contract": "GnosisSafeFactory",
              "src": "contracts/Vault/GnosisSafeFactory.sol:18"
            },
            {
              "label": "initialised",
              "offset": 20,
              "slot": "2",
              "type": "t_bool",
              "contract": "GnosisSafeFactory",
              "src": "contracts/Vault/GnosisSafeFactory.sol:21"
            },
            {
              "label": "userToProxy",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_contract(ISafeGnosis)28834)",
              "contract": "GnosisSafeFactory",
              "src": "contracts/Vault/GnosisSafeFactory.sol:24"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_bool": {
              "label": "bool",
              "numberOfBytes": "1"
            },
            "t_contract(IGnosisProxyFactory)28496": {
              "label": "contract IGnosisProxyFactory",
              "numberOfBytes": "20"
            },
            "t_contract(ISafeGnosis)28834": {
              "label": "contract ISafeGnosis",
              "numberOfBytes": "20"
            },
            "t_contract(MISOAccessControls)583": {
              "label": "contract MISOAccessControls",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_contract(ISafeGnosis)28834)": {
              "label": "mapping(address => contract ISafeGnosis)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Vault/TokenVault.sol:TokenVault": {
        "src": "contracts/Vault/TokenVault.sol:10",
        "version": {
          "withMetadata": "daf179f99c6e4ace3c308d946fe17aa4ff3023b32292f4ef2448acec2e4de4d1",
          "withoutMetadata": "b3221e34ae9fd950233049dacb24994d6aa8326bc054a0993dbe659480fb63d0",
          "linkedWithoutMetadata": "b3221e34ae9fd950233049dacb24994d6aa8326bc054a0993dbe659480fb63d0"
        },
        "inherit": [
          "contracts/Utils/SafeTransfer.sol:SafeTransfer"
        ],
        "libraries": [
          "contracts/OpenZeppelin/math/SafeMath.sol:SafeMath",
          "contracts/OpenZeppelin/utils/EnumerableSet.sol:EnumerableSet"
        ],
        "methods": [
          "lockTokens(address,uint256,uint256,address payable)",
          "withdrawTokens(address,uint256,uint256,uint256)",
          "getItemAtUserIndex(uint256,address,address)",
          "getUserLockedItemAtIndex(address,uint256)",
          "getLockedItemAtId(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "users",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_struct(UserInfo)27989_storage)",
              "contract": "TokenVault",
              "src": "contracts/Vault/TokenVault.sol:29"
            },
            {
              "label": "depositId",
              "offset": 0,
              "slot": "1",
              "type": "t_uint256",
              "contract": "TokenVault",
              "src": "contracts/Vault/TokenVault.sol:32"
            },
            {
              "label": "allDepositIds",
              "offset": 0,
              "slot": "2",
              "type": "t_array(t_uint256)dyn_storage",
              "contract": "TokenVault",
              "src": "contracts/Vault/TokenVault.sol:35"
            },
            {
              "label": "lockedItem",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_uint256,t_struct(Item)27981_storage)",
              "contract": "TokenVault",
              "src": "contracts/Vault/TokenVault.sol:38"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_array(t_bytes32)dyn_storage": {
              "label": "bytes32[]",
              "numberOfBytes": "32"
            },
            "t_array(t_uint256)dyn_storage": {
              "label": "uint256[]",
              "numberOfBytes": "32"
            },
            "t_bytes32": {
              "label": "bytes32",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_array(t_uint256)dyn_storage)": {
              "label": "mapping(address => uint256[])",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_struct(UserInfo)27989_storage)": {
              "label": "mapping(address => struct TokenVault.UserInfo)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_bytes32,t_uint256)": {
              "label": "mapping(bytes32 => uint256)",
              "numberOfBytes": "32"
            },
            "t_mapping(t_uint256,t_struct(Item)27981_storage)": {
              "label": "mapping(uint256 => struct TokenVault.Item)",
              "numberOfBytes": "32"
            },
            "t_struct(AddressSet)19327_storage": {
              "label": "struct EnumerableSet.AddressSet",
              "members": [
                {
                  "label": "_inner",
                  "type": "t_struct(Set)19062_storage",
                  "offset": 0,
                  "slot": "0"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(Item)27981_storage": {
              "label": "struct TokenVault.Item",
              "members": [
                {
                  "label": "amount",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "unlockTime",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "1"
                },
                {
                  "label": "owner",
                  "type": "t_address",
                  "offset": 0,
                  "slot": "2"
                },
                {
                  "label": "userIndex",
                  "type": "t_uint256",
                  "offset": 0,
                  "slot": "3"
                }
              ],
              "numberOfBytes": "128"
            },
            "t_struct(Set)19062_storage": {
              "label": "struct EnumerableSet.Set",
              "members": [
                {
                  "label": "_values",
                  "type": "t_array(t_bytes32)dyn_storage",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "_indexes",
                  "type": "t_mapping(t_bytes32,t_uint256)",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "64"
            },
            "t_struct(UserInfo)27989_storage": {
              "label": "struct TokenVault.UserInfo",
              "members": [
                {
                  "label": "lockToItems",
                  "type": "t_mapping(t_address,t_array(t_uint256)dyn_storage)",
                  "offset": 0,
                  "slot": "0"
                },
                {
                  "label": "lockedItemsWithUser",
                  "type": "t_struct(AddressSet)19327_storage",
                  "offset": 0,
                  "slot": "1"
                }
              ],
              "numberOfBytes": "96"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IBentoBoxFactory.sol:IBentoBoxFactory": {
        "src": "contracts/interfaces/IBentoBoxFactory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deploy(address,bytes,bool)",
          "masterContractApproved(address,address)",
          "masterContractOf(address)",
          "setMasterContractApproval(address,address,bool,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IERC20.sol:IERC20": {
        "src": "contracts/interfaces/IERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IGnosisProxyFactory.sol:IGnosisProxyFactory": {
        "src": "contracts/interfaces/IGnosisProxyFactory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createProxy(address,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMasterChef.sol:IMasterChef": {
        "src": "contracts/interfaces/IMasterChef.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/Utils/BoringERC20.sol:BoringERC20"
        ],
        "methods": [
          "poolInfo(uint256)",
          "totalAllocPoint()",
          "deposit(uint256,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMisoAuction.sol:IMisoAuction": {
        "src": "contracts/interfaces/IMisoAuction.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initAuction(address,address,uint256,uint256,uint256,address,uint256,uint256,address,address,address payable)",
          "auctionSuccessful()",
          "finalized()",
          "wallet()",
          "paymentCurrency()",
          "auctionToken()",
          "finalize()",
          "tokenPrice()",
          "getTotalTokens()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMisoCrowdsale.sol:IMisoCrowdsale": {
        "src": "contracts/interfaces/IMisoCrowdsale.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initCrowdsale(address,address,address,uint256,uint256,uint256,uint256,uint256,address,address payable)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMisoFarm.sol:IMisoFarm": {
        "src": "contracts/interfaces/IMisoFarm.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initFarm(bytes)",
          "farmTemplate()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMisoLauncher.sol:IMisoLauncher": {
        "src": "contracts/interfaces/IMisoLauncher.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "createLauncher(uint256,address,uint256,address payable,bytes)",
          "currentTemplateId(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMisoLiquidity.sol:IMisoLiquidity": {
        "src": "contracts/interfaces/IMisoLiquidity.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initLauncher(bytes)",
          "getMarkets()",
          "liquidityTemplate()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMisoMarket.sol:IMisoMarket": {
        "src": "contracts/interfaces/IMisoMarket.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "init(bytes)",
          "initMarket(bytes)",
          "marketTemplate()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMisoToken.sol:IMisoToken": {
        "src": "contracts/interfaces/IMisoToken.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "init(bytes)",
          "initToken(bytes)",
          "tokenTemplate()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IPointList.sol:IPointList": {
        "src": "contracts/interfaces/IPointList.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isInList(address)",
          "hasPoints(address,uint256)",
          "setPoints(address[],uint256[])",
          "initPointList(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IRewarder.sol:IRewarder": {
        "src": "contracts/interfaces/IRewarder.sol:5",
        "inherit": [],
        "libraries": [
          "contracts/Utils/BoringERC20.sol:BoringERC20"
        ],
        "methods": [
          "onSushiReward(uint256,address,uint256)",
          "pendingTokens(uint256,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/ISafeGnosis.sol:ISafeGnosis": {
        "src": "contracts/interfaces/ISafeGnosis.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "setup(address[],uint256,address,bytes,address,address,uint256,address payable)",
          "execTransaction(address,uint256,bytes,uint256,uint256,uint256,uint256,address,address payable,bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/ISushiToken.sol:ISushiToken": {
        "src": "contracts/interfaces/ISushiToken.sol:4",
        "inherit": [],
        "libraries": [],
        "methods": [
          "mint(address,uint256)",
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "approve(address,uint256)",
          "allowance(address,address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IWETH9.sol:IWETH": {
        "src": "contracts/interfaces/IWETH9.sol:5",
        "inherit": [
          "contracts/interfaces/IERC20.sol:IERC20"
        ],
        "libraries": [],
        "methods": [
          "deposit()",
          "withdraw(uint256)",
          "transfer(address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/interfaces/IWhiteList.sol:IWhiteList": {
        "src": "contracts/interfaces/IWhiteList.sol:7",
        "inherit": [],
        "libraries": [],
        "methods": [
          "isInWhiteList(address)",
          "addWhiteList(address[])",
          "removeWhiteList(address[])",
          "initWhiteList(address)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/interfaces/IMisoTemplate.sol:IMisoTemplate": {
        "src": "contracts/interfaces/IMisoTemplate.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initData(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/interfaces/IMisoFermenter.sol:IMisoFermenter": {
        "src": "contracts/interfaces/IMisoFermenter.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "initERC20Vault()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/Utils/WETH9.sol:WETH9": {
        "src": "contracts/Utils/WETH9.sol:18",
        "version": {
          "withMetadata": "8e7b70107a32c4c95594aded5f06acda56368e83443e3b8cb16b4d83e1fa305d",
          "withoutMetadata": "ff05a98361b707cfbfc2567a017a0d902530ea894197d474c90f01b16b6e38d1",
          "linkedWithoutMetadata": "ff05a98361b707cfbfc2567a017a0d902530ea894197d474c90f01b16b6e38d1"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "()",
          "deposit()",
          "withdraw(uint256)",
          "totalSupply()",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "state-variable-assignment",
            "name": "name",
            "src": "contracts/Utils/WETH9.sol:19"
          },
          {
            "kind": "state-variable-assignment",
            "name": "symbol",
            "src": "contracts/Utils/WETH9.sol:20"
          },
          {
            "kind": "state-variable-assignment",
            "name": "decimals",
            "src": "contracts/Utils/WETH9.sol:21"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "name",
              "offset": 0,
              "slot": "0",
              "type": "t_string_storage",
              "contract": "WETH9",
              "src": "contracts/Utils/WETH9.sol:19"
            },
            {
              "label": "symbol",
              "offset": 0,
              "slot": "1",
              "type": "t_string_storage",
              "contract": "WETH9",
              "src": "contracts/Utils/WETH9.sol:20"
            },
            {
              "label": "decimals",
              "offset": 0,
              "slot": "2",
              "type": "t_uint8",
              "contract": "WETH9",
              "src": "contracts/Utils/WETH9.sol:21"
            },
            {
              "label": "balanceOf",
              "offset": 0,
              "slot": "3",
              "type": "t_mapping(t_address,t_uint256)",
              "contract": "WETH9",
              "src": "contracts/Utils/WETH9.sol:28"
            },
            {
              "label": "allowance",
              "offset": 0,
              "slot": "4",
              "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
              "contract": "WETH9",
              "src": "contracts/Utils/WETH9.sol:29"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
              "label": "mapping(address => mapping(address => uint256))",
              "numberOfBytes": "32"
            },
            "t_mapping(t_address,t_uint256)": {
              "label": "mapping(address => uint256)",
              "numberOfBytes": "32"
            },
            "t_string_storage": {
              "label": "string",
              "numberOfBytes": "32"
            },
            "t_uint256": {
              "label": "uint256",
              "numberOfBytes": "32"
            },
            "t_uint8": {
              "label": "uint8",
              "numberOfBytes": "1"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/Utils/BoringOwnable.sol:BoringOwnable": {
        "src": "contracts/Utils/BoringOwnable.sol:13",
        "version": {
          "withMetadata": "758eab82f2044ceeb0ec1b8a418f42c2830a16dde84dac793f0ca0cd10b544ff",
          "withoutMetadata": "5333463d81be562825dbcbc3c58eb4f0b6a95eea8e04cce27f9b942c02c10d48",
          "linkedWithoutMetadata": "5333463d81be562825dbcbc3c58eb4f0b6a95eea8e04cce27f9b942c02c10d48"
        },
        "inherit": [
          "contracts/Utils/BoringOwnable.sol:BoringOwnableData"
        ],
        "libraries": [],
        "methods": [
          "()",
          "transferOwnership(address,bool,bool)",
          "claimOwnership()"
        ],
        "linkReferences": [],
        "errors": [
          {
            "kind": "constructor",
            "contract": "BoringOwnable",
            "src": "contracts/Utils/BoringOwnable.sol:17"
          }
        ],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BoringOwnableData",
              "src": "contracts/Utils/BoringOwnable.sol:9"
            },
            {
              "label": "pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BoringOwnableData",
              "src": "contracts/Utils/BoringOwnable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/Utils/BoringOwnable.sol:BoringOwnableData": {
        "src": "contracts/Utils/BoringOwnable.sol:8",
        "version": {
          "withMetadata": "58f7a374d458b5cd26dd4d99b0ad76cb2fb83cc5f9b54ddd5f743e84d6857bb8",
          "withoutMetadata": "cfcae807b327913ac12a83e42d3e892d62cc3d500da227265c2f96e34dd745c4",
          "linkedWithoutMetadata": "cfcae807b327913ac12a83e42d3e892d62cc3d500da227265c2f96e34dd745c4"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "owner",
              "offset": 0,
              "slot": "0",
              "type": "t_address",
              "contract": "BoringOwnableData",
              "src": "contracts/Utils/BoringOwnable.sol:9"
            },
            {
              "label": "pendingOwner",
              "offset": 0,
              "slot": "1",
              "type": "t_address",
              "contract": "BoringOwnableData",
              "src": "contracts/Utils/BoringOwnable.sol:10"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/Utils/BoringFactory.sol:BoringFactory": {
        "src": "contracts/Utils/BoringFactory.sol:7",
        "version": {
          "withMetadata": "33574e4ffac7469aceb11fa40cf4da1b2efa5acf8828702ff6d7cfd2d8d7c255",
          "withoutMetadata": "52cc89311f5e0e981696b4e60e826e34a396e5bbd4ea3cca8424740334d6ef21",
          "linkedWithoutMetadata": "52cc89311f5e0e981696b4e60e826e34a396e5bbd4ea3cca8424740334d6ef21"
        },
        "inherit": [],
        "libraries": [],
        "methods": [
          "deploy(address,bytes,bool)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [
            {
              "label": "masterContractOf",
              "offset": 0,
              "slot": "0",
              "type": "t_mapping(t_address,t_address)",
              "contract": "BoringFactory",
              "src": "contracts/Utils/BoringFactory.sol:11"
            }
          ],
          "types": {
            "t_address": {
              "label": "address",
              "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_address)": {
              "label": "mapping(address => address)",
              "numberOfBytes": "32"
            }
          },
          "layoutVersion": "1.2",
          "flat": true,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/interfaces/IMasterContract.sol:IMasterContract": {
        "src": "contracts/interfaces/IMasterContract.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "init(bytes)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/interfaces/IMisoTokenFactory.sol:IMisoTokenFactory": {
        "src": "contracts/interfaces/IMisoTokenFactory.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "numberOfTokens()",
          "getTokens()"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/UniswapV2/libraries/TransferHelper.sol:TransferHelper": {
        "src": "contracts/UniswapV2/libraries/TransferHelper.sol:5",
        "version": {
          "withMetadata": "f44c7e088e4e624a9dd34150d67f8df53de3015fef6942b6d6a5b0355b319b4d",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/UniswapV2/interfaces/IWETH.sol:IWETH": {
        "src": "contracts/UniswapV2/interfaces/IWETH.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "deposit()",
          "transfer(address,uint256)",
          "withdraw(uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/UniswapV2/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01": {
        "src": "contracts/UniswapV2/interfaces/IUniswapV2Router01.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "factory()",
          "WETH()",
          "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)",
          "addLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETH(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "removeLiquidityETHWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)",
          "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokens(uint256,address[],address,uint256)",
          "swapTokensForExactETH(uint256,uint256,address[],address,uint256)",
          "swapExactTokensForETH(uint256,uint256,address[],address,uint256)",
          "swapETHForExactTokens(uint256,address[],address,uint256)",
          "quote(uint256,uint256,uint256)",
          "getAmountOut(uint256,uint256,uint256)",
          "getAmountIn(uint256,uint256,uint256)",
          "getAmountsOut(uint256,address[])",
          "getAmountsIn(uint256,address[])"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/UniswapV2/interfaces/IUniswapV2Router02.sol:IUniswapV2Router02": {
        "src": "contracts/UniswapV2/interfaces/IUniswapV2Router02.sol:5",
        "inherit": [
          "contracts/UniswapV2/interfaces/IUniswapV2Router01.sol:IUniswapV2Router01"
        ],
        "libraries": [],
        "methods": [
          "removeLiquidityETHSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)",
          "removeLiquidityETHWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)",
          "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)",
          "swapExactETHForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)",
          "swapExactTokensForETHSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/UniswapV2/interfaces/IUniswapV2ERC20.sol:IUniswapV2ERC20": {
        "src": "contracts/UniswapV2/interfaces/IUniswapV2ERC20.sol:3",
        "inherit": [],
        "libraries": [],
        "methods": [
          "name()",
          "symbol()",
          "decimals()",
          "totalSupply()",
          "balanceOf(address)",
          "allowance(address,address)",
          "approve(address,uint256)",
          "transfer(address,uint256)",
          "transferFrom(address,address,uint256)",
          "DOMAIN_SEPARATOR()",
          "PERMIT_TYPEHASH()",
          "nonces(address)",
          "permit(address,address,uint256,uint256,uint8,bytes32,bytes32)"
        ],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/OpenZeppelin/utils/Strings.sol:Strings": {
        "src": "contracts/OpenZeppelin/utils/Strings.sol:8",
        "version": {
          "withMetadata": "cec2c9e664eab0bea739783e54aa60bb6747189113e31936dc03102ea9f797ca",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/OpenZeppelin/utils/SafeCast.sol:SafeCast": {
        "src": "contracts/OpenZeppelin/utils/SafeCast.sol:21",
        "version": {
          "withMetadata": "e7315964e20baaf096d4fceb6d532082fc63907e58e8e5e09a31fea00e06377b",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/OpenZeppelin/utils/EnumerableMap.sol:EnumerableMap": {
        "src": "contracts/OpenZeppelin/utils/EnumerableMap.sol:29",
        "version": {
          "withMetadata": "b525e3a7567752c06da46e4e533c8eaea40ada4fa53df2313de069792f99cd8a",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/OpenZeppelin/math/SignedSafeMath.sol:SignedSafeMath": {
        "src": "contracts/OpenZeppelin/math/SignedSafeMath.sol:4",
        "version": {
          "withMetadata": "a352363c35550ef8fe2b469d67f96dc3fd9b4dff254f1a5c05afbd6dde7b49b6",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    },
    {
      "contracts/OpenZeppelin/math/Math.sol:Math": {
        "src": "contracts/OpenZeppelin/math/Math.sol:8",
        "version": {
          "withMetadata": "4fad6b0c8af6210b4c406f633619697f31ad5470771599e72957c0381609dbb3",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      },
      "contracts/OpenZeppelin/utils/Arrays.sol:Arrays": {
        "src": "contracts/OpenZeppelin/utils/Arrays.sol:10",
        "version": {
          "withMetadata": "6da1ab4657d5c64f4e2d42337fe5e8dcfe86c044f714fa74267c64302be43bea",
          "withoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8",
          "linkedWithoutMetadata": "aaa148c474cd10e1a6cd0a52c0b55f1aa9b7bb7b42d7f1cb5acaea4f42f04bc8"
        },
        "inherit": [],
        "libraries": [
          "contracts/OpenZeppelin/math/Math.sol:Math"
        ],
        "methods": [],
        "linkReferences": [],
        "errors": [],
        "layout": {
          "storage": [],
          "types": {},
          "layoutVersion": "1.2",
          "flat": false,
          "namespaces": {}
        },
        "solcVersion": "0.6.12"
      }
    }
  ]
}