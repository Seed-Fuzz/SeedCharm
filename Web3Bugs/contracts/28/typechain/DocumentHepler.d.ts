/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface DocumentHeplerInterface extends ethers.utils.Interface {
  functions: {
    "getDocuments(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getDocuments",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "getDocuments",
    data: BytesLike
  ): Result;

  events: {};
}

export class DocumentHepler extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: DocumentHeplerInterface;

  functions: {
    getDocuments(
      _document: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, BigNumber] & {
          name: string;
          data: string;
          lastModified: BigNumber;
        })[]
      ]
    >;

    "getDocuments(address)"(
      _document: string,
      overrides?: CallOverrides
    ): Promise<
      [
        ([string, string, BigNumber] & {
          name: string;
          data: string;
          lastModified: BigNumber;
        })[]
      ]
    >;
  };

  getDocuments(
    _document: string,
    overrides?: CallOverrides
  ): Promise<
    ([string, string, BigNumber] & {
      name: string;
      data: string;
      lastModified: BigNumber;
    })[]
  >;

  "getDocuments(address)"(
    _document: string,
    overrides?: CallOverrides
  ): Promise<
    ([string, string, BigNumber] & {
      name: string;
      data: string;
      lastModified: BigNumber;
    })[]
  >;

  callStatic: {
    getDocuments(
      _document: string,
      overrides?: CallOverrides
    ): Promise<
      ([string, string, BigNumber] & {
        name: string;
        data: string;
        lastModified: BigNumber;
      })[]
    >;

    "getDocuments(address)"(
      _document: string,
      overrides?: CallOverrides
    ): Promise<
      ([string, string, BigNumber] & {
        name: string;
        data: string;
        lastModified: BigNumber;
      })[]
    >;
  };

  filters: {};

  estimateGas: {
    getDocuments(
      _document: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDocuments(address)"(
      _document: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getDocuments(
      _document: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDocuments(address)"(
      _document: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
