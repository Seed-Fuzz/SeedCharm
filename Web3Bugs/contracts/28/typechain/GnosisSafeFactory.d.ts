/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface GnosisSafeFactoryInterface extends ethers.utils.Interface {
  functions: {
    "accessControls()": FunctionFragment;
    "createSafe(address[],uint256,address,bytes,address,address,uint256,address)": FunctionFragment;
    "initGnosisVault(address,address,address)": FunctionFragment;
    "proxyFactory()": FunctionFragment;
    "safeGnosis()": FunctionFragment;
    "setProxyFactory(address)": FunctionFragment;
    "setSafeGnosis(address)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "accessControls",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "createSafe",
    values: [
      string[],
      BigNumberish,
      string,
      BytesLike,
      string,
      string,
      BigNumberish,
      string
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "initGnosisVault",
    values: [string, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "proxyFactory",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "safeGnosis",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "setProxyFactory",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setSafeGnosis",
    values: [string]
  ): string;

  decodeFunctionResult(
    functionFragment: "accessControls",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "createSafe", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initGnosisVault",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "proxyFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "safeGnosis", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setProxyFactory",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setSafeGnosis",
    data: BytesLike
  ): Result;

  events: {
    "GnosisSafeCreated(address,address,address,address)": EventFragment;
    "MisoInitGnosisVault(address)": EventFragment;
    "ProxyFactoryUpdated(address,address,address)": EventFragment;
    "SafeGnosisUpdated(address,address,address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "GnosisSafeCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MisoInitGnosisVault"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "ProxyFactoryUpdated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "SafeGnosisUpdated"): EventFragment;
}

export class GnosisSafeFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: GnosisSafeFactoryInterface;

  functions: {
    accessControls(overrides?: CallOverrides): Promise<[string]>;

    "accessControls()"(overrides?: CallOverrides): Promise<[string]>;

    createSafe(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createSafe(address[],uint256,address,bytes,address,address,uint256,address)"(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    initGnosisVault(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initGnosisVault(address,address,address)"(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    proxyFactory(overrides?: CallOverrides): Promise<[string]>;

    "proxyFactory()"(overrides?: CallOverrides): Promise<[string]>;

    safeGnosis(overrides?: CallOverrides): Promise<[string]>;

    "safeGnosis()"(overrides?: CallOverrides): Promise<[string]>;

    setProxyFactory(
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setProxyFactory(address)"(
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setSafeGnosis(
      _safeGnosis: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setSafeGnosis(address)"(
      _safeGnosis: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  accessControls(overrides?: CallOverrides): Promise<string>;

  "accessControls()"(overrides?: CallOverrides): Promise<string>;

  createSafe(
    _owners: string[],
    _threshold: BigNumberish,
    to: string,
    data: BytesLike,
    fallbackHandler: string,
    paymentToken: string,
    payment: BigNumberish,
    paymentReceiver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createSafe(address[],uint256,address,bytes,address,address,uint256,address)"(
    _owners: string[],
    _threshold: BigNumberish,
    to: string,
    data: BytesLike,
    fallbackHandler: string,
    paymentToken: string,
    payment: BigNumberish,
    paymentReceiver: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  initGnosisVault(
    _accessControls: string,
    _safeGnosis: string,
    _proxyFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initGnosisVault(address,address,address)"(
    _accessControls: string,
    _safeGnosis: string,
    _proxyFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  proxyFactory(overrides?: CallOverrides): Promise<string>;

  "proxyFactory()"(overrides?: CallOverrides): Promise<string>;

  safeGnosis(overrides?: CallOverrides): Promise<string>;

  "safeGnosis()"(overrides?: CallOverrides): Promise<string>;

  setProxyFactory(
    _proxyFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setProxyFactory(address)"(
    _proxyFactory: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setSafeGnosis(
    _safeGnosis: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setSafeGnosis(address)"(
    _safeGnosis: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    accessControls(overrides?: CallOverrides): Promise<string>;

    "accessControls()"(overrides?: CallOverrides): Promise<string>;

    createSafe(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "createSafe(address[],uint256,address,bytes,address,address,uint256,address)"(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: CallOverrides
    ): Promise<string>;

    initGnosisVault(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initGnosisVault(address,address,address)"(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    proxyFactory(overrides?: CallOverrides): Promise<string>;

    "proxyFactory()"(overrides?: CallOverrides): Promise<string>;

    safeGnosis(overrides?: CallOverrides): Promise<string>;

    "safeGnosis()"(overrides?: CallOverrides): Promise<string>;

    setProxyFactory(
      _proxyFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setProxyFactory(address)"(
      _proxyFactory: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setSafeGnosis(
      _safeGnosis: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setSafeGnosis(address)"(
      _safeGnosis: string,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    GnosisSafeCreated(
      user: string | null,
      proxy: string | null,
      safeGnosis: null,
      proxyFactory: null
    ): EventFilter;

    MisoInitGnosisVault(sender: null): EventFilter;

    ProxyFactoryUpdated(
      sender: string | null,
      oldProxyFactory: null,
      newProxyFactory: null
    ): EventFilter;

    SafeGnosisUpdated(
      sender: string | null,
      oldSafeGnosis: null,
      newSafeGnosis: null
    ): EventFilter;
  };

  estimateGas: {
    accessControls(overrides?: CallOverrides): Promise<BigNumber>;

    "accessControls()"(overrides?: CallOverrides): Promise<BigNumber>;

    createSafe(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createSafe(address[],uint256,address,bytes,address,address,uint256,address)"(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    initGnosisVault(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initGnosisVault(address,address,address)"(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    proxyFactory(overrides?: CallOverrides): Promise<BigNumber>;

    "proxyFactory()"(overrides?: CallOverrides): Promise<BigNumber>;

    safeGnosis(overrides?: CallOverrides): Promise<BigNumber>;

    "safeGnosis()"(overrides?: CallOverrides): Promise<BigNumber>;

    setProxyFactory(
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setProxyFactory(address)"(
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setSafeGnosis(
      _safeGnosis: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "setSafeGnosis(address)"(
      _safeGnosis: string,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    accessControls(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "accessControls()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    createSafe(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createSafe(address[],uint256,address,bytes,address,address,uint256,address)"(
      _owners: string[],
      _threshold: BigNumberish,
      to: string,
      data: BytesLike,
      fallbackHandler: string,
      paymentToken: string,
      payment: BigNumberish,
      paymentReceiver: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    initGnosisVault(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initGnosisVault(address,address,address)"(
      _accessControls: string,
      _safeGnosis: string,
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    proxyFactory(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "proxyFactory()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    safeGnosis(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "safeGnosis()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    setProxyFactory(
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setProxyFactory(address)"(
      _proxyFactory: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setSafeGnosis(
      _safeGnosis: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setSafeGnosis(address)"(
      _safeGnosis: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
