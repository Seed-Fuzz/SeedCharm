/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IDocumentInterface extends ethers.utils.Interface {
  functions: {
    "getDocument(string)": FunctionFragment;
    "getDocumentCount()": FunctionFragment;
    "getDocumentName(uint256)": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "getDocument", values: [string]): string;
  encodeFunctionData(
    functionFragment: "getDocumentCount",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getDocumentName",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "getDocument",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDocumentCount",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getDocumentName",
    data: BytesLike
  ): Result;

  events: {};
}

export class IDocument extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IDocumentInterface;

  functions: {
    getDocument(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    "getDocument(string)"(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    getDocumentCount(overrides?: CallOverrides): Promise<[BigNumber]>;

    "getDocumentCount()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getDocumentName(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getDocumentName(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  getDocument(
    _name: string,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber]>;

  "getDocument(string)"(
    _name: string,
    overrides?: CallOverrides
  ): Promise<[string, BigNumber]>;

  getDocumentCount(overrides?: CallOverrides): Promise<BigNumber>;

  "getDocumentCount()"(overrides?: CallOverrides): Promise<BigNumber>;

  getDocumentName(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getDocumentName(uint256)"(
    index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    getDocument(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    "getDocument(string)"(
      _name: string,
      overrides?: CallOverrides
    ): Promise<[string, BigNumber]>;

    getDocumentCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getDocumentCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDocumentName(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getDocumentName(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    getDocument(_name: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getDocument(string)"(
      _name: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getDocumentCount(overrides?: CallOverrides): Promise<BigNumber>;

    "getDocumentCount()"(overrides?: CallOverrides): Promise<BigNumber>;

    getDocumentName(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getDocumentName(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    getDocument(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDocument(string)"(
      _name: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDocumentCount(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getDocumentCount()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getDocumentName(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getDocumentName(uint256)"(
      index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
