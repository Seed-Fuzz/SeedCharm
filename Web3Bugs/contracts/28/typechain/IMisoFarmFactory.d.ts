/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IMisoFarmFactoryInterface extends ethers.utils.Interface {
  functions: {
    "farms(uint256)": FunctionFragment;
    "getTemplateId(address)": FunctionFragment;
    "numberOfFarms()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "farms", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "getTemplateId",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "numberOfFarms",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "farms", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getTemplateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "numberOfFarms",
    data: BytesLike
  ): Result;

  events: {};
}

export class IMisoFarmFactory extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IMisoFarmFactoryInterface;

  functions: {
    farms(_farmId: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "farms(uint256)"(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getTemplateId(
      _farm: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "getTemplateId(address)"(
      _farm: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    numberOfFarms(overrides?: CallOverrides): Promise<[BigNumber]>;

    "numberOfFarms()"(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  farms(_farmId: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "farms(uint256)"(
    _farmId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getTemplateId(_farm: string, overrides?: CallOverrides): Promise<BigNumber>;

  "getTemplateId(address)"(
    _farm: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  numberOfFarms(overrides?: CallOverrides): Promise<BigNumber>;

  "numberOfFarms()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    farms(_farmId: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "farms(uint256)"(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getTemplateId(_farm: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getTemplateId(address)"(
      _farm: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    numberOfFarms(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfFarms()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    farms(_farmId: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "farms(uint256)"(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTemplateId(_farm: string, overrides?: CallOverrides): Promise<BigNumber>;

    "getTemplateId(address)"(
      _farm: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    numberOfFarms(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfFarms()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    farms(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "farms(uint256)"(
      _farmId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTemplateId(
      _farm: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTemplateId(address)"(
      _farm: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    numberOfFarms(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "numberOfFarms()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
