/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IMisoLauncherInterface extends ethers.utils.Interface {
  functions: {
    "createLauncher(uint256,address,uint256,address,bytes)": FunctionFragment;
    "currentTemplateId(uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "createLauncher",
    values: [BigNumberish, string, BigNumberish, string, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "currentTemplateId",
    values: [BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "createLauncher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "currentTemplateId",
    data: BytesLike
  ): Result;

  events: {};
}

export class IMisoLauncher extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IMisoLauncherInterface;

  functions: {
    createLauncher(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    "createLauncher(uint256,address,uint256,address,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<ContractTransaction>;

    currentTemplateId(
      tempalateType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "currentTemplateId(uint256)"(
      tempalateType: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  createLauncher(
    _templateId: BigNumberish,
    _token: string,
    _tokenSupply: BigNumberish,
    _integratorFeeAccount: string,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  "createLauncher(uint256,address,uint256,address,bytes)"(
    _templateId: BigNumberish,
    _token: string,
    _tokenSupply: BigNumberish,
    _integratorFeeAccount: string,
    _data: BytesLike,
    overrides?: PayableOverrides
  ): Promise<ContractTransaction>;

  currentTemplateId(
    tempalateType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "currentTemplateId(uint256)"(
    tempalateType: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    createLauncher(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "createLauncher(uint256,address,uint256,address,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    currentTemplateId(
      tempalateType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "currentTemplateId(uint256)"(
      tempalateType: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    createLauncher(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    "createLauncher(uint256,address,uint256,address,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<BigNumber>;

    currentTemplateId(
      tempalateType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "currentTemplateId(uint256)"(
      tempalateType: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    createLauncher(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    "createLauncher(uint256,address,uint256,address,bytes)"(
      _templateId: BigNumberish,
      _token: string,
      _tokenSupply: BigNumberish,
      _integratorFeeAccount: string,
      _data: BytesLike,
      overrides?: PayableOverrides
    ): Promise<PopulatedTransaction>;

    currentTemplateId(
      tempalateType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "currentTemplateId(uint256)"(
      tempalateType: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
