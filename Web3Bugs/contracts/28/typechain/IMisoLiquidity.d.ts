/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface IMisoLiquidityInterface extends ethers.utils.Interface {
  functions: {
    "getMarkets()": FunctionFragment;
    "initLauncher(bytes)": FunctionFragment;
    "liquidityTemplate()": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "getMarkets",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "initLauncher",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "liquidityTemplate",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "getMarkets", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "initLauncher",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "liquidityTemplate",
    data: BytesLike
  ): Result;

  events: {};
}

export class IMisoLiquidity extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: IMisoLiquidityInterface;

  functions: {
    getMarkets(overrides?: CallOverrides): Promise<[string[]]>;

    "getMarkets()"(overrides?: CallOverrides): Promise<[string[]]>;

    initLauncher(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initLauncher(bytes)"(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    liquidityTemplate(overrides?: CallOverrides): Promise<[BigNumber]>;

    "liquidityTemplate()"(overrides?: CallOverrides): Promise<[BigNumber]>;
  };

  getMarkets(overrides?: CallOverrides): Promise<string[]>;

  "getMarkets()"(overrides?: CallOverrides): Promise<string[]>;

  initLauncher(
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initLauncher(bytes)"(
    data: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  liquidityTemplate(overrides?: CallOverrides): Promise<BigNumber>;

  "liquidityTemplate()"(overrides?: CallOverrides): Promise<BigNumber>;

  callStatic: {
    getMarkets(overrides?: CallOverrides): Promise<string[]>;

    "getMarkets()"(overrides?: CallOverrides): Promise<string[]>;

    initLauncher(data: BytesLike, overrides?: CallOverrides): Promise<void>;

    "initLauncher(bytes)"(
      data: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    liquidityTemplate(overrides?: CallOverrides): Promise<BigNumber>;

    "liquidityTemplate()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  filters: {};

  estimateGas: {
    getMarkets(overrides?: CallOverrides): Promise<BigNumber>;

    "getMarkets()"(overrides?: CallOverrides): Promise<BigNumber>;

    initLauncher(data: BytesLike, overrides?: Overrides): Promise<BigNumber>;

    "initLauncher(bytes)"(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    liquidityTemplate(overrides?: CallOverrides): Promise<BigNumber>;

    "liquidityTemplate()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    getMarkets(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getMarkets()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    initLauncher(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initLauncher(bytes)"(
      data: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    liquidityTemplate(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "liquidityTemplate()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
