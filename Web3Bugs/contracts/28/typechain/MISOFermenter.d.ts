/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface MISOFermenterInterface extends ethers.utils.Interface {
  functions: {
    "VAULT_MINTER_ROLE()": FunctionFragment;
    "accessControls()": FunctionFragment;
    "addEscrowTemplate(address)": FunctionFragment;
    "createEscrow(uint256)": FunctionFragment;
    "escrowTemplateId()": FunctionFragment;
    "escrows(uint256)": FunctionFragment;
    "getEscrowTemplate(uint256)": FunctionFragment;
    "getTemplateId(address)": FunctionFragment;
    "hasVaultMinterRole(address)": FunctionFragment;
    "initMISOFermenter(address)": FunctionFragment;
    "isChildEscrow(address)": FunctionFragment;
    "locked()": FunctionFragment;
    "numberOfTokens()": FunctionFragment;
    "removeEscrowTemplate(uint256)": FunctionFragment;
    "setLocked(bool)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "VAULT_MINTER_ROLE",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "accessControls",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "addEscrowTemplate",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "createEscrow",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "escrowTemplateId",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "escrows",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getEscrowTemplate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getTemplateId",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "hasVaultMinterRole",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "initMISOFermenter",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "isChildEscrow",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "locked", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "numberOfTokens",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "removeEscrowTemplate",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "setLocked", values: [boolean]): string;

  decodeFunctionResult(
    functionFragment: "VAULT_MINTER_ROLE",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "accessControls",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addEscrowTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "createEscrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "escrowTemplateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "escrows", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getEscrowTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getTemplateId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "hasVaultMinterRole",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "initMISOFermenter",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isChildEscrow",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "locked", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "numberOfTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeEscrowTemplate",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "setLocked", data: BytesLike): Result;

  events: {
    "EscrowCreated(address,address,address)": EventFragment;
    "EscrowTemplateAdded(address,uint256)": EventFragment;
    "EscrowTemplateRemoved(address,uint256)": EventFragment;
    "MisoInitFermenter(address)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "EscrowCreated"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EscrowTemplateAdded"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "EscrowTemplateRemoved"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "MisoInitFermenter"): EventFragment;
}

export class MISOFermenter extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: MISOFermenterInterface;

  functions: {
    VAULT_MINTER_ROLE(overrides?: CallOverrides): Promise<[string]>;

    "VAULT_MINTER_ROLE()"(overrides?: CallOverrides): Promise<[string]>;

    accessControls(overrides?: CallOverrides): Promise<[string]>;

    "accessControls()"(overrides?: CallOverrides): Promise<[string]>;

    addEscrowTemplate(
      _escrowTemplate: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "addEscrowTemplate(address)"(
      _escrowTemplate: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    createEscrow(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "createEscrow(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    escrowTemplateId(overrides?: CallOverrides): Promise<[BigNumber]>;

    "escrowTemplateId()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    escrows(arg0: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    "escrows(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getTemplateId(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { templateId: BigNumber }>;

    "getTemplateId(address)"(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { templateId: BigNumber }>;

    hasVaultMinterRole(
      _address: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    "hasVaultMinterRole(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    initMISOFermenter(
      _accessControls: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "initMISOFermenter(address)"(
      _accessControls: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    isChildEscrow(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    "isChildEscrow(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    locked(overrides?: CallOverrides): Promise<[boolean]>;

    "locked()"(overrides?: CallOverrides): Promise<[boolean]>;

    numberOfTokens(overrides?: CallOverrides): Promise<[BigNumber]>;

    "numberOfTokens()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    removeEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "removeEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    setLocked(
      _locked: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "setLocked(bool)"(
      _locked: boolean,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  VAULT_MINTER_ROLE(overrides?: CallOverrides): Promise<string>;

  "VAULT_MINTER_ROLE()"(overrides?: CallOverrides): Promise<string>;

  accessControls(overrides?: CallOverrides): Promise<string>;

  "accessControls()"(overrides?: CallOverrides): Promise<string>;

  addEscrowTemplate(
    _escrowTemplate: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "addEscrowTemplate(address)"(
    _escrowTemplate: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  createEscrow(
    _templateId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "createEscrow(uint256)"(
    _templateId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  escrowTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

  "escrowTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

  escrows(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

  "escrows(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getEscrowTemplate(
    _templateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getEscrowTemplate(uint256)"(
    _templateId: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  getTemplateId(
    _escrowTemplate: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "getTemplateId(address)"(
    _escrowTemplate: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  hasVaultMinterRole(
    _address: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  "hasVaultMinterRole(address)"(
    _address: string,
    overrides?: CallOverrides
  ): Promise<boolean>;

  initMISOFermenter(
    _accessControls: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "initMISOFermenter(address)"(
    _accessControls: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  isChildEscrow(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber] & {
      exists: boolean;
      templateId: BigNumber;
      index: BigNumber;
    }
  >;

  "isChildEscrow(address)"(
    arg0: string,
    overrides?: CallOverrides
  ): Promise<
    [boolean, BigNumber, BigNumber] & {
      exists: boolean;
      templateId: BigNumber;
      index: BigNumber;
    }
  >;

  locked(overrides?: CallOverrides): Promise<boolean>;

  "locked()"(overrides?: CallOverrides): Promise<boolean>;

  numberOfTokens(overrides?: CallOverrides): Promise<BigNumber>;

  "numberOfTokens()"(overrides?: CallOverrides): Promise<BigNumber>;

  removeEscrowTemplate(
    _templateId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "removeEscrowTemplate(uint256)"(
    _templateId: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  setLocked(
    _locked: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "setLocked(bool)"(
    _locked: boolean,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    VAULT_MINTER_ROLE(overrides?: CallOverrides): Promise<string>;

    "VAULT_MINTER_ROLE()"(overrides?: CallOverrides): Promise<string>;

    accessControls(overrides?: CallOverrides): Promise<string>;

    "accessControls()"(overrides?: CallOverrides): Promise<string>;

    addEscrowTemplate(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "addEscrowTemplate(address)"(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<void>;

    createEscrow(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "createEscrow(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    escrowTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

    "escrowTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    escrows(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>;

    "escrows(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    getTemplateId(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplateId(address)"(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasVaultMinterRole(
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    "hasVaultMinterRole(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<boolean>;

    initMISOFermenter(
      _accessControls: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "initMISOFermenter(address)"(
      _accessControls: string,
      overrides?: CallOverrides
    ): Promise<void>;

    isChildEscrow(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    "isChildEscrow(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<
      [boolean, BigNumber, BigNumber] & {
        exists: boolean;
        templateId: BigNumber;
        index: BigNumber;
      }
    >;

    locked(overrides?: CallOverrides): Promise<boolean>;

    "locked()"(overrides?: CallOverrides): Promise<boolean>;

    numberOfTokens(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfTokens()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "removeEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    setLocked(_locked: boolean, overrides?: CallOverrides): Promise<void>;

    "setLocked(bool)"(
      _locked: boolean,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    EscrowCreated(
      owner: string | null,
      addr: string | null,
      escrowTemplate: null
    ): EventFilter;

    EscrowTemplateAdded(newTemplate: null, templateId: null): EventFilter;

    EscrowTemplateRemoved(template: null, templateId: null): EventFilter;

    MisoInitFermenter(sender: null): EventFilter;
  };

  estimateGas: {
    VAULT_MINTER_ROLE(overrides?: CallOverrides): Promise<BigNumber>;

    "VAULT_MINTER_ROLE()"(overrides?: CallOverrides): Promise<BigNumber>;

    accessControls(overrides?: CallOverrides): Promise<BigNumber>;

    "accessControls()"(overrides?: CallOverrides): Promise<BigNumber>;

    addEscrowTemplate(
      _escrowTemplate: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "addEscrowTemplate(address)"(
      _escrowTemplate: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    createEscrow(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "createEscrow(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    escrowTemplateId(overrides?: CallOverrides): Promise<BigNumber>;

    "escrowTemplateId()"(overrides?: CallOverrides): Promise<BigNumber>;

    escrows(arg0: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    "escrows(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getTemplateId(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getTemplateId(address)"(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    hasVaultMinterRole(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "hasVaultMinterRole(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    initMISOFermenter(
      _accessControls: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "initMISOFermenter(address)"(
      _accessControls: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    isChildEscrow(arg0: string, overrides?: CallOverrides): Promise<BigNumber>;

    "isChildEscrow(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    locked(overrides?: CallOverrides): Promise<BigNumber>;

    "locked()"(overrides?: CallOverrides): Promise<BigNumber>;

    numberOfTokens(overrides?: CallOverrides): Promise<BigNumber>;

    "numberOfTokens()"(overrides?: CallOverrides): Promise<BigNumber>;

    removeEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "removeEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    setLocked(_locked: boolean, overrides?: Overrides): Promise<BigNumber>;

    "setLocked(bool)"(
      _locked: boolean,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    VAULT_MINTER_ROLE(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "VAULT_MINTER_ROLE()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    accessControls(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "accessControls()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    addEscrowTemplate(
      _escrowTemplate: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "addEscrowTemplate(address)"(
      _escrowTemplate: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    createEscrow(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "createEscrow(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    escrowTemplateId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "escrowTemplateId()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    escrows(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "escrows(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getTemplateId(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getTemplateId(address)"(
      _escrowTemplate: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    hasVaultMinterRole(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "hasVaultMinterRole(address)"(
      _address: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    initMISOFermenter(
      _accessControls: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "initMISOFermenter(address)"(
      _accessControls: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    isChildEscrow(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "isChildEscrow(address)"(
      arg0: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    locked(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "locked()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    numberOfTokens(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "numberOfTokens()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeEscrowTemplate(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "removeEscrowTemplate(uint256)"(
      _templateId: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    setLocked(
      _locked: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "setLocked(bool)"(
      _locked: boolean,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
