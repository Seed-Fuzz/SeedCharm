/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface PairsHelperInterface extends ethers.utils.Interface {
  functions: {
    "owner()": FunctionFragment;
    "pagesLength(address,uint256,uint256)": FunctionFragment;
    "pairsAddresses(address)": FunctionFragment;
    "pairsLength(address)": FunctionFragment;
    "tokensAddresses(address)": FunctionFragment;
    "uniqueAddressesHelperAddress()": FunctionFragment;
    "updateSlot(bytes32,bytes32)": FunctionFragment;
    "wethAddress()": FunctionFragment;
  };

  encodeFunctionData(functionFragment: "owner", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "pagesLength",
    values: [string, BigNumberish, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "pairsAddresses",
    values: [string]
  ): string;
  encodeFunctionData(functionFragment: "pairsLength", values: [string]): string;
  encodeFunctionData(
    functionFragment: "tokensAddresses",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "uniqueAddressesHelperAddress",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "updateSlot",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "wethAddress",
    values?: undefined
  ): string;

  decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "pagesLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pairsAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "pairsLength",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "tokensAddresses",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "uniqueAddressesHelperAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "updateSlot", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "wethAddress",
    data: BytesLike
  ): Result;

  events: {};
}

export class PairsHelper extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: PairsHelperInterface;

  functions: {
    owner(overrides?: CallOverrides): Promise<[string]>;

    "owner()"(overrides?: CallOverrides): Promise<[string]>;

    "pagesLength(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "pagesLength(address,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "pairsAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "pairsAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "pairsAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    pairsLength(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "pairsLength(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "tokensAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "tokensAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    "tokensAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string[]]>;

    uniqueAddressesHelperAddress(overrides?: CallOverrides): Promise<[string]>;

    "uniqueAddressesHelperAddress()"(
      overrides?: CallOverrides
    ): Promise<[string]>;

    updateSlot(
      slot: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "updateSlot(bytes32,bytes32)"(
      slot: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    wethAddress(overrides?: CallOverrides): Promise<[string]>;

    "wethAddress()"(overrides?: CallOverrides): Promise<[string]>;
  };

  owner(overrides?: CallOverrides): Promise<string>;

  "owner()"(overrides?: CallOverrides): Promise<string>;

  "pagesLength(address,uint256,uint256)"(
    factoryAddress: string,
    pageSize: BigNumberish,
    offset: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "pagesLength(address,uint256)"(
    factoryAddress: string,
    pageSize: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "pairsAddresses(address)"(
    factoryAddress: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "pairsAddresses(address,uint256,uint256,uint256)"(
    factoryAddress: string,
    pageSize: BigNumberish,
    pageNbr: BigNumberish,
    offset: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "pairsAddresses(address,uint256,uint256)"(
    factoryAddress: string,
    pageSize: BigNumberish,
    pageNbr: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  pairsLength(
    factoryAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "pairsLength(address)"(
    factoryAddress: string,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "tokensAddresses(address)"(
    factoryAddress: string,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "tokensAddresses(address,uint256,uint256,uint256)"(
    factoryAddress: string,
    pageSize: BigNumberish,
    pageNbr: BigNumberish,
    offset: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  "tokensAddresses(address,uint256,uint256)"(
    factoryAddress: string,
    pageSize: BigNumberish,
    pageNbr: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string[]>;

  uniqueAddressesHelperAddress(overrides?: CallOverrides): Promise<string>;

  "uniqueAddressesHelperAddress()"(overrides?: CallOverrides): Promise<string>;

  updateSlot(
    slot: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "updateSlot(bytes32,bytes32)"(
    slot: BytesLike,
    value: BytesLike,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  wethAddress(overrides?: CallOverrides): Promise<string>;

  "wethAddress()"(overrides?: CallOverrides): Promise<string>;

  callStatic: {
    owner(overrides?: CallOverrides): Promise<string>;

    "owner()"(overrides?: CallOverrides): Promise<string>;

    "pagesLength(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pagesLength(address,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pairsAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "pairsAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "pairsAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    pairsLength(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pairsLength(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokensAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "tokensAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    "tokensAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string[]>;

    uniqueAddressesHelperAddress(overrides?: CallOverrides): Promise<string>;

    "uniqueAddressesHelperAddress()"(
      overrides?: CallOverrides
    ): Promise<string>;

    updateSlot(
      slot: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "updateSlot(bytes32,bytes32)"(
      slot: BytesLike,
      value: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    wethAddress(overrides?: CallOverrides): Promise<string>;

    "wethAddress()"(overrides?: CallOverrides): Promise<string>;
  };

  filters: {};

  estimateGas: {
    owner(overrides?: CallOverrides): Promise<BigNumber>;

    "owner()"(overrides?: CallOverrides): Promise<BigNumber>;

    "pagesLength(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pagesLength(address,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pairsAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pairsAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pairsAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    pairsLength(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "pairsLength(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokensAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokensAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "tokensAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    uniqueAddressesHelperAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "uniqueAddressesHelperAddress()"(
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    updateSlot(
      slot: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "updateSlot(bytes32,bytes32)"(
      slot: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<BigNumber>;

    wethAddress(overrides?: CallOverrides): Promise<BigNumber>;

    "wethAddress()"(overrides?: CallOverrides): Promise<BigNumber>;
  };

  populateTransaction: {
    owner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "pagesLength(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pagesLength(address,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pairsAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pairsAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pairsAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    pairsLength(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "pairsLength(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokensAddresses(address)"(
      factoryAddress: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokensAddresses(address,uint256,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      offset: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "tokensAddresses(address,uint256,uint256)"(
      factoryAddress: string,
      pageSize: BigNumberish,
      pageNbr: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    uniqueAddressesHelperAddress(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "uniqueAddressesHelperAddress()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    updateSlot(
      slot: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "updateSlot(bytes32,bytes32)"(
      slot: BytesLike,
      value: BytesLike,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    wethAddress(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "wethAddress()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;
  };
}
