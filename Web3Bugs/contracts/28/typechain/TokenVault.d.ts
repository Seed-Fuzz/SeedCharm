/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
} from "ethers";
import {
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "@ethersproject/contracts";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";

interface TokenVaultInterface extends ethers.utils.Interface {
  functions: {
    "allDepositIds(uint256)": FunctionFragment;
    "depositId()": FunctionFragment;
    "getItemAtUserIndex(uint256,address,address)": FunctionFragment;
    "getLockedItemAtId(uint256)": FunctionFragment;
    "getUserLockedItemAtIndex(address,uint256)": FunctionFragment;
    "lockTokens(address,uint256,uint256,address)": FunctionFragment;
    "lockedItem(uint256)": FunctionFragment;
    "withdrawTokens(address,uint256,uint256,uint256)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "allDepositIds",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(functionFragment: "depositId", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getItemAtUserIndex",
    values: [BigNumberish, string, string]
  ): string;
  encodeFunctionData(
    functionFragment: "getLockedItemAtId",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "getUserLockedItemAtIndex",
    values: [string, BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "lockTokens",
    values: [string, BigNumberish, BigNumberish, string]
  ): string;
  encodeFunctionData(
    functionFragment: "lockedItem",
    values: [BigNumberish]
  ): string;
  encodeFunctionData(
    functionFragment: "withdrawTokens",
    values: [string, BigNumberish, BigNumberish, BigNumberish]
  ): string;

  decodeFunctionResult(
    functionFragment: "allDepositIds",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "depositId", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getItemAtUserIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getLockedItemAtId",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getUserLockedItemAtIndex",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "lockTokens", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lockedItem", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "withdrawTokens",
    data: BytesLike
  ): Result;

  events: {
    "onLock(address,address,uint256)": EventFragment;
    "onUnlock(address,uint256)": EventFragment;
  };

  getEvent(nameOrSignatureOrTopic: "onLock"): EventFragment;
  getEvent(nameOrSignatureOrTopic: "onUnlock"): EventFragment;
}

export class TokenVault extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  on(event: EventFilter | string, listener: Listener): this;
  once(event: EventFilter | string, listener: Listener): this;
  addListener(eventName: EventFilter | string, listener: Listener): this;
  removeAllListeners(eventName: EventFilter | string): this;
  removeListener(eventName: any, listener: Listener): this;

  interface: TokenVaultInterface;

  functions: {
    allDepositIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    "allDepositIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber]>;

    depositId(overrides?: CallOverrides): Promise<[BigNumber]>;

    "depositId()"(overrides?: CallOverrides): Promise<[BigNumber]>;

    getItemAtUserIndex(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    "getItemAtUserIndex(uint256,address,address)"(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    getLockedItemAtId(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    "getLockedItemAtId(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    getUserLockedItemAtIndex(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "getUserLockedItemAtIndex(address,uint256)"(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[string]>;

    lockTokens(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "lockTokens(address,uint256,uint256,address)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    lockedItem(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        amount: BigNumber;
        unlockTime: BigNumber;
        owner: string;
        userIndex: BigNumber;
      }
    >;

    "lockedItem(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        amount: BigNumber;
        unlockTime: BigNumber;
        owner: string;
        userIndex: BigNumber;
      }
    >;

    withdrawTokens(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;

    "withdrawTokens(address,uint256,uint256,uint256)"(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<ContractTransaction>;
  };

  allDepositIds(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  "allDepositIds(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  depositId(overrides?: CallOverrides): Promise<BigNumber>;

  "depositId()"(overrides?: CallOverrides): Promise<BigNumber>;

  getItemAtUserIndex(
    _index: BigNumberish,
    _tokenAddress: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

  "getItemAtUserIndex(uint256,address,address)"(
    _index: BigNumberish,
    _tokenAddress: string,
    _user: string,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

  getLockedItemAtId(
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

  "getLockedItemAtId(uint256)"(
    _id: BigNumberish,
    overrides?: CallOverrides
  ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

  getUserLockedItemAtIndex(
    _user: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  "getUserLockedItemAtIndex(address,uint256)"(
    _user: string,
    _index: BigNumberish,
    overrides?: CallOverrides
  ): Promise<string>;

  lockTokens(
    _tokenAddress: string,
    _amount: BigNumberish,
    _unlockTime: BigNumberish,
    _withdrawer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "lockTokens(address,uint256,uint256,address)"(
    _tokenAddress: string,
    _amount: BigNumberish,
    _unlockTime: BigNumberish,
    _withdrawer: string,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  lockedItem(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, string, BigNumber] & {
      amount: BigNumber;
      unlockTime: BigNumber;
      owner: string;
      userIndex: BigNumber;
    }
  >;

  "lockedItem(uint256)"(
    arg0: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, string, BigNumber] & {
      amount: BigNumber;
      unlockTime: BigNumber;
      owner: string;
      userIndex: BigNumber;
    }
  >;

  withdrawTokens(
    _tokenAddress: string,
    _index: BigNumberish,
    _id: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  "withdrawTokens(address,uint256,uint256,uint256)"(
    _tokenAddress: string,
    _index: BigNumberish,
    _id: BigNumberish,
    _amount: BigNumberish,
    overrides?: Overrides
  ): Promise<ContractTransaction>;

  callStatic: {
    allDepositIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allDepositIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositId(overrides?: CallOverrides): Promise<BigNumber>;

    "depositId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getItemAtUserIndex(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    "getItemAtUserIndex(uint256,address,address)"(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    getLockedItemAtId(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    "getLockedItemAtId(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<[BigNumber, BigNumber, string, BigNumber]>;

    getUserLockedItemAtIndex(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    "getUserLockedItemAtIndex(address,uint256)"(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<string>;

    lockTokens(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "lockTokens(address,uint256,uint256,address)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lockedItem(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        amount: BigNumber;
        unlockTime: BigNumber;
        owner: string;
        userIndex: BigNumber;
      }
    >;

    "lockedItem(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, string, BigNumber] & {
        amount: BigNumber;
        unlockTime: BigNumber;
        owner: string;
        userIndex: BigNumber;
      }
    >;

    withdrawTokens(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    "withdrawTokens(address,uint256,uint256,uint256)"(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {
    onLock(tokenAddress: null, user: null, amount: null): EventFilter;

    onUnlock(tokenAddress: null, amount: null): EventFilter;
  };

  estimateGas: {
    allDepositIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "allDepositIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    depositId(overrides?: CallOverrides): Promise<BigNumber>;

    "depositId()"(overrides?: CallOverrides): Promise<BigNumber>;

    getItemAtUserIndex(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getItemAtUserIndex(uint256,address,address)"(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getLockedItemAtId(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getLockedItemAtId(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getUserLockedItemAtIndex(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "getUserLockedItemAtIndex(address,uint256)"(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lockTokens(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "lockTokens(address,uint256,uint256,address)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: Overrides
    ): Promise<BigNumber>;

    lockedItem(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "lockedItem(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdrawTokens(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;

    "withdrawTokens(address,uint256,uint256,uint256)"(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    allDepositIds(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "allDepositIds(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    depositId(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "depositId()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getItemAtUserIndex(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getItemAtUserIndex(uint256,address,address)"(
      _index: BigNumberish,
      _tokenAddress: string,
      _user: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getLockedItemAtId(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getLockedItemAtId(uint256)"(
      _id: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getUserLockedItemAtIndex(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "getUserLockedItemAtIndex(address,uint256)"(
      _user: string,
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lockTokens(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "lockTokens(address,uint256,uint256,address)"(
      _tokenAddress: string,
      _amount: BigNumberish,
      _unlockTime: BigNumberish,
      _withdrawer: string,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    lockedItem(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lockedItem(uint256)"(
      arg0: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdrawTokens(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;

    "withdrawTokens(address,uint256,uint256,uint256)"(
      _tokenAddress: string,
      _index: BigNumberish,
      _id: BigNumberish,
      _amount: BigNumberish,
      overrides?: Overrides
    ): Promise<PopulatedTransaction>;
  };
}
