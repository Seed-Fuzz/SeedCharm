/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { DocumentHepler } from "../DocumentHepler";

export class DocumentHepler__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<DocumentHepler> {
    return super.deploy(overrides || {}) as Promise<DocumentHepler>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): DocumentHepler {
    return super.attach(address) as DocumentHepler;
  }
  connect(signer: Signer): DocumentHepler__factory {
    return super.connect(signer) as DocumentHepler__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DocumentHepler {
    return new Contract(address, _abi, signerOrProvider) as DocumentHepler;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_document",
        type: "address",
      },
    ],
    name: "getDocuments",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "data",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "lastModified",
            type: "uint256",
          },
        ],
        internalType: "struct DocumentHepler.Document[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061053d806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806327f50a2d14610030575b600080fd5b61004361003e36600461033b565b610059565b604051610050919061042d565b60405180910390f35b606060008290506000816001600160a01b0316633d1c22736040518163ffffffff1660e01b815260040160206040518083038186803b15801561009b57600080fd5b505afa1580156100af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100d391906103e9565b905060608167ffffffffffffffff811180156100ee57600080fd5b5060405190808252806020026020018201604052801561012857816020015b61011561029e565b81526020019060019003908161010d5790505b50905060005b828110156102955760405163635aa3f360e11b81526060906001600160a01b0386169063c6b547e6906101659085906004016104ce565b60006040518083038186803b15801561017d57600080fd5b505afa158015610191573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526101b99190810190610369565b604051631f32da9960e21b81529091506001600160a01b03861690637ccb6a64906101e89084906004016104bb565b60006040518083038186803b15801561020057600080fd5b505afa158015610214573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261023c91908101906103a4565b84848151811061024857fe5b602002602001015160200185858151811061025f57fe5b60200260200101516040018281525082905250508083838151811061028057fe5b6020908102919091010151525060010161012e565b50949350505050565b60405180606001604052806060815260200160608152602001600081525090565b600082601f8301126102cf578081fd5b815167ffffffffffffffff808211156102e6578283fd5b604051601f8301601f191681016020018281118282101715610306578485fd5b60405282815292508284830160200186101561032157600080fd5b6103328360208301602088016104d7565b50505092915050565b60006020828403121561034c578081fd5b81356001600160a01b0381168114610362578182fd5b9392505050565b60006020828403121561037a578081fd5b815167ffffffffffffffff811115610390578182fd5b61039c848285016102bf565b949350505050565b600080604083850312156103b6578081fd5b825167ffffffffffffffff8111156103cc578182fd5b6103d8858286016102bf565b925050602083015190509250929050565b6000602082840312156103fa578081fd5b5051919050565b600081518084526104198160208601602086016104d7565b601f01601f19169290920160200192915050565b60208082528251828201819052600091906040908185019080840286018301878501865b838110156104ad57603f1989840301855281516060815181865261047782870182610401565b915050888201518582038a87015261048f8282610401565b92890151958901959095525094870194925090860190600101610451565b509098975050505050505050565b6000602082526103626020830184610401565b90815260200190565b60005b838110156104f25781810151838201526020016104da565b83811115610501576000848401525b5050505056fea26469706673582212207888a5783f410fb89463027539875d0b8678193aedee64b21641fce344ac238b64736f6c634300060c0033";
