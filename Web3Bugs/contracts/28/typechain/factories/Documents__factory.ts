/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Documents } from "../Documents";

export class Documents__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Documents> {
    return super.deploy(overrides || {}) as Promise<Documents>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Documents {
    return super.attach(address) as Documents;
  }
  connect(signer: Signer): Documents__factory {
    return super.connect(signer) as Documents__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Documents {
    return new Contract(address, _abi, signerOrProvider) as Documents;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "DocumentRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_data",
        type: "string",
      },
    ],
    name: "DocumentUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "getAllDocuments",
    outputs: [
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "getDocument",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getDocumentCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_index",
        type: "uint256",
      },
    ],
    name: "getDocumentName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061054b806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80633d1c2273146100515780637ccb6a641461006f5780639fa5f50b14610090578063c6b547e6146100a5575b600080fd5b6100596100c5565b604051610066919061050c565b60405180910390f35b61008261007d366004610363565b6100cb565b6040516100669291906104bd565b6100986101b7565b6040516100669190610443565b6100b86100b33660046103d0565b61028f565b60405161006691906104a3565b60025490565b606060008084846040516100e0929190610433565b908152602001604051809103902060010160008585604051610103929190610433565b908152604080516020928190038301812054845460026101006001831615026000190190911604601f8101859004850283018501909352828252640100000000900467ffffffffffffffff1692909184918301828280156101a55780601f1061017a576101008083540402835291602001916101a5565b820191906000526020600020905b81548152906001019060200180831161018857829003601f168201915b50505050509150915091509250929050565b60606002805480602002602001604051908101604052809291908181526020016000905b828210156102865760008481526020908190208301805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156102725780601f1061024757610100808354040283529160200191610272565b820191906000526020600020905b81548152906001019060200180831161025557829003601f168201915b5050505050815260200190600101906101db565b50505050905090565b60025460609082106102bc5760405162461bcd60e51b81526004016102b3906104df565b60405180910390fd5b600282815481106102c957fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156103575780601f1061032c57610100808354040283529160200191610357565b820191906000526020600020905b81548152906001019060200180831161033a57829003601f168201915b50505050509050919050565b60008060208385031215610375578182fd5b823567ffffffffffffffff8082111561038c578384fd5b818501915085601f83011261039f578384fd5b8135818111156103ad578485fd5b8660208285010111156103be578485fd5b60209290920196919550909350505050565b6000602082840312156103e1578081fd5b5035919050565b60008151808452815b8181101561040d576020818501810151868301820152016103f1565b8181111561041e5782602083870101525b50601f01601f19169290920160200192915050565b6000828483379101908152919050565b6000602080830181845280855180835260408601915060408482028701019250838701855b8281101561049657603f198886030184526104848583516103e8565b94509285019290850190600101610468565b5092979650505050505050565b6000602082526104b660208301846103e8565b9392505050565b6000604082526104d060408301856103e8565b90508260208301529392505050565b602080825260139082015272496e646578206f7574206f6620626f756e647360681b604082015260600190565b9081526020019056fea26469706673582212202a90df2047ef6e5caf4f8b265a2ac1ae1d065ad24579f0bc28f97886bd193b9b64736f6c634300060c0033";
