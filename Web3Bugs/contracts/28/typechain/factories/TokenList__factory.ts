/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { TokenList } from "../TokenList";

export class TokenList__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<TokenList> {
    return super.deploy(overrides || {}) as Promise<TokenList>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): TokenList {
    return super.attach(address) as TokenList;
  }
  connect(signer: Signer): TokenList__factory {
    return super.connect(signer) as TokenList__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TokenList {
    return new Contract(address, _abi, signerOrProvider) as TokenList;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "hasPoints",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_token",
        type: "address",
      },
    ],
    name: "initPointList",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_account",
        type: "address",
      },
    ],
    name: "isInList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102d7806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631cd53d5514610051578063283ba19b14610091578063fa33bcf3146100b9578063fc0c546a146100df575b600080fd5b61007d6004803603604081101561006757600080fd5b506001600160a01b038135169060200135610103565b604080519115158252519081900360200190f35b6100b7600480360360208110156100a757600080fd5b50356001600160a01b0316610189565b005b61007d600480360360208110156100cf57600080fd5b50356001600160a01b031661020e565b6100e7610292565b604080516001600160a01b039092168252519081900360200190f35b60008054604080516370a0823160e01b81526001600160a01b0386811660048301529151859392909216916370a0823191602480820192602092909190829003018186803b15801561015457600080fd5b505afa158015610168573d6000803e3d6000fd5b505050506040513d602081101561017e57600080fd5b505110159392505050565b600054600160a01b900460ff16156101de576040805162461bcd60e51b8152602060048201526013602482015272105b1c9958591e481a5b9a5d1a585b1a5cd959606a1b604482015290519081900360640190fd5b6000805460ff60a01b196001600160a01b039093166001600160a01b03199091161791909116600160a01b179055565b60008054604080516370a0823160e01b81526001600160a01b0385811660048301529151849392909216916370a0823191602480820192602092909190829003018186803b15801561025f57600080fd5b505afa158015610273573d6000803e3d6000fd5b505050506040513d602081101561028957600080fd5b50511192915050565b6000546001600160a01b03168156fea2646970667358221220ab2ae544420e55a11ac4e5ae08d92f134bd0aa6f759f60c40caa2d8a941c99d564736f6c634300060c0033";
