{
  "contractName": "LPWrapper",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokens",
      "outputs": [
        {
          "internalType": "contract IERC20Extended",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "foreignAsset",
          "type": "address"
        }
      ],
      "name": "createWrapper",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"foreignAsset\",\"type\":\"address\"}],\"name\":\"createWrapper\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"tokens\",\"outputs\":[{\"internalType\":\"contract IERC20Extended\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dex-v2/wrapper/LPWrapper.sol\":\"LPWrapper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/dex-v2/wrapper/LPToken.sol\":{\"keccak256\":\"0x925bedfc5b9ae7a8b95c644f6c08490a2f8f1b4962b3e1357d15d8eb20068b59\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://628c6f306f281144200aabdf2cde6b17d401c4da8858be83a40d7c4981f7b9a3\",\"dweb:/ipfs/QmbWmp8mQoGM7B9AAr3xpfLnGHqLiDsnJewvdrQd4ZVtV7\"]},\"project:/contracts/dex-v2/wrapper/LPWrapper.sol\":{\"keccak256\":\"0xe36a10a026336e1751f073e5c70e1cbe03d6026197703230c9f5c7b860ca60ef\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://9ec37f76754275f81c13463efa8b46b3b662df5bb157aea2774928c979d24536\",\"dweb:/ipfs/QmVzpNNo5ovCVvbd5AcPBKJ6WXiREVmE1DRS9SHbPbBP1c\"]},\"project:/contracts/interfaces/dex-v2/pool/IBasePoolV2.sol\":{\"keccak256\":\"0xaf563d0e1d9be9e944f704fc466b0c2b695c1f2c51d1749fba58cd5b62447be9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8e72d4c8ddefabe5011871258ce550d86d63aac705c60f96d0f2503ee7128839\",\"dweb:/ipfs/QmbPyhb2xahGkzCh7PWWtgDNo85RwjUYJaiTbNNQzP3nfH\"]},\"project:/contracts/interfaces/dex-v2/pool/IVaderPoolV2.sol\":{\"keccak256\":\"0xbcf9ce93c5d47084e35e5bfec9c6322b65ca3f5f308c63dda834e4679565ecda\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4758bbbf5307517d029b4025939066f77966240f44ac2482274cb32397341b44\",\"dweb:/ipfs/QmNWLeZYSqvzgsHRMG1XYZKHdMrpXgof5KDLQzKnXrwNng\"]},\"project:/contracts/interfaces/dex-v2/wrapper/ILPToken.sol\":{\"keccak256\":\"0xcdee369d7b98d067646d9a2329174805f1781628af636bcce6a6ff0db5d985d6\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6b7abb413937523650c7cb3eff8e760ea94a56389fa68c4d0a9e4f4d642586e9\",\"dweb:/ipfs/QmSPhTttc21ymVq5J2mtVHa2hcaaCmfRM8uaEz9iRD4hPc\"]},\"project:/contracts/interfaces/dex-v2/wrapper/ILPWrapper.sol\":{\"keccak256\":\"0x123ede2e812de704de5583ed50e76f051a11ee9da6149489ba76b4a15c27c7c8\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://01df8f7290cca604676ebc3ee8ce66248ae3bac623813746d905359bc404c076\",\"dweb:/ipfs/QmTHuMBFP3uqFPZBeXcJ9eSjYY9y3ZyzEecosYhMktQgEz\"]},\"project:/contracts/interfaces/shared/IERC20Extended.sol\":{\"keccak256\":\"0xe4820549025e254ec014e46e4f10f61a02b98876b54c71aa004cfb714900b88b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://29e0e0802dff7e8d91fee3e0e50e740b406240fbea3288778bffb91818e8bc4c\",\"dweb:/ipfs/QmNniaobupcZZCiooSiD9qSjwDvhHNqXQjGhL35w3DLcjj\"]},\"project:/contracts/shared/ProtocolConstants.sol\":{\"keccak256\":\"0x845b3cdb262b4cc3a2ce4fd0c094c6e6b5e818988cd7c21d4b7b3295b80b7b22\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://763268835823e795ce64059ff8bb147224fb548a4f33b90be4b80b35c59598e2\",\"dweb:/ipfs/QmPbyyps31R4f2PVMpqCbkhWDw8UtG5vfikcNxL6Mg51e5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051611a93380380611a9383398101604081905261002f916101d8565b610038336100b3565b6001600160a01b0381166100a45760405162461bcd60e51b815260206004820152602860248201527f4c50577261707065723a3a636f6e7374727563746f723a204d6973636f6e666960448201526733bab930ba34b7b760c11b60648201526084015b60405180910390fd5b6100ad81610103565b50610208565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61010b61017c565b6001600160a01b0381166101705760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161009b565b610179816100b3565b50565b6000546001600160a01b031633146101d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161009b565b565b6000602082840312156101ea57600080fd5b81516001600160a01b038116811461020157600080fd5b9392505050565b61187c806102176000396000f3fe60806040523480156200001157600080fd5b50600436106200005e5760003560e01c8063715018a614620000635780638da5cb5b146200006f578063a7c4f0ef1462000098578063e486033914620000af578063f2fde38b14620000db575b600080fd5b6200006d620000f2565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6200006d620000a936600462000368565b6200010a565b6200007c620000c036600462000368565b6001602052600090815260409020546001600160a01b031681565b6200006d620000ec36600462000368565b62000219565b620000fc62000298565b620001086000620002f4565b565b6200011462000298565b6001600160a01b038181166000908152600160205260409020541615620001945760405162461bcd60e51b815260206004820152602960248201527f4c50577261707065723a3a637265617465577261707065723a20416c726561646044820152681e4810dc99585d195960ba1b60648201526084015b60405180910390fd5b80620001a86000546001600160a01b031690565b604051620001b69062000344565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620001ea573d6000803e3d6000fd5b506001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6200022362000298565b6001600160a01b0381166200028a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200018b565b6200029581620002f4565b50565b6000546001600160a01b03163314620001085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200018b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114b7806200039083390190565b6001600160a01b03811681146200029557600080fd5b6000602082840312156200037b57600080fd5b8135620003888162000352565b939250505056fe60c06040523480156200001157600080fd5b50604051620014b7380380620014b7833981016040819052620000349162000470565b6200003f82620000b8565b6200004a8362000164565b81516200005f906003906020850190620003b4565b50805162000075906004906020840190620003b4565b505050620000926200008c6200022160201b60201c565b62000225565b6001600160a01b03808316608052811660a052620000b08162000277565b505062000636565b60606200015e826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015620000f857600080fd5b505afa1580156200010d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001379190810190620004f8565b60408051808201909152600a8152690202d2055534456204c560b41b6020820152620002fa565b92915050565b60606200015e604051806040016040528060028152602001610ac560f31b815250836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620001bf57600080fd5b505afa158015620001d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001fe9190810190620004f8565b6040805180820190915260068152657c555344562960d01b602082015262000325565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200028162000356565b6001600160a01b038116620002ec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620002f78162000225565b50565b60606200031e8383604051806020016040528060008152506200032560201b60201c565b9392505050565b60608383836040516020016200033e93929190620005b0565b60405160208183030381529060405290509392505050565b6005546001600160a01b03163314620003b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002e3565b565b828054620003c290620005f9565b90600052602060002090601f016020900481019282620003e6576000855562000431565b82601f106200040157805160ff191683800117855562000431565b8280016001018555821562000431579182015b828111156200043157825182559160200191906001019062000414565b506200043f92915062000443565b5090565b5b808211156200043f576000815560010162000444565b6001600160a01b0381168114620002f757600080fd5b600080604083850312156200048457600080fd5b825162000491816200045a565b6020840151909250620004a4816200045a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004e2578181015183820152602001620004c8565b83811115620004f2576000848401525b50505050565b6000602082840312156200050b57600080fd5b81516001600160401b03808211156200052357600080fd5b818401915084601f8301126200053857600080fd5b8151818111156200054d576200054d620004af565b604051601f8201601f19908116603f01168101908382118183101715620005785762000578620004af565b816040528281528760208487010111156200059257600080fd5b620005a5836020830160208801620004c5565b979650505050505050565b60008451620005c4818460208901620004c5565b845190830190620005da818360208901620004c5565b8451910190620005ef818360208801620004c5565b0195945050505050565b600181811c908216806200060e57607f821691505b602082108114156200063057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051610e466200067160003960008181610161015281816103a1015261049701526000818161024701526103760152610e466000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a3462b1411610071578063a3462b1414610242578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102a257600080fd5b806370a082311461020e578063715018a6146102215780638da5cb5b1461022957806395d89b411461023a57600080fd5b806323b872dd116100e957806323b872dd146101b1578063313ce567146101c457806339509351146101d357806340c10f19146101e657806342966c68146101fb57600080fd5b806306fdde031461011b578063095ea7b31461013957806316f0115b1461015c57806318160ddd1461019b575b600080fd5b6101236102b5565b6040516101309190610c37565b60405180910390f35b61014c610147366004610ca3565b610347565b6040519015158152602001610130565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b6101a361035f565b604051908152602001610130565b61014c6101bf366004610ccd565b610422565b60405160128152602001610130565b61014c6101e1366004610ca3565b610446565b6101f96101f4366004610ca3565b610468565b005b6101f9610209366004610d09565b61047e565b6101a361021c366004610d22565b610493565b6101f961050d565b6005546001600160a01b0316610183565b610123610521565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b61014c610277366004610ca3565b610530565b61014c61028a366004610ca3565b6105b0565b6101a361029d366004610d44565b6105be565b6101f96102b0366004610d22565b6105e9565b6060600380546102c490610d77565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610d77565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b60003361035581858561065f565b5060019392505050565b6040516305c35d0f60e51b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063b86ba1e09060240160206040518083038186803b1580156103e557600080fd5b505afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190610db2565b905090565b600033610430858285610784565b61043b8585856107fe565b506001949350505050565b60003361035581858561045983836105be565b6104639190610de1565b61065f565b6104706109a2565b61047a82826109fc565b5050565b6104866109a2565b6104903382610abb565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156104ea576002546104da61035f565b6104e49190610df9565b92915050565b6001600160a01b0382166000908152602081905260409020546104e4565b919050565b6105156109a2565b61051f6000610be5565b565b6060600480546102c490610d77565b6000338161053e82866105be565b9050838110156105a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61043b828686840361065f565b6000336103558185856107fe565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105f16109a2565b6001600160a01b0381166106565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059a565b61049081610be5565b6001600160a01b0383166106c15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161059a565b6001600160a01b0382166107225760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161059a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061079084846105be565b905060001981146107f857818110156107eb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161059a565b6107f8848484840361065f565b50505050565b6001600160a01b0383166108625760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161059a565b6001600160a01b0382166108c45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161059a565b6001600160a01b0383166000908152602081905260409020548181101561093c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161059a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107f8565b6005546001600160a01b0316331461051f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161059a565b6001600160a01b038216610a525760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161059a565b8060026000828254610a649190610de1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610b1b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161059a565b6001600160a01b03821660009081526020819052604090205481811015610b8f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161059a565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610777565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c6457858101830151858201604001528201610c48565b81811115610c76576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461050857600080fd5b60008060408385031215610cb657600080fd5b610cbf83610c8c565b946020939093013593505050565b600080600060608486031215610ce257600080fd5b610ceb84610c8c565b9250610cf960208501610c8c565b9150604084013590509250925092565b600060208284031215610d1b57600080fd5b5035919050565b600060208284031215610d3457600080fd5b610d3d82610c8c565b9392505050565b60008060408385031215610d5757600080fd5b610d6083610c8c565b9150610d6e60208401610c8c565b90509250929050565b600181811c90821680610d8b57607f821691505b60208210811415610dac57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610dc457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610df457610df4610dcb565b500190565b600082821015610e0b57610e0b610dcb565b50039056fea2646970667358221220afe326bc1212246506c4a733e6a58e5cd69710386a65e888e423a105a904d52a64736f6c63430008090033a2646970667358221220992690d1253de0771f2f2e787e7ecb44fdc6dbff5af2f29f981c65bf7179677e64736f6c63430008090033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200005e5760003560e01c8063715018a614620000635780638da5cb5b146200006f578063a7c4f0ef1462000098578063e486033914620000af578063f2fde38b14620000db575b600080fd5b6200006d620000f2565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b6200006d620000a936600462000368565b6200010a565b6200007c620000c036600462000368565b6001602052600090815260409020546001600160a01b031681565b6200006d620000ec36600462000368565b62000219565b620000fc62000298565b620001086000620002f4565b565b6200011462000298565b6001600160a01b038181166000908152600160205260409020541615620001945760405162461bcd60e51b815260206004820152602960248201527f4c50577261707065723a3a637265617465577261707065723a20416c726561646044820152681e4810dc99585d195960ba1b60648201526084015b60405180910390fd5b80620001a86000546001600160a01b031690565b604051620001b69062000344565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620001ea573d6000803e3d6000fd5b506001600160a01b03918216600090815260016020526040902080546001600160a01b03191691909216179055565b6200022362000298565b6001600160a01b0381166200028a5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016200018b565b6200029581620002f4565b50565b6000546001600160a01b03163314620001085760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200018b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6114b7806200039083390190565b6001600160a01b03811681146200029557600080fd5b6000602082840312156200037b57600080fd5b8135620003888162000352565b939250505056fe60c06040523480156200001157600080fd5b50604051620014b7380380620014b7833981016040819052620000349162000470565b6200003f82620000b8565b6200004a8362000164565b81516200005f906003906020850190620003b4565b50805162000075906004906020840190620003b4565b505050620000926200008c6200022160201b60201c565b62000225565b6001600160a01b03808316608052811660a052620000b08162000277565b505062000636565b60606200015e826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015620000f857600080fd5b505afa1580156200010d573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001379190810190620004f8565b60408051808201909152600a8152690202d2055534456204c560b41b6020820152620002fa565b92915050565b60606200015e604051806040016040528060028152602001610ac560f31b815250836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b158015620001bf57600080fd5b505afa158015620001d4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001fe9190810190620004f8565b6040805180820190915260068152657c555344562960d01b602082015262000325565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6200028162000356565b6001600160a01b038116620002ec5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084015b60405180910390fd5b620002f78162000225565b50565b60606200031e8383604051806020016040528060008152506200032560201b60201c565b9392505050565b60608383836040516020016200033e93929190620005b0565b60405160208183030381529060405290509392505050565b6005546001600160a01b03163314620003b25760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620002e3565b565b828054620003c290620005f9565b90600052602060002090601f016020900481019282620003e6576000855562000431565b82601f106200040157805160ff191683800117855562000431565b8280016001018555821562000431579182015b828111156200043157825182559160200191906001019062000414565b506200043f92915062000443565b5090565b5b808211156200043f576000815560010162000444565b6001600160a01b0381168114620002f757600080fd5b600080604083850312156200048457600080fd5b825162000491816200045a565b6020840151909250620004a4816200045a565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60005b83811015620004e2578181015183820152602001620004c8565b83811115620004f2576000848401525b50505050565b6000602082840312156200050b57600080fd5b81516001600160401b03808211156200052357600080fd5b818401915084601f8301126200053857600080fd5b8151818111156200054d576200054d620004af565b604051601f8201601f19908116603f01168101908382118183101715620005785762000578620004af565b816040528281528760208487010111156200059257600080fd5b620005a5836020830160208801620004c5565b979650505050505050565b60008451620005c4818460208901620004c5565b845190830190620005da818360208901620004c5565b8451910190620005ef818360208801620004c5565b0195945050505050565b600181811c908216806200060e57607f821691505b602082108114156200063057634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051610e466200067160003960008181610161015281816103a1015261049701526000818161024701526103760152610e466000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806370a08231116100a2578063a3462b1411610071578063a3462b1414610242578063a457c2d714610269578063a9059cbb1461027c578063dd62ed3e1461028f578063f2fde38b146102a257600080fd5b806370a082311461020e578063715018a6146102215780638da5cb5b1461022957806395d89b411461023a57600080fd5b806323b872dd116100e957806323b872dd146101b1578063313ce567146101c457806339509351146101d357806340c10f19146101e657806342966c68146101fb57600080fd5b806306fdde031461011b578063095ea7b31461013957806316f0115b1461015c57806318160ddd1461019b575b600080fd5b6101236102b5565b6040516101309190610c37565b60405180910390f35b61014c610147366004610ca3565b610347565b6040519015158152602001610130565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610130565b6101a361035f565b604051908152602001610130565b61014c6101bf366004610ccd565b610422565b60405160128152602001610130565b61014c6101e1366004610ca3565b610446565b6101f96101f4366004610ca3565b610468565b005b6101f9610209366004610d09565b61047e565b6101a361021c366004610d22565b610493565b6101f961050d565b6005546001600160a01b0316610183565b610123610521565b6101837f000000000000000000000000000000000000000000000000000000000000000081565b61014c610277366004610ca3565b610530565b61014c61028a366004610ca3565b6105b0565b6101a361029d366004610d44565b6105be565b6101f96102b0366004610d22565b6105e9565b6060600380546102c490610d77565b80601f01602080910402602001604051908101604052809291908181526020018280546102f090610d77565b801561033d5780601f106103125761010080835404028352916020019161033d565b820191906000526020600020905b81548152906001019060200180831161032057829003601f168201915b5050505050905090565b60003361035581858561065f565b5060019392505050565b6040516305c35d0f60e51b81526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660048301526000917f00000000000000000000000000000000000000000000000000000000000000009091169063b86ba1e09060240160206040518083038186803b1580156103e557600080fd5b505afa1580156103f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041d9190610db2565b905090565b600033610430858285610784565b61043b8585856107fe565b506001949350505050565b60003361035581858561045983836105be565b6104639190610de1565b61065f565b6104706109a2565b61047a82826109fc565b5050565b6104866109a2565b6104903382610abb565b50565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316826001600160a01b031614156104ea576002546104da61035f565b6104e49190610df9565b92915050565b6001600160a01b0382166000908152602081905260409020546104e4565b919050565b6105156109a2565b61051f6000610be5565b565b6060600480546102c490610d77565b6000338161053e82866105be565b9050838110156105a35760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61043b828686840361065f565b6000336103558185856107fe565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6105f16109a2565b6001600160a01b0381166106565760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161059a565b61049081610be5565b6001600160a01b0383166106c15760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b606482015260840161059a565b6001600160a01b0382166107225760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b606482015260840161059a565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b600061079084846105be565b905060001981146107f857818110156107eb5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161059a565b6107f8848484840361065f565b50505050565b6001600160a01b0383166108625760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b606482015260840161059a565b6001600160a01b0382166108c45760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b606482015260840161059a565b6001600160a01b0383166000908152602081905260409020548181101561093c5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b606482015260840161059a565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a36107f8565b6005546001600160a01b0316331461051f5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161059a565b6001600160a01b038216610a525760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161059a565b8060026000828254610a649190610de1565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610b1b5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161059a565b6001600160a01b03821660009081526020819052604090205481811015610b8f5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161059a565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9101610777565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610c6457858101830151858201604001528201610c48565b81811115610c76576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461050857600080fd5b60008060408385031215610cb657600080fd5b610cbf83610c8c565b946020939093013593505050565b600080600060608486031215610ce257600080fd5b610ceb84610c8c565b9250610cf960208501610c8c565b9150604084013590509250925092565b600060208284031215610d1b57600080fd5b5035919050565b600060208284031215610d3457600080fd5b610d3d82610c8c565b9392505050565b60008060408385031215610d5757600080fd5b610d6083610c8c565b9150610d6e60208401610c8c565b90509250929050565b600181811c90821680610d8b57607f821691505b60208210811415610dac57634e487b7160e01b600052602260045260246000fd5b50919050565b600060208284031215610dc457600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610df457610df4610dcb565b500190565b600082821015610e0b57610e0b610dcb565b50039056fea2646970667358221220afe326bc1212246506c4a733e6a58e5cd69710386a65e888e423a105a904d52a64736f6c63430008090033a2646970667358221220992690d1253de0771f2f2e787e7ecb44fdc6dbff5af2f29f981c65bf7179677e64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1483:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:110",
                "type": ""
              }
            ],
            "src": "14:290:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:230:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:110",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "573:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "584:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:18:110"
                      },
                      {
                        "hexValue": "4c50577261707065723a3a636f6e7374727563746f723a204d6973636f6e6669",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "589:34:110",
                        "type": "",
                        "value": "LPWrapper::constructor: Misconfi"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "644:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "655:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "640:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "640:18:110"
                      },
                      {
                        "hexValue": "6775726174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "660:10:110",
                        "type": "",
                        "value": "guration"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "633:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:38:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "633:38:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "680:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "692:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "703:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "688:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "688:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "680:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_543dd45bc08fdade38af28de1917813836851c4b04c7f4f038fdabc84f88c8b7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:110",
                "type": ""
              }
            ],
            "src": "309:404:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "892:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "909:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "920:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "902:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "902:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "902:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "943:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "954:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "939:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "939:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "959:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "932:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "932:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "932:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "982:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "993:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "978:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "978:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "998:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "971:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "971:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1053:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1064:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1069:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1042:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1042:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1042:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1087:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1099:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1110:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1095:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1095:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1087:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "869:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "883:4:110",
                "type": ""
              }
            ],
            "src": "718:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1299:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1316:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1327:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1309:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1309:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1309:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1350:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1361:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1346:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1346:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1366:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1339:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1339:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1339:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1389:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1400:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1385:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1385:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1405:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1378:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1378:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1378:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1449:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1461:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1472:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1457:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1457:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1449:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1276:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1290:4:110",
                "type": ""
              }
            ],
            "src": "1125:356:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_543dd45bc08fdade38af28de1917813836851c4b04c7f4f038fdabc84f88c8b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"LPWrapper::constructor: Misconfi\")\n        mstore(add(headStart, 96), \"guration\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2662:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:110",
                "type": ""
              }
            ],
            "src": "14:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "275:86:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "339:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "348:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "351:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "341:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "341:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "341:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "298:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "324:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "329:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "320:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "320:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "333:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "316:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "316:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "305:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "305:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "295:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "295:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "288:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "285:70:110"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "264:5:110",
                "type": ""
              }
            ],
            "src": "222:139:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "450:185:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "496:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "505:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "508:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "498:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "498:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "498:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "471:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "480:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "467:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "467:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "492:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "463:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "460:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "521:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "547:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "534:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "534:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "525:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "599:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "566:32:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "566:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "566:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "614:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "624:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "416:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "427:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "439:6:110",
                "type": ""
              }
            ],
            "src": "366:269:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "765:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "775:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "787:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "783:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "775:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "817:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "832:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "848:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "853:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "844:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "844:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "857:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "840:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "840:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "828:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "828:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "810:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "810:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "810:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Extended_$20391__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "734:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "745:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "756:4:110",
                "type": ""
              }
            ],
            "src": "640:227:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "942:185:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "988:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "997:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1000:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "990:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "990:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "990:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "963:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "972:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "959:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "959:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "984:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "955:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "955:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "952:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1013:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1039:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1026:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1026:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1017:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1091:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1058:32:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1058:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1058:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1106:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1116:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1106:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "908:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "919:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "931:6:110",
                "type": ""
              }
            ],
            "src": "872:255:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1306:231:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1323:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1334:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1316:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1316:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1316:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1357:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1368:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1353:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1353:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1373:2:110",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1346:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1346:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1396:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1407:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1392:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1392:18:110"
                      },
                      {
                        "hexValue": "4c50577261707065723a3a637265617465577261707065723a20416c72656164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1412:34:110",
                        "type": "",
                        "value": "LPWrapper::createWrapper: Alread"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1385:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1385:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1385:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1467:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1478:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1463:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1463:18:110"
                      },
                      {
                        "hexValue": "792043726561746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1483:11:110",
                        "type": "",
                        "value": "y Created"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1456:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1456:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1456:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1504:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1516:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1527:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1512:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1512:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1504:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d4345838e77439bc79bdcbfbc12dd98a6d6c6af52d251e86a88399a840fa84b3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1283:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1297:4:110",
                "type": ""
              }
            ],
            "src": "1132:405:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1717:175:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1727:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1739:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1750:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1735:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1735:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1727:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1762:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1780:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1785:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1776:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1776:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1789:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1772:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1766:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1807:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1822:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1830:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1818:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1818:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1800:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1800:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1800:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1854:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1865:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1850:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1850:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1874:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1882:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1870:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1870:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1843:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1843:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1843:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Extended_$20391_t_contract$_IVaderPoolV2_$19775__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1678:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1689:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1697:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1708:4:110",
                "type": ""
              }
            ],
            "src": "1542:350:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2071:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2088:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2099:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2081:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2081:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2081:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2122:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2133:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2118:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2118:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2138:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2111:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2111:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2111:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2161:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2172:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2157:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2157:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2177:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2150:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2150:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2150:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2232:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2243:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2228:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2228:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2248:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2221:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2221:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2221:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2266:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2278:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2289:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2274:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2274:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2266:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2048:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2062:4:110",
                "type": ""
              }
            ],
            "src": "1897:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2478:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2495:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2506:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2488:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2488:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2488:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2529:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2540:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2525:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2525:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2545:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2518:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2518:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2518:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2568:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2579:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2564:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2564:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2584:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2557:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2557:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2557:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2628:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2640:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2651:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2636:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2636:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2628:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2455:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2469:4:110",
                "type": ""
              }
            ],
            "src": "2304:356:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC20Extended_$20391__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_d4345838e77439bc79bdcbfbc12dd98a6d6c6af52d251e86a88399a840fa84b3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"LPWrapper::createWrapper: Alread\")\n        mstore(add(headStart, 96), \"y Created\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Extended_$20391_t_contract$_IVaderPoolV2_$19775__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "155:871:39:-:0;;;288:190;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;734:10:18;936:18:0;:32::i;:::-;-1:-1:-1;;;;;347:21:39;;325:111;;;;-1:-1:-1;;;325:111:39;;511:2:110;325:111:39;;;493:21:110;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:110;;;633:38;688:19;;325:111:39;;;;;;;;;447:23;465:4;447:17;:23::i;:::-;288:190;155:871;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;920:2:110;2154:73:0::1;::::0;::::1;902:21:110::0;959:2;939:18;;;932:30;998:34;978:18;;;971:62;-1:-1:-1;;;1049:18:110;;;1042:36;1095:19;;2154:73:0::1;718:402:110::0;2154:73:0::1;2237:28;2256:8:::0;2237:18:::1;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;1327:2:110;1414:68:0;;;1309:21:110;;;1346:18;;;1339:30;1405:34;1385:18;;;1378:62;1457:18;;1414:68:0;1125:356:110;1414:68:0;1359:130::o;14:290:110:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:110;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:110:o;1125:356::-;155:871:39;;;;;;",
  "deployedSourceMap": "155:871:39:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;178:32:110;;;160:51;;148:2;133:18;1201:85:0;;;;;;;486:537:39;;;;;;:::i;:::-;;:::i;223:56::-;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;223:56:39;;;2074:198:0;;;;;;:::i;:::-;;:::i;1824:101::-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;486:537:39:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;591:20:39;;::::1;238:1:98;591:20:39::0;;;:6:::1;:20;::::0;;;;;::::1;:53:::0;569:144:::1;;;::::0;-1:-1:-1;;;569:144:39;;1334:2:110;569:144:39::1;::::0;::::1;1316:21:110::0;1373:2;1353:18;;;1346:30;1412:34;1392:18;;;1385:62;-1:-1:-1;;;1463:18:110;;;1456:39;1512:19;;569:144:39::1;;;;;;;;;912:12;962:7;1247::0::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;962:7:39::1;855:134;;;;;:::i;:::-;-1:-1:-1::0;;;;;1818:15:110;;;1800:34;;1870:15;;1865:2;1850:18;;1843:43;1750:2;1735:18;855:134:39::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;777:20:39;;::::1;;::::0;;;:6:::1;:20;::::0;;;;:238;;-1:-1:-1;;;;;;777:238:39::1;::::0;;;::::1;;::::0;;486:537::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;2099:2:110;2154:73:0::1;::::0;::::1;2081:21:110::0;2138:2;2118:18;;;2111:30;2177:34;2157:18;;;2150:62;-1:-1:-1;;;2228:18:110;;;2221:36;2274:19;;2154:73:0::1;1897:402:110::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2506:2:110;1414:68:0;;;2488:21:110;;;2525:18;;;2518:30;2584:34;2564:18;;;2557:62;2636:18;;1414:68:0;2304:356:110;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;-1:-1:-1:-;;;;;;;;:::o;222:139:110:-;-1:-1:-1;;;;;305:31:110;;295:42;;285:70;;351:1;348;341:12;366:269;439:6;492:2;480:9;471:7;467:23;463:32;460:52;;;508:1;505;498:12;460:52;547:9;534:23;566:39;599:5;566:39;:::i;:::-;624:5;366:269;-1:-1:-1;;;366:269:110:o",
  "source": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity =0.8.9;\r\n\r\nimport \"./LPToken.sol\";\r\n\r\nimport \"../../interfaces/dex-v2/wrapper/ILPWrapper.sol\";\r\n\r\ncontract LPWrapper is ILPWrapper, ProtocolConstants, Ownable {\r\n    mapping(IERC20 => IERC20Extended) public override tokens;\r\n\r\n    constructor(address pool) {\r\n        require(\r\n            pool != _ZERO_ADDRESS,\r\n            \"LPWrapper::constructor: Misconfiguration\"\r\n        );\r\n        transferOwnership(pool);\r\n    }\r\n\r\n    function createWrapper(IERC20 foreignAsset) external override onlyOwner {\r\n        require(\r\n            tokens[foreignAsset] == IERC20Extended(_ZERO_ADDRESS),\r\n            \"LPWrapper::createWrapper: Already Created\"\r\n        );\r\n\r\n        // NOTE: Here, `owner` is the VaderPoolV2\r\n        tokens[foreignAsset] = IERC20Extended(\r\n            address(\r\n                new LPToken(\r\n                    IERC20Extended(address(foreignAsset)),\r\n                    IVaderPoolV2(owner())\r\n                )\r\n            )\r\n        );\r\n    }\r\n}\r\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/dex-v2/wrapper/LPWrapper.sol",
  "ast": {
    "absolutePath": "project:/contracts/dex-v2/wrapper/LPWrapper.sol",
    "exportedSymbols": {
      "Context": [
        3760
      ],
      "ERC20": [
        891
      ],
      "IBasePoolV2": [
        19623
      ],
      "IERC165": [
        5523
      ],
      "IERC20": [
        969
      ],
      "IERC20Extended": [
        20391
      ],
      "IERC20Metadata": [
        1900
      ],
      "IERC721": [
        3355
      ],
      "ILPToken": [
        19917
      ],
      "ILPWrapper": [
        19936
      ],
      "IVaderPoolV2": [
        19775
      ],
      "LPToken": [
        11071
      ],
      "LPWrapper": [
        11151
      ],
      "Ownable": [
        112
      ],
      "ProtocolConstants": [
        21440
      ]
    },
    "id": 11152,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 11073,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:39"
      },
      {
        "absolutePath": "project:/contracts/dex-v2/wrapper/LPToken.sol",
        "file": "./LPToken.sol",
        "id": 11074,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11152,
        "sourceUnit": 11072,
        "src": "68:23:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/dex-v2/wrapper/ILPWrapper.sol",
        "file": "../../interfaces/dex-v2/wrapper/ILPWrapper.sol",
        "id": 11075,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 11152,
        "sourceUnit": 19937,
        "src": "95:56:39",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 11076,
              "name": "ILPWrapper",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19936,
              "src": "177:10:39"
            },
            "id": 11077,
            "nodeType": "InheritanceSpecifier",
            "src": "177:10:39"
          },
          {
            "baseName": {
              "id": 11078,
              "name": "ProtocolConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21440,
              "src": "189:17:39"
            },
            "id": 11079,
            "nodeType": "InheritanceSpecifier",
            "src": "189:17:39"
          },
          {
            "baseName": {
              "id": 11080,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "208:7:39"
            },
            "id": 11081,
            "nodeType": "InheritanceSpecifier",
            "src": "208:7:39"
          }
        ],
        "canonicalName": "LPWrapper",
        "contractDependencies": [
          11071
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 11151,
        "linearizedBaseContracts": [
          11151,
          112,
          3760,
          21440,
          19936
        ],
        "name": "LPWrapper",
        "nameLocation": "164:9:39",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              19929
            ],
            "constant": false,
            "functionSelector": "e4860339",
            "id": 11088,
            "mutability": "mutable",
            "name": "tokens",
            "nameLocation": "273:6:39",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 11087,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "264:8:39"
            },
            "scope": 11151,
            "src": "223:56:39",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_IERC20Extended_$20391_$",
              "typeString": "mapping(contract IERC20 => contract IERC20Extended)"
            },
            "typeName": {
              "id": 11086,
              "keyType": {
                "id": 11083,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11082,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 969,
                  "src": "231:6:39"
                },
                "referencedDeclaration": 969,
                "src": "231:6:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$969",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "223:33:39",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_IERC20Extended_$20391_$",
                "typeString": "mapping(contract IERC20 => contract IERC20Extended)"
              },
              "valueType": {
                "id": 11085,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 11084,
                  "name": "IERC20Extended",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20391,
                  "src": "241:14:39"
                },
                "referencedDeclaration": 20391,
                "src": "241:14:39",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                  "typeString": "contract IERC20Extended"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 11104,
              "nodeType": "Block",
              "src": "314:164:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 11096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 11094,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11090,
                          "src": "347:4:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 11095,
                          "name": "_ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21375,
                          "src": "355:13:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "347:21:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c50577261707065723a3a636f6e7374727563746f723a204d6973636f6e66696775726174696f6e",
                        "id": 11097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "383:42:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_543dd45bc08fdade38af28de1917813836851c4b04c7f4f038fdabc84f88c8b7",
                          "typeString": "literal_string \"LPWrapper::constructor: Misconfiguration\""
                        },
                        "value": "LPWrapper::constructor: Misconfiguration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_543dd45bc08fdade38af28de1917813836851c4b04c7f4f038fdabc84f88c8b7",
                          "typeString": "literal_string \"LPWrapper::constructor: Misconfiguration\""
                        }
                      ],
                      "id": 11093,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "325:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "325:111:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11099,
                  "nodeType": "ExpressionStatement",
                  "src": "325:111:39"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 11101,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11090,
                        "src": "465:4:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 11100,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "447:17:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 11102,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "447:23:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11103,
                  "nodeType": "ExpressionStatement",
                  "src": "447:23:39"
                }
              ]
            },
            "id": 11105,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 11091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11090,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "308:4:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11105,
                  "src": "300:12:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 11089,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:7:39",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "299:14:39"
            },
            "returnParameters": {
              "id": 11092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "314:0:39"
            },
            "scope": 11151,
            "src": "288:190:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19935
            ],
            "body": {
              "id": 11149,
              "nodeType": "Block",
              "src": "558:465:39",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                          "typeString": "contract IERC20Extended"
                        },
                        "id": 11121,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 11115,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11088,
                            "src": "591:6:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_IERC20Extended_$20391_$",
                              "typeString": "mapping(contract IERC20 => contract IERC20Extended)"
                            }
                          },
                          "id": 11117,
                          "indexExpression": {
                            "id": 11116,
                            "name": "foreignAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11108,
                            "src": "598:12:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "591:20:39",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                            "typeString": "contract IERC20Extended"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 11119,
                              "name": "_ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21375,
                              "src": "630:13:39",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 11118,
                            "name": "IERC20Extended",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20391,
                            "src": "615:14:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$20391_$",
                              "typeString": "type(contract IERC20Extended)"
                            }
                          },
                          "id": 11120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "615:29:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                            "typeString": "contract IERC20Extended"
                          }
                        },
                        "src": "591:53:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c50577261707065723a3a637265617465577261707065723a20416c72656164792043726561746564",
                        "id": 11122,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "659:43:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d4345838e77439bc79bdcbfbc12dd98a6d6c6af52d251e86a88399a840fa84b3",
                          "typeString": "literal_string \"LPWrapper::createWrapper: Already Created\""
                        },
                        "value": "LPWrapper::createWrapper: Already Created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d4345838e77439bc79bdcbfbc12dd98a6d6c6af52d251e86a88399a840fa84b3",
                          "typeString": "literal_string \"LPWrapper::createWrapper: Already Created\""
                        }
                      ],
                      "id": 11114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "569:7:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 11123,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:144:39",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 11124,
                  "nodeType": "ExpressionStatement",
                  "src": "569:144:39"
                },
                {
                  "expression": {
                    "id": 11147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 11125,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11088,
                        "src": "777:6:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_IERC20Extended_$20391_$",
                          "typeString": "mapping(contract IERC20 => contract IERC20Extended)"
                        }
                      },
                      "id": 11127,
                      "indexExpression": {
                        "id": 11126,
                        "name": "foreignAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11108,
                        "src": "784:12:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "777:20:39",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                        "typeString": "contract IERC20Extended"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "id": 11137,
                                          "name": "foreignAsset",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 11108,
                                          "src": "912:12:39",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$969",
                                            "typeString": "contract IERC20"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$969",
                                            "typeString": "contract IERC20"
                                          }
                                        ],
                                        "id": 11136,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "904:7:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_address_$",
                                          "typeString": "type(address)"
                                        },
                                        "typeName": {
                                          "id": 11135,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "904:7:39",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 11138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "904:21:39",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 11134,
                                    "name": "IERC20Extended",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 20391,
                                    "src": "889:14:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$20391_$",
                                      "typeString": "type(contract IERC20Extended)"
                                    }
                                  },
                                  "id": 11139,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "889:37:39",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                                    "typeString": "contract IERC20Extended"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 11141,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40,
                                        "src": "962:5:39",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                          "typeString": "function () view returns (address)"
                                        }
                                      },
                                      "id": 11142,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "962:7:39",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 11140,
                                    "name": "IVaderPoolV2",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 19775,
                                    "src": "949:12:39",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IVaderPoolV2_$19775_$",
                                      "typeString": "type(contract IVaderPoolV2)"
                                    }
                                  },
                                  "id": 11143,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "949:21:39",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                    "typeString": "contract IVaderPoolV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                                    "typeString": "contract IERC20Extended"
                                  },
                                  {
                                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                    "typeString": "contract IVaderPoolV2"
                                  }
                                ],
                                "id": 11133,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "NewExpression",
                                "src": "855:11:39",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20Extended_$20391_$_t_contract$_IVaderPoolV2_$19775_$returns$_t_contract$_LPToken_$11071_$",
                                  "typeString": "function (contract IERC20Extended,contract IVaderPoolV2) returns (contract LPToken)"
                                },
                                "typeName": {
                                  "id": 11132,
                                  "nodeType": "UserDefinedTypeName",
                                  "pathNode": {
                                    "id": 11131,
                                    "name": "LPToken",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 11071,
                                    "src": "859:7:39"
                                  },
                                  "referencedDeclaration": 11071,
                                  "src": "859:7:39",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_LPToken_$11071",
                                    "typeString": "contract LPToken"
                                  }
                                }
                              },
                              "id": 11144,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "855:134:39",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_LPToken_$11071",
                                "typeString": "contract LPToken"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_LPToken_$11071",
                                "typeString": "contract LPToken"
                              }
                            ],
                            "id": 11130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "829:7:39",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 11129,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "829:7:39",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 11145,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "829:175:39",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 11128,
                        "name": "IERC20Extended",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20391,
                        "src": "800:14:39",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$20391_$",
                          "typeString": "type(contract IERC20Extended)"
                        }
                      },
                      "id": 11146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "800:215:39",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                        "typeString": "contract IERC20Extended"
                      }
                    },
                    "src": "777:238:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                      "typeString": "contract IERC20Extended"
                    }
                  },
                  "id": 11148,
                  "nodeType": "ExpressionStatement",
                  "src": "777:238:39"
                }
              ]
            },
            "functionSelector": "a7c4f0ef",
            "id": 11150,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 11112,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 11111,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "548:9:39"
                },
                "nodeType": "ModifierInvocation",
                "src": "548:9:39"
              }
            ],
            "name": "createWrapper",
            "nameLocation": "495:13:39",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 11110,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "539:8:39"
            },
            "parameters": {
              "id": 11109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11108,
                  "mutability": "mutable",
                  "name": "foreignAsset",
                  "nameLocation": "516:12:39",
                  "nodeType": "VariableDeclaration",
                  "scope": 11150,
                  "src": "509:19:39",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 11107,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 11106,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 969,
                      "src": "509:6:39"
                    },
                    "referencedDeclaration": 969,
                    "src": "509:6:39",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "508:21:39"
            },
            "returnParameters": {
              "id": 11113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "558:0:39"
            },
            "scope": 11151,
            "src": "486:537:39",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 11152,
        "src": "155:871:39",
        "usedErrors": []
      }
    ],
    "src": "41:987:39"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.033Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}