{
  "contractName": "LinearVesting",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "_vader",
          "type": "address"
        },
        {
          "internalType": "address[]",
          "name": "vesters",
          "type": "address[]"
        },
        {
          "internalType": "uint192[]",
          "name": "amounts",
          "type": "uint192[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Vested",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "duration",
          "type": "uint256"
        }
      ],
      "name": "VestingInitialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "end",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "start",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vader",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "vest",
      "outputs": [
        {
          "internalType": "uint192",
          "name": "amount",
          "type": "uint192"
        },
        {
          "internalType": "uint64",
          "name": "lastClaim",
          "type": "uint64"
        },
        {
          "internalType": "uint128",
          "name": "start",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "end",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getClaim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vestedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claim",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vestedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "claimConverted",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "vestedAmount",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "begin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "vestFor",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"_vader\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"vesters\",\"type\":\"address[]\"},{\"internalType\":\"uint192[]\",\"name\":\"amounts\",\"type\":\"uint192[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Vested\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"duration\",\"type\":\"uint256\"}],\"name\":\"VestingInitialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"begin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vestedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimConverted\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vestedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"end\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaim\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"vestedAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"start\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vader\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"vest\",\"outputs\":[{\"internalType\":\"uint192\",\"name\":\"amount\",\"type\":\"uint192\"},{\"internalType\":\"uint64\",\"name\":\"lastClaim\",\"type\":\"uint64\"},{\"internalType\":\"uint128\",\"name\":\"start\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"end\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"vestFor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {ILinearVesting} interface. The straightforward vesting contract that gradually releases a fixed supply of tokens to multiple vest parties over a 2 year window. The token expects the {begin} hook to be invoked the moment it is supplied with the necessary amount of tokens to vest, which should be equivalent to the time the {setComponents} function is invoked on the Vader token.\",\"kind\":\"dev\",\"methods\":{\"begin()\":{\"details\":\"Allows the vesting period to be initiated. Emits a {VestingInitialized} event from which the start and end can be calculated via it's attached timestamp. Requirements: - the caller must be the owner (vader token)\"},\"claim()\":{\"details\":\"Allows a user to claim their pending vesting amount. Emits a {Vested} event indicating the user who claimed their vested tokens as well as the amount that was vested. Requirements: - the vesting period has started - the caller must have a non-zero vested amount\"},\"claimConverted()\":{\"details\":\"Allows a user to claim their pending vesting amount of the vested claim Emits a {Vested} event indicating the user who claimed their vested tokens as well as the amount that was vested. Requirements: - the vesting period has started - the caller must have a non-zero vested amount\"},\"constructor\":{\"details\":\"Initializes the contract's vesters and vesting amounts as well as sets the Vader token address. It conducts a sanity check to ensure that the total vesting amounts specified match the team allocation to ensure that the contract is deployed correctly. Additionally, it transfers ownership to the Vader contract that needs to consequently initiate the vesting period via {begin} after it mints the necessary amount to the contract.\"},\"getClaim()\":{\"details\":\"Returns the amount a user can claim at a given point in time. Requirements: - the vesting period has started\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"vestFor(address,uint256)\":{\"details\":\"Adds a new vesting schedule to the contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/vesting/LinearVesting.sol\":\"LinearVesting\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"project:/contracts/interfaces/tokens/vesting/ILinearVesting.sol\":{\"keccak256\":\"0xb1c4ca2744c93e92af0a05bfd602797de082f96610f6ba56ea377a49e5aefe0e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4f68ba73c41560e0543a205bbf6e98dfd04b751811f025ed13585335b048bf77\",\"dweb:/ipfs/QmaA6jdFJzbmhHJPZauQbCnQYWkC5E7xbPT9Sy84TYzxAb\"]},\"project:/contracts/shared/ProtocolConstants.sol\":{\"keccak256\":\"0x845b3cdb262b4cc3a2ce4fd0c094c6e6b5e818988cd7c21d4b7b3295b80b7b22\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://763268835823e795ce64059ff8bb147224fb548a4f33b90be4b80b35c59598e2\",\"dweb:/ipfs/QmPbyyps31R4f2PVMpqCbkhWDw8UtG5vfikcNxL6Mg51e5\"]},\"project:/contracts/tokens/vesting/LinearVesting.sol\":{\"keccak256\":\"0xc6032083987fa68653054633d6f28035a39e35d5a46eecc6a67338ad5031b925\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://161ae176e428a7bd47bfd097723bc885a4969a0e399a50c22165347beed14d24\",\"dweb:/ipfs/QmX1CauvVQWo6YgL32oBLGardKfUFtqB6f4yzc4KhDr9TQ\"]}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620015593803806200155983398101604081905262000034916200051c565b6200003f33620002e0565b6001600160a01b0383161580159062000059575080518251145b620000c05760405162461bcd60e51b815260206004820152602c60248201527f4c696e65617256657374696e673a3a636f6e7374727563746f723a204d69736360448201526b37b73334b3bab930ba34b7b760a11b60648201526084015b60405180910390fd5b6001600160a01b0383166080526000805b83518110156200024857828181518110620000f057620000f062000604565b60200260200101516001600160c01b031660001415620001795760405162461bcd60e51b815260206004820152603660248201527f4c696e65617256657374696e673a3a636f6e7374727563746f723a20496e636f60448201527f727265637420416d6f756e7420537065636966696564000000000000000000006064820152608401620000b7565b8281815181106200018e576200018e62000604565b602002602001015160036000868481518110620001af57620001af62000604565b60200260200101516001600160a01b03166001600160a01b0316815260200190815260200160002060000160006101000a8154816001600160c01b0302191690836001600160c01b0316021790555082818151811062000213576200021362000604565b60200260200101516001600160c01b03168262000231919062000630565b9150806200023f816200064b565b915050620000d1565b506acecb8f27f4200f3a0000008114620002cb5760405162461bcd60e51b815260206004820152603a60248201527f4c696e65617256657374696e673a3a636f6e7374727563746f723a20496e766160448201527f6c6964205665737420416d6f756e7473205370656369666965640000000000006064820152608401620000b7565b620002d68462000330565b5050505062000669565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6200033a620003af565b6001600160a01b038116620003a15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401620000b7565b620003ac81620002e0565b50565b6000546001600160a01b031633146200040b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401620000b7565b565b6001600160a01b0381168114620003ac57600080fd5b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b038111828210171562000464576200046462000423565b604052919050565b60006001600160401b0382111562000488576200048862000423565b5060051b60200190565b600082601f830112620004a457600080fd5b81516020620004bd620004b7836200046c565b62000439565b82815260059290921b84018101918181019086841115620004dd57600080fd5b8286015b84811015620005115780516001600160c01b0381168114620005035760008081fd5b8352918301918301620004e1565b509695505050505050565b6000806000606084860312156200053257600080fd5b83516200053f816200040d565b602085810151919450906001600160401b03808211156200055f57600080fd5b818701915087601f8301126200057457600080fd5b815162000585620004b7826200046c565b81815260059190911b8301840190848101908a831115620005a557600080fd5b938501935b82851015620005d0578451620005c0816200040d565b82529385019390850190620005aa565b60408a01519097509450505080831115620005ea57600080fd5b5050620005fa8682870162000492565b9150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600082198211156200064657620006466200061a565b500190565b60006000198214156200066257620006626200061a565b5060010190565b608051610ec7620006926000396000818160e301528181610472015261079b0152610ec76000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461013557806394e3516914610146578063be9a655514610159578063efbe1c1c14610162578063f2fde38b1461016b578063f3c5f51e1461017e57600080fd5b806301e8ef2a146100b95780631bce6ff3146100d45780631f494b64146100de5780634e71d92d1461011d578063715018a614610125578063844a8c691461012d575b600080fd5b6100c1610218565b6040519081526020015b60405180910390f35b6100dc61049d565b005b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100cb565b6100c1610513565b6100dc6105c4565b6100c16105d6565b6000546001600160a01b0316610105565b6100dc610154366004610cae565b610658565b6100c160015481565b6100c160025481565b6100dc610179366004610cd8565b6107c7565b6101d661018c366004610cd8565b600360205260009081526040902080546001909101546001600160c01b03821691600160c01b900467ffffffffffffffff16906001600160801b0380821691600160801b90041684565b604080516001600160c01b03909516855267ffffffffffffffff90931660208501526001600160801b03918216928401929092521660608201526080016100cb565b336000908152600360209081526040808320815160808101835281546001600160c01b0381168252600160c01b900467ffffffffffffffff1693810193909352600101546001600160801b03808216928401839052600160801b9091041660608301526102a05760405162461bcd60e51b815260040161029790610cfa565b60405180910390fd5b4281604001516001600160801b03161061030a5760405162461bcd60e51b815260206004820152602560248201527f4c696e65617256657374696e673a3a636c61696d3a204e6f7420537461727465604482015264190816595d60da1b6064820152608401610297565b61034b81600001516001600160c01b0316826020015167ffffffffffffffff1683604001516001600160801b031684606001516001600160801b0316610840565b9150816103a95760405162461bcd60e51b815260206004820152602660248201527f4c696e65617256657374696e673a3a636c61696d3a204e6f7468696e6720746f60448201526520636c61696d60d01b6064820152608401610297565b81816000018181516103bb9190610d5c565b6001600160c01b0390811690915267ffffffffffffffff4281166020808601918252336000818152600390925260409182902087519351909416600160c01b02929094169190911782558085015160608601516001600160801b03908116600160801b02911617600190920191909155519091507ed5958799b183a7b738d3ad5e711305293dd5076a37a4e3b7e6611dea6114f39061045d9085815260200190565b60405180910390a26104996001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338461088c565b5090565b6104a56108f4565b426001556104b86301e133806002610d84565b6104c29042610da3565b60029081557f5e1fc654b1f2de8a2a47d73f2ba9a16b9d8973961ed1492c9a74699e2e0e70bd906104f8906301e1338090610d84565b60405190815260200160405180910390a16105116105c4565b565b600061051d61094e565b33600090815260036020908152604091829020825160808101845281546001600160c01b0381168252600160c01b900467ffffffffffffffff1692810192909252600101546001600160801b03808216938301849052600160801b909104166060820152901561059f5760405162461bcd60e51b815260040161029790610cfa565b61034b81600001516001600160c01b0316826020015167ffffffffffffffff166109bc565b6105cc6108f4565b6105116000610a0f565b60006105e061094e565b33600090815260036020908152604091829020825160808101845281546001600160c01b038116808352600160c01b90910467ffffffffffffffff169382018490526001909201546001600160801b0380821695830195909552600160801b90049093166060840152610652916109bc565b91505090565b6001600160a01b0382166000908152600360205260409020546001600160c01b0316156106d95760405162461bcd60e51b815260206004820152602960248201527f4c696e65617256657374696e673a3a73656c66566573743a20416c72656164796044820152681030903b32b9ba32b960b91b6064820152608401610297565b6040518060800160405280826001600160c01b03168152602001600067ffffffffffffffff168152602001426001600160801b03168152602001426301e133806107239190610da3565b6001600160801b039081169091526001600160a01b0380851660009081526003602090815260409182902085519186015167ffffffffffffffff16600160c01b026001600160c01b03909216919091178155908401516060909401518316600160801b0293909216929092176001909101556107c3907f000000000000000000000000000000000000000000000000000000000000000016333084610a5f565b5050565b6107cf6108f4565b6001600160a01b0381166108345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610297565b61083d81610a0f565b50565b6000814210610850575083610884565b83610859578293505b6108638483610dbb565b61086d8542610dbb565b6108779087610d84565b6108819190610dd2565b90505b949350505050565b6040516001600160a01b0383166024820152604481018290526108ef90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a9d565b505050565b6000546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610297565b6001546105115760405162461bcd60e51b815260206004820152603660248201527f4c696e65617256657374696e673a3a5f686173537461727465643a20566573746044820152751a5b99c81a185cdb89dd081cdd185c9d1959081e595d60521b6064820152608401610297565b6002546000904281116109d25783915050610a09565b826109dd5760015492505b6109e78382610dbb565b6109f18442610dbb565b6109fb9086610d84565b610a059190610dd2565b9150505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610a979085906323b872dd60e01b906084016108b8565b50505050565b6000610af2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b729092919063ffffffff16565b9050805160001480610b13575080806020019051810190610b139190610df4565b6108ef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610297565b6060610884848460008585600080866001600160a01b03168587604051610b999190610e42565b60006040518083038185875af1925050503d8060008114610bd6576040519150601f19603f3d011682016040523d82523d6000602084013e610bdb565b606091505b5091509150610bec87838387610bf7565b979650505050505050565b60608315610c63578251610c5c576001600160a01b0385163b610c5c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610297565b5081610884565b6108848383815115610c785781518083602001fd5b8060405162461bcd60e51b81526004016102979190610e5e565b80356001600160a01b0381168114610ca957600080fd5b919050565b60008060408385031215610cc157600080fd5b610cca83610c92565b946020939093013593505050565b600060208284031215610cea57600080fd5b610cf382610c92565b9392505050565b6020808252602c908201527f4c696e65617256657374696e673a3a636c61696d3a20496e636f72726563742060408201526b56657374696e67205479706560a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b0383811690831681811015610d7c57610d7c610d46565b039392505050565b6000816000190483118215151615610d9e57610d9e610d46565b500290565b60008219821115610db657610db6610d46565b500190565b600082821015610dcd57610dcd610d46565b500390565b600082610def57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e0657600080fd5b81518015158114610cf357600080fd5b60005b83811015610e31578181015183820152602001610e19565b83811115610a975750506000910152565b60008251610e54818460208701610e16565b9190910192915050565b6020815260008251806020840152610e7d816040850160208701610e16565b601f01601f1916919091016040019291505056fea264697066735822122003bc6c73b8aff80e2f1e480f27a5aebc3bae2c1adc1c49476d23e4c3150e155f64736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80638da5cb5b116100715780638da5cb5b1461013557806394e3516914610146578063be9a655514610159578063efbe1c1c14610162578063f2fde38b1461016b578063f3c5f51e1461017e57600080fd5b806301e8ef2a146100b95780631bce6ff3146100d45780631f494b64146100de5780634e71d92d1461011d578063715018a614610125578063844a8c691461012d575b600080fd5b6100c1610218565b6040519081526020015b60405180910390f35b6100dc61049d565b005b6101057f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016100cb565b6100c1610513565b6100dc6105c4565b6100c16105d6565b6000546001600160a01b0316610105565b6100dc610154366004610cae565b610658565b6100c160015481565b6100c160025481565b6100dc610179366004610cd8565b6107c7565b6101d661018c366004610cd8565b600360205260009081526040902080546001909101546001600160c01b03821691600160c01b900467ffffffffffffffff16906001600160801b0380821691600160801b90041684565b604080516001600160c01b03909516855267ffffffffffffffff90931660208501526001600160801b03918216928401929092521660608201526080016100cb565b336000908152600360209081526040808320815160808101835281546001600160c01b0381168252600160c01b900467ffffffffffffffff1693810193909352600101546001600160801b03808216928401839052600160801b9091041660608301526102a05760405162461bcd60e51b815260040161029790610cfa565b60405180910390fd5b4281604001516001600160801b03161061030a5760405162461bcd60e51b815260206004820152602560248201527f4c696e65617256657374696e673a3a636c61696d3a204e6f7420537461727465604482015264190816595d60da1b6064820152608401610297565b61034b81600001516001600160c01b0316826020015167ffffffffffffffff1683604001516001600160801b031684606001516001600160801b0316610840565b9150816103a95760405162461bcd60e51b815260206004820152602660248201527f4c696e65617256657374696e673a3a636c61696d3a204e6f7468696e6720746f60448201526520636c61696d60d01b6064820152608401610297565b81816000018181516103bb9190610d5c565b6001600160c01b0390811690915267ffffffffffffffff4281166020808601918252336000818152600390925260409182902087519351909416600160c01b02929094169190911782558085015160608601516001600160801b03908116600160801b02911617600190920191909155519091507ed5958799b183a7b738d3ad5e711305293dd5076a37a4e3b7e6611dea6114f39061045d9085815260200190565b60405180910390a26104996001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016338461088c565b5090565b6104a56108f4565b426001556104b86301e133806002610d84565b6104c29042610da3565b60029081557f5e1fc654b1f2de8a2a47d73f2ba9a16b9d8973961ed1492c9a74699e2e0e70bd906104f8906301e1338090610d84565b60405190815260200160405180910390a16105116105c4565b565b600061051d61094e565b33600090815260036020908152604091829020825160808101845281546001600160c01b0381168252600160c01b900467ffffffffffffffff1692810192909252600101546001600160801b03808216938301849052600160801b909104166060820152901561059f5760405162461bcd60e51b815260040161029790610cfa565b61034b81600001516001600160c01b0316826020015167ffffffffffffffff166109bc565b6105cc6108f4565b6105116000610a0f565b60006105e061094e565b33600090815260036020908152604091829020825160808101845281546001600160c01b038116808352600160c01b90910467ffffffffffffffff169382018490526001909201546001600160801b0380821695830195909552600160801b90049093166060840152610652916109bc565b91505090565b6001600160a01b0382166000908152600360205260409020546001600160c01b0316156106d95760405162461bcd60e51b815260206004820152602960248201527f4c696e65617256657374696e673a3a73656c66566573743a20416c72656164796044820152681030903b32b9ba32b960b91b6064820152608401610297565b6040518060800160405280826001600160c01b03168152602001600067ffffffffffffffff168152602001426001600160801b03168152602001426301e133806107239190610da3565b6001600160801b039081169091526001600160a01b0380851660009081526003602090815260409182902085519186015167ffffffffffffffff16600160c01b026001600160c01b03909216919091178155908401516060909401518316600160801b0293909216929092176001909101556107c3907f000000000000000000000000000000000000000000000000000000000000000016333084610a5f565b5050565b6107cf6108f4565b6001600160a01b0381166108345760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610297565b61083d81610a0f565b50565b6000814210610850575083610884565b83610859578293505b6108638483610dbb565b61086d8542610dbb565b6108779087610d84565b6108819190610dd2565b90505b949350505050565b6040516001600160a01b0383166024820152604481018290526108ef90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610a9d565b505050565b6000546001600160a01b031633146105115760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610297565b6001546105115760405162461bcd60e51b815260206004820152603660248201527f4c696e65617256657374696e673a3a5f686173537461727465643a20566573746044820152751a5b99c81a185cdb89dd081cdd185c9d1959081e595d60521b6064820152608401610297565b6002546000904281116109d25783915050610a09565b826109dd5760015492505b6109e78382610dbb565b6109f18442610dbb565b6109fb9086610d84565b610a059190610dd2565b9150505b92915050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6040516001600160a01b0380851660248301528316604482015260648101829052610a979085906323b872dd60e01b906084016108b8565b50505050565b6000610af2826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b729092919063ffffffff16565b9050805160001480610b13575080806020019051810190610b139190610df4565b6108ef5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610297565b6060610884848460008585600080866001600160a01b03168587604051610b999190610e42565b60006040518083038185875af1925050503d8060008114610bd6576040519150601f19603f3d011682016040523d82523d6000602084013e610bdb565b606091505b5091509150610bec87838387610bf7565b979650505050505050565b60608315610c63578251610c5c576001600160a01b0385163b610c5c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610297565b5081610884565b6108848383815115610c785781518083602001fd5b8060405162461bcd60e51b81526004016102979190610e5e565b80356001600160a01b0381168114610ca957600080fd5b919050565b60008060408385031215610cc157600080fd5b610cca83610c92565b946020939093013593505050565b600060208284031215610cea57600080fd5b610cf382610c92565b9392505050565b6020808252602c908201527f4c696e65617256657374696e673a3a636c61696d3a20496e636f72726563742060408201526b56657374696e67205479706560a01b606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60006001600160c01b0383811690831681811015610d7c57610d7c610d46565b039392505050565b6000816000190483118215151615610d9e57610d9e610d46565b500290565b60008219821115610db657610db6610d46565b500190565b600082821015610dcd57610dcd610d46565b500390565b600082610def57634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610e0657600080fd5b81518015158114610cf357600080fd5b60005b83811015610e31578181015183820152602001610e19565b83811115610a975750506000910152565b60008251610e54818460208701610e16565b9190910192915050565b6020815260008251806020840152610e7d816040850160208701610e16565b601f01601f1916919091016040019291505056fea264697066735822122003bc6c73b8aff80e2f1e480f27a5aebc3bae2c1adc1c49476d23e4c3150e155f64736f6c63430008090033",
  "immutableReferences": {
    "23024": [
      {
        "length": 32,
        "start": 227
      },
      {
        "length": 32,
        "start": 1138
      },
      {
        "length": 32,
        "start": 1947
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5547:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "67:86:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "131:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "140:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "143:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "133:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "133:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "133:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "90:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "101:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "116:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "121:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "125:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "97:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "97:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "87:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "87:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "80:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "80:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "77:70:110"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "56:5:110",
                "type": ""
              }
            ],
            "src": "14:139:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "190:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "207:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "214:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "219:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "210:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "210:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "200:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "200:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "200:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "247:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "250:4:110",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "240:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "240:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "240:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "271:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "274:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "264:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "264:15:110"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "158:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "335:230:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "345:19:110",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "361:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "355:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "355:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "345:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "373:58:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "395:6:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "size",
                                "nodeType": "YulIdentifier",
                                "src": "411:4:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "417:2:110",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "407:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "407:13:110"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "426:2:110",
                                "type": "",
                                "value": "31"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "422:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "422:7:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "403:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "403:27:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "391:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "391:40:110"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "377:10:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "506:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "508:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "508:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "508:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "449:10:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "469:2:110",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "473:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "465:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "465:10:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "477:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "461:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "461:18:110"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "446:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "446:34:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "485:10:110"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "497:6:110"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "482:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "482:22:110"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "443:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "443:62:110"
                  },
                  "nodeType": "YulIf",
                  "src": "440:88:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "544:2:110",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "548:10:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "537:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:22:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "537:22:110"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "315:4:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "324:6:110",
                "type": ""
              }
            ],
            "src": "290:275:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "639:114:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "683:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "685:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "685:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "685:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "655:6:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "671:2:110",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "675:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "667:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "667:10:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "679:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "652:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "652:30:110"
                  },
                  "nodeType": "YulIf",
                  "src": "649:56:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "714:33:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "730:1:110",
                            "type": "",
                            "value": "5"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "733:6:110"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "726:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "726:14:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "742:4:110",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "722:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "722:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "714:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_array_address_dyn",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "619:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "630:4:110",
                "type": ""
              }
            ],
            "src": "570:183:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "833:768:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "882:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "891:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "894:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "884:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "884:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "884:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "861:6:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "869:4:110",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "857:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "857:17:110"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "876:3:110"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "853:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "853:27:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "846:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "846:35:110"
                  },
                  "nodeType": "YulIf",
                  "src": "843:55:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "907:23:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "923:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "917:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:13:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "911:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "939:14:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "949:4:110",
                    "type": "",
                    "value": "0x20"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "943:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "962:71:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1029:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "989:39:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "989:43:110"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "973:15:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "973:60:110"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "966:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1042:16:110",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "1055:3:110"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "1046:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "1074:3:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1079:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1067:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1067:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1067:15:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1091:19:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "1102:3:110"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1107:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1098:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1098:12:110"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "1091:3:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1119:46:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1141:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1153:1:110",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "1156:2:110"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1149:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1149:10:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1137:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1137:23:110"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1162:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1133:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1133:32:110"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "1123:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1193:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1202:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1205:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1195:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1195:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1195:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1180:6:110"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "1188:3:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1177:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1177:15:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1174:35:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1218:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1233:6:110"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1241:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1229:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1229:15:110"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "1222:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1309:263:110",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1323:23:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "1342:3:110"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "1336:5:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1336:10:110"
                        },
                        "variables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "1327:5:110",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1425:74:110",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1443:11:110",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1453:1:110",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1447:2:110",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1478:2:110"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1482:2:110"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:6:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1471:14:110"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1471:14:110"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "1372:5:110"
                                },
                                {
                                  "arguments": [
                                    {
                                      "name": "value",
                                      "nodeType": "YulIdentifier",
                                      "src": "1383:5:110"
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1398:3:110",
                                              "type": "",
                                              "value": "192"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1403:1:110",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "1394:3:110"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1394:11:110"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1407:1:110",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "1390:3:110"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1390:19:110"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "and",
                                    "nodeType": "YulIdentifier",
                                    "src": "1379:3:110"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1379:31:110"
                                }
                              ],
                              "functionName": {
                                "name": "eq",
                                "nodeType": "YulIdentifier",
                                "src": "1369:2:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1369:42:110"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "1362:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1362:50:110"
                        },
                        "nodeType": "YulIf",
                        "src": "1359:140:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "1519:3:110"
                            },
                            {
                              "name": "value",
                              "nodeType": "YulIdentifier",
                              "src": "1524:5:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1512:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1512:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1512:18:110"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1543:19:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "1554:3:110"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "1559:2:110"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1550:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1550:12:110"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "1543:3:110"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "1264:3:110"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1269:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1261:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:15:110"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1277:23:110",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1279:19:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "1290:3:110"
                            },
                            {
                              "name": "_2",
                              "nodeType": "YulIdentifier",
                              "src": "1295:2:110"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1286:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1286:12:110"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "1279:3:110"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1257:3:110",
                    "statements": []
                  },
                  "src": "1253:319:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1581:14:110",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "1590:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "1581:5:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_array_uint192_dyn_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "807:6:110",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "815:3:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "823:5:110",
                "type": ""
              }
            ],
            "src": "758:843:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1785:1192:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1831:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1840:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1843:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1833:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1833:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1833:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1806:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1815:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1802:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1802:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1827:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1798:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1798:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1795:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1856:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1875:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1869:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1869:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1860:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1927:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1894:32:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1894:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1894:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1942:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1952:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1942:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1966:12:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1976:2:110",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1970:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1987:39:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2022:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2001:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2001:25:110"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1991:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2035:28:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2053:2:110",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2057:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2049:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:10:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2061:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2045:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:18:110"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2039:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2090:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2099:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2102:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2092:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2092:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2092:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2078:6:110"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2086:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2075:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:14:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2072:34:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2115:32:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2129:9:110"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2140:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2125:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:22:110"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "2119:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2195:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2204:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2207:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2197:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2197:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2197:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "2174:2:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2178:4:110",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2170:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2170:13:110"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2185:7:110"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2166:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2166:27:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2159:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2159:35:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2156:55:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2220:19:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2236:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2230:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2230:9:110"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "2224:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2248:71:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "2315:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_array_address_dyn",
                          "nodeType": "YulIdentifier",
                          "src": "2275:39:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2275:43:110"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2259:15:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2259:60:110"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2252:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2328:16:110",
                  "value": {
                    "name": "dst",
                    "nodeType": "YulIdentifier",
                    "src": "2341:3:110"
                  },
                  "variables": [
                    {
                      "name": "dst_1",
                      "nodeType": "YulTypedName",
                      "src": "2332:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2360:3:110"
                      },
                      {
                        "name": "_4",
                        "nodeType": "YulIdentifier",
                        "src": "2365:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2353:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2353:15:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:19:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2388:3:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2393:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2384:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2384:12:110"
                  },
                  "variableNames": [
                    {
                      "name": "dst",
                      "nodeType": "YulIdentifier",
                      "src": "2377:3:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2405:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "2427:2:110"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2435:1:110",
                                "type": "",
                                "value": "5"
                              },
                              {
                                "name": "_4",
                                "nodeType": "YulIdentifier",
                                "src": "2438:2:110"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2431:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2431:10:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2423:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2423:19:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2444:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2419:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2419:28:110"
                  },
                  "variables": [
                    {
                      "name": "srcEnd",
                      "nodeType": "YulTypedName",
                      "src": "2409:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2479:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2488:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2491:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2481:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2481:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2481:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2462:6:110"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2470:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2459:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2459:19:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2456:39:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2504:22:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "2519:2:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2523:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2515:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2515:11:110"
                  },
                  "variables": [
                    {
                      "name": "src",
                      "nodeType": "YulTypedName",
                      "src": "2508:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2591:168:110",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "2605:25:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2626:3:110"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "2620:5:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2620:10:110"
                        },
                        "variables": [
                          {
                            "name": "value_1",
                            "nodeType": "YulTypedName",
                            "src": "2609:7:110",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "2676:7:110"
                            }
                          ],
                          "functionName": {
                            "name": "validator_revert_contract_IERC20",
                            "nodeType": "YulIdentifier",
                            "src": "2643:32:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2643:41:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2643:41:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2704:3:110"
                            },
                            {
                              "name": "value_1",
                              "nodeType": "YulIdentifier",
                              "src": "2709:7:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2697:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2697:20:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2697:20:110"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "2730:19:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "dst",
                              "nodeType": "YulIdentifier",
                              "src": "2741:3:110"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2746:2:110"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2737:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2737:12:110"
                        },
                        "variableNames": [
                          {
                            "name": "dst",
                            "nodeType": "YulIdentifier",
                            "src": "2730:3:110"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2546:3:110"
                      },
                      {
                        "name": "srcEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2551:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2543:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2543:15:110"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2559:23:110",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2561:19:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "src",
                              "nodeType": "YulIdentifier",
                              "src": "2572:3:110"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2577:2:110"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2568:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2568:12:110"
                        },
                        "variableNames": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2561:3:110"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2539:3:110",
                    "statements": []
                  },
                  "src": "2535:224:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2768:15:110",
                  "value": {
                    "name": "dst_1",
                    "nodeType": "YulIdentifier",
                    "src": "2778:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2768:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2792:41:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2818:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2829:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2814:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2814:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2808:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2808:25:110"
                  },
                  "variables": [
                    {
                      "name": "offset_1",
                      "nodeType": "YulTypedName",
                      "src": "2796:8:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2862:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2871:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2874:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2864:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2864:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2864:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset_1",
                        "nodeType": "YulIdentifier",
                        "src": "2848:8:110"
                      },
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2858:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2845:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2845:16:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2842:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2887:84:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2941:9:110"
                          },
                          {
                            "name": "offset_1",
                            "nodeType": "YulIdentifier",
                            "src": "2952:8:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2937:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2937:24:110"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2963:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_array_uint192_dyn_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2897:39:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2897:74:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2887:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969t_array$_t_address_$dyn_memory_ptrt_array$_t_uint192_$dyn_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1735:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1746:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1758:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1766:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1774:6:110",
                "type": ""
              }
            ],
            "src": "1606:1371:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3156:234:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3173:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3184:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3166:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3166:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3166:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3207:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3218:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3203:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3203:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3223:2:110",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3196:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3196:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3196:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3246:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3257:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3242:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3242:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636f6e7374727563746f723a204d697363",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3262:34:110",
                        "type": "",
                        "value": "LinearVesting::constructor: Misc"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3235:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3235:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3235:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3317:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3328:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3313:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3313:18:110"
                      },
                      {
                        "hexValue": "6f6e66696775726174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3333:14:110",
                        "type": "",
                        "value": "onfiguration"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3306:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3306:42:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3306:42:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3357:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3369:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3380:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3365:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3365:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3357:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1ec8f8a94c8cdd1156c159709e368f0389bd5f91fc35ab66d8cb6de1ef02b9b9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3133:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3147:4:110",
                "type": ""
              }
            ],
            "src": "2982:408:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3427:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3444:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3451:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3456:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3447:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3447:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3437:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3437:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3437:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3484:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3487:4:110",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3477:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3477:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3477:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3508:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3511:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3501:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3501:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3501:15:110"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "3395:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3701:244:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3718:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3729:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3711:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3711:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3711:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3752:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3763:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3748:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3748:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3768:2:110",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3741:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3741:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3741:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3791:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3802:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3787:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3787:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636f6e7374727563746f723a20496e636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3807:34:110",
                        "type": "",
                        "value": "LinearVesting::constructor: Inco"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3780:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3780:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3780:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3862:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3873:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3858:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3858:18:110"
                      },
                      {
                        "hexValue": "727265637420416d6f756e7420537065636966696564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3878:24:110",
                        "type": "",
                        "value": "rrect Amount Specified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3851:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3851:52:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3851:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3912:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3924:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3935:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3920:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3920:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3912:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5669b4f305e4b00dba2fdee2af9b0084c146ad4a520895fd93dd931141ea8572__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3678:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3692:4:110",
                "type": ""
              }
            ],
            "src": "3527:418:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3982:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3999:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4006:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4011:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4002:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4002:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3992:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3992:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3992:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4039:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4042:4:110",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4032:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4032:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4032:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4063:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4066:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "4056:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4056:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4056:15:110"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3950:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4130:80:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4157:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4159:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4159:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4159:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4146:1:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4153:1:110"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4149:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4149:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4143:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4143:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4140:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4188:16:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4199:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4202:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4195:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4195:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "4188:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4113:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4116:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "4122:3:110",
                "type": ""
              }
            ],
            "src": "4082:128:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4262:88:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4293:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4295:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4295:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4295:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4278:5:110"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4289:1:110",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4285:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4285:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4275:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4275:17:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4272:43:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4324:20:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4335:5:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4342:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4331:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4331:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4324:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4244:5:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4254:3:110",
                "type": ""
              }
            ],
            "src": "4215:135:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4529:248:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4546:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4557:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4539:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4539:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4539:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4580:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4591:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4576:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4576:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4596:2:110",
                        "type": "",
                        "value": "58"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4569:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4569:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4569:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4619:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4630:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4615:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4615:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636f6e7374727563746f723a20496e7661",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4635:34:110",
                        "type": "",
                        "value": "LinearVesting::constructor: Inva"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4608:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4608:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4608:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4690:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4701:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4686:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4686:18:110"
                      },
                      {
                        "hexValue": "6c6964205665737420416d6f756e747320537065636966696564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4706:28:110",
                        "type": "",
                        "value": "lid Vest Amounts Specified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4679:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4679:56:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4679:56:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4744:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4756:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4767:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4752:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4752:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4744:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_944e3f56c5448c965ac5ea0286408de048f4ae7ed99cfee3bb1d09f0fb49d10f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4506:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4520:4:110",
                "type": ""
              }
            ],
            "src": "4355:422:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4956:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4973:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4984:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4966:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4966:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4966:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5007:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5018:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5003:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5003:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5023:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4996:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4996:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4996:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5046:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5057:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5042:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5042:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5062:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5035:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5035:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5035:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5117:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5128:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5113:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5113:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5133:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5106:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5106:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5106:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5151:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5163:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5174:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5159:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5159:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5151:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4933:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4947:4:110",
                "type": ""
              }
            ],
            "src": "4782:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5363:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5380:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5391:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5373:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5373:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5373:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5414:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5425:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5410:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5410:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5430:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5403:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5403:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5403:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5453:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5464:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5449:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5449:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5469:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5442:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5442:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5442:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5513:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5525:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5536:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5521:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5521:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5513:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5340:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5354:4:110",
                "type": ""
              }
            ],
            "src": "5189:356:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_address_dyn(length) -> size\n    {\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint192_dyn_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := mload(offset)\n        let _2 := 0x20\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_1))\n        let dst_1 := dst\n        mstore(dst, _1)\n        dst := add(dst, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            let value := mload(src)\n            if iszero(eq(value, and(value, sub(shl(192, 1), 1))))\n            {\n                let _3 := 0\n                revert(_3, _3)\n            }\n            mstore(dst, value)\n            dst := add(dst, _2)\n        }\n        array := dst_1\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969t_array$_t_address_$dyn_memory_ptrt_array$_t_uint192_$dyn_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n        let _1 := 32\n        let offset := mload(add(headStart, _1))\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        let dst := allocate_memory(array_allocation_size_array_address_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let srcEnd := add(add(_3, shl(5, _4)), _1)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_3, _1)\n        for { } lt(src, srcEnd) { src := add(src, _1) }\n        {\n            let value_1 := mload(src)\n            validator_revert_contract_IERC20(value_1)\n            mstore(dst, value_1)\n            dst := add(dst, _1)\n        }\n        value1 := dst_1\n        let offset_1 := mload(add(headStart, 64))\n        if gt(offset_1, _2) { revert(0, 0) }\n        value2 := abi_decode_array_uint192_dyn_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_1ec8f8a94c8cdd1156c159709e368f0389bd5f91fc35ab66d8cb6de1ef02b9b9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"LinearVesting::constructor: Misc\")\n        mstore(add(headStart, 96), \"onfiguration\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_5669b4f305e4b00dba2fdee2af9b0084c146ad4a520895fd93dd931141ea8572__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"LinearVesting::constructor: Inco\")\n        mstore(add(headStart, 96), \"rrect Amount Specified\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_944e3f56c5448c965ac5ea0286408de048f4ae7ed99cfee3bb1d09f0fb49d10f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 58)\n        mstore(add(headStart, 64), \"LinearVesting::constructor: Inva\")\n        mstore(add(headStart, 96), \"lid Vest Amounts Specified\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:8667:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:110",
                "type": ""
              }
            ],
            "src": "14:177:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "311:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "321:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "333:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "344:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "329:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "329:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "321:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "363:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "378:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "394:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "399:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "390:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "390:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "403:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "386:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "386:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "374:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "374:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "356:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "356:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "356:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$969__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "280:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "291:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "302:4:110",
                "type": ""
              }
            ],
            "src": "196:217:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "519:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "529:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "541:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "552:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "537:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "537:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "529:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "571:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "586:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "602:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "607:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "598:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "598:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "611:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "594:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "594:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "582:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "582:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "564:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "564:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "564:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "488:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "499:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "510:4:110",
                "type": ""
              }
            ],
            "src": "418:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "675:124:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "685:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "707:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "694:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "694:20:110"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "685:5:110"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "777:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "786:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "789:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "779:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "779:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "779:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "736:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "747:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "762:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "767:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "758:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "758:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "771:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "754:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "754:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "743:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "743:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "733:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "733:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "726:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "726:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "723:70:110"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "654:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "665:5:110",
                "type": ""
              }
            ],
            "src": "626:173:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "891:167:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "937:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "946:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "949:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "939:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "939:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "939:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "912:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "921:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "908:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "908:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "933:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "904:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "904:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "901:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "962:39:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "991:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "972:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "972:29:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "962:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1037:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1048:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1033:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1033:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1020:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1020:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1010:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "849:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "860:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "872:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "880:6:110",
                "type": ""
              }
            ],
            "src": "804:254:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1133:116:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1179:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1188:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1191:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1181:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1181:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1181:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1154:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1163:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1150:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1150:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1175:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1146:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1146:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1143:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1204:39:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1233:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1214:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1214:29:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1204:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1099:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1110:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1122:6:110",
                "type": ""
              }
            ],
            "src": "1063:186:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1437:328:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1447:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1459:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1470:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1455:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1455:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1447:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1490:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1505:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1521:3:110",
                                    "type": "",
                                    "value": "192"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1526:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1517:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1517:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1530:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1513:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1513:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1501:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1501:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1483:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1483:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1483:51:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1554:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1565:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1550:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1550:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "1574:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1582:18:110",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1570:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1570:31:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1543:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1543:59:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1543:59:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1611:44:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1621:34:110",
                    "type": "",
                    "value": "0xffffffffffffffffffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1615:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1675:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1686:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1671:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1671:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "1695:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1703:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1691:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1691:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1664:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1664:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1664:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1727:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1738:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1723:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1723:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "1747:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1755:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1743:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1743:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1716:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1716:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1716:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint192_t_uint64_t_uint128_t_uint128__to_t_uint192_t_uint64_t_uint128_t_uint128__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1382:9:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1393:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1401:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1409:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1417:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1428:4:110",
                "type": ""
              }
            ],
            "src": "1254:511:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1944:234:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1961:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1972:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1954:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1954:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1954:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1995:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2006:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1991:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1991:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:2:110",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1984:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1984:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1984:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2034:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2045:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2030:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2030:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a20496e636f727265637420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2050:34:110",
                        "type": "",
                        "value": "LinearVesting::claim: Incorrect "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2023:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2023:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2023:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2105:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2116:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2101:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2101:18:110"
                      },
                      {
                        "hexValue": "56657374696e672054797065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2121:14:110",
                        "type": "",
                        "value": "Vesting Type"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2094:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2094:42:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2094:42:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2145:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2157:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2168:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2153:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2153:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2145:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7843c533d3757a271662d5209310280943296b319f60a2ff400c26110732d61e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1921:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1935:4:110",
                "type": ""
              }
            ],
            "src": "1770:408:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2357:227:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2374:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2367:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2367:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2408:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2419:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2404:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2404:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2424:2:110",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2397:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2397:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2397:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2447:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2458:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2443:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2443:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a204e6f7420537461727465",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2463:34:110",
                        "type": "",
                        "value": "LinearVesting::claim: Not Starte"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2436:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2436:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2436:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2518:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2529:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2514:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2514:18:110"
                      },
                      {
                        "hexValue": "6420596574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2534:7:110",
                        "type": "",
                        "value": "d Yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2507:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2507:35:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2507:35:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2551:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2563:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2574:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2559:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2559:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2551:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c2ea54052bad02aef5911cdb79f2f6e60bbfcfd1a6cf2acaa1ceb732b01c2ea9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2334:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2348:4:110",
                "type": ""
              }
            ],
            "src": "2183:401:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2763:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2780:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2791:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2773:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2773:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2814:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2825:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2810:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2810:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2830:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2803:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2803:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2803:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2853:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2864:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2849:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2849:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a204e6f7468696e6720746f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2869:34:110",
                        "type": "",
                        "value": "LinearVesting::claim: Nothing to"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2842:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2842:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2842:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2924:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2935:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2920:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2920:18:110"
                      },
                      {
                        "hexValue": "20636c61696d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2940:8:110",
                        "type": "",
                        "value": " claim"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2913:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2913:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2913:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2958:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2970:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2981:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2966:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2966:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2958:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6646d82ad66f7a30e9f3e1bb2a9d0e2e411896660cb46dcec735bf47e725fbda__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2740:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2754:4:110",
                "type": ""
              }
            ],
            "src": "2589:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3028:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3045:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3052:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3057:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3048:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3048:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3038:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3038:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3038:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3085:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3088:4:110",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3078:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3078:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3109:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3112:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3102:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3102:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3102:15:110"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2996:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3177:182:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3187:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3205:3:110",
                            "type": "",
                            "value": "192"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3210:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3201:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3201:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3214:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3197:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3197:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3191:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3225:21:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3240:1:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3243:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3236:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3236:10:110"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "3229:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3255:21:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3270:1:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "3273:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3266:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3266:10:110"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "3259:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3301:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3303:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3303:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3303:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "3291:3:110"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "3296:3:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3288:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:12:110"
                  },
                  "nodeType": "YulIf",
                  "src": "3285:38:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3332:21:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "3344:3:110"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "3349:3:110"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3340:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3340:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "3332:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint192",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3159:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3162:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "3168:4:110",
                "type": ""
              }
            ],
            "src": "3128:231:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3416:116:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3475:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3477:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3477:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3477:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3447:1:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3440:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3440:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3433:6:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3433:17:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3455:1:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3466:1:110",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "3462:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3462:6:110"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "3470:1:110"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "3458:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3458:14:110"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3452:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3452:21:110"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3429:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3429:45:110"
                  },
                  "nodeType": "YulIf",
                  "src": "3426:71:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3506:20:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3521:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3524:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "3517:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3517:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "3506:7:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3395:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3398:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "3404:7:110",
                "type": ""
              }
            ],
            "src": "3364:168:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3585:80:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3612:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3614:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3614:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3614:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3601:1:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "3608:1:110"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "3604:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3604:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3598:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3598:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "3595:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3643:16:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3654:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3657:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3650:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3650:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3643:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3568:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3571:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3577:3:110",
                "type": ""
              }
            ],
            "src": "3537:128:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3844:231:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3861:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3872:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3854:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3854:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3854:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3895:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3906:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3891:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3891:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3911:2:110",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3884:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3884:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3884:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3934:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3945:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3930:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3930:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a73656c66566573743a20416c7265616479",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3950:34:110",
                        "type": "",
                        "value": "LinearVesting::selfVest: Already"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3923:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3923:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3923:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4005:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4016:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4001:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4001:18:110"
                      },
                      {
                        "hexValue": "206120766573746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4021:11:110",
                        "type": "",
                        "value": " a vester"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3994:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3994:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3994:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4042:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4054:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4065:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4050:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4050:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4042:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d2036e1b2072e346735a7a734074d12ccf88e8fe2334ec8656cad74c1cc79464__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3821:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3835:4:110",
                "type": ""
              }
            ],
            "src": "3670:405:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4254:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4271:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4282:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4264:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4264:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4264:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4305:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4316:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4301:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4301:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4321:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4294:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4294:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4344:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4355:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4340:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4340:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4360:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4333:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4333:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4333:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4415:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4426:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4411:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4411:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4431:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4404:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4404:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4404:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4449:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4461:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4472:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4457:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4457:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4449:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4231:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4245:4:110",
                "type": ""
              }
            ],
            "src": "4080:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4536:76:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4558:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4560:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4560:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4560:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4552:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4555:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "4549:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4549:8:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4546:34:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4589:17:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4601:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4604:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4597:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4597:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4589:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4518:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4521:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4527:4:110",
                "type": ""
              }
            ],
            "src": "4487:125:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4663:171:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4694:111:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4715:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4722:3:110",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4727:10:110",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4718:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4718:20:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4708:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4708:31:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4708:31:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4759:1:110",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4762:4:110",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4752:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4752:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4752:15:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4787:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4790:4:110",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4780:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4780:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4780:15:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4683:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4676:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4676:9:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4673:132:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4814:14:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4823:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4826:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4819:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4819:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4814:1:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4648:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4651:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "4657:1:110",
                "type": ""
              }
            ],
            "src": "4617:217:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4968:145:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4978:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4990:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5001:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4986:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4986:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4978:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5020:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "5035:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5051:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5056:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "5047:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5047:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5060:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "5043:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5043:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "5031:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5031:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5013:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5013:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5013:51:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5084:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5095:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5080:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5080:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "5100:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5073:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5073:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5073:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4929:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4940:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4948:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4959:4:110",
                "type": ""
              }
            ],
            "src": "4839:274:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5292:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5309:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5320:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5302:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5302:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5302:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5343:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5354:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5339:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5339:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5359:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5332:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5332:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5332:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5382:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5393:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5378:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5378:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5398:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5371:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5371:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5371:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5442:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5454:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5465:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5450:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5450:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5442:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5269:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5283:4:110",
                "type": ""
              }
            ],
            "src": "5118:356:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5653:244:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5670:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5681:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5663:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5663:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5663:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5704:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5715:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5700:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5700:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5720:2:110",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5693:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5693:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5693:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5743:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5754:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5739:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5739:18:110"
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a5f686173537461727465643a2056657374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5759:34:110",
                        "type": "",
                        "value": "LinearVesting::_hasStarted: Vest"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5732:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5732:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5732:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5814:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5825:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5810:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5810:18:110"
                      },
                      {
                        "hexValue": "696e67206861736e2774207374617274656420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5830:24:110",
                        "type": "",
                        "value": "ing hasn't started yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5803:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5803:52:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5803:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5864:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5876:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5887:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5872:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5872:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5864:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ee6ec791b378239cd344bfa63a0b4208954dd30003de29f58799ab30613ac69c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5630:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5644:4:110",
                "type": ""
              }
            ],
            "src": "5479:418:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6059:218:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6069:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6081:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6092:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6077:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6077:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6069:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6104:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6122:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6127:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6118:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6118:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6131:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6114:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6114:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6108:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6149:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6164:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6172:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6160:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6160:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6142:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6142:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6142:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6196:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6207:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6192:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6192:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6216:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6224:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6212:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6212:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6185:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6185:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6185:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6248:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6259:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6244:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6244:18:110"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6264:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6237:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6237:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6237:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6012:9:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6023:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6031:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6039:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6050:4:110",
                "type": ""
              }
            ],
            "src": "5902:375:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6360:199:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6406:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6415:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6418:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6408:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6408:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6408:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6381:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6390:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6377:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6377:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6402:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6373:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6373:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "6370:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6431:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6450:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6444:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6444:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6435:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6513:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6522:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6525:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6515:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6515:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6515:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6482:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6503:5:110"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6496:6:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6496:13:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6489:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6489:21:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6479:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6479:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6472:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6472:40:110"
                  },
                  "nodeType": "YulIf",
                  "src": "6469:60:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6538:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6548:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6538:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6326:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6337:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6349:6:110",
                "type": ""
              }
            ],
            "src": "6282:277:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6738:232:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6755:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6766:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6748:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6748:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6748:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6789:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6800:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6785:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6785:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6805:2:110",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6778:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6778:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6778:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6828:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6839:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6824:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6824:18:110"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6844:34:110",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6817:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6817:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6817:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6899:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6910:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6895:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6895:18:110"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6915:12:110",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6888:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6888:40:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6888:40:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6937:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6949:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6960:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6945:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6945:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6937:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6715:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6729:4:110",
                "type": ""
              }
            ],
            "src": "6564:406:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7149:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7166:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7177:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7159:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7159:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7159:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7200:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7211:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7196:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7196:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7216:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7189:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7189:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7189:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7239:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7250:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7235:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7235:18:110"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7255:34:110",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7228:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7228:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7228:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7310:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7321:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7306:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7306:18:110"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7326:8:110",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7299:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7299:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7344:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7356:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7367:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7352:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7352:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7344:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7126:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7140:4:110",
                "type": ""
              }
            ],
            "src": "6975:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7435:205:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7445:10:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "7454:1:110",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "7449:1:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7514:63:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7539:3:110"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "7544:1:110"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7535:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7535:11:110"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "7558:3:110"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "7563:1:110"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "7554:3:110"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "7554:11:110"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "7548:5:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7548:18:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7528:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7528:39:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7528:39:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7475:1:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7478:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7472:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7472:13:110"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "7486:19:110",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "7488:15:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "7497:1:110"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7500:2:110",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "7493:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7493:10:110"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "7488:1:110"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "7468:3:110",
                    "statements": []
                  },
                  "src": "7464:113:110"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7603:31:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "7616:3:110"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7621:6:110"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "7612:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "7612:16:110"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7630:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "7605:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7605:27:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7605:27:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "7592:1:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7595:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "7589:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7589:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "7586:48:110"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "7413:3:110",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "7418:3:110",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "7423:6:110",
                "type": ""
              }
            ],
            "src": "7382:258:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7782:137:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7792:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7812:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7806:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7806:13:110"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "7796:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7854:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7862:4:110",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7850:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7850:17:110"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7869:3:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7874:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "7828:21:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7828:53:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7828:53:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7890:23:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "7901:3:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "7906:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7897:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:16:110"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "7890:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "7758:3:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7763:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "7774:3:110",
                "type": ""
              }
            ],
            "src": "7645:274:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8098:179:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8115:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8126:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8108:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8108:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8108:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8149:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8160:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8145:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8145:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8165:2:110",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8138:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8138:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8138:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8188:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8199:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8184:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8184:18:110"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8204:31:110",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8177:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8177:59:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8177:59:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8245:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8257:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8268:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8253:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8253:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8245:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8075:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8089:4:110",
                "type": ""
              }
            ],
            "src": "7924:353:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8403:262:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8420:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8431:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8413:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8413:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8413:21:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8443:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8463:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8457:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8457:13:110"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "8447:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8490:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8501:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8486:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8486:18:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8506:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8479:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8479:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8479:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8548:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8556:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8544:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8544:15:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8565:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8576:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8561:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8561:18:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "8581:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "8522:21:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8522:66:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8522:66:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8597:62:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8613:9:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8632:6:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8640:2:110",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8628:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8628:15:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8649:2:110",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8645:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8645:7:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8624:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8624:29:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8609:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8609:45:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8656:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8605:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8605:54:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8597:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8372:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8383:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8394:4:110",
                "type": ""
              }
            ],
            "src": "8282:383:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$969__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint192_t_uint64_t_uint128_t_uint128__to_t_uint192_t_uint64_t_uint128_t_uint128__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, sub(shl(192, 1), 1)))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffff))\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_7843c533d3757a271662d5209310280943296b319f60a2ff400c26110732d61e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"LinearVesting::claim: Incorrect \")\n        mstore(add(headStart, 96), \"Vesting Type\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c2ea54052bad02aef5911cdb79f2f6e60bbfcfd1a6cf2acaa1ceb732b01c2ea9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"LinearVesting::claim: Not Starte\")\n        mstore(add(headStart, 96), \"d Yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6646d82ad66f7a30e9f3e1bb2a9d0e2e411896660cb46dcec735bf47e725fbda__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"LinearVesting::claim: Nothing to\")\n        mstore(add(headStart, 96), \" claim\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint192(x, y) -> diff\n    {\n        let _1 := sub(shl(192, 1), 1)\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_d2036e1b2072e346735a7a734074d12ccf88e8fe2334ec8656cad74c1cc79464__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"LinearVesting::selfVest: Already\")\n        mstore(add(headStart, 96), \" a vester\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ee6ec791b378239cd344bfa63a0b4208954dd30003de29f58799ab30613ac69c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"LinearVesting::_hasStarted: Vest\")\n        mstore(add(headStart, 96), \"ing hasn't started yet\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "822:8757:107:-:0;;;1925:842;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;734:10:18;936:18:0;:32::i;:::-;-1:-1:-1;;;;;2071:31:107;;;;;;:67;;;2124:7;:14;2106:7;:14;:32;2071:67;2049:161;;;;-1:-1:-1;;;2049:161:107;;3184:2:110;2049:161:107;;;3166:21:110;3223:2;3203:18;;;3196:30;3262:34;3242:18;;;3235:62;-1:-1:-1;;;3313:18:110;;;3306:42;3365:19;;2049:161:107;;;;;;;;;-1:-1:-1;;;;;2223:14:107;;;;2250:13;;2274:295;2298:7;:14;2294:1;:18;2274:295;;;2360:7;2368:1;2360:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2360:15:107;2374:1;2360:15;;2334:131;;;;-1:-1:-1;;;2334:131:107;;3729:2:110;2334:131:107;;;3711:21:110;3768:2;3748:18;;;3741:30;3807:34;3787:18;;;3780:62;3878:24;3858:18;;;3851:52;3920:19;;2334:131:107;3527:418:110;2334:131:107;2506:7;2514:1;2506:10;;;;;;;;:::i;:::-;;;;;;;2480:4;:16;2485:7;2493:1;2485:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2480:16:107;-1:-1:-1;;;;;2480:16:107;;;;;;;;;;;;:23;;;:36;;;;;-1:-1:-1;;;;;2480:36:107;;;;;-1:-1:-1;;;;;2480:36:107;;;;;;2547:7;2555:1;2547:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;2539:18:107;:5;:18;;;;:::i;:::-;2531:26;-1:-1:-1;2314:3:107;;;;:::i;:::-;;;;2274:295;;;;785:21:98;2601:5:107;:25;2579:133;;;;-1:-1:-1;;;2579:133:107;;4557:2:110;2579:133:107;;;4539:21:110;4596:2;4576:18;;;4569:30;4635:34;4615:18;;;4608:62;4706:28;4686:18;;;4679:56;4752:19;;2579:133:107;4355:422:110;2579:133:107;2725:34;2751:6;2725:17;:34::i;:::-;2038:729;1925:842;;;822:8757;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;4984:2:110;2154:73:0::1;::::0;::::1;4966:21:110::0;5023:2;5003:18;;;4996:30;5062:34;5042:18;;;5035:62;-1:-1:-1;;;5113:18:110;;;5106:36;5159:19;;2154:73:0::1;4782:402:110::0;2154:73:0::1;2237:28;2256:8:::0;2237:18:::1;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5391:2:110;1414:68:0;;;5373:21:110;;;5410:18;;;5403:30;5469:34;5449:18;;;5442:62;5521:18;;1414:68:0;5189:356:110;1414:68:0;1359:130::o;14:139:110:-;-1:-1:-1;;;;;97:31:110;;87:42;;77:70;;143:1;140;133:12;158:127;219:10;214:3;210:20;207:1;200:31;250:4;247:1;240:15;274:4;271:1;264:15;290:275;361:2;355:9;426:2;407:13;;-1:-1:-1;;403:27:110;391:40;;-1:-1:-1;;;;;446:34:110;;482:22;;;443:62;440:88;;;508:18;;:::i;:::-;544:2;537:22;290:275;;-1:-1:-1;290:275:110:o;570:183::-;630:4;-1:-1:-1;;;;;652:30:110;;649:56;;;685:18;;:::i;:::-;-1:-1:-1;730:1:110;726:14;742:4;722:25;;570:183::o;758:843::-;823:5;876:3;869:4;861:6;857:17;853:27;843:55;;894:1;891;884:12;843:55;923:6;917:13;949:4;973:60;989:43;1029:2;989:43;:::i;:::-;973:60;:::i;:::-;1067:15;;;1153:1;1149:10;;;;1137:23;;1133:32;;;1098:12;;;;1177:15;;;1174:35;;;1205:1;1202;1195:12;1174:35;1241:2;1233:6;1229:15;1253:319;1269:6;1264:3;1261:15;1253:319;;;1336:10;;-1:-1:-1;;;;;1379:31:110;;1369:42;;1359:140;;1453:1;1482:2;1478;1471:14;1359:140;1512:18;;1550:12;;;;1286;;1253:319;;;-1:-1:-1;1590:5:110;758:843;-1:-1:-1;;;;;;758:843:110:o;1606:1371::-;1758:6;1766;1774;1827:2;1815:9;1806:7;1802:23;1798:32;1795:52;;;1843:1;1840;1833:12;1795:52;1875:9;1869:16;1894:39;1927:5;1894:39;:::i;:::-;1976:2;2007:18;;;2001:25;1952:5;;-1:-1:-1;1976:2:110;-1:-1:-1;;;;;2075:14:110;;;2072:34;;;2102:1;2099;2092:12;2072:34;2140:6;2129:9;2125:22;2115:32;;2185:7;2178:4;2174:2;2170:13;2166:27;2156:55;;2207:1;2204;2197:12;2156:55;2236:2;2230:9;2259:60;2275:43;2315:2;2275:43;:::i;2259:60::-;2353:15;;;2435:1;2431:10;;;;2423:19;;2419:28;;;2384:12;;;;2459:19;;;2456:39;;;2491:1;2488;2481:12;2456:39;2515:11;;;;2535:224;2551:6;2546:3;2543:15;2535:224;;;2626:3;2620:10;2643:41;2676:7;2643:41;:::i;:::-;2697:20;;2568:12;;;;2737;;;;2535:224;;;2829:2;2814:18;;2808:25;2778:5;;-1:-1:-1;2808:25:110;-1:-1:-1;;;2845:16:110;;;2842:36;;;2874:1;2871;2864:12;2842:36;;;2897:74;2963:7;2952:8;2941:9;2937:24;2897:74;:::i;:::-;2887:84;;;1606:1371;;;;;:::o;3395:127::-;3456:10;3451:3;3447:20;3444:1;3437:31;3487:4;3484:1;3477:15;3511:4;3508:1;3501:15;3950:127;4011:10;4006:3;4002:20;3999:1;3992:31;4042:4;4039:1;4032:15;4066:4;4063:1;4056:15;4082:128;4122:3;4153:1;4149:6;4146:1;4143:13;4140:39;;;4159:18;;:::i;:::-;-1:-1:-1;4195:9:110;;4082:128::o;4215:135::-;4254:3;-1:-1:-1;;4275:17:110;;4272:43;;;4295:18;;:::i;:::-;-1:-1:-1;4342:1:110;4331:13;;4215:135::o;5189:356::-;822:8757:107;;;;;;;;;;",
  "deployedSourceMap": "822:8757:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4736:876;;;:::i;:::-;;;160:25:110;;;148:2;133:18;4736:876:107;;;;;;;;5976:226;;;:::i;:::-;;1091:29;;;;;;;;-1:-1:-1;;;;;374:32:110;;;356:51;;344:2;329:18;1091:29:107;196:217:110;3652:700:107;;;:::i;1824:101:0:-;;;:::i;2980:253:107:-;;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;6285:441:107;;;;;;:::i;:::-;;:::i;1169:20::-;;;;;;1236:18;;;;;;2074:198:0;;;;;;:::i;:::-;;:::i;1314:38:107:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1314:38:107;;;-1:-1:-1;;;1314:38:107;;;;;-1:-1:-1;;;;;1314:38:107;;;;-1:-1:-1;;;1314:38:107;;;;;;;;;-1:-1:-1;;;;;1501:32:110;;;1483:51;;1582:18;1570:31;;;1565:2;1550:18;;1543:59;-1:-1:-1;;;;;1691:15:110;;;1671:18;;;1664:43;;;;1743:15;1738:2;1723:18;;1716:43;1470:3;1455:19;1314:38:107;1254:511:110;4736:876:107;4850:10;4789:20;4845:16;;;:4;:16;;;;;;;;4822:39;;;;;;;;;-1:-1:-1;;;;;4822:39:107;;;;-1:-1:-1;;;4822:39:107;;;;;;;;;;;;;;-1:-1:-1;;;;;4822:39:107;;;;;;;;;-1:-1:-1;;;4822:39:107;;;;;;;;4874:111;;;;-1:-1:-1;;;4874:111:107;;;;;;;:::i;:::-;;;;;;;;;5035:15;5020:6;:12;;;-1:-1:-1;;;;;5020:30:107;;4998:117;;;;-1:-1:-1;;;4998:117:107;;2385:2:110;4998:117:107;;;2367:21:110;2424:2;2404:18;;;2397:30;2463:34;2443:18;;;2436:62;-1:-1:-1;;;2514:18:110;;;2507:35;2559:19;;4998:117:107;2183:401:110;4998:117:107;5143:131;5167:6;:13;;;-1:-1:-1;;;;;5143:131:107;5195:6;:16;;;5143:131;;5226:6;:12;;;-1:-1:-1;;;;;5143:131:107;5253:6;:10;;;-1:-1:-1;;;;;5143:131:107;:9;:131::i;:::-;5128:146;-1:-1:-1;5295:17:107;5287:68;;;;-1:-1:-1;;;5287:68:107;;2791:2:110;5287:68:107;;;2773:21:110;2830:2;2810:18;;;2803:30;2869:34;2849:18;;;2842:62;-1:-1:-1;;;2920:18:110;;;2913:36;2966:19;;5287:68:107;2589:402:110;5287:68:107;5393:12;5368:6;:13;;:38;;;;;;;:::i;:::-;-1:-1:-1;;;;;5368:38:107;;;;;;5417:42;5443:15;5417:42;;:16;;;;:42;;;5477:10;5472:16;;;;:4;:16;;;;;;;;:25;;;;;;;-1:-1:-1;;;5472:25:107;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5472:25:107;;;-1:-1:-1;;;5472:25:107;;;;;;;;;;;;5515:32;5477:10;;-1:-1:-1;5515:32:107;;;;5534:12;160:25:110;;148:2;133:18;;14:177;5515:32:107;;;;;;;;5560:44;-1:-1:-1;;;;;5560:5:107;:18;5579:10;5591:12;5560:18;:44::i;:::-;4811:801;4736:876;:::o;5976:226::-;1094:13:0;:11;:13::i;:::-;6040:15:107::1;6032:5;:23:::0;1342:13:98::1;313:8;1342:1;:13;:::i;:::-;6072:35:107;::::0;:15:::1;:35;:::i;:::-;6066:3;:41:::0;;;6125:37:::1;::::0;1342:13:98::1;::::0;313:8:::1;::::0;1342:13:::1;:::i;:::-;6125:37:107;::::0;160:25:110;;;148:2;133:18;6125:37:107::1;;;;;;;6175:19;:17;:19::i;:::-;5976:226::o:0;3652:700::-;3743:20;9543:13;:11;:13::i;:::-;3809:10:::1;3781:20;3804:16:::0;;;:4:::1;:16;::::0;;;;;;;;3781:39;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;3781:39:107;::::1;::::0;;-1:-1:-1;;;3781:39:107;::::1;;;::::0;;::::1;::::0;;;;;::::1;::::0;-1:-1:-1;;;;;3781:39:107;;::::1;::::0;;;;;;-1:-1:-1;;;3781:39:107;;::::1;;::::0;;;;;3855:17;3833:111:::1;;;;-1:-1:-1::0;;;3833:111:107::1;;;;;;;:::i;:::-;3972:42;3982:6;:13;;;-1:-1:-1::0;;;;;3972:42:107::1;3997:6;:16;;;3972:42;;:9;:42::i;1824:101:0:-:0;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;2980:253:107:-:0;3088:20;9543:13;:11;:13::i;:::-;3154:10:::1;3126:20;3149:16:::0;;;:4:::1;:16;::::0;;;;;;;;3126:39;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;;;3126:39:107;::::1;::::0;;;-1:-1:-1;;;3126:39:107;;::::1;;;::::0;;::::1;::::0;;;;;;::::1;::::0;-1:-1:-1;;;;;3126:39:107;;::::1;::::0;;;;;;;-1:-1:-1;;;3126:39:107;::::1;::::0;;::::1;::::0;;;;3183:42:::1;::::0;:9:::1;:42::i;:::-;3176:49;;;2980:253:::0;:::o;6285:441::-;-1:-1:-1;;;;;6383:10:107;;;;;;:4;:10;;;;;:17;-1:-1:-1;;;;;6383:17:107;:22;6361:113;;;;-1:-1:-1;;;6361:113:107;;3872:2:110;6361:113:107;;;3854:21:110;3911:2;3891:18;;;3884:30;3950:34;3930:18;;;3923:62;-1:-1:-1;;;4001:18:110;;;3994:39;4050:19;;6361:113:107;3670:405:110;6361:113:107;6498:152;;;;;;;;6527:6;-1:-1:-1;;;;;6498:152:107;;;;;6549:1;6498:152;;;;;;6573:15;-1:-1:-1;;;;;6498:152:107;;;;;6612:15;6630:8;6612:26;;;;:::i;:::-;-1:-1:-1;;;;;6498:152:107;;;;;;-1:-1:-1;;;;;6485:10:107;;;;;;;:4;:10;;;;;;;;;:165;;;;;;;;-1:-1:-1;;;6485:165:107;-1:-1:-1;;;;;6485:165:107;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6485:165:107;;;;;;;;;;;;;;6661:57;;:5;:22;6684:10;6704:4;6711:6;6661:22;:57::i;:::-;6285:441;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;4282:2:110;2154:73:0::1;::::0;::::1;4264:21:110::0;4321:2;4301:18;;;4294:30;4360:34;4340:18;;;4333:62;-1:-1:-1;;;4411:18:110;;;4404:36;4457:19;;2154:73:0::1;4080:402:110::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;8779:349:107:-;8928:7;8971:4;8952:15;:23;8948:42;;-1:-1:-1;8984:6:107;8977:13;;8948:42;9005:14;9001:38;;9033:6;9021:18;;9001:38;9103:16;9110:9;9103:4;:16;:::i;:::-;9070:27;9088:9;9070:15;:27;:::i;:::-;9060:38;;:6;:38;:::i;:::-;9059:61;;;;:::i;:::-;9052:68;;8779:349;;;;;;;:::o;941:175:12:-;1050:58;;-1:-1:-1;;;;;5031:32:110;;1050:58:12;;;5013:51:110;5080:18;;;5073:34;;;1023:86:12;;1043:5;;-1:-1:-1;;;1073:23:12;4986:18:110;;1050:58:12;;;;-1:-1:-1;;1050:58:12;;;;;;;;;;;;;;-1:-1:-1;;;;;1050:58:12;-1:-1:-1;;;;;;1050:58:12;;;;;;;;;;1023:19;:86::i;:::-;941:175;;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;5320:2:110;1414:68:0;;;5302:21:110;;;5339:18;;;5332:30;5398:34;5378:18;;;5371:62;5450:18;;1414:68:0;5118:356:110;9213:169:107;9282:5;;9260:114;;;;-1:-1:-1;;;9260:114:107;;5681:2:110;9260:114:107;;;5663:21:110;5720:2;5700:18;;;5693:30;5759:34;5739:18;;;5732:62;-1:-1:-1;;;5810:18:110;;;5803:52;5872:19;;9260:114:107;5479:418:110;7610:338:107;7753:3;;7713:7;;7773:15;:23;-1:-1:-1;7769:42:107;;7805:6;7798:13;;;;;7769:42;7826:14;7822:37;;7854:5;;7842:17;;7822:37;7923:16;7930:9;7923:4;:16;:::i;:::-;7890:27;7908:9;7890:15;:27;:::i;:::-;7880:38;;:6;:38;:::i;:::-;7879:61;;;;:::i;:::-;7872:68;;;7610:338;;;;;:::o;2426:187:0:-;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;1355:203:12:-;1482:68;;-1:-1:-1;;;;;6160:15:110;;;1482:68:12;;;6142:34:110;6212:15;;6192:18;;;6185:43;6244:18;;;6237:34;;;1455:96:12;;1475:5;;-1:-1:-1;;;1505:27:12;6077:18:110;;1482:68:12;5902:375:110;1455:96:12;1355:203;;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:12;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:12;;6766:2:110;5720:111:12;;;6748:21:110;6805:2;6785:18;;;6778:30;6844:34;6824:18;;;6817:62;-1:-1:-1;;;6895:18:110;;;6888:40;6945:19;;5720:111:12;6564:406:110;4108:223:17;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:17;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:17:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:17;;;8113:60;;;;-1:-1:-1;;;8113:60:17;;8126:2:110;8113:60:17;;;8108:21:110;8165:2;8145:18;;;8138:30;8204:31;8184:18;;;8177:59;8253:18;;8113:60:17;7924:353:110;8113:60:17;-1:-1:-1;8208:10:17;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:17;;;;;;;;:::i;626:173:110:-;694:20;;-1:-1:-1;;;;;743:31:110;;733:42;;723:70;;789:1;786;779:12;723:70;626:173;;;:::o;804:254::-;872:6;880;933:2;921:9;912:7;908:23;904:32;901:52;;;949:1;946;939:12;901:52;972:29;991:9;972:29;:::i;:::-;962:39;1048:2;1033:18;;;;1020:32;;-1:-1:-1;;;804:254:110:o;1063:186::-;1122:6;1175:2;1163:9;1154:7;1150:23;1146:32;1143:52;;;1191:1;1188;1181:12;1143:52;1214:29;1233:9;1214:29;:::i;:::-;1204:39;1063:186;-1:-1:-1;;;1063:186:110:o;1770:408::-;1972:2;1954:21;;;2011:2;1991:18;;;1984:30;2050:34;2045:2;2030:18;;2023:62;-1:-1:-1;;;2116:2:110;2101:18;;2094:42;2168:3;2153:19;;1770:408::o;2996:127::-;3057:10;3052:3;3048:20;3045:1;3038:31;3088:4;3085:1;3078:15;3112:4;3109:1;3102:15;3128:231;3168:4;-1:-1:-1;;;;;3266:10:110;;;;3236;;3288:12;;;3285:38;;;3303:18;;:::i;:::-;3340:13;;3128:231;-1:-1:-1;;;3128:231:110:o;3364:168::-;3404:7;3470:1;3466;3462:6;3458:14;3455:1;3452:21;3447:1;3440:9;3433:17;3429:45;3426:71;;;3477:18;;:::i;:::-;-1:-1:-1;3517:9:110;;3364:168::o;3537:128::-;3577:3;3608:1;3604:6;3601:1;3598:13;3595:39;;;3614:18;;:::i;:::-;-1:-1:-1;3650:9:110;;3537:128::o;4487:125::-;4527:4;4555:1;4552;4549:8;4546:34;;;4560:18;;:::i;:::-;-1:-1:-1;4597:9:110;;4487:125::o;4617:217::-;4657:1;4683;4673:132;;4727:10;4722:3;4718:20;4715:1;4708:31;4762:4;4759:1;4752:15;4790:4;4787:1;4780:15;4673:132;-1:-1:-1;4819:9:110;;4617:217::o;6282:277::-;6349:6;6402:2;6390:9;6381:7;6377:23;6373:32;6370:52;;;6418:1;6415;6408:12;6370:52;6450:9;6444:16;6503:5;6496:13;6489:21;6482:5;6479:32;6469:60;;6525:1;6522;6515:12;7382:258;7454:1;7464:113;7478:6;7475:1;7472:13;7464:113;;;7554:11;;;7548:18;7535:11;;;7528:39;7500:2;7493:10;7464:113;;;7595:6;7592:1;7589:13;7586:48;;;-1:-1:-1;;7630:1:110;7612:16;;7605:27;7382:258::o;7645:274::-;7774:3;7812:6;7806:13;7828:53;7874:6;7869:3;7862:4;7854:6;7850:17;7828:53;:::i;:::-;7897:16;;;;;7645:274;-1:-1:-1;;7645:274:110:o;8282:383::-;8431:2;8420:9;8413:21;8394:4;8463:6;8457:13;8506:6;8501:2;8490:9;8486:18;8479:34;8522:66;8581:6;8576:2;8565:9;8561:18;8556:2;8548:6;8544:15;8522:66;:::i;:::-;8649:2;8628:15;-1:-1:-1;;8624:29:110;8609:45;;;;8656:2;8605:54;;8282:383;-1:-1:-1;;8282:383:110:o",
  "source": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity =0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\nimport \"../../shared/ProtocolConstants.sol\";\r\n\r\nimport \"../../interfaces/tokens/vesting/ILinearVesting.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {ILinearVesting} interface.\r\n *\r\n * The straightforward vesting contract that gradually releases a\r\n * fixed supply of tokens to multiple vest parties over a 2 year\r\n * window.\r\n *\r\n * The token expects the {begin} hook to be invoked the moment\r\n * it is supplied with the necessary amount of tokens to vest,\r\n * which should be equivalent to the time the {setComponents}\r\n * function is invoked on the Vader token.\r\n */\r\ncontract LinearVesting is ILinearVesting, ProtocolConstants, Ownable {\r\n    /* ========== LIBRARIES ========== */\r\n\r\n    // Used for safe VADER transfers\r\n    using SafeERC20 for IERC20;\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    // The Vader token\r\n    IERC20 public immutable vader;\r\n\r\n    // The start of the vesting period\r\n    uint256 public start;\r\n\r\n    // The end of the vesting period\r\n    uint256 public end;\r\n\r\n    // The status of each vesting member (Vester)\r\n    mapping(address => Vester) public vest;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    /**\r\n     * @dev Initializes the contract's vesters and vesting amounts as well as sets\r\n     * the Vader token address.\r\n     *\r\n     * It conducts a sanity check to ensure that the total vesting amounts specified match\r\n     * the team allocation to ensure that the contract is deployed correctly.\r\n     *\r\n     * Additionally, it transfers ownership to the Vader contract that needs to consequently\r\n     * initiate the vesting period via {begin} after it mints the necessary amount to the contract.\r\n     */\r\n    constructor(\r\n        IERC20 _vader,\r\n        address[] memory vesters,\r\n        uint192[] memory amounts\r\n    ) {\r\n        require(\r\n            _vader != IERC20(_ZERO_ADDRESS) && vesters.length == amounts.length,\r\n            \"LinearVesting::constructor: Misconfiguration\"\r\n        );\r\n\r\n        vader = _vader;\r\n\r\n        uint256 total;\r\n        for (uint256 i = 0; i < vesters.length; i++) {\r\n            require(\r\n                amounts[i] != 0,\r\n                \"LinearVesting::constructor: Incorrect Amount Specified\"\r\n            );\r\n            vest[vesters[i]].amount = amounts[i];\r\n            total = total + amounts[i];\r\n        }\r\n        require(\r\n            total == _TEAM_ALLOCATION,\r\n            \"LinearVesting::constructor: Invalid Vest Amounts Specified\"\r\n        );\r\n\r\n        transferOwnership(address(_vader));\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    /**\r\n     * @dev Returns the amount a user can claim at a given point in time.\r\n     *\r\n     * Requirements:\r\n     * - the vesting period has started\r\n     */\r\n    function getClaim()\r\n        external\r\n        view\r\n        override\r\n        hasStarted\r\n        returns (uint256 vestedAmount)\r\n    {\r\n        Vester memory vester = vest[msg.sender];\r\n        return _getClaim(vester.amount, vester.lastClaim);\r\n    }\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Allows a user to claim their pending vesting amount.\r\n     *\r\n     * Emits a {Vested} event indicating the user who claimed their vested tokens\r\n     * as well as the amount that was vested.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the vesting period has started\r\n     * - the caller must have a non-zero vested amount\r\n     */\r\n    function claim()\r\n        external\r\n        override\r\n        hasStarted\r\n        returns (uint256 vestedAmount)\r\n    {\r\n        Vester memory vester = vest[msg.sender];\r\n\r\n        require(\r\n            vester.start == 0,\r\n            \"LinearVesting::claim: Incorrect Vesting Type\"\r\n        );\r\n\r\n        vestedAmount = _getClaim(vester.amount, vester.lastClaim);\r\n\r\n        require(vestedAmount != 0, \"LinearVesting::claim: Nothing to claim\");\r\n\r\n        vester.amount -= uint192(vestedAmount);\r\n        vester.lastClaim = uint64(block.timestamp);\r\n\r\n        vest[msg.sender] = vester;\r\n\r\n        emit Vested(msg.sender, vestedAmount);\r\n\r\n        vader.safeTransfer(msg.sender, vestedAmount);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows a user to claim their pending vesting amount of the vested claim\r\n     *\r\n     * Emits a {Vested} event indicating the user who claimed their vested tokens\r\n     * as well as the amount that was vested.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the vesting period has started\r\n     * - the caller must have a non-zero vested amount\r\n     */\r\n    function claimConverted() external override returns (uint256 vestedAmount) {\r\n        Vester memory vester = vest[msg.sender];\r\n\r\n        require(\r\n            vester.start != 0,\r\n            \"LinearVesting::claim: Incorrect Vesting Type\"\r\n        );\r\n\r\n        require(\r\n            vester.start < block.timestamp,\r\n            \"LinearVesting::claim: Not Started Yet\"\r\n        );\r\n\r\n        vestedAmount = _getClaim(\r\n            vester.amount,\r\n            vester.lastClaim,\r\n            vester.start,\r\n            vester.end\r\n        );\r\n\r\n        require(vestedAmount != 0, \"LinearVesting::claim: Nothing to claim\");\r\n\r\n        vester.amount -= uint192(vestedAmount);\r\n        vester.lastClaim = uint64(block.timestamp);\r\n\r\n        vest[msg.sender] = vester;\r\n\r\n        emit Vested(msg.sender, vestedAmount);\r\n\r\n        vader.safeTransfer(msg.sender, vestedAmount);\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Allows the vesting period to be initiated.\r\n     *\r\n     * Emits a {VestingInitialized} event from which the start and\r\n     * end can be calculated via it's attached timestamp.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the owner (vader token)\r\n     */\r\n    function begin() external override onlyOwner {\r\n        start = block.timestamp;\r\n        end = block.timestamp + _VESTING_DURATION;\r\n\r\n        emit VestingInitialized(_VESTING_DURATION);\r\n\r\n        renounceOwnership();\r\n    }\r\n\r\n    /**\r\n     * @dev Adds a new vesting schedule to the contract\r\n     */\r\n    function vestFor(address user, uint256 amount) external override {\r\n        require(\r\n            vest[user].amount == 0,\r\n            \"LinearVesting::selfVest: Already a vester\"\r\n        );\r\n        vest[user] = Vester(\r\n            uint192(amount),\r\n            0,\r\n            uint128(block.timestamp),\r\n            uint128(block.timestamp + 365 days)\r\n        );\r\n        vader.safeTransferFrom(msg.sender, address(this), amount);\r\n    }\r\n\r\n    /* ========== PRIVATE FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Calculates the amount a user's vest is due. To calculate,\r\n     * the following formula is utilized:\r\n     *\r\n     * - (remainingAmount * timeElapsed) / timeUntilEnd\r\n     *\r\n     * Each variable is described as follows:\r\n     *\r\n     * - remainingAmount (amount): Vesting amount remaining. Each claim subtracts from\r\n     * this amount to ensure calculations are properly conducted.\r\n     *\r\n     * - timeElapsed (block.timestamp.sub(lastClaim)): Time that has elapsed since the\r\n     * last claim.\r\n     *\r\n     * - timeUntilEnd (end.sub(lastClaim)): Time remaining for the particular vesting\r\n     * member's total duration.\r\n     *\r\n     * Vesting calculations are relative and always update the last\r\n     * claim timestamp as well as remaining amount whenever they\r\n     * are claimed.\r\n     */\r\n    function _getClaim(uint256 amount, uint256 lastClaim)\r\n        private\r\n        view\r\n        returns (uint256)\r\n    {\r\n        uint256 _end = end;\r\n\r\n        if (block.timestamp >= _end) return amount;\r\n        if (lastClaim == 0) lastClaim = start;\r\n\r\n        return (amount * (block.timestamp - lastClaim)) / (_end - lastClaim);\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates the amount a user's vest is due. To calculate,\r\n     * the following formula is utilized:\r\n     *\r\n     * - (remainingAmount * timeElapsed) / timeUntilEnd\r\n     *\r\n     * Each variable is described as follows:\r\n     *\r\n     * - remainingAmount (amount): Vesting amount remaining. Each claim subtracts from\r\n     * this amount to ensure calculations are properly conducted.\r\n     *\r\n     * - timeElapsed (block.timestamp.sub(lastClaim)): Time that has elapsed since the\r\n     * last claim.\r\n     *\r\n     * - timeUntilEnd (end.sub(lastClaim)): Time remaining for the particular vesting\r\n     * member's total duration.\r\n     *\r\n     * Vesting calculations are relative and always update the last\r\n     * claim timestamp as well as remaining amount whenever they\r\n     * are claimed.\r\n     */\r\n    function _getClaim(\r\n        uint256 amount,\r\n        uint256 lastClaim,\r\n        uint256 _start,\r\n        uint256 _end\r\n    ) private view returns (uint256) {\r\n        if (block.timestamp >= _end) return amount;\r\n        if (lastClaim == 0) lastClaim = _start;\r\n\r\n        return (amount * (block.timestamp - lastClaim)) / (_end - lastClaim);\r\n    }\r\n\r\n    /**\r\n     * @dev Validates that the vesting period has started\r\n     */\r\n    function _hasStarted() private view {\r\n        require(\r\n            start != 0,\r\n            \"LinearVesting::_hasStarted: Vesting hasn't started yet\"\r\n        );\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    /**\r\n     * @dev Throws if the vesting period hasn't started\r\n     */\r\n    modifier hasStarted() {\r\n        _hasStarted();\r\n        _;\r\n    }\r\n}\r\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/tokens/vesting/LinearVesting.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/vesting/LinearVesting.sol",
    "exportedSymbols": {
      "Address": [
        3730
      ],
      "Context": [
        3760
      ],
      "IERC20": [
        969
      ],
      "IERC20Permit": [
        1936
      ],
      "ILinearVesting": [
        20526
      ],
      "LinearVesting": [
        23516
      ],
      "Ownable": [
        112
      ],
      "ProtocolConstants": [
        21440
      ],
      "SafeERC20": [
        2312
      ]
    },
    "id": 23517,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23005,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:107"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 23006,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23517,
        "sourceUnit": 113,
        "src": "68:52:107",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 23007,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23517,
        "sourceUnit": 2313,
        "src": "124:65:107",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 23008,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23517,
        "sourceUnit": 970,
        "src": "193:56:107",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/shared/ProtocolConstants.sol",
        "file": "../../shared/ProtocolConstants.sol",
        "id": 23009,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23517,
        "sourceUnit": 21441,
        "src": "253:44:107",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/tokens/vesting/ILinearVesting.sol",
        "file": "../../interfaces/tokens/vesting/ILinearVesting.sol",
        "id": 23010,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 23517,
        "sourceUnit": 20527,
        "src": "301:60:107",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23012,
              "name": "ILinearVesting",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20526,
              "src": "848:14:107"
            },
            "id": 23013,
            "nodeType": "InheritanceSpecifier",
            "src": "848:14:107"
          },
          {
            "baseName": {
              "id": 23014,
              "name": "ProtocolConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21440,
              "src": "864:17:107"
            },
            "id": 23015,
            "nodeType": "InheritanceSpecifier",
            "src": "864:17:107"
          },
          {
            "baseName": {
              "id": 23016,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "883:7:107"
            },
            "id": 23017,
            "nodeType": "InheritanceSpecifier",
            "src": "883:7:107"
          }
        ],
        "canonicalName": "LinearVesting",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 23011,
          "nodeType": "StructuredDocumentation",
          "src": "365:455:107",
          "text": " @dev Implementation of the {ILinearVesting} interface.\n The straightforward vesting contract that gradually releases a\n fixed supply of tokens to multiple vest parties over a 2 year\n window.\n The token expects the {begin} hook to be invoked the moment\n it is supplied with the necessary amount of tokens to vest,\n which should be equivalent to the time the {setComponents}\n function is invoked on the Vader token."
        },
        "fullyImplemented": true,
        "id": 23516,
        "linearizedBaseContracts": [
          23516,
          112,
          3760,
          21440,
          20526
        ],
        "name": "LinearVesting",
        "nameLocation": "831:13:107",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 23021,
            "libraryName": {
              "id": 23018,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2312,
              "src": "987:9:107"
            },
            "nodeType": "UsingForDirective",
            "src": "981:27:107",
            "typeName": {
              "id": 23020,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23019,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 969,
                "src": "1001:6:107"
              },
              "referencedDeclaration": 969,
              "src": "1001:6:107",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$969",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "1f494b64",
            "id": 23024,
            "mutability": "immutable",
            "name": "vader",
            "nameLocation": "1115:5:107",
            "nodeType": "VariableDeclaration",
            "scope": 23516,
            "src": "1091:29:107",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$969",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 23023,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23022,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 969,
                "src": "1091:6:107"
              },
              "referencedDeclaration": 969,
              "src": "1091:6:107",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$969",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "be9a6555",
            "id": 23026,
            "mutability": "mutable",
            "name": "start",
            "nameLocation": "1184:5:107",
            "nodeType": "VariableDeclaration",
            "scope": 23516,
            "src": "1169:20:107",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23025,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1169:7:107",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "efbe1c1c",
            "id": 23028,
            "mutability": "mutable",
            "name": "end",
            "nameLocation": "1251:3:107",
            "nodeType": "VariableDeclaration",
            "scope": 23516,
            "src": "1236:18:107",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23027,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1236:7:107",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f3c5f51e",
            "id": 23033,
            "mutability": "mutable",
            "name": "vest",
            "nameLocation": "1348:4:107",
            "nodeType": "VariableDeclaration",
            "scope": 23516,
            "src": "1314:38:107",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
              "typeString": "mapping(address => struct ILinearVesting.Vester)"
            },
            "typeName": {
              "id": 23032,
              "keyType": {
                "id": 23029,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1322:7:107",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1314:26:107",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                "typeString": "mapping(address => struct ILinearVesting.Vester)"
              },
              "valueType": {
                "id": 23031,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23030,
                  "name": "Vester",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20490,
                  "src": "1333:6:107"
                },
                "referencedDeclaration": 20490,
                "src": "1333:6:107",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Vester_$20490_storage_ptr",
                  "typeString": "struct ILinearVesting.Vester"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 23123,
              "nodeType": "Block",
              "src": "2038:729:107",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$969",
                            "typeString": "contract IERC20"
                          },
                          "id": 23051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23047,
                            "name": "_vader",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23037,
                            "src": "2071:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 23049,
                                "name": "_ZERO_ADDRESS",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21375,
                                "src": "2088:13:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 23048,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "2081:6:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 23050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2081:21:107",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "2071:31:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 23052,
                              "name": "vesters",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23040,
                              "src": "2106:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                "typeString": "address[] memory"
                              }
                            },
                            "id": 23053,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2106:14:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 23054,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23043,
                              "src": "2124:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint192_$dyn_memory_ptr",
                                "typeString": "uint192[] memory"
                              }
                            },
                            "id": 23055,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "2124:14:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2106:32:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2071:67:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636f6e7374727563746f723a204d6973636f6e66696775726174696f6e",
                        "id": 23058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2153:46:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1ec8f8a94c8cdd1156c159709e368f0389bd5f91fc35ab66d8cb6de1ef02b9b9",
                          "typeString": "literal_string \"LinearVesting::constructor: Misconfiguration\""
                        },
                        "value": "LinearVesting::constructor: Misconfiguration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1ec8f8a94c8cdd1156c159709e368f0389bd5f91fc35ab66d8cb6de1ef02b9b9",
                          "typeString": "literal_string \"LinearVesting::constructor: Misconfiguration\""
                        }
                      ],
                      "id": 23046,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2049:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2049:161:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23060,
                  "nodeType": "ExpressionStatement",
                  "src": "2049:161:107"
                },
                {
                  "expression": {
                    "id": 23063,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23061,
                      "name": "vader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23024,
                      "src": "2223:5:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23062,
                      "name": "_vader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23037,
                      "src": "2231:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "2223:14:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 23064,
                  "nodeType": "ExpressionStatement",
                  "src": "2223:14:107"
                },
                {
                  "assignments": [
                    23066
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23066,
                      "mutability": "mutable",
                      "name": "total",
                      "nameLocation": "2258:5:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 23123,
                      "src": "2250:13:107",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23065,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2250:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23067,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2250:13:107"
                },
                {
                  "body": {
                    "id": 23107,
                    "nodeType": "Block",
                    "src": "2319:250:107",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint192",
                                "typeString": "uint192"
                              },
                              "id": 23084,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 23080,
                                  "name": "amounts",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23043,
                                  "src": "2360:7:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint192_$dyn_memory_ptr",
                                    "typeString": "uint192[] memory"
                                  }
                                },
                                "id": 23082,
                                "indexExpression": {
                                  "id": 23081,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23069,
                                  "src": "2368:1:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2360:10:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint192",
                                  "typeString": "uint192"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 23083,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2374:1:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "2360:15:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4c696e65617256657374696e673a3a636f6e7374727563746f723a20496e636f727265637420416d6f756e7420537065636966696564",
                              "id": 23085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2394:56:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5669b4f305e4b00dba2fdee2af9b0084c146ad4a520895fd93dd931141ea8572",
                                "typeString": "literal_string \"LinearVesting::constructor: Incorrect Amount Specified\""
                              },
                              "value": "LinearVesting::constructor: Incorrect Amount Specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5669b4f305e4b00dba2fdee2af9b0084c146ad4a520895fd93dd931141ea8572",
                                "typeString": "literal_string \"LinearVesting::constructor: Incorrect Amount Specified\""
                              }
                            ],
                            "id": 23079,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "2334:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 23086,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2334:131:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 23087,
                        "nodeType": "ExpressionStatement",
                        "src": "2334:131:107"
                      },
                      {
                        "expression": {
                          "id": 23097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 23088,
                                "name": "vest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23033,
                                "src": "2480:4:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                                  "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                                }
                              },
                              "id": 23092,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 23089,
                                  "name": "vesters",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23040,
                                  "src": "2485:7:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                    "typeString": "address[] memory"
                                  }
                                },
                                "id": 23091,
                                "indexExpression": {
                                  "id": 23090,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23069,
                                  "src": "2493:1:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2485:10:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2480:16:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Vester_$20490_storage",
                                "typeString": "struct ILinearVesting.Vester storage ref"
                              }
                            },
                            "id": 23093,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 20483,
                            "src": "2480:23:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 23094,
                              "name": "amounts",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23043,
                              "src": "2506:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint192_$dyn_memory_ptr",
                                "typeString": "uint192[] memory"
                              }
                            },
                            "id": 23096,
                            "indexExpression": {
                              "id": 23095,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23069,
                              "src": "2514:1:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2506:10:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint192",
                              "typeString": "uint192"
                            }
                          },
                          "src": "2480:36:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "id": 23098,
                        "nodeType": "ExpressionStatement",
                        "src": "2480:36:107"
                      },
                      {
                        "expression": {
                          "id": 23105,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 23099,
                            "name": "total",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23066,
                            "src": "2531:5:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 23104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 23100,
                              "name": "total",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23066,
                              "src": "2539:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "baseExpression": {
                                "id": 23101,
                                "name": "amounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23043,
                                "src": "2547:7:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint192_$dyn_memory_ptr",
                                  "typeString": "uint192[] memory"
                                }
                              },
                              "id": 23103,
                              "indexExpression": {
                                "id": 23102,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23069,
                                "src": "2555:1:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2547:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint192",
                                "typeString": "uint192"
                              }
                            },
                            "src": "2539:18:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2531:26:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 23106,
                        "nodeType": "ExpressionStatement",
                        "src": "2531:26:107"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23072,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23069,
                      "src": "2294:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 23073,
                        "name": "vesters",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23040,
                        "src": "2298:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 23074,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2298:14:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2294:18:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23108,
                  "initializationExpression": {
                    "assignments": [
                      23069
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 23069,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2287:1:107",
                        "nodeType": "VariableDeclaration",
                        "scope": 23108,
                        "src": "2279:9:107",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23068,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2279:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 23071,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2291:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2279:13:107"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 23077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2314:3:107",
                      "subExpression": {
                        "id": 23076,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23069,
                        "src": "2314:1:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23078,
                    "nodeType": "ExpressionStatement",
                    "src": "2314:3:107"
                  },
                  "nodeType": "ForStatement",
                  "src": "2274:295:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23110,
                          "name": "total",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23066,
                          "src": "2601:5:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 23111,
                          "name": "_TEAM_ALLOCATION",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21396,
                          "src": "2610:16:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2601:25:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636f6e7374727563746f723a20496e76616c6964205665737420416d6f756e747320537065636966696564",
                        "id": 23113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2641:60:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_944e3f56c5448c965ac5ea0286408de048f4ae7ed99cfee3bb1d09f0fb49d10f",
                          "typeString": "literal_string \"LinearVesting::constructor: Invalid Vest Amounts Specified\""
                        },
                        "value": "LinearVesting::constructor: Invalid Vest Amounts Specified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_944e3f56c5448c965ac5ea0286408de048f4ae7ed99cfee3bb1d09f0fb49d10f",
                          "typeString": "literal_string \"LinearVesting::constructor: Invalid Vest Amounts Specified\""
                        }
                      ],
                      "id": 23109,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2579:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2579:133:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23115,
                  "nodeType": "ExpressionStatement",
                  "src": "2579:133:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23119,
                            "name": "_vader",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23037,
                            "src": "2751:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          ],
                          "id": 23118,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2743:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23117,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2743:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23120,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2743:15:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23116,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "2725:17:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 23121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2725:34:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23122,
                  "nodeType": "ExpressionStatement",
                  "src": "2725:34:107"
                }
              ]
            },
            "documentation": {
              "id": 23034,
              "nodeType": "StructuredDocumentation",
              "src": "1408:511:107",
              "text": " @dev Initializes the contract's vesters and vesting amounts as well as sets\n the Vader token address.\n It conducts a sanity check to ensure that the total vesting amounts specified match\n the team allocation to ensure that the contract is deployed correctly.\n Additionally, it transfers ownership to the Vader contract that needs to consequently\n initiate the vesting period via {begin} after it mints the necessary amount to the contract."
            },
            "id": 23124,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23037,
                  "mutability": "mutable",
                  "name": "_vader",
                  "nameLocation": "1954:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23124,
                  "src": "1947:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 23036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 23035,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 969,
                      "src": "1947:6:107"
                    },
                    "referencedDeclaration": 969,
                    "src": "1947:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23040,
                  "mutability": "mutable",
                  "name": "vesters",
                  "nameLocation": "1988:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23124,
                  "src": "1971:24:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23038,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1971:7:107",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 23039,
                    "nodeType": "ArrayTypeName",
                    "src": "1971:9:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23043,
                  "mutability": "mutable",
                  "name": "amounts",
                  "nameLocation": "2023:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23124,
                  "src": "2006:24:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint192_$dyn_memory_ptr",
                    "typeString": "uint192[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 23041,
                      "name": "uint192",
                      "nodeType": "ElementaryTypeName",
                      "src": "2006:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "id": 23042,
                    "nodeType": "ArrayTypeName",
                    "src": "2006:9:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint192_$dyn_storage_ptr",
                      "typeString": "uint192[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1936:101:107"
            },
            "returnParameters": {
              "id": 23045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2038:0:107"
            },
            "scope": 23516,
            "src": "1925:842:107",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20495
            ],
            "body": {
              "id": 23148,
              "nodeType": "Block",
              "src": "3115:118:107",
              "statements": [
                {
                  "assignments": [
                    23135
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23135,
                      "mutability": "mutable",
                      "name": "vester",
                      "nameLocation": "3140:6:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 23148,
                      "src": "3126:20:107",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                        "typeString": "struct ILinearVesting.Vester"
                      },
                      "typeName": {
                        "id": 23134,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23133,
                          "name": "Vester",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20490,
                          "src": "3126:6:107"
                        },
                        "referencedDeclaration": 20490,
                        "src": "3126:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vester_$20490_storage_ptr",
                          "typeString": "struct ILinearVesting.Vester"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23140,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23136,
                      "name": "vest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23033,
                      "src": "3149:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                        "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                      }
                    },
                    "id": 23139,
                    "indexExpression": {
                      "expression": {
                        "id": 23137,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3154:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23138,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3154:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3149:16:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vester_$20490_storage",
                      "typeString": "struct ILinearVesting.Vester storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3126:39:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23142,
                          "name": "vester",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23135,
                          "src": "3193:6:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                            "typeString": "struct ILinearVesting.Vester memory"
                          }
                        },
                        "id": 23143,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20483,
                        "src": "3193:13:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        }
                      },
                      {
                        "expression": {
                          "id": 23144,
                          "name": "vester",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23135,
                          "src": "3208:6:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                            "typeString": "struct ILinearVesting.Vester memory"
                          }
                        },
                        "id": 23145,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lastClaim",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 20485,
                        "src": "3208:16:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 23141,
                      "name": "_getClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        23451,
                        23495
                      ],
                      "referencedDeclaration": 23451,
                      "src": "3183:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 23146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3183:42:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23132,
                  "id": 23147,
                  "nodeType": "Return",
                  "src": "3176:49:107"
                }
              ]
            },
            "documentation": {
              "id": 23125,
              "nodeType": "StructuredDocumentation",
              "src": "2816:158:107",
              "text": " @dev Returns the amount a user can claim at a given point in time.\n Requirements:\n - the vesting period has started"
            },
            "functionSelector": "844a8c69",
            "id": 23149,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23129,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23128,
                  "name": "hasStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23515,
                  "src": "3059:10:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "3059:10:107"
              }
            ],
            "name": "getClaim",
            "nameLocation": "2989:8:107",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23127,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3041:8:107"
            },
            "parameters": {
              "id": 23126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2997:2:107"
            },
            "returnParameters": {
              "id": 23132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23131,
                  "mutability": "mutable",
                  "name": "vestedAmount",
                  "nameLocation": "3096:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23149,
                  "src": "3088:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23130,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3088:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3087:22:107"
            },
            "scope": 23516,
            "src": "2980:253:107",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20500
            ],
            "body": {
              "id": 23230,
              "nodeType": "Block",
              "src": "3770:582:107",
              "statements": [
                {
                  "assignments": [
                    23160
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23160,
                      "mutability": "mutable",
                      "name": "vester",
                      "nameLocation": "3795:6:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 23230,
                      "src": "3781:20:107",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                        "typeString": "struct ILinearVesting.Vester"
                      },
                      "typeName": {
                        "id": 23159,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23158,
                          "name": "Vester",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20490,
                          "src": "3781:6:107"
                        },
                        "referencedDeclaration": 20490,
                        "src": "3781:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vester_$20490_storage_ptr",
                          "typeString": "struct ILinearVesting.Vester"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23165,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23161,
                      "name": "vest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23033,
                      "src": "3804:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                        "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                      }
                    },
                    "id": 23164,
                    "indexExpression": {
                      "expression": {
                        "id": 23162,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3809:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3809:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3804:16:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vester_$20490_storage",
                      "typeString": "struct ILinearVesting.Vester storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3781:39:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 23170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23167,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23160,
                            "src": "3855:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23168,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20487,
                          "src": "3855:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3871:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3855:17:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a20496e636f72726563742056657374696e672054797065",
                        "id": 23171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3887:46:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7843c533d3757a271662d5209310280943296b319f60a2ff400c26110732d61e",
                          "typeString": "literal_string \"LinearVesting::claim: Incorrect Vesting Type\""
                        },
                        "value": "LinearVesting::claim: Incorrect Vesting Type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7843c533d3757a271662d5209310280943296b319f60a2ff400c26110732d61e",
                          "typeString": "literal_string \"LinearVesting::claim: Incorrect Vesting Type\""
                        }
                      ],
                      "id": 23166,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3833:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3833:111:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23173,
                  "nodeType": "ExpressionStatement",
                  "src": "3833:111:107"
                },
                {
                  "expression": {
                    "id": 23181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23174,
                      "name": "vestedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23156,
                      "src": "3957:12:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 23176,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23160,
                            "src": "3982:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23177,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20483,
                          "src": "3982:13:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        {
                          "expression": {
                            "id": 23178,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23160,
                            "src": "3997:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23179,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastClaim",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20485,
                          "src": "3997:16:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        ],
                        "id": 23175,
                        "name": "_getClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          23451,
                          23495
                        ],
                        "referencedDeclaration": 23451,
                        "src": "3972:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 23180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3972:42:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3957:57:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23182,
                  "nodeType": "ExpressionStatement",
                  "src": "3957:57:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23186,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23184,
                          "name": "vestedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23156,
                          "src": "4035:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23185,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4051:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4035:17:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a204e6f7468696e6720746f20636c61696d",
                        "id": 23187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4054:40:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6646d82ad66f7a30e9f3e1bb2a9d0e2e411896660cb46dcec735bf47e725fbda",
                          "typeString": "literal_string \"LinearVesting::claim: Nothing to claim\""
                        },
                        "value": "LinearVesting::claim: Nothing to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6646d82ad66f7a30e9f3e1bb2a9d0e2e411896660cb46dcec735bf47e725fbda",
                          "typeString": "literal_string \"LinearVesting::claim: Nothing to claim\""
                        }
                      ],
                      "id": 23183,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4027:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4027:68:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23189,
                  "nodeType": "ExpressionStatement",
                  "src": "4027:68:107"
                },
                {
                  "expression": {
                    "id": 23197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23190,
                        "name": "vester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23160,
                        "src": "4108:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                          "typeString": "struct ILinearVesting.Vester memory"
                        }
                      },
                      "id": 23192,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20483,
                      "src": "4108:13:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 23195,
                          "name": "vestedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23156,
                          "src": "4133:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 23194,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4125:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint192_$",
                          "typeString": "type(uint192)"
                        },
                        "typeName": {
                          "id": 23193,
                          "name": "uint192",
                          "nodeType": "ElementaryTypeName",
                          "src": "4125:7:107",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23196,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4125:21:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "src": "4108:38:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "id": 23198,
                  "nodeType": "ExpressionStatement",
                  "src": "4108:38:107"
                },
                {
                  "expression": {
                    "id": 23207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23199,
                        "name": "vester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23160,
                        "src": "4157:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                          "typeString": "struct ILinearVesting.Vester memory"
                        }
                      },
                      "id": 23201,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20485,
                      "src": "4157:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 23204,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "4183:5:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 23205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "4183:15:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 23203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "4176:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 23202,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "4176:6:107",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4176:23:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "4157:42:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 23208,
                  "nodeType": "ExpressionStatement",
                  "src": "4157:42:107"
                },
                {
                  "expression": {
                    "id": 23214,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23209,
                        "name": "vest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23033,
                        "src": "4212:4:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                          "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                        }
                      },
                      "id": 23212,
                      "indexExpression": {
                        "expression": {
                          "id": 23210,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4217:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23211,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4217:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4212:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_storage",
                        "typeString": "struct ILinearVesting.Vester storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23213,
                      "name": "vester",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23160,
                      "src": "4231:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                        "typeString": "struct ILinearVesting.Vester memory"
                      }
                    },
                    "src": "4212:25:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vester_$20490_storage",
                      "typeString": "struct ILinearVesting.Vester storage ref"
                    }
                  },
                  "id": 23215,
                  "nodeType": "ExpressionStatement",
                  "src": "4212:25:107"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23217,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4262:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23218,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4262:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23219,
                        "name": "vestedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23156,
                        "src": "4274:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23216,
                      "name": "Vested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20525,
                      "src": "4255:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4255:32:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23221,
                  "nodeType": "EmitStatement",
                  "src": "4250:37:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23225,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4319:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23226,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4319:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23227,
                        "name": "vestedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23156,
                        "src": "4331:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23222,
                        "name": "vader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23024,
                        "src": "4300:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 23224,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1969,
                      "src": "4300:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$969_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 23228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4300:44:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23229,
                  "nodeType": "ExpressionStatement",
                  "src": "4300:44:107"
                }
              ]
            },
            "documentation": {
              "id": 23150,
              "nodeType": "StructuredDocumentation",
              "src": "3295:351:107",
              "text": " @dev Allows a user to claim their pending vesting amount.\n Emits a {Vested} event indicating the user who claimed their vested tokens\n as well as the amount that was vested.\n Requirements:\n - the vesting period has started\n - the caller must have a non-zero vested amount"
            },
            "functionSelector": "4e71d92d",
            "id": 23231,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23154,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23153,
                  "name": "hasStarted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23515,
                  "src": "3714:10:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "3714:10:107"
              }
            ],
            "name": "claim",
            "nameLocation": "3661:5:107",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23152,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3696:8:107"
            },
            "parameters": {
              "id": 23151,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3666:2:107"
            },
            "returnParameters": {
              "id": 23157,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23156,
                  "mutability": "mutable",
                  "name": "vestedAmount",
                  "nameLocation": "3751:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23231,
                  "src": "3743:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23155,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3743:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3742:22:107"
            },
            "scope": 23516,
            "src": "3652:700:107",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20505
            ],
            "body": {
              "id": 23323,
              "nodeType": "Block",
              "src": "4811:801:107",
              "statements": [
                {
                  "assignments": [
                    23240
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23240,
                      "mutability": "mutable",
                      "name": "vester",
                      "nameLocation": "4836:6:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 23323,
                      "src": "4822:20:107",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                        "typeString": "struct ILinearVesting.Vester"
                      },
                      "typeName": {
                        "id": 23239,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 23238,
                          "name": "Vester",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 20490,
                          "src": "4822:6:107"
                        },
                        "referencedDeclaration": 20490,
                        "src": "4822:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vester_$20490_storage_ptr",
                          "typeString": "struct ILinearVesting.Vester"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23245,
                  "initialValue": {
                    "baseExpression": {
                      "id": 23241,
                      "name": "vest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23033,
                      "src": "4845:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                        "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                      }
                    },
                    "id": 23244,
                    "indexExpression": {
                      "expression": {
                        "id": 23242,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4850:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 23243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4850:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4845:16:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vester_$20490_storage",
                      "typeString": "struct ILinearVesting.Vester storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4822:39:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 23250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23247,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23240,
                            "src": "4896:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23248,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20487,
                          "src": "4896:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4912:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4896:17:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a20496e636f72726563742056657374696e672054797065",
                        "id": 23251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4928:46:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7843c533d3757a271662d5209310280943296b319f60a2ff400c26110732d61e",
                          "typeString": "literal_string \"LinearVesting::claim: Incorrect Vesting Type\""
                        },
                        "value": "LinearVesting::claim: Incorrect Vesting Type"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7843c533d3757a271662d5209310280943296b319f60a2ff400c26110732d61e",
                          "typeString": "literal_string \"LinearVesting::claim: Incorrect Vesting Type\""
                        }
                      ],
                      "id": 23246,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4874:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4874:111:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23253,
                  "nodeType": "ExpressionStatement",
                  "src": "4874:111:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 23255,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23240,
                            "src": "5020:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23256,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20487,
                          "src": "5020:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 23257,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5035:5:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 23258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5035:15:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5020:30:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a204e6f74205374617274656420596574",
                        "id": 23260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5065:39:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2ea54052bad02aef5911cdb79f2f6e60bbfcfd1a6cf2acaa1ceb732b01c2ea9",
                          "typeString": "literal_string \"LinearVesting::claim: Not Started Yet\""
                        },
                        "value": "LinearVesting::claim: Not Started Yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2ea54052bad02aef5911cdb79f2f6e60bbfcfd1a6cf2acaa1ceb732b01c2ea9",
                          "typeString": "literal_string \"LinearVesting::claim: Not Started Yet\""
                        }
                      ],
                      "id": 23254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4998:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4998:117:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23262,
                  "nodeType": "ExpressionStatement",
                  "src": "4998:117:107"
                },
                {
                  "expression": {
                    "id": 23274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23263,
                      "name": "vestedAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23236,
                      "src": "5128:12:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 23265,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23240,
                            "src": "5167:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23266,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20483,
                          "src": "5167:13:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        {
                          "expression": {
                            "id": 23267,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23240,
                            "src": "5195:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23268,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lastClaim",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20485,
                          "src": "5195:16:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        {
                          "expression": {
                            "id": 23269,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23240,
                            "src": "5226:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23270,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "start",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20487,
                          "src": "5226:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "expression": {
                            "id": 23271,
                            "name": "vester",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23240,
                            "src": "5253:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                              "typeString": "struct ILinearVesting.Vester memory"
                            }
                          },
                          "id": 23272,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "end",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20489,
                          "src": "5253:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          },
                          {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 23264,
                        "name": "_getClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          23451,
                          23495
                        ],
                        "referencedDeclaration": 23495,
                        "src": "5143:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256,uint256,uint256,uint256) view returns (uint256)"
                        }
                      },
                      "id": 23273,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5143:131:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5128:146:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23275,
                  "nodeType": "ExpressionStatement",
                  "src": "5128:146:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23277,
                          "name": "vestedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23236,
                          "src": "5295:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23278,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5311:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5295:17:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a636c61696d3a204e6f7468696e6720746f20636c61696d",
                        "id": 23280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5314:40:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6646d82ad66f7a30e9f3e1bb2a9d0e2e411896660cb46dcec735bf47e725fbda",
                          "typeString": "literal_string \"LinearVesting::claim: Nothing to claim\""
                        },
                        "value": "LinearVesting::claim: Nothing to claim"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6646d82ad66f7a30e9f3e1bb2a9d0e2e411896660cb46dcec735bf47e725fbda",
                          "typeString": "literal_string \"LinearVesting::claim: Nothing to claim\""
                        }
                      ],
                      "id": 23276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5287:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23281,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5287:68:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23282,
                  "nodeType": "ExpressionStatement",
                  "src": "5287:68:107"
                },
                {
                  "expression": {
                    "id": 23290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23283,
                        "name": "vester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23240,
                        "src": "5368:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                          "typeString": "struct ILinearVesting.Vester memory"
                        }
                      },
                      "id": 23285,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20483,
                      "src": "5368:13:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 23288,
                          "name": "vestedAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23236,
                          "src": "5393:12:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 23287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5385:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint192_$",
                          "typeString": "type(uint192)"
                        },
                        "typeName": {
                          "id": 23286,
                          "name": "uint192",
                          "nodeType": "ElementaryTypeName",
                          "src": "5385:7:107",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5385:21:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint192",
                        "typeString": "uint192"
                      }
                    },
                    "src": "5368:38:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint192",
                      "typeString": "uint192"
                    }
                  },
                  "id": 23291,
                  "nodeType": "ExpressionStatement",
                  "src": "5368:38:107"
                },
                {
                  "expression": {
                    "id": 23300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 23292,
                        "name": "vester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23240,
                        "src": "5417:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                          "typeString": "struct ILinearVesting.Vester memory"
                        }
                      },
                      "id": 23294,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "lastClaim",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20485,
                      "src": "5417:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 23297,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "5443:5:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 23298,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "5443:15:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 23296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5436:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 23295,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "5436:6:107",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 23299,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5436:23:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "5417:42:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 23301,
                  "nodeType": "ExpressionStatement",
                  "src": "5417:42:107"
                },
                {
                  "expression": {
                    "id": 23307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23302,
                        "name": "vest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23033,
                        "src": "5472:4:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                          "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                        }
                      },
                      "id": 23305,
                      "indexExpression": {
                        "expression": {
                          "id": 23303,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5477:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5477:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5472:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_storage",
                        "typeString": "struct ILinearVesting.Vester storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23306,
                      "name": "vester",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23240,
                      "src": "5491:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                        "typeString": "struct ILinearVesting.Vester memory"
                      }
                    },
                    "src": "5472:25:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vester_$20490_storage",
                      "typeString": "struct ILinearVesting.Vester storage ref"
                    }
                  },
                  "id": 23308,
                  "nodeType": "ExpressionStatement",
                  "src": "5472:25:107"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23310,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5522:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5522:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23312,
                        "name": "vestedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23236,
                        "src": "5534:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23309,
                      "name": "Vested",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20525,
                      "src": "5515:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 23313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5515:32:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23314,
                  "nodeType": "EmitStatement",
                  "src": "5510:37:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23318,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "5579:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23319,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5579:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23320,
                        "name": "vestedAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23236,
                        "src": "5591:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23315,
                        "name": "vader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23024,
                        "src": "5560:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 23317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1969,
                      "src": "5560:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$969_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$969_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 23321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5560:44:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23322,
                  "nodeType": "ExpressionStatement",
                  "src": "5560:44:107"
                }
              ]
            },
            "documentation": {
              "id": 23232,
              "nodeType": "StructuredDocumentation",
              "src": "4360:370:107",
              "text": " @dev Allows a user to claim their pending vesting amount of the vested claim\n Emits a {Vested} event indicating the user who claimed their vested tokens\n as well as the amount that was vested.\n Requirements:\n - the vesting period has started\n - the caller must have a non-zero vested amount"
            },
            "functionSelector": "01e8ef2a",
            "id": 23324,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimConverted",
            "nameLocation": "4745:14:107",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23234,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4771:8:107"
            },
            "parameters": {
              "id": 23233,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4759:2:107"
            },
            "returnParameters": {
              "id": 23237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23236,
                  "mutability": "mutable",
                  "name": "vestedAmount",
                  "nameLocation": "4797:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23324,
                  "src": "4789:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4789:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4788:22:107"
            },
            "scope": 23516,
            "src": "4736:876:107",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20508
            ],
            "body": {
              "id": 23350,
              "nodeType": "Block",
              "src": "6021:181:107",
              "statements": [
                {
                  "expression": {
                    "id": 23334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23331,
                      "name": "start",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23026,
                      "src": "6032:5:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 23332,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6040:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 23333,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6040:15:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6032:23:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23335,
                  "nodeType": "ExpressionStatement",
                  "src": "6032:23:107"
                },
                {
                  "expression": {
                    "id": 23341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23336,
                      "name": "end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23028,
                      "src": "6066:3:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 23340,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 23337,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967292,
                          "src": "6072:5:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 23338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "6072:15:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 23339,
                        "name": "_VESTING_DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21415,
                        "src": "6090:17:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6072:35:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6066:41:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23342,
                  "nodeType": "ExpressionStatement",
                  "src": "6066:41:107"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 23344,
                        "name": "_VESTING_DURATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21415,
                        "src": "6144:17:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 23343,
                      "name": "VestingInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20519,
                      "src": "6125:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 23345,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6125:37:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23346,
                  "nodeType": "EmitStatement",
                  "src": "6120:42:107"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23347,
                      "name": "renounceOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "6175:17:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 23348,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6175:19:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23349,
                  "nodeType": "ExpressionStatement",
                  "src": "6175:19:107"
                }
              ]
            },
            "documentation": {
              "id": 23325,
              "nodeType": "StructuredDocumentation",
              "src": "5676:294:107",
              "text": " @dev Allows the vesting period to be initiated.\n Emits a {VestingInitialized} event from which the start and\n end can be calculated via it's attached timestamp.\n Requirements:\n - the caller must be the owner (vader token)"
            },
            "functionSelector": "1bce6ff3",
            "id": 23351,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23329,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23328,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "6011:9:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "6011:9:107"
              }
            ],
            "name": "begin",
            "nameLocation": "5985:5:107",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23327,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6002:8:107"
            },
            "parameters": {
              "id": 23326,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5990:2:107"
            },
            "returnParameters": {
              "id": 23330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6021:0:107"
            },
            "scope": 23516,
            "src": "5976:226:107",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20515
            ],
            "body": {
              "id": 23406,
              "nodeType": "Block",
              "src": "6350:376:107",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint192",
                          "typeString": "uint192"
                        },
                        "id": 23366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 23361,
                              "name": "vest",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23033,
                              "src": "6383:4:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                                "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                              }
                            },
                            "id": 23363,
                            "indexExpression": {
                              "id": 23362,
                              "name": "user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23354,
                              "src": "6388:4:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6383:10:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Vester_$20490_storage",
                              "typeString": "struct ILinearVesting.Vester storage ref"
                            }
                          },
                          "id": 23364,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20483,
                          "src": "6383:17:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6404:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6383:22:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a73656c66566573743a20416c7265616479206120766573746572",
                        "id": 23367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6420:43:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d2036e1b2072e346735a7a734074d12ccf88e8fe2334ec8656cad74c1cc79464",
                          "typeString": "literal_string \"LinearVesting::selfVest: Already a vester\""
                        },
                        "value": "LinearVesting::selfVest: Already a vester"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d2036e1b2072e346735a7a734074d12ccf88e8fe2334ec8656cad74c1cc79464",
                          "typeString": "literal_string \"LinearVesting::selfVest: Already a vester\""
                        }
                      ],
                      "id": 23360,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6361:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6361:113:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23369,
                  "nodeType": "ExpressionStatement",
                  "src": "6361:113:107"
                },
                {
                  "expression": {
                    "id": 23392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23370,
                        "name": "vest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23033,
                        "src": "6485:4:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Vester_$20490_storage_$",
                          "typeString": "mapping(address => struct ILinearVesting.Vester storage ref)"
                        }
                      },
                      "id": 23372,
                      "indexExpression": {
                        "id": 23371,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23354,
                        "src": "6490:4:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6485:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_storage",
                        "typeString": "struct ILinearVesting.Vester storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 23376,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23356,
                              "src": "6527:6:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 23375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6519:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint192_$",
                              "typeString": "type(uint192)"
                            },
                            "typeName": {
                              "id": 23374,
                              "name": "uint192",
                              "nodeType": "ElementaryTypeName",
                              "src": "6519:7:107",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6519:15:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          }
                        },
                        {
                          "hexValue": "30",
                          "id": 23378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6549:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 23381,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967292,
                                "src": "6573:5:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 23382,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "6573:15:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 23380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6565:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 23379,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "6565:7:107",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6565:24:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 23389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 23386,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967292,
                                  "src": "6612:5:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 23387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "timestamp",
                                "nodeType": "MemberAccess",
                                "src": "6612:15:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "333635",
                                "id": 23388,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6630:8:107",
                                "subdenomination": "days",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_31536000_by_1",
                                  "typeString": "int_const 31536000"
                                },
                                "value": "365"
                              },
                              "src": "6612:26:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 23385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6604:7:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 23384,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "6604:7:107",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6604:35:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint192",
                            "typeString": "uint192"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 23373,
                        "name": "Vester",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20490,
                        "src": "6498:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Vester_$20490_storage_ptr_$",
                          "typeString": "type(struct ILinearVesting.Vester storage pointer)"
                        }
                      },
                      "id": 23391,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6498:152:107",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Vester_$20490_memory_ptr",
                        "typeString": "struct ILinearVesting.Vester memory"
                      }
                    },
                    "src": "6485:165:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Vester_$20490_storage",
                      "typeString": "struct ILinearVesting.Vester storage ref"
                    }
                  },
                  "id": 23393,
                  "nodeType": "ExpressionStatement",
                  "src": "6485:165:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 23397,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6684:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 23398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6684:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 23401,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "6704:4:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_LinearVesting_$23516",
                              "typeString": "contract LinearVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_LinearVesting_$23516",
                              "typeString": "contract LinearVesting"
                            }
                          ],
                          "id": 23400,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6696:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 23399,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6696:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 23402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6696:13:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 23403,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23356,
                        "src": "6711:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 23394,
                        "name": "vader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23024,
                        "src": "6661:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 23396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1996,
                      "src": "6661:22:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$969_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$969_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 23404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6661:57:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23405,
                  "nodeType": "ExpressionStatement",
                  "src": "6661:57:107"
                }
              ]
            },
            "documentation": {
              "id": 23352,
              "nodeType": "StructuredDocumentation",
              "src": "6210:69:107",
              "text": " @dev Adds a new vesting schedule to the contract"
            },
            "functionSelector": "94e35169",
            "id": 23407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vestFor",
            "nameLocation": "6294:7:107",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 23358,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6341:8:107"
            },
            "parameters": {
              "id": 23357,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23354,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "6310:4:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23407,
                  "src": "6302:12:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6302:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23356,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6324:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23407,
                  "src": "6316:14:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6316:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6301:30:107"
            },
            "returnParameters": {
              "id": 23359,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6350:0:107"
            },
            "scope": 23516,
            "src": "6285:441:107",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23450,
              "nodeType": "Block",
              "src": "7727:221:107",
              "statements": [
                {
                  "assignments": [
                    23418
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23418,
                      "mutability": "mutable",
                      "name": "_end",
                      "nameLocation": "7746:4:107",
                      "nodeType": "VariableDeclaration",
                      "scope": 23450,
                      "src": "7738:12:107",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23417,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "7738:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23420,
                  "initialValue": {
                    "id": 23419,
                    "name": "end",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 23028,
                    "src": "7753:3:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "7738:18:107"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 23421,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "7773:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 23422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "7773:15:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 23423,
                      "name": "_end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23418,
                      "src": "7792:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7773:23:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23427,
                  "nodeType": "IfStatement",
                  "src": "7769:42:107",
                  "trueBody": {
                    "expression": {
                      "id": 23425,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23410,
                      "src": "7805:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 23416,
                    "id": 23426,
                    "nodeType": "Return",
                    "src": "7798:13:107"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23428,
                      "name": "lastClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23412,
                      "src": "7826:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 23429,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7839:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7826:14:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23435,
                  "nodeType": "IfStatement",
                  "src": "7822:37:107",
                  "trueBody": {
                    "expression": {
                      "id": 23433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 23431,
                        "name": "lastClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23412,
                        "src": "7842:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 23432,
                        "name": "start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23026,
                        "src": "7854:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "7842:17:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23434,
                    "nodeType": "ExpressionStatement",
                    "src": "7842:17:107"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23436,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23410,
                            "src": "7880:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 23440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 23437,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "7890:5:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 23438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "7890:15:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 23439,
                                  "name": "lastClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23412,
                                  "src": "7908:9:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7890:27:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 23441,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "7889:29:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7880:38:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23443,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7879:40:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23444,
                            "name": "_end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23418,
                            "src": "7923:4:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 23445,
                            "name": "lastClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23412,
                            "src": "7930:9:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7923:16:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23447,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "7922:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7879:61:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23416,
                  "id": 23449,
                  "nodeType": "Return",
                  "src": "7872:68:107"
                }
              ]
            },
            "documentation": {
              "id": 23408,
              "nodeType": "StructuredDocumentation",
              "src": "6787:817:107",
              "text": " @dev Calculates the amount a user's vest is due. To calculate,\n the following formula is utilized:\n - (remainingAmount * timeElapsed) / timeUntilEnd\n Each variable is described as follows:\n - remainingAmount (amount): Vesting amount remaining. Each claim subtracts from\n this amount to ensure calculations are properly conducted.\n - timeElapsed (block.timestamp.sub(lastClaim)): Time that has elapsed since the\n last claim.\n - timeUntilEnd (end.sub(lastClaim)): Time remaining for the particular vesting\n member's total duration.\n Vesting calculations are relative and always update the last\n claim timestamp as well as remaining amount whenever they\n are claimed."
            },
            "id": 23451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getClaim",
            "nameLocation": "7619:9:107",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23410,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7637:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23451,
                  "src": "7629:14:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7629:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23412,
                  "mutability": "mutable",
                  "name": "lastClaim",
                  "nameLocation": "7653:9:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23451,
                  "src": "7645:17:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23411,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7645:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7628:35:107"
            },
            "returnParameters": {
              "id": 23416,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23415,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23451,
                  "src": "7713:7:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23414,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7713:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7712:9:107"
            },
            "scope": 23516,
            "src": "7610:338:107",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23494,
              "nodeType": "Block",
              "src": "8937:191:107",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 23465,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "8952:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 23466,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "8952:15:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 23467,
                      "name": "_end",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23460,
                      "src": "8971:4:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8952:23:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23471,
                  "nodeType": "IfStatement",
                  "src": "8948:42:107",
                  "trueBody": {
                    "expression": {
                      "id": 23469,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23454,
                      "src": "8984:6:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "functionReturnParameters": 23464,
                    "id": 23470,
                    "nodeType": "Return",
                    "src": "8977:13:107"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23472,
                      "name": "lastClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23456,
                      "src": "9005:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 23473,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9018:1:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9005:14:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23479,
                  "nodeType": "IfStatement",
                  "src": "9001:38:107",
                  "trueBody": {
                    "expression": {
                      "id": 23477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 23475,
                        "name": "lastClaim",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23456,
                        "src": "9021:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 23476,
                        "name": "_start",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23458,
                        "src": "9033:6:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "9021:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23478,
                    "nodeType": "ExpressionStatement",
                    "src": "9021:18:107"
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23480,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23454,
                            "src": "9060:6:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 23484,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 23481,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967292,
                                    "src": "9070:5:107",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 23482,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "9070:15:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 23483,
                                  "name": "lastClaim",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23456,
                                  "src": "9088:9:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9070:27:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 23485,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "9069:29:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9060:38:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23487,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9059:40:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23488,
                            "name": "_end",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23460,
                            "src": "9103:4:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 23489,
                            "name": "lastClaim",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23456,
                            "src": "9110:9:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9103:16:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23491,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9102:18:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9059:61:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23464,
                  "id": 23493,
                  "nodeType": "Return",
                  "src": "9052:68:107"
                }
              ]
            },
            "documentation": {
              "id": 23452,
              "nodeType": "StructuredDocumentation",
              "src": "7956:817:107",
              "text": " @dev Calculates the amount a user's vest is due. To calculate,\n the following formula is utilized:\n - (remainingAmount * timeElapsed) / timeUntilEnd\n Each variable is described as follows:\n - remainingAmount (amount): Vesting amount remaining. Each claim subtracts from\n this amount to ensure calculations are properly conducted.\n - timeElapsed (block.timestamp.sub(lastClaim)): Time that has elapsed since the\n last claim.\n - timeUntilEnd (end.sub(lastClaim)): Time remaining for the particular vesting\n member's total duration.\n Vesting calculations are relative and always update the last\n claim timestamp as well as remaining amount whenever they\n are claimed."
            },
            "id": 23495,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getClaim",
            "nameLocation": "8788:9:107",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23461,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23454,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8816:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23495,
                  "src": "8808:14:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8808:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23456,
                  "mutability": "mutable",
                  "name": "lastClaim",
                  "nameLocation": "8841:9:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23495,
                  "src": "8833:17:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8833:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23458,
                  "mutability": "mutable",
                  "name": "_start",
                  "nameLocation": "8869:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23495,
                  "src": "8861:14:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8861:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23460,
                  "mutability": "mutable",
                  "name": "_end",
                  "nameLocation": "8894:4:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 23495,
                  "src": "8886:12:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23459,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8886:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8797:108:107"
            },
            "returnParameters": {
              "id": 23464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23463,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23495,
                  "src": "8928:7:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8928:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8927:9:107"
            },
            "scope": 23516,
            "src": "8779:349:107",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23506,
              "nodeType": "Block",
              "src": "9249:133:107",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23500,
                          "name": "start",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23026,
                          "src": "9282:5:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9291:1:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9282:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c696e65617256657374696e673a3a5f686173537461727465643a2056657374696e67206861736e2774207374617274656420796574",
                        "id": 23503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9307:56:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee6ec791b378239cd344bfa63a0b4208954dd30003de29f58799ab30613ac69c",
                          "typeString": "literal_string \"LinearVesting::_hasStarted: Vesting hasn't started yet\""
                        },
                        "value": "LinearVesting::_hasStarted: Vesting hasn't started yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee6ec791b378239cd344bfa63a0b4208954dd30003de29f58799ab30613ac69c",
                          "typeString": "literal_string \"LinearVesting::_hasStarted: Vesting hasn't started yet\""
                        }
                      ],
                      "id": 23499,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9260:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9260:114:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23505,
                  "nodeType": "ExpressionStatement",
                  "src": "9260:114:107"
                }
              ]
            },
            "documentation": {
              "id": 23496,
              "nodeType": "StructuredDocumentation",
              "src": "9136:71:107",
              "text": " @dev Validates that the vesting period has started"
            },
            "id": 23507,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_hasStarted",
            "nameLocation": "9222:11:107",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9233:2:107"
            },
            "returnParameters": {
              "id": 23498,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9249:0:107"
            },
            "scope": 23516,
            "src": "9213:169:107",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 23514,
              "nodeType": "Block",
              "src": "9532:44:107",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 23510,
                      "name": "_hasStarted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23507,
                      "src": "9543:11:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 23511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9543:13:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23512,
                  "nodeType": "ExpressionStatement",
                  "src": "9543:13:107"
                },
                {
                  "id": 23513,
                  "nodeType": "PlaceholderStatement",
                  "src": "9567:1:107"
                }
              ]
            },
            "documentation": {
              "id": 23508,
              "nodeType": "StructuredDocumentation",
              "src": "9435:69:107",
              "text": " @dev Throws if the vesting period hasn't started"
            },
            "id": 23515,
            "name": "hasStarted",
            "nameLocation": "9519:10:107",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 23509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9529:2:107"
            },
            "src": "9510:66:107",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 23517,
        "src": "822:8757:107",
        "usedErrors": []
      }
    ],
    "src": "41:9540:107"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.097Z",
  "devdoc": {
    "details": "Implementation of the {ILinearVesting} interface. The straightforward vesting contract that gradually releases a fixed supply of tokens to multiple vest parties over a 2 year window. The token expects the {begin} hook to be invoked the moment it is supplied with the necessary amount of tokens to vest, which should be equivalent to the time the {setComponents} function is invoked on the Vader token.",
    "kind": "dev",
    "methods": {
      "begin()": {
        "details": "Allows the vesting period to be initiated. Emits a {VestingInitialized} event from which the start and end can be calculated via it's attached timestamp. Requirements: - the caller must be the owner (vader token)"
      },
      "claim()": {
        "details": "Allows a user to claim their pending vesting amount. Emits a {Vested} event indicating the user who claimed their vested tokens as well as the amount that was vested. Requirements: - the vesting period has started - the caller must have a non-zero vested amount"
      },
      "claimConverted()": {
        "details": "Allows a user to claim their pending vesting amount of the vested claim Emits a {Vested} event indicating the user who claimed their vested tokens as well as the amount that was vested. Requirements: - the vesting period has started - the caller must have a non-zero vested amount"
      },
      "constructor": {
        "details": "Initializes the contract's vesters and vesting amounts as well as sets the Vader token address. It conducts a sanity check to ensure that the total vesting amounts specified match the team allocation to ensure that the contract is deployed correctly. Additionally, it transfers ownership to the Vader contract that needs to consequently initiate the vesting period via {begin} after it mints the necessary amount to the contract."
      },
      "getClaim()": {
        "details": "Returns the amount a user can claim at a given point in time. Requirements: - the vesting period has started"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "vestFor(address,uint256)": {
        "details": "Adds a new vesting schedule to the contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}