{
  "contractName": "MockUniswapV2Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/mocks/MockUniswapV2Factory.sol\":\"MockUniswapV2Factory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"project:/contracts/external/UniswapV2ERC20.sol\":{\"keccak256\":\"0xcfb3f7b729bf6fa1cd50bafe5bd6b056d4b6a1b62d1f25c106389ca30d5ee09e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e8422799ce0e175d06d7427267705cde468d48814f7091516aa426dd601f62ca\",\"dweb:/ipfs/Qmc6T9pi5ZzEmr1mU5CEByF1Jt8siU2t4Hta8dLQ2AE6Kb\"]},\"project:/contracts/external/UniswapV2Pair.sol\":{\"keccak256\":\"0xffc833a8225f98603b1b858d8888ae8b1d6691f9584c65179d629f7e744d8fa4\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b30f754cee7d239ed4e17ee02c9ffa61fa442b541797bf3f9ca40f5b8cd094f2\",\"dweb:/ipfs/Qmeojr2nCpzZnBDHNqV63wQqRY1KR4Kbg7x6b8ipo6Be5v\"]},\"project:/contracts/external/interfaces/IUniswapV2Callee.sol\":{\"keccak256\":\"0xa69d935821f9c4f6f367c507bba1fa687d4cd8fef901669419d09d91baeccf2a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://bbfb6af4d8e6387537a31820ee7bd3799982fe9fd83aa0c6c2c5c6eb3f21b827\",\"dweb:/ipfs/QmSDR1jpJjAdhfC2VdJrR9znm6MD6pJSmq3YqE3FRxNP7C\"]},\"project:/contracts/external/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x947a64db0a81787f383a1d72a45f5914a44efd9287fa4990f6f6b1e26f9bd266\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ce1a6e5bcda63d9223b89bd3c101fdd7252085e809afd24a146a06db726b2be6\",\"dweb:/ipfs/QmcPbXXeqXs3ywEPnoEKtJnVftPmif43XArLqSanHY1yfd\"]},\"project:/contracts/external/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x67505b5fe7ac3f267511738e8021420dda8632ba3dd444ff4e39ece3201b420b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2c1edf298e3a83b7292b55ebe962ac876a54548bdbcea56ccec2193f2e96c879\",\"dweb:/ipfs/QmXo6EYXh7kHiYMWfauTvo7QAkJTRrwugtbCHc1zXhptdw\"]},\"project:/contracts/external/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x343236598429a1076843cca4655abf04200d1827e2e257e47313086dc6019c21\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1d8c47d87df7626527d734a15d27a72666f754cd2e11b0f800c4b9dd1e22c106\",\"dweb:/ipfs/QmZEdTRx2r2ybRYnPepTjiteNkfbp4SWPWGAgKijh17i3E\"]},\"project:/contracts/external/libraries/Math.sol\":{\"keccak256\":\"0x6414bdec843c0b8dbaa21acca2b981ddbacac77c13018b1ee5a9d4950f9a8f13\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4a324280058f960ec4ef2224a0e15a421fa04f483e70d911657f869ffeac48e6\",\"dweb:/ipfs/QmRM62fEXAa4QhYkaFc9m9vcGhfjkcEqANkiSczRnSAXnp\"]},\"project:/contracts/external/libraries/UQ112x112.sol\":{\"keccak256\":\"0x2d1e4dfe962bfa294d27191203493f4c207e1959e9f7dbdb8a6840baa07c5f18\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dbf3a441e749dbc36952d55b336509c1ac8e2eeaea55213132859acb965e68eb\",\"dweb:/ipfs/QmbcUzSY9kNdhuLHXnWFhFHs8EXBpv4koGCGhfKL1buzdq\"]},\"project:/contracts/mocks/MockUniswapV2Factory.sol\":{\"keccak256\":\"0x5df7d4f17d248cb22d4cb71e6350395d98ea1c2bf88e72eb46712b26ec15ef66\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b426951cf5baa6317f5d1fda8d5c0889eee2da9fb7320ec98ffdf72648f8cbd7\",\"dweb:/ipfs/QmcRTDzECzuLLEL3UseKxWpNCnLjy17wqyVSTqUcWRV32t\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516129e63803806129e683398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b612953806100936000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af6146100f4578063c9c6539614610109578063e6a439051461011c578063f46901ed1461015057600080fd5b8063017e7e581461008d578063094b7415146100bd5780631e3dd18b146100d0578063574f2ba3146100e3575b600080fd5b6000546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100a0906001600160a01b031681565b6100a06100de366004610584565b610163565b6003546040519081526020016100b4565b6101076101023660046105b9565b61018d565b005b6100a06101173660046105db565b610205565b6100a061012a3660046105db565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61010761015e3660046105b9565b610504565b6003818154811061017357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146101e35760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156102695760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f414444524553534553000060448201526064016101da565b600080836001600160a01b0316856001600160a01b03161061028c57838561028f565b84845b90925090506001600160a01b0382166102ea5760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f4144445245535300000000000000000060448201526064016101da565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103585760405162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b60448201526064016101da565b60006040518060200161036a90610577565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b031633146105555760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064016101da565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61230f8061060f83390190565b60006020828403121561059657600080fd5b5035919050565b80356001600160a01b03811681146105b457600080fd5b919050565b6000602082840312156105cb57600080fd5b6105d48261059d565b9392505050565b600080604083850312156105ee57600080fd5b6105f78361059d565b91506106056020840161059d565b9050925092905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612207806101086000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610408578063d505accf1461041b578063dd62ed3e1461042e578063fff6cae91461045957600080fd5b8063ba9a7a56146103d9578063bc25cf77146103e2578063c45a0155146103f557600080fd5b80637ecebe00116100d35780637ecebe001461035957806389afcb441461037957806395d89b41146103a1578063a9059cbb146103c657600080fd5b80636a6278421461031d57806370a08231146103305780637464fc3d1461035057600080fd5b806323b872dd116101665780633644e515116101405780633644e515146102ef578063485cc955146102f85780635909c0d51461030b5780635a3d54931461031457600080fd5b806323b872dd1461029b57806330adf81f146102ae578063313ce567146102d557600080fd5b8063022c0d9f146101ae57806306fdde03146101c35780630902f1ac14610202578063095ea7b3146102365780630dfe16811461025957806318160ddd14610284575b600080fd5b6101c16101bc366004611d7c565b610461565b005b6101ec6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516101f99190611e42565b60405180910390f35b61020a610999565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101f9565b610249610244366004611e75565b6109c3565b60405190151581526020016101f9565b60065461026c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f9565b61028d60005481565b6040519081526020016101f9565b6102496102a9366004611ea1565b6109d9565b61028d7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102dd601281565b60405160ff90911681526020016101f9565b61028d60035481565b6101c1610306366004611ee2565b610a6e565b61028d60095481565b61028d600a5481565b61028d61032b366004611f1b565b610aed565b61028d61033e366004611f1b565b60016020526000908152604090205481565b61028d600b5481565b61028d610367366004611f1b565b60046020526000908152604090205481565b61038c610387366004611f1b565b610dd6565b604080519283526020830191909152016101f9565b6101ec604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6102496103d4366004611e75565b611177565b61028d6103e881565b6101c16103f0366004611f1b565b611184565b60055461026c906001600160a01b031681565b60075461026c906001600160a01b031681565b6101c1610429366004611f38565b6112a6565b61028d61043c366004611ee2565b600260209081526000928352604080842090915290825290205481565b6101c16114ba565b600c5460011461048c5760405162461bcd60e51b815260040161048390611faf565b60405180910390fd5b6000600c558415158061049f5750600084115b6104f95760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b6064820152608401610483565b600080610504610999565b5091509150816001600160701b0316871080156105295750806001600160701b031686105b61057f5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b6064820152608401610483565b60065460075460009182916001600160a01b039182169190811690891682148015906105bd5750806001600160a01b0316896001600160a01b031614155b6106015760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b6044820152606401610483565b8a1561061257610612828a8d6115fc565b891561062357610623818a8c6115fc565b8615610690576040516304347a1760e21b81526001600160a01b038a16906310d1e85c9061065d9033908f908f908e908e90600401611fda565b600060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107079190612026565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561074957600080fd5b505afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107819190612026565b92505050600089856001600160701b031661079c9190612055565b83116107a95760006107c6565b6107bc8a6001600160701b038716612055565b6107c69084612055565b905060006107dd8a6001600160701b038716612055565b83116107ea576000610807565b6107fd8a6001600160701b038716612055565b6108079084612055565b905060008211806108185750600081115b6108705760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b6064820152608401610483565b600061087d83600361206c565b610889866103e861206c565b6108939190612055565b905060006108a283600361206c565b6108ae866103e861206c565b6108b89190612055565b90506108d06001600160701b03808916908a1661206c565b6108dd90620f424061206c565b6108e7828461206c565b10156109245760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b6044820152606401610483565b505061093284848888611747565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109d0338484611933565b50600192915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610a59576001600160a01b0384166000908152600260209081526040808320338452909152902054610a34908390612055565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a64848484611995565b5060019392505050565b6005546001600160a01b03163314610abf5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b6044820152606401610483565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610b115760405162461bcd60e51b815260040161048390611faf565b6000600c81905580610b21610999565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610b6e57600080fd5b505afa158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190612026565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610bef57600080fd5b505afa158015610c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c279190612026565b90506000610c3e6001600160701b03861684612055565b90506000610c556001600160701b03861684612055565b90506000610c638787611a3d565b60005490915080610ca1576103e8610c83610c7e858761206c565b611b8b565b610c8d9190612055565b9850610c9c60006103e8611bfb565b610ce8565b610ce56001600160701b038916610cb8838761206c565b610cc291906120a1565b6001600160701b038916610cd6848761206c565b610ce091906120a1565b611c8c565b98505b60008911610d495760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b6064820152608401610483565b610d538a8a611bfb565b610d5f86868a8a611747565b8115610d8857600854610d84906001600160701b03600160701b82048116911661206c565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610dfb5760405162461bcd60e51b815260040161048390611faf565b6000600c81905580610e0b610999565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a082319060240160206040518083038186803b158015610e6057600080fd5b505afa158015610e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e989190612026565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b158015610edd57600080fd5b505afa158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f159190612026565b30600090815260016020526040812054919250610f328888611a3d565b60005490915080610f43868561206c565b610f4d91906120a1565b9a5080610f5a858561206c565b610f6491906120a1565b995060008b118015610f76575060008a115b610fd35760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b6064820152608401610483565b610fdd3084611ca4565b610fe8878d8d6115fc565b610ff3868d8c6115fc565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561103257600080fd5b505afa158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a9190612026565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b1580156110ac57600080fd5b505afa1580156110c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e49190612026565b93506110f285858b8b611747565b811561111b57600854611117906001600160701b03600160701b82048116911661206c565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109d0338484611995565b600c546001146111a65760405162461bcd60e51b815260040161048390611faf565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b03938416939092169161125491849186916001600160701b03169083906370a08231906024015b60206040518083038186803b15801561120d57600080fd5b505afa158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190612026565b61124f9190612055565b6115fc565b6008546040516370a0823160e01b815230600482015261129c9183918691600160701b90046001600160701b0316906001600160a01b038416906370a08231906024016111f5565b50506001600c5550565b428410156112eb5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606401610483565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761133e836120b5565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016113b792919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611422573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906114585750886001600160a01b0316816001600160a01b0316145b6114a45760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152606401610483565b6114af898989611933565b505050505050505050565b600c546001146114dc5760405162461bcd60e51b815260040161048390611faf565b6000600c556006546040516370a0823160e01b81523060048201526115f5916001600160a01b0316906370a082319060240160206040518083038186803b15801561152657600080fd5b505afa15801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e9190612026565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156115a157600080fd5b505afa1580156115b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d99190612026565b6008546001600160701b0380821691600160701b900416611747565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161168891906120d0565b6000604051808303816000865af19150503d80600081146116c5576040519150601f19603f3d011682016040523d82523d6000602084013e6116ca565b606091505b50915091508180156116f45750805115806116f45750808060200190518101906116f491906120ec565b6117405760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c45440000000000006044820152606401610483565b5050505050565b6001600160701b03841180159061176557506001600160701b038311155b6117a75760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b6044820152606401610483565b60006117b86401000000004261210e565b6008549091506000906117d890600160e01b900463ffffffff1683612122565b905060008163ffffffff161180156117f857506001600160701b03841615155b801561180c57506001600160701b03831615155b1561189b578063ffffffff166118348561182586611d30565b6001600160e01b031690611d4f565b6001600160e01b0316611847919061206c565b600960008282546118589190612147565b909155505063ffffffff81166118718461182587611d30565b6001600160e01b0316611884919061206c565b600a60008282546118959190612147565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260409020546119b9908290612055565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119e9908290612147565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906119889085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611a8e57600080fd5b505afa158015611aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac6919061215f565b600b546001600160a01b038216158015945091925090611b77578015611b72576000611b01610c7e6001600160701b0380881690891661206c565b90506000611b0e83611b8b565b905080821115611b6f576000611b248284612055565b600054611b31919061206c565b9050600082611b4185600561206c565b611b4b9190612147565b90506000611b5982846120a1565b90508015611b6b57611b6b8782611bfb565b5050505b50505b611b83565b8015611b83576000600b555b505092915050565b60006003821115611bec5750806000611ba56002836120a1565b611bb0906001612147565b90505b81811015611be657905080600281611bcb81866120a1565b611bd59190612147565b611bdf91906120a1565b9050611bb3565b50919050565b8115611bf6575060015b919050565b80600054611c099190612147565b60009081556001600160a01b038316815260016020526040902054611c2f908290612147565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c809085815260200190565b60405180910390a35050565b6000818310611c9b5781611c9d565b825b9392505050565b6001600160a01b038216600090815260016020526040902054611cc8908290612055565b6001600160a01b03831660009081526001602052604081209190915554611cf0908290612055565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611c80565b6000611d49600160701b6001600160701b03841661217c565b92915050565b6000611c9d6001600160701b038316846121ab565b6001600160a01b0381168114611d7957600080fd5b50565b600080600080600060808688031215611d9457600080fd5b85359450602086013593506040860135611dad81611d64565b9250606086013567ffffffffffffffff80821115611dca57600080fd5b818801915088601f830112611dde57600080fd5b813581811115611ded57600080fd5b896020828501011115611dff57600080fd5b9699959850939650602001949392505050565b60005b83811015611e2d578181015183820152602001611e15565b83811115611e3c576000848401525b50505050565b6020815260008251806020840152611e61816040850160208701611e12565b601f01601f19169190910160400192915050565b60008060408385031215611e8857600080fd5b8235611e9381611d64565b946020939093013593505050565b600080600060608486031215611eb657600080fd5b8335611ec181611d64565b92506020840135611ed181611d64565b929592945050506040919091013590565b60008060408385031215611ef557600080fd5b8235611f0081611d64565b91506020830135611f1081611d64565b809150509250929050565b600060208284031215611f2d57600080fd5b8135611c9d81611d64565b600080600080600080600060e0888a031215611f5357600080fd5b8735611f5e81611d64565b96506020880135611f6e81611d64565b95506040880135945060608801359350608088013560ff81168114611f9257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561203857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156120675761206761203f565b500390565b60008160001904831182151516156120865761208661203f565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826120b0576120b061208b565b500490565b60006000198214156120c9576120c961203f565b5060010190565b600082516120e2818460208701611e12565b9190910192915050565b6000602082840312156120fe57600080fd5b81518015158114611c9d57600080fd5b60008261211d5761211d61208b565b500690565b600063ffffffff8381169083168181101561213f5761213f61203f565b039392505050565b6000821982111561215a5761215a61203f565b500190565b60006020828403121561217157600080fd5b8151611c9d81611d64565b60006001600160e01b03828116848216811515828404821116156121a2576121a261203f565b02949350505050565b60006001600160e01b03838116806121c5576121c561208b565b9216919091049291505056fea26469706673582212200459d3f6e82497ea280da499510f1912f8863662b9755bbaee74788625f8e31764736f6c63430008090033a264697066735822122016d76eb676d5cc46e0768019b644554b4d056565eebb16dcfb5eb70a649bd62964736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100885760003560e01c8063a2e74af61161005b578063a2e74af6146100f4578063c9c6539614610109578063e6a439051461011c578063f46901ed1461015057600080fd5b8063017e7e581461008d578063094b7415146100bd5780631e3dd18b146100d0578063574f2ba3146100e3575b600080fd5b6000546100a0906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100a0906001600160a01b031681565b6100a06100de366004610584565b610163565b6003546040519081526020016100b4565b6101076101023660046105b9565b61018d565b005b6100a06101173660046105db565b610205565b6100a061012a3660046105db565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61010761015e3660046105b9565b610504565b6003818154811061017357600080fd5b6000918252602090912001546001600160a01b0316905081565b6001546001600160a01b031633146101e35760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156102695760405162461bcd60e51b815260206004820152601e60248201527f556e697377617056323a204944454e544943414c5f414444524553534553000060448201526064016101da565b600080836001600160a01b0316856001600160a01b03161061028c57838561028f565b84845b90925090506001600160a01b0382166102ea5760405162461bcd60e51b815260206004820152601760248201527f556e697377617056323a205a45524f5f4144445245535300000000000000000060448201526064016101da565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103585760405162461bcd60e51b8152602060048201526016602482015275556e697377617056323a20504149525f45584953545360501b60448201526064016101da565b60006040518060200161036a90610577565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561041c57600080fd5b505af1158015610430573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b031633146105555760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b60448201526064016101da565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b61230f8061060f83390190565b60006020828403121561059657600080fd5b5035919050565b80356001600160a01b03811681146105b457600080fd5b919050565b6000602082840312156105cb57600080fd5b6105d48261059d565b9392505050565b600080604083850312156105ee57600080fd5b6105f78361059d565b91506106056020840161059d565b9050925092905056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600a8152692ab734b9bbb0b8102b1960b11b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fbfcc8ef98ffbf7b6c3fec7bf5185b566b9863e35a9d83acd49ad6824b5969738818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b03191633179055612207806101086000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c80636a627842116100f9578063ba9a7a5611610097578063d21220a711610071578063d21220a714610408578063d505accf1461041b578063dd62ed3e1461042e578063fff6cae91461045957600080fd5b8063ba9a7a56146103d9578063bc25cf77146103e2578063c45a0155146103f557600080fd5b80637ecebe00116100d35780637ecebe001461035957806389afcb441461037957806395d89b41146103a1578063a9059cbb146103c657600080fd5b80636a6278421461031d57806370a08231146103305780637464fc3d1461035057600080fd5b806323b872dd116101665780633644e515116101405780633644e515146102ef578063485cc955146102f85780635909c0d51461030b5780635a3d54931461031457600080fd5b806323b872dd1461029b57806330adf81f146102ae578063313ce567146102d557600080fd5b8063022c0d9f146101ae57806306fdde03146101c35780630902f1ac14610202578063095ea7b3146102365780630dfe16811461025957806318160ddd14610284575b600080fd5b6101c16101bc366004611d7c565b610461565b005b6101ec6040518060400160405280600a8152602001692ab734b9bbb0b8102b1960b11b81525081565b6040516101f99190611e42565b60405180910390f35b61020a610999565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101f9565b610249610244366004611e75565b6109c3565b60405190151581526020016101f9565b60065461026c906001600160a01b031681565b6040516001600160a01b0390911681526020016101f9565b61028d60005481565b6040519081526020016101f9565b6102496102a9366004611ea1565b6109d9565b61028d7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102dd601281565b60405160ff90911681526020016101f9565b61028d60035481565b6101c1610306366004611ee2565b610a6e565b61028d60095481565b61028d600a5481565b61028d61032b366004611f1b565b610aed565b61028d61033e366004611f1b565b60016020526000908152604090205481565b61028d600b5481565b61028d610367366004611f1b565b60046020526000908152604090205481565b61038c610387366004611f1b565b610dd6565b604080519283526020830191909152016101f9565b6101ec604051806040016040528060068152602001652aa72496ab1960d11b81525081565b6102496103d4366004611e75565b611177565b61028d6103e881565b6101c16103f0366004611f1b565b611184565b60055461026c906001600160a01b031681565b60075461026c906001600160a01b031681565b6101c1610429366004611f38565b6112a6565b61028d61043c366004611ee2565b600260209081526000928352604080842090915290825290205481565b6101c16114ba565b600c5460011461048c5760405162461bcd60e51b815260040161048390611faf565b60405180910390fd5b6000600c558415158061049f5750600084115b6104f95760405162461bcd60e51b815260206004820152602560248201527f556e697377617056323a20494e53554646494349454e545f4f55545055545f416044820152641353d5539560da1b6064820152608401610483565b600080610504610999565b5091509150816001600160701b0316871080156105295750806001600160701b031686105b61057f5760405162461bcd60e51b815260206004820152602160248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152605960f81b6064820152608401610483565b60065460075460009182916001600160a01b039182169190811690891682148015906105bd5750806001600160a01b0316896001600160a01b031614155b6106015760405162461bcd60e51b8152602060048201526015602482015274556e697377617056323a20494e56414c49445f544f60581b6044820152606401610483565b8a1561061257610612828a8d6115fc565b891561062357610623818a8c6115fc565b8615610690576040516304347a1760e21b81526001600160a01b038a16906310d1e85c9061065d9033908f908f908e908e90600401611fda565b600060405180830381600087803b15801561067757600080fd5b505af115801561068b573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156106cf57600080fd5b505afa1580156106e3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107079190612026565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561074957600080fd5b505afa15801561075d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107819190612026565b92505050600089856001600160701b031661079c9190612055565b83116107a95760006107c6565b6107bc8a6001600160701b038716612055565b6107c69084612055565b905060006107dd8a6001600160701b038716612055565b83116107ea576000610807565b6107fd8a6001600160701b038716612055565b6108079084612055565b905060008211806108185750600081115b6108705760405162461bcd60e51b8152602060048201526024808201527f556e697377617056323a20494e53554646494349454e545f494e5055545f414d60448201526313d5539560e21b6064820152608401610483565b600061087d83600361206c565b610889866103e861206c565b6108939190612055565b905060006108a283600361206c565b6108ae866103e861206c565b6108b89190612055565b90506108d06001600160701b03808916908a1661206c565b6108dd90620f424061206c565b6108e7828461206c565b10156109245760405162461bcd60e51b815260206004820152600c60248201526b556e697377617056323a204b60a01b6044820152606401610483565b505061093284848888611747565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109d0338484611933565b50600192915050565b6001600160a01b038316600090815260026020908152604080832033845290915281205460001914610a59576001600160a01b0384166000908152600260209081526040808320338452909152902054610a34908390612055565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a64848484611995565b5060019392505050565b6005546001600160a01b03163314610abf5760405162461bcd60e51b81526020600482015260146024820152732ab734b9bbb0b82b191d102327a92124a22222a760611b6044820152606401610483565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610b115760405162461bcd60e51b815260040161048390611faf565b6000600c81905580610b21610999565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610b6e57600080fd5b505afa158015610b82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba69190612026565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610bef57600080fd5b505afa158015610c03573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c279190612026565b90506000610c3e6001600160701b03861684612055565b90506000610c556001600160701b03861684612055565b90506000610c638787611a3d565b60005490915080610ca1576103e8610c83610c7e858761206c565b611b8b565b610c8d9190612055565b9850610c9c60006103e8611bfb565b610ce8565b610ce56001600160701b038916610cb8838761206c565b610cc291906120a1565b6001600160701b038916610cd6848761206c565b610ce091906120a1565b611c8c565b98505b60008911610d495760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d3525395115160c21b6064820152608401610483565b610d538a8a611bfb565b610d5f86868a8a611747565b8115610d8857600854610d84906001600160701b03600160701b82048116911661206c565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610dfb5760405162461bcd60e51b815260040161048390611faf565b6000600c81905580610e0b610999565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a082319060240160206040518083038186803b158015610e6057600080fd5b505afa158015610e74573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e989190612026565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b158015610edd57600080fd5b505afa158015610ef1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f159190612026565b30600090815260016020526040812054919250610f328888611a3d565b60005490915080610f43868561206c565b610f4d91906120a1565b9a5080610f5a858561206c565b610f6491906120a1565b995060008b118015610f76575060008a115b610fd35760405162461bcd60e51b815260206004820152602860248201527f556e697377617056323a20494e53554646494349454e545f4c495155494449546044820152671657d0955493915160c21b6064820152608401610483565b610fdd3084611ca4565b610fe8878d8d6115fc565b610ff3868d8c6115fc565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561103257600080fd5b505afa158015611046573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061106a9190612026565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b1580156110ac57600080fd5b505afa1580156110c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e49190612026565b93506110f285858b8b611747565b811561111b57600854611117906001600160701b03600160701b82048116911661206c565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109d0338484611995565b600c546001146111a65760405162461bcd60e51b815260040161048390611faf565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b03938416939092169161125491849186916001600160701b03169083906370a08231906024015b60206040518083038186803b15801561120d57600080fd5b505afa158015611221573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112459190612026565b61124f9190612055565b6115fc565b6008546040516370a0823160e01b815230600482015261129c9183918691600160701b90046001600160701b0316906001600160a01b038416906370a08231906024016111f5565b50506001600c5550565b428410156112eb5760405162461bcd60e51b8152602060048201526012602482015271155b9a5cddd85c158c8e881156141254915160721b6044820152606401610483565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b91908761133e836120b5565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e001604051602081830303815290604052805190602001206040516020016113b792919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015611422573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906114585750886001600160a01b0316816001600160a01b0316145b6114a45760405162461bcd60e51b815260206004820152601c60248201527f556e697377617056323a20494e56414c49445f5349474e4154555245000000006044820152606401610483565b6114af898989611933565b505050505050505050565b600c546001146114dc5760405162461bcd60e51b815260040161048390611faf565b6000600c556006546040516370a0823160e01b81523060048201526115f5916001600160a01b0316906370a082319060240160206040518083038186803b15801561152657600080fd5b505afa15801561153a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155e9190612026565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b1580156115a157600080fd5b505afa1580156115b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115d99190612026565b6008546001600160701b0380821691600160701b900416611747565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161168891906120d0565b6000604051808303816000865af19150503d80600081146116c5576040519150601f19603f3d011682016040523d82523d6000602084013e6116ca565b606091505b50915091508180156116f45750805115806116f45750808060200190518101906116f491906120ec565b6117405760405162461bcd60e51b815260206004820152601a60248201527f556e697377617056323a205452414e534645525f4641494c45440000000000006044820152606401610483565b5050505050565b6001600160701b03841180159061176557506001600160701b038311155b6117a75760405162461bcd60e51b8152602060048201526013602482015272556e697377617056323a204f564552464c4f5760681b6044820152606401610483565b60006117b86401000000004261210e565b6008549091506000906117d890600160e01b900463ffffffff1683612122565b905060008163ffffffff161180156117f857506001600160701b03841615155b801561180c57506001600160701b03831615155b1561189b578063ffffffff166118348561182586611d30565b6001600160e01b031690611d4f565b6001600160e01b0316611847919061206c565b600960008282546118589190612147565b909155505063ffffffff81166118718461182587611d30565b6001600160e01b0316611884919061206c565b600a60008282546118959190612147565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0383166000908152600160205260409020546119b9908290612055565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119e9908290612147565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906119889085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611a8e57600080fd5b505afa158015611aa2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ac6919061215f565b600b546001600160a01b038216158015945091925090611b77578015611b72576000611b01610c7e6001600160701b0380881690891661206c565b90506000611b0e83611b8b565b905080821115611b6f576000611b248284612055565b600054611b31919061206c565b9050600082611b4185600561206c565b611b4b9190612147565b90506000611b5982846120a1565b90508015611b6b57611b6b8782611bfb565b5050505b50505b611b83565b8015611b83576000600b555b505092915050565b60006003821115611bec5750806000611ba56002836120a1565b611bb0906001612147565b90505b81811015611be657905080600281611bcb81866120a1565b611bd59190612147565b611bdf91906120a1565b9050611bb3565b50919050565b8115611bf6575060015b919050565b80600054611c099190612147565b60009081556001600160a01b038316815260016020526040902054611c2f908290612147565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c809085815260200190565b60405180910390a35050565b6000818310611c9b5781611c9d565b825b9392505050565b6001600160a01b038216600090815260016020526040902054611cc8908290612055565b6001600160a01b03831660009081526001602052604081209190915554611cf0908290612055565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611c80565b6000611d49600160701b6001600160701b03841661217c565b92915050565b6000611c9d6001600160701b038316846121ab565b6001600160a01b0381168114611d7957600080fd5b50565b600080600080600060808688031215611d9457600080fd5b85359450602086013593506040860135611dad81611d64565b9250606086013567ffffffffffffffff80821115611dca57600080fd5b818801915088601f830112611dde57600080fd5b813581811115611ded57600080fd5b896020828501011115611dff57600080fd5b9699959850939650602001949392505050565b60005b83811015611e2d578181015183820152602001611e15565b83811115611e3c576000848401525b50505050565b6020815260008251806020840152611e61816040850160208701611e12565b601f01601f19169190910160400192915050565b60008060408385031215611e8857600080fd5b8235611e9381611d64565b946020939093013593505050565b600080600060608486031215611eb657600080fd5b8335611ec181611d64565b92506020840135611ed181611d64565b929592945050506040919091013590565b60008060408385031215611ef557600080fd5b8235611f0081611d64565b91506020830135611f1081611d64565b809150509250929050565b600060208284031215611f2d57600080fd5b8135611c9d81611d64565b600080600080600080600060e0888a031215611f5357600080fd5b8735611f5e81611d64565b96506020880135611f6e81611d64565b95506040880135945060608801359350608088013560ff81168114611f9257600080fd5b9699959850939692959460a0840135945060c09093013592915050565b602080825260119082015270155b9a5cddd85c158c8e881313d0d2d151607a1b604082015260600190565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b60006020828403121561203857600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b6000828210156120675761206761203f565b500390565b60008160001904831182151516156120865761208661203f565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826120b0576120b061208b565b500490565b60006000198214156120c9576120c961203f565b5060010190565b600082516120e2818460208701611e12565b9190910192915050565b6000602082840312156120fe57600080fd5b81518015158114611c9d57600080fd5b60008261211d5761211d61208b565b500690565b600063ffffffff8381169083168181101561213f5761213f61203f565b039392505050565b6000821982111561215a5761215a61203f565b500190565b60006020828403121561217157600080fd5b8151611c9d81611d64565b60006001600160e01b03828116848216811515828404821116156121a2576121a261203f565b02949350505050565b60006001600160e01b03838116806121c5576121c561208b565b9216919091049291505056fea26469706673582212200459d3f6e82497ea280da499510f1912f8863662b9755bbaee74788625f8e31764736f6c63430008090033a264697066735822122016d76eb676d5cc46e0768019b644554b4d056565eebb16dcfb5eb70a649bd62964736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:110",
                "type": ""
              }
            ],
            "src": "14:290:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3557:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:110",
                "type": ""
              }
            ],
            "src": "14:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "292:110:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "338:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "347:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "350:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "340:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "340:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "340:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "313:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "322:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "309:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "334:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "305:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "305:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "302:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "363:33:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "386:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "373:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "373:23:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "363:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "258:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "269:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "281:6:110",
                "type": ""
              }
            ],
            "src": "222:180:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "508:76:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "518:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "530:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "541:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "526:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "526:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "518:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "560:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "571:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "553:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "553:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "553:25:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "477:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "488:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "499:4:110",
                "type": ""
              }
            ],
            "src": "407:177:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "638:124:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "648:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "670:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "657:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:20:110"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "648:5:110"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "740:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "749:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "752:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "742:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "742:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "742:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "699:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "710:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "725:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "730:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "721:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "721:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "734:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "717:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "717:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "706:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "706:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "696:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "696:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "689:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "689:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "686:70:110"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "617:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "628:5:110",
                "type": ""
              }
            ],
            "src": "589:173:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "837:116:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "883:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "892:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "895:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "885:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "885:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "885:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "858:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "867:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "854:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "854:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "879:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "850:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "850:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "847:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "908:39:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "937:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "918:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "918:29:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "908:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "803:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "814:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "826:6:110",
                "type": ""
              }
            ],
            "src": "767:186:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1045:173:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1091:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1100:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1103:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1093:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1093:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1093:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1066:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1075:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1062:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1062:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1087:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1058:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1058:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1055:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1116:39:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1145:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1126:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1126:29:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1116:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1164:48:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1197:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1208:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1193:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1193:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1174:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1174:38:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1164:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1003:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1014:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1026:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1034:6:110",
                "type": ""
              }
            ],
            "src": "958:260:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1397:170:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1414:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1425:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1407:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1407:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1407:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1448:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1459:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1444:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1444:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1464:2:110",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1437:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1437:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1437:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1487:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1498:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1483:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1483:18:110"
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1503:22:110",
                        "type": "",
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1476:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1476:50:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1476:50:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1535:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1547:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1558:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1543:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1543:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1535:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1374:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1388:4:110",
                "type": ""
              }
            ],
            "src": "1223:344:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1746:180:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1763:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1774:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1756:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1756:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1756:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1797:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1808:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1793:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1793:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1813:2:110",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1786:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1786:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1786:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1836:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1847:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1832:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1832:18:110"
                      },
                      {
                        "hexValue": "556e697377617056323a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1852:32:110",
                        "type": "",
                        "value": "UniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1825:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1825:60:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1825:60:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1894:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1906:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1917:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1902:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1894:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1723:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1737:4:110",
                "type": ""
              }
            ],
            "src": "1572:354:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2105:173:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2122:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2133:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2115:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2115:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2115:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2156:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2167:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2152:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2152:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2172:2:110",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2145:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2145:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2145:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2195:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2206:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2191:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2191:18:110"
                      },
                      {
                        "hexValue": "556e697377617056323a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2211:25:110",
                        "type": "",
                        "value": "UniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2184:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2184:53:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2184:53:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2246:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2258:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2269:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2254:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2254:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2246:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2082:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2096:4:110",
                "type": ""
              }
            ],
            "src": "1931:347:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2457:172:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2474:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2485:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2467:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2467:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2508:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2519:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2504:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2504:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2524:2:110",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2497:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2497:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2497:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2547:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2558:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2543:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2543:18:110"
                      },
                      {
                        "hexValue": "556e697377617056323a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2563:24:110",
                        "type": "",
                        "value": "UniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2536:52:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2536:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2597:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2609:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2620:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2605:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2605:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2597:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2434:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2448:4:110",
                "type": ""
              }
            ],
            "src": "2283:346:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2781:186:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2791:41:110",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2805:26:110",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "2801:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2801:31:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2795:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2848:3:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2861:2:110",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2865:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2857:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2857:15:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2874:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2853:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2853:24:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2841:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2841:37:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2841:37:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "2898:3:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2903:2:110",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2894:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2894:12:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2916:2:110",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "2920:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2912:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2912:15:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2929:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2908:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2908:24:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2887:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2887:46:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2887:46:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2942:19:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2953:3:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2958:2:110",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2949:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2949:12:110"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2942:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2749:3:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2754:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2762:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2773:3:110",
                "type": ""
              }
            ],
            "src": "2634:333:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3101:175:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3111:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3123:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3134:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3119:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3119:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3111:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3146:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3164:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3169:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3160:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3160:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3173:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3156:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3156:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3150:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3191:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3206:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3214:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3202:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3202:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3184:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3184:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3184:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3238:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3249:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3234:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3234:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3258:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3266:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3254:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3254:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3227:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3227:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3227:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3062:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3073:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3081:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3092:4:110",
                "type": ""
              }
            ],
            "src": "2972:304:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3410:145:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3420:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3432:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3443:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3428:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3428:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3420:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3462:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3477:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3493:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3498:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3489:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3489:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3502:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3485:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3485:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3473:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3473:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3455:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3455:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3455:51:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3526:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3537:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3522:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3522:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3542:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3515:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3515:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3515:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3371:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3382:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3390:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3401:4:110",
                "type": ""
              }
            ],
            "src": "3281:274:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"UniswapV2: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"UniswapV2: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"UniswapV2: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"UniswapV2: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "160:1750:94:-:0;;;376:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;420:11;:26;;-1:-1:-1;;;;;;420:26:94;-1:-1:-1;;;;;420:26:94;;;;;;;;;;160:1750;;14:290:110;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:110;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:110:o;:::-;160:1750:94;;;;;;",
  "deployedSourceMap": "160:1750:94:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;217:20;;;;;-1:-1:-1;;;;;217:20:94;;;;;;-1:-1:-1;;;;;178:32:110;;;160:51;;148:2;133:18;217:20:94;;;;;;;;243:26;;;;;-1:-1:-1;;;;;243:26:94;;;344:25;;;;;;:::i;:::-;;:::i;459:97::-;534:8;:15;459:97;;553:25:110;;;541:2;526:18;459:97:94;407:177:110;1742:166:94;;;;;;:::i;:::-;;:::i;:::-;;562:1026;;;;;;:::i;:::-;;:::i;276:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;276:62:94;;;1594:142;;;;;;:::i;:::-;;:::i;344:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;344:25:94;;-1:-1:-1;344:25:94;:::o;1742:166::-;1829:11;;-1:-1:-1;;;;;1829:11:94;1815:10;:25;1807:58;;;;-1:-1:-1;;;1807:58:94;;1425:2:110;1807:58:94;;;1407:21:110;1464:2;1444:18;;;1437:30;-1:-1:-1;;;1483:18:110;;;1476:50;1543:18;;1807:58:94;;;;;;;;;1875:11;:26;;-1:-1:-1;;;;;;1875:26:94;-1:-1:-1;;;;;1875:26:94;;;;;;;;;;1742:166::o;562:1026::-;648:12;694:6;-1:-1:-1;;;;;684:16:94;:6;-1:-1:-1;;;;;684:16:94;;;676:59;;;;-1:-1:-1;;;676:59:94;;1774:2:110;676:59:94;;;1756:21:110;1813:2;1793:18;;;1786:30;1852:32;1832:18;;;1825:60;1902:18;;676:59:94;1572:354:110;676:59:94;746:14;762;789:6;-1:-1:-1;;;;;780:15:94;:6;-1:-1:-1;;;;;780:15:94;;:77;;842:6;850;780:77;;;811:6;819;780:77;745:112;;-1:-1:-1;745:112:94;-1:-1:-1;;;;;;875:20:94;;867:56;;;;-1:-1:-1;;;867:56:94;;2133:2:110;867:56:94;;;2115:21:110;2172:2;2152:18;;;2145:30;2211:25;2191:18;;;2184:53;2254:18;;867:56:94;1931:347:110;867:56:94;-1:-1:-1;;;;;954:15:94;;;989:1;954:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;933:106;;;;-1:-1:-1;;;933:106:94;;2485:2:110;933:106:94;;;2467:21:110;2524:2;2504:18;;;2497:30;-1:-1:-1;;;2543:18:110;;;2536:52;2605:18;;933:106:94;2283:346:110;933:106:94;1079:21;1103:32;;;;;;;;:::i;:::-;-1:-1:-1;;1103:32:94;;;;;;;;;;;;;;;;-1:-1:-1;;2861:2:110;2857:15;;;2853:24;;1103:32:94;1170;;2841:37:110;2912:15;;;2908:24;2894:12;;;2887:46;1103:32:94;;-1:-1:-1;1145:12:94;;2949::110;;1170:32:94;;;;;;;;;;;;1160:43;;;;;;1145:58;;1291:4;1280:8;1274:15;1269:2;1259:8;1255:17;1252:1;1244:52;1315:47;;-1:-1:-1;;;1315:47:94;;-1:-1:-1;;;;;3202:15:110;;;1315:47:94;;;3184:34:110;3254:15;;;3234:18;;;3227:43;1236:60:94;;-1:-1:-1;1315:31:94;;;;;;3119:18:110;;1315:47:94;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1372:15:94;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;1372:30:94;;;;;;;;1412:15;;;;;;:23;;;;;;;;:30;;;;;;;;1497:8;:19;;-1:-1:-1;1497:19:94;;;;;;;;;;;;;;;;;;;;;;1565:15;;1531:50;;3455:51:110;;;3522:18;;;3515:34;1531:50:94;;3428:18:110;1531:50:94;;;;;;;666:922;;;;562:1026;;;;:::o;1594:142::-;1669:11;;-1:-1:-1;;;;;1669:11:94;1655:10;:25;1647:58;;;;-1:-1:-1;;;1647:58:94;;1425:2:110;1647:58:94;;;1407:21:110;1464:2;1444:18;;;1437:30;-1:-1:-1;;;1483:18:110;;;1476:50;1543:18;;1647:58:94;1223:344:110;1647:58:94;1715:5;:14;;-1:-1:-1;;;;;;1715:14:94;-1:-1:-1;;;;;1715:14:94;;;;;;;;;;1594:142::o;-1:-1:-1:-;;;;;;;;:::o;222:180:110:-;281:6;334:2;322:9;313:7;309:23;305:32;302:52;;;350:1;347;340:12;302:52;-1:-1:-1;373:23:110;;222:180;-1:-1:-1;222:180:110:o;589:173::-;657:20;;-1:-1:-1;;;;;706:31:110;;696:42;;686:70;;752:1;749;742:12;686:70;589:173;;;:::o;767:186::-;826:6;879:2;867:9;858:7;854:23;850:32;847:52;;;895:1;892;885:12;847:52;918:29;937:9;918:29;:::i;:::-;908:39;767:186;-1:-1:-1;;;767:186:110:o;958:260::-;1026:6;1034;1087:2;1075:9;1066:7;1062:23;1058:32;1055:52;;;1103:1;1100;1093:12;1055:52;1126:29;1145:9;1126:29;:::i;:::-;1116:39;;1174:38;1208:2;1197:9;1193:18;1174:38;:::i;:::-;1164:48;;958:260;;;;;:::o",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity =0.8.9;\n\nimport \"../external/interfaces/IUniswapV2Factory.sol\";\nimport \"../external/UniswapV2Pair.sol\";\n\ncontract MockUniswapV2Factory is IUniswapV2Factory {\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint256) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB)\n        external\n        returns (address pair)\n    {\n        require(tokenA != tokenB, \"UniswapV2: IDENTICAL_ADDRESSES\");\n        (address token0, address token1) = tokenA < tokenB\n            ? (tokenA, tokenB)\n            : (tokenB, tokenA);\n        require(token0 != address(0), \"UniswapV2: ZERO_ADDRESS\");\n        require(\n            getPair[token0][token1] == address(0),\n            \"UniswapV2: PAIR_EXISTS\"\n        ); // single check is sufficient\n        bytes memory bytecode = type(UniswapV2Pair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        IUniswapV2Pair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, \"UniswapV2: FORBIDDEN\");\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, \"UniswapV2: FORBIDDEN\");\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/mocks/MockUniswapV2Factory.sol",
  "ast": {
    "absolutePath": "project:/contracts/mocks/MockUniswapV2Factory.sol",
    "exportedSymbols": {
      "IERC20": [
        969
      ],
      "IUniswapV2Callee": [
        15054
      ],
      "IUniswapV2ERC20": [
        15172
      ],
      "IUniswapV2Factory": [
        15235
      ],
      "IUniswapV2Pair": [
        15365
      ],
      "Math": [
        16801
      ],
      "MockUniswapV2Factory": [
        21097
      ],
      "UQ112x112": [
        16845
      ],
      "UniswapV2ERC20": [
        13978
      ],
      "UniswapV2Pair": [
        14994
      ]
    },
    "id": 21098,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 20912,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:94"
      },
      {
        "absolutePath": "project:/contracts/external/interfaces/IUniswapV2Factory.sol",
        "file": "../external/interfaces/IUniswapV2Factory.sol",
        "id": 20913,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21098,
        "sourceUnit": 15236,
        "src": "64:54:94",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/external/UniswapV2Pair.sol",
        "file": "../external/UniswapV2Pair.sol",
        "id": 20914,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 21098,
        "sourceUnit": 14995,
        "src": "119:39:94",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 20915,
              "name": "IUniswapV2Factory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15235,
              "src": "193:17:94"
            },
            "id": 20916,
            "nodeType": "InheritanceSpecifier",
            "src": "193:17:94"
          }
        ],
        "canonicalName": "MockUniswapV2Factory",
        "contractDependencies": [
          14994
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 21097,
        "linearizedBaseContracts": [
          21097,
          15235
        ],
        "name": "MockUniswapV2Factory",
        "nameLocation": "169:20:94",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              15189
            ],
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 20918,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "232:5:94",
            "nodeType": "VariableDeclaration",
            "scope": 21097,
            "src": "217:20:94",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20917,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "217:7:94",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15194
            ],
            "constant": false,
            "functionSelector": "094b7415",
            "id": 20920,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "258:11:94",
            "nodeType": "VariableDeclaration",
            "scope": 21097,
            "src": "243:26:94",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 20919,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "243:7:94",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15203
            ],
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 20926,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "331:7:94",
            "nodeType": "VariableDeclaration",
            "scope": 21097,
            "src": "276:62:94",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 20925,
              "keyType": {
                "id": 20921,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "284:7:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "276:47:94",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 20924,
                "keyType": {
                  "id": 20922,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "303:7:94",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "295:27:94",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 20923,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "314:7:94",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15210
            ],
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 20929,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "361:8:94",
            "nodeType": "VariableDeclaration",
            "scope": 21097,
            "src": "344:25:94",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 20927,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "344:7:94",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 20928,
              "nodeType": "ArrayTypeName",
              "src": "344:9:94",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 20938,
              "nodeType": "Block",
              "src": "410:43:94",
              "statements": [
                {
                  "expression": {
                    "id": 20936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 20934,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20920,
                      "src": "420:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 20935,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20931,
                      "src": "434:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "420:26:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 20937,
                  "nodeType": "ExpressionStatement",
                  "src": "420:26:94"
                }
              ]
            },
            "id": 20939,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20932,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20931,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "396:12:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 20939,
                  "src": "388:20:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20930,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "388:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "387:22:94"
            },
            "returnParameters": {
              "id": 20933,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:0:94"
            },
            "scope": 21097,
            "src": "376:77:94",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              15215
            ],
            "body": {
              "id": 20947,
              "nodeType": "Block",
              "src": "517:39:94",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 20944,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20929,
                      "src": "534:8:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 20945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "534:15:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 20943,
                  "id": 20946,
                  "nodeType": "Return",
                  "src": "527:22:94"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 20948,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "468:14:94",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "482:2:94"
            },
            "returnParameters": {
              "id": 20943,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20942,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 20948,
                  "src": "508:7:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "508:7:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "507:9:94"
            },
            "scope": 21097,
            "src": "459:97:94",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15224
            ],
            "body": {
              "id": 21059,
              "nodeType": "Block",
              "src": "666:922:94",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20958,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20950,
                          "src": "684:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 20959,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20952,
                          "src": "694:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "684:16:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a204944454e544943414c5f414444524553534553",
                        "id": 20961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "702:32:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        },
                        "value": "UniswapV2: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1af2ec9097b2f8bc2dcfea53a9ab4b2cdab42fa29e9a9e04dcb14b4efcc8aa70",
                          "typeString": "literal_string \"UniswapV2: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 20957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "676:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "676:59:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20963,
                  "nodeType": "ExpressionStatement",
                  "src": "676:59:94"
                },
                {
                  "assignments": [
                    20965,
                    20967
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 20965,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "754:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 21059,
                      "src": "746:14:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 20964,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "746:7:94",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 20967,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "770:6:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 21059,
                      "src": "762:14:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 20966,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "762:7:94",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 20978,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 20970,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 20968,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20950,
                        "src": "780:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 20969,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20952,
                        "src": "789:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "780:15:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 20974,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20952,
                          "src": "842:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 20975,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20950,
                          "src": "850:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 20976,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "841:16:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 20977,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "780:77:94",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 20971,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20950,
                          "src": "811:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 20972,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20952,
                          "src": "819:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 20973,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "810:16:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "745:112:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 20980,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20965,
                          "src": "875:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 20983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "893:1:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 20982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "885:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 20981,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "885:7:94",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 20984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "885:10:94",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "875:20:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a205a45524f5f41444452455353",
                        "id": 20986,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "897:25:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        },
                        "value": "UniswapV2: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fd3496d51391106f97d9c12d75d9ef2543a217eeaf4b9c52c6fdbe23f45a5ae",
                          "typeString": "literal_string \"UniswapV2: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 20979,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "867:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 20987,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:56:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 20988,
                  "nodeType": "ExpressionStatement",
                  "src": "867:56:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 20999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 20990,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20926,
                              "src": "954:7:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 20992,
                            "indexExpression": {
                              "id": 20991,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 20965,
                              "src": "962:6:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "954:15:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 20994,
                          "indexExpression": {
                            "id": 20993,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20967,
                            "src": "970:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "954:23:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 20997,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "989:1:94",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 20996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "981:7:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 20995,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "981:7:94",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 20998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "981:10:94",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "954:37:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20504149525f455849535453",
                        "id": 21000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1005:24:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                          "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                        },
                        "value": "UniswapV2: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7597a3317d1f47998beb266ffa8b5f1f9be064321f01552ef08c1fe9eeb777db",
                          "typeString": "literal_string \"UniswapV2: PAIR_EXISTS\""
                        }
                      ],
                      "id": 20989,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "933:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "933:106:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21002,
                  "nodeType": "ExpressionStatement",
                  "src": "933:106:94"
                },
                {
                  "assignments": [
                    21004
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21004,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1092:8:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 21059,
                      "src": "1079:21:94",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 21003,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1079:5:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21009,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 21006,
                          "name": "UniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14994,
                          "src": "1108:13:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$14994_$",
                            "typeString": "type(contract UniswapV2Pair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_UniswapV2Pair_$14994_$",
                            "typeString": "type(contract UniswapV2Pair)"
                          }
                        ],
                        "id": 21005,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1103:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 21007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1103:19:94",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_UniswapV2Pair_$14994",
                        "typeString": "type(contract UniswapV2Pair)"
                      }
                    },
                    "id": 21008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1103:32:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1079:56:94"
                },
                {
                  "assignments": [
                    21011
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21011,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1153:4:94",
                      "nodeType": "VariableDeclaration",
                      "scope": 21059,
                      "src": "1145:12:94",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 21010,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1145:7:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 21019,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21015,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20965,
                            "src": "1187:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 21016,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20967,
                            "src": "1195:6:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21013,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1170:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 21014,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1170:16:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 21017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1170:32:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 21012,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1160:9:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 21018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1160:43:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1145:58:94"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1222:84:94",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1236:60:94",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1252:1:94",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1259:8:94"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1269:2:94",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1255:3:94"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1255:17:94"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1280:8:94"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1274:5:94"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1274:15:94"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1291:4:94"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1244:7:94"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1244:52:94"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1236:4:94"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 21004,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1259:8:94",
                      "valueSize": 1
                    },
                    {
                      "declaration": 21004,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1280:8:94",
                      "valueSize": 1
                    },
                    {
                      "declaration": 20955,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1236:4:94",
                      "valueSize": 1
                    },
                    {
                      "declaration": 21011,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1291:4:94",
                      "valueSize": 1
                    }
                  ],
                  "id": 21020,
                  "nodeType": "InlineAssembly",
                  "src": "1213:93:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21025,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20965,
                        "src": "1347:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21026,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20967,
                        "src": "1355:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 21022,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20955,
                            "src": "1330:4:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 21021,
                          "name": "IUniswapV2Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 15365,
                          "src": "1315:14:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$15365_$",
                            "typeString": "type(contract IUniswapV2Pair)"
                          }
                        },
                        "id": 21023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1315:20:94",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                          "typeString": "contract IUniswapV2Pair"
                        }
                      },
                      "id": 21024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15364,
                      "src": "1315:31:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 21027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1315:47:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21028,
                  "nodeType": "ExpressionStatement",
                  "src": "1315:47:94"
                },
                {
                  "expression": {
                    "id": 21035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 21029,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20926,
                          "src": "1372:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 21032,
                        "indexExpression": {
                          "id": 21030,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20965,
                          "src": "1380:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1372:15:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 21033,
                      "indexExpression": {
                        "id": 21031,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20967,
                        "src": "1388:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1372:23:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21034,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20955,
                      "src": "1398:4:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1372:30:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21036,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:30:94"
                },
                {
                  "expression": {
                    "id": 21043,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 21037,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20926,
                          "src": "1412:7:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 21040,
                        "indexExpression": {
                          "id": 21038,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20967,
                          "src": "1420:6:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1412:15:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 21041,
                      "indexExpression": {
                        "id": 21039,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20965,
                        "src": "1428:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1412:23:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21042,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20955,
                      "src": "1438:4:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1412:30:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21044,
                  "nodeType": "ExpressionStatement",
                  "src": "1412:30:94"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21048,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20955,
                        "src": "1511:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21045,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20929,
                        "src": "1497:8:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 21047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1497:13:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 21049,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1497:19:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21050,
                  "nodeType": "ExpressionStatement",
                  "src": "1497:19:94"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 21052,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20965,
                        "src": "1543:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21053,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20967,
                        "src": "1551:6:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 21054,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20955,
                        "src": "1559:4:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 21055,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20929,
                          "src": "1565:8:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 21056,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1565:15:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 21051,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15184,
                      "src": "1531:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 21057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1531:50:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21058,
                  "nodeType": "EmitStatement",
                  "src": "1526:55:94"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 21060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "571:10:94",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 20953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20950,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "590:6:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 21060,
                  "src": "582:14:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "582:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 20952,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "606:6:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 21060,
                  "src": "598:14:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "598:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "581:32:94"
            },
            "returnParameters": {
              "id": 20956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 20955,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "656:4:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 21060,
                  "src": "648:12:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "648:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "647:14:94"
            },
            "scope": 21097,
            "src": "562:1026:94",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15229
            ],
            "body": {
              "id": 21077,
              "nodeType": "Block",
              "src": "1637:99:94",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21066,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1655:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1655:10:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 21068,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20920,
                          "src": "1669:11:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1655:25:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "id": 21070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1682:22:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        },
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 21065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1647:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1647:58:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21072,
                  "nodeType": "ExpressionStatement",
                  "src": "1647:58:94"
                },
                {
                  "expression": {
                    "id": 21075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21073,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20918,
                      "src": "1715:5:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21074,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21062,
                      "src": "1723:6:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1715:14:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21076,
                  "nodeType": "ExpressionStatement",
                  "src": "1715:14:94"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 21078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1603:8:94",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21062,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1620:6:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 21078,
                  "src": "1612:14:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21061,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1612:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1611:16:94"
            },
            "returnParameters": {
              "id": 21064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1637:0:94"
            },
            "scope": 21097,
            "src": "1594:142:94",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              15234
            ],
            "body": {
              "id": 21095,
              "nodeType": "Block",
              "src": "1797:111:94",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 21087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 21084,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1815:3:94",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 21085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1815:10:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 21086,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20920,
                          "src": "1829:11:94",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1815:25:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "556e697377617056323a20464f5242494444454e",
                        "id": 21088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1842:22:94",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        },
                        "value": "UniswapV2: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e6d2caae3ed190a2586f9b576de92bc80eab72002acec2261bbed89d68a3b37",
                          "typeString": "literal_string \"UniswapV2: FORBIDDEN\""
                        }
                      ],
                      "id": 21083,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1807:7:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 21089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1807:58:94",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21090,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:58:94"
                },
                {
                  "expression": {
                    "id": 21093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21091,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20920,
                      "src": "1875:11:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 21092,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21080,
                      "src": "1889:12:94",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1875:26:94",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 21094,
                  "nodeType": "ExpressionStatement",
                  "src": "1875:26:94"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 21096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1751:14:94",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21080,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1774:12:94",
                  "nodeType": "VariableDeclaration",
                  "scope": 21096,
                  "src": "1766:20:94",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21079,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1766:7:94",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1765:22:94"
            },
            "returnParameters": {
              "id": 21082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1797:0:94"
            },
            "scope": 21097,
            "src": "1742:166:94",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 21098,
        "src": "160:1750:94",
        "usedErrors": []
      }
    ],
    "src": "39:1872:94"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.081Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}