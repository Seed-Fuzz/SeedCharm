{
  "contractName": "SynthFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "name": "synths",
      "outputs": [
        {
          "internalType": "contract ISynth",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20Extended",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "createSynth",
      "outputs": [
        {
          "internalType": "contract ISynth",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20Extended\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"createSynth\",\"outputs\":[{\"internalType\":\"contract ISynth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"synths\",\"outputs\":[{\"internalType\":\"contract ISynth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dex-v2/synths/SynthFactory.sol\":\"SynthFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"project:/contracts/dex-v2/synths/Synth.sol\":{\"keccak256\":\"0xfa62e5ee28b6df89c9c94080407137e6b29a38579236d24dc35a78e51163221c\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2cee563a0a922b3576cb13722791ec3c2457dfa5f2b7e3c2bdd4940bc67d0630\",\"dweb:/ipfs/QmRMbPLZghkNgoC8pC2JHBw8dD5MXZgirf1k2CjnBP9s9R\"]},\"project:/contracts/dex-v2/synths/SynthFactory.sol\":{\"keccak256\":\"0x41c5182f50e33cacae45278b37d986ceabc93a00bc03030a5cae169b822d10ed\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://63d930316a47c204b0c648017f894c743fd16799b89d71f13b9c85e7ab4a5a20\",\"dweb:/ipfs/QmaKtSNtSdRstDyE3Q7eEBr4Tjdx2SzRvzSSXHKfcUx7EB\"]},\"project:/contracts/interfaces/dex-v2/synth/ISynth.sol\":{\"keccak256\":\"0x1b24163ff8c0067e9a6b740b7257dfef4a3f8810f1a63035b2ab2f09cb97b68e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://af9540090c2a8560611e72c53dbacfb676a35de39581f1ae8180fd181cda3b17\",\"dweb:/ipfs/QmaNVYKRox4zfC8ViyU4BrbgopucWUoYFXPmbEQJoeG9ct\"]},\"project:/contracts/interfaces/dex-v2/synth/ISynthFactory.sol\":{\"keccak256\":\"0xac2fd5f239884aac0a33dba018e0411f7385100b133915d4f493e36ef17725fd\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ec3b5d91a1d6061ea47586445f2e4771c58bfa29887b9d0b64bc38a584b9240e\",\"dweb:/ipfs/QmWQdEnvoLtLajeJv7f1AvmGKUN2h27mkdQjZExwdWaUeV\"]},\"project:/contracts/interfaces/shared/IERC20Extended.sol\":{\"keccak256\":\"0xe4820549025e254ec014e46e4f10f61a02b98876b54c71aa004cfb714900b88b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://29e0e0802dff7e8d91fee3e0e50e740b406240fbea3288778bffb91818e8bc4c\",\"dweb:/ipfs/QmNniaobupcZZCiooSiD9qSjwDvhHNqXQjGhL35w3DLcjj\"]},\"project:/contracts/shared/ProtocolConstants.sol\":{\"keccak256\":\"0x845b3cdb262b4cc3a2ce4fd0c094c6e6b5e818988cd7c21d4b7b3295b80b7b22\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://763268835823e795ce64059ff8bb147224fb548a4f33b90be4b80b35c59598e2\",\"dweb:/ipfs/QmPbyyps31R4f2PVMpqCbkhWDw8UtG5vfikcNxL6Mg51e5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405161175538038061175583398101604081905261002f916101db565b610038336100b6565b6001600160a01b0381166100a75760405162461bcd60e51b815260206004820152602b60248201527f53796e7468466163746f72793a3a636f6e7374727563746f723a204d6973636f60448201526a373334b3bab930ba34b7b760a91b60648201526084015b60405180910390fd5b6100b081610106565b5061020b565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b61010e61017f565b6001600160a01b0381166101735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161009e565b61017c816100b6565b50565b6000546001600160a01b031633146101d95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161009e565b565b6000602082840312156101ed57600080fd5b81516001600160a01b038116811461020457600080fd5b9392505050565b61153b8061021a6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639f087dd61461008f578063cf62480d146100b8578063f2fde38b146100cb575b600080fd5b6100646100de565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007361009d3660046103ac565b6001602052600090815260409020546001600160a01b031681565b6100736100c63660046103ac565b6100f2565b6100646100d93660046103ac565b610267565b6100e66102e0565b6100f0600061033a565b565b60006100fc6102e0565b6001600160a01b03828116600090815260016020526040902054161561017c5760405162461bcd60e51b815260206004820152602a60248201527f53796e7468466163746f72793a3a63726561746553796e74683a20416c726561604482015269191e4810dc99585d195960b21b60648201526084015b60405180910390fd5b60008260405161018b9061038a565b6001600160a01b039091168152602001604051809103906000f0801580156101b7573d6000803e3d6000fd5b509050806001600160a01b031663f2fde38b6101db6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561021c57600080fd5b505af1158015610230573d6000803e3d6000fd5b505050506001600160a01b03928316600090815260016020526040902080546001600160a01b031916938216939093179092555090565b61026f6102e0565b6001600160a01b0381166102d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610173565b6102dd8161033a565b50565b6000546001600160a01b031633146100f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610173565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611135806103d183390190565b6001600160a01b03811681146102dd57600080fd5b6000602082840312156103be57600080fd5b81356103c981610397565b939250505056fe60806040523480156200001157600080fd5b50604051620011353803806200113583398101604081905262000034916200030c565b6200003f8162000099565b6200004a8262000144565b81516200005f90600390602085019062000266565b5080516200007590600490602084019062000266565b505050620000926200008c620001e260201b60201c565b620001e6565b50620004af565b60606200013e826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015620000d957600080fd5b505afa158015620000ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000118919081019062000387565b6040805180820190915260098152680405a40eca6f2dce8d60bb1b602082015262000238565b92915050565b60606200013e826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200018457600080fd5b505afa15801562000199573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001c3919081019062000387565b604080518082019091526002815261173b60f11b602082015262000238565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606082826040516020016200024f9291906200043f565b604051602081830303815290604052905092915050565b828054620002749062000472565b90600052602060002090601f016020900481019282620002985760008555620002e3565b82601f10620002b357805160ff1916838001178555620002e3565b82800160010185558215620002e3579182015b82811115620002e3578251825591602001919060010190620002c6565b50620002f1929150620002f5565b5090565b5b80821115620002f15760008155600101620002f6565b6000602082840312156200031f57600080fd5b81516001600160a01b03811681146200033757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200037157818101518382015260200162000357565b8381111562000381576000848401525b50505050565b6000602082840312156200039a57600080fd5b81516001600160401b0380821115620003b257600080fd5b818401915084601f830112620003c757600080fd5b815181811115620003dc57620003dc6200033e565b604051601f8201601f19908116603f011681019083821181831017156200040757620004076200033e565b816040528281528760208487010111156200042157600080fd5b6200043483602083016020880162000354565b979650505050505050565b600083516200045381846020880162000354565b8351908301906200046981836020880162000354565b01949350505050565b600181811c908216806200048757607f821691505b60208210811415620004a957634e487b7160e01b600052602260045260246000fd5b50919050565b610c7680620004bf6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b806370a08231146101b5578063715018a6146101de5780638da5cb5b146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806342966c68146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a9a565b60405180910390f35b610136610131366004610b0b565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b35565b6102ff565b6040516012815260200161011a565b610136610188366004610b0b565b610323565b6101a061019b366004610b0b565b610345565b005b6101a06101b0366004610b71565b61035b565b61014a6101c3366004610b8a565b6001600160a01b031660009081526020819052604090205490565b6101a0610370565b6005546040516001600160a01b03909116815260200161011a565b61010d610384565b610136610217366004610b0b565b610393565b61013661022a366004610b0b565b610413565b61014a61023d366004610bac565b610421565b6101a0610250366004610b8a565b61044c565b60606003805461026490610bdf565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610bdf565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c2565b5060019392505050565b60003361030d8582856105e7565b610318858585610661565b506001949350505050565b6000336102f58185856103368383610421565b6103409190610c1a565b6104c2565b61034d610805565b610357828261085f565b5050565b610363610805565b61036d338261091e565b50565b610378610805565b6103826000610a48565b565b60606004805461026490610bdf565b600033816103a18286610421565b9050838110156104065760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031882868684036104c2565b6000336102f5818585610661565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610454610805565b6001600160a01b0381166104b95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fd565b61036d81610a48565b6001600160a01b0383166105245760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fd565b6001600160a01b0382166105855760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f38484610421565b9050600019811461065b578181101561064e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fd565b61065b84848484036104c2565b50505050565b6001600160a01b0383166106c55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fd565b6001600160a01b0382166107275760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fd565b6001600160a01b0383166000908152602081905260409020548181101561079f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fd565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361065b565b6005546001600160a01b031633146103825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fd565b6001600160a01b0382166108b55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fd565b80600260008282546108c79190610c1a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661097e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fd565b6001600160a01b038216600090815260208190526040902054818110156109f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fd565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105da565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610ac757858101830151858201604001528201610aab565b81811115610ad9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b0657600080fd5b919050565b60008060408385031215610b1e57600080fd5b610b2783610aef565b946020939093013593505050565b600080600060608486031215610b4a57600080fd5b610b5384610aef565b9250610b6160208501610aef565b9150604084013590509250925092565b600060208284031215610b8357600080fd5b5035919050565b600060208284031215610b9c57600080fd5b610ba582610aef565b9392505050565b60008060408385031215610bbf57600080fd5b610bc883610aef565b9150610bd660208401610aef565b90509250929050565b600181811c90821680610bf357607f821691505b60208210811415610c1457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c3b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220442248be798b5cec1dd53fee116c981a61dd675f79068dcba45bf3e267e18f7664736f6c63430008090033a264697066735822122090b373fbd35a5b51924440927f3e3963a3ee12e4b2e6e402539204dc43dc04c364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100575760003560e01c8063715018a61461005c5780638da5cb5b146100665780639f087dd61461008f578063cf62480d146100b8578063f2fde38b146100cb575b600080fd5b6100646100de565b005b6000546001600160a01b03165b6040516001600160a01b03909116815260200160405180910390f35b61007361009d3660046103ac565b6001602052600090815260409020546001600160a01b031681565b6100736100c63660046103ac565b6100f2565b6100646100d93660046103ac565b610267565b6100e66102e0565b6100f0600061033a565b565b60006100fc6102e0565b6001600160a01b03828116600090815260016020526040902054161561017c5760405162461bcd60e51b815260206004820152602a60248201527f53796e7468466163746f72793a3a63726561746553796e74683a20416c726561604482015269191e4810dc99585d195960b21b60648201526084015b60405180910390fd5b60008260405161018b9061038a565b6001600160a01b039091168152602001604051809103906000f0801580156101b7573d6000803e3d6000fd5b509050806001600160a01b031663f2fde38b6101db6000546001600160a01b031690565b6040516001600160e01b031960e084901b1681526001600160a01b039091166004820152602401600060405180830381600087803b15801561021c57600080fd5b505af1158015610230573d6000803e3d6000fd5b505050506001600160a01b03928316600090815260016020526040902080546001600160a01b031916938216939093179092555090565b61026f6102e0565b6001600160a01b0381166102d45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610173565b6102dd8161033a565b50565b6000546001600160a01b031633146100f05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610173565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611135806103d183390190565b6001600160a01b03811681146102dd57600080fd5b6000602082840312156103be57600080fd5b81356103c981610397565b939250505056fe60806040523480156200001157600080fd5b50604051620011353803806200113583398101604081905262000034916200030c565b6200003f8162000099565b6200004a8262000144565b81516200005f90600390602085019062000266565b5080516200007590600490602084019062000266565b505050620000926200008c620001e260201b60201c565b620001e6565b50620004af565b60606200013e826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b158015620000d957600080fd5b505afa158015620000ee573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000118919081019062000387565b6040805180820190915260098152680405a40eca6f2dce8d60bb1b602082015262000238565b92915050565b60606200013e826001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b1580156200018457600080fd5b505afa15801562000199573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620001c3919081019062000387565b604080518082019091526002815261173b60f11b602082015262000238565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b606082826040516020016200024f9291906200043f565b604051602081830303815290604052905092915050565b828054620002749062000472565b90600052602060002090601f016020900481019282620002985760008555620002e3565b82601f10620002b357805160ff1916838001178555620002e3565b82800160010185558215620002e3579182015b82811115620002e3578251825591602001919060010190620002c6565b50620002f1929150620002f5565b5090565b5b80821115620002f15760008155600101620002f6565b6000602082840312156200031f57600080fd5b81516001600160a01b03811681146200033757600080fd5b9392505050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200037157818101518382015260200162000357565b8381111562000381576000848401525b50505050565b6000602082840312156200039a57600080fd5b81516001600160401b0380821115620003b257600080fd5b818401915084601f830112620003c757600080fd5b815181811115620003dc57620003dc6200033e565b604051601f8201601f19908116603f011681019083821181831017156200040757620004076200033e565b816040528281528760208487010111156200042157600080fd5b6200043483602083016020880162000354565b979650505050505050565b600083516200045381846020880162000354565b8351908301906200046981836020880162000354565b01949350505050565b600181811c908216806200048757607f821691505b60208210811415620004a957634e487b7160e01b600052602260045260246000fd5b50919050565b610c7680620004bf6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b806370a08231146101b5578063715018a6146101de5780638da5cb5b146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806342966c68146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610a9a565b60405180910390f35b610136610131366004610b0b565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b35565b6102ff565b6040516012815260200161011a565b610136610188366004610b0b565b610323565b6101a061019b366004610b0b565b610345565b005b6101a06101b0366004610b71565b61035b565b61014a6101c3366004610b8a565b6001600160a01b031660009081526020819052604090205490565b6101a0610370565b6005546040516001600160a01b03909116815260200161011a565b61010d610384565b610136610217366004610b0b565b610393565b61013661022a366004610b0b565b610413565b61014a61023d366004610bac565b610421565b6101a0610250366004610b8a565b61044c565b60606003805461026490610bdf565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610bdf565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104c2565b5060019392505050565b60003361030d8582856105e7565b610318858585610661565b506001949350505050565b6000336102f58185856103368383610421565b6103409190610c1a565b6104c2565b61034d610805565b610357828261085f565b5050565b610363610805565b61036d338261091e565b50565b610378610805565b6103826000610a48565b565b60606004805461026490610bdf565b600033816103a18286610421565b9050838110156104065760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031882868684036104c2565b6000336102f5818585610661565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b610454610805565b6001600160a01b0381166104b95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103fd565b61036d81610a48565b6001600160a01b0383166105245760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103fd565b6001600160a01b0382166105855760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103fd565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105f38484610421565b9050600019811461065b578181101561064e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103fd565b61065b84848484036104c2565b50505050565b6001600160a01b0383166106c55760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103fd565b6001600160a01b0382166107275760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103fd565b6001600160a01b0383166000908152602081905260409020548181101561079f5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103fd565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a361065b565b6005546001600160a01b031633146103825760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103fd565b6001600160a01b0382166108b55760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103fd565b80600260008282546108c79190610c1a565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b03821661097e5760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103fd565b6001600160a01b038216600090815260208190526040902054818110156109f25760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103fd565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91016105da565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b600060208083528351808285015260005b81811015610ac757858101830151858201604001528201610aab565b81811115610ad9576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610b0657600080fd5b919050565b60008060408385031215610b1e57600080fd5b610b2783610aef565b946020939093013593505050565b600080600060608486031215610b4a57600080fd5b610b5384610aef565b9250610b6160208501610aef565b9150604084013590509250925092565b600060208284031215610b8357600080fd5b5035919050565b600060208284031215610b9c57600080fd5b610ba582610aef565b9392505050565b60008060408385031215610bbf57600080fd5b610bc883610aef565b9150610bd660208401610aef565b90509250929050565b600181811c90821680610bf357607f821691505b60208210811415610c1457634e487b7160e01b600052602260045260246000fd5b50919050565b60008219821115610c3b57634e487b7160e01b600052601160045260246000fd5b50019056fea2646970667358221220442248be798b5cec1dd53fee116c981a61dd675f79068dcba45bf3e267e18f7664736f6c63430008090033a264697066735822122090b373fbd35a5b51924440927f3e3963a3ee12e4b2e6e402539204dc43dc04c364736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1486:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:110",
                "type": ""
              }
            ],
            "src": "14:290:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "483:233:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "493:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "493:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "493:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "534:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "545:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "530:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "530:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "550:2:110",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "573:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "584:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "569:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "569:18:110"
                      },
                      {
                        "hexValue": "53796e7468466163746f72793a3a636f6e7374727563746f723a204d6973636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "589:34:110",
                        "type": "",
                        "value": "SynthFactory::constructor: Misco"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "562:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "562:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "562:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "644:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "655:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "640:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "640:18:110"
                      },
                      {
                        "hexValue": "6e66696775726174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "660:13:110",
                        "type": "",
                        "value": "nfiguration"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "633:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "633:41:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "683:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "695:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "706:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "691:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "691:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "683:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b296d051205eb0c3b5def13fbe5aaa2eab8a323bc506ee891e6182a8fd06492c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "460:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "474:4:110",
                "type": ""
              }
            ],
            "src": "309:407:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "895:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "905:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "905:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "905:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "946:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "957:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "942:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "942:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "962:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "935:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "935:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "985:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "996:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "981:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "981:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1001:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "974:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "974:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "974:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1056:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1067:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1052:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1052:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1072:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1045:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1045:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1045:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1090:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1102:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1113:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1098:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1098:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1090:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "872:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "886:4:110",
                "type": ""
              }
            ],
            "src": "721:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1302:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1319:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1330:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1312:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1312:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1312:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1353:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1364:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1349:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1369:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1342:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1342:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1392:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1403:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1388:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1388:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1408:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1381:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1381:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1452:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1464:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1475:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1452:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1279:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1293:4:110",
                "type": ""
              }
            ],
            "src": "1128:356:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_b296d051205eb0c3b5def13fbe5aaa2eab8a323bc506ee891e6182a8fd06492c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"SynthFactory::constructor: Misco\")\n        mstore(add(headStart, 96), \"nfiguration\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2816:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:110",
                "type": ""
              }
            ],
            "src": "14:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "275:86:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "339:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "348:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "351:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "341:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "341:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "341:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "298:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "309:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "324:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "329:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "320:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "320:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "333:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "316:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "316:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "305:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "305:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "295:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "295:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "288:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "288:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "285:70:110"
                }
              ]
            },
            "name": "validator_revert_contract_IERC20",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "264:5:110",
                "type": ""
              }
            ],
            "src": "222:139:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "450:185:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "496:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "505:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "508:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "498:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "498:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "498:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "471:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "480:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "467:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "467:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "492:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "463:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "463:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "460:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "521:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "547:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "534:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "534:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "525:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "599:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "566:32:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "566:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "566:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "614:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "624:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "614:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "416:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "427:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "439:6:110",
                "type": ""
              }
            ],
            "src": "366:269:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "757:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "767:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "779:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "790:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "775:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "775:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "767:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "809:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "824:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "840:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "845:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "836:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "836:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "849:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "832:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "832:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "820:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "820:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "802:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "802:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "802:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ISynth_$19877__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "737:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "748:4:110",
                "type": ""
              }
            ],
            "src": "640:219:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "958:185:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1004:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1013:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1016:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1006:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1006:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1006:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "979:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "988:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "975:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "975:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1000:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "971:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "968:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1029:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1055:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1042:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1042:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1033:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1107:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1074:32:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1074:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1122:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1132:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1122:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20Extended_$20391",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "924:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "935:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "947:6:110",
                "type": ""
              }
            ],
            "src": "864:279:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1218:185:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1264:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1273:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1276:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1266:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1266:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1266:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1239:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1248:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1235:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1235:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1260:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1231:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1231:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1228:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1289:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1315:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1302:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1302:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1293:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1367:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IERC20",
                      "nodeType": "YulIdentifier",
                      "src": "1334:32:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1334:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1334:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1382:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1392:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1382:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1184:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1195:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1207:6:110",
                "type": ""
              }
            ],
            "src": "1148:255:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1582:232:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1599:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1610:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1592:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1592:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1592:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1633:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1644:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1629:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1629:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1649:2:110",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1622:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1622:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1622:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1672:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1683:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1668:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1668:18:110"
                      },
                      {
                        "hexValue": "53796e7468466163746f72793a3a63726561746553796e74683a20416c726561",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1688:34:110",
                        "type": "",
                        "value": "SynthFactory::createSynth: Alrea"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1661:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1661:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1661:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1743:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1754:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1739:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1739:18:110"
                      },
                      {
                        "hexValue": "64792043726561746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1759:12:110",
                        "type": "",
                        "value": "dy Created"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1732:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1732:40:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1732:40:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1781:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1793:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1804:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1789:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1789:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1781:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3fe652b19e1f3b0e431a9a5ebb42dfac096c8cbf60c6d99c2be0b75198ddb721__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1559:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1573:4:110",
                "type": ""
              }
            ],
            "src": "1408:406:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1944:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1954:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1966:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1977:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1962:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1962:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1954:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1996:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2011:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2027:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2032:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2023:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2023:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2036:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2019:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2019:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1989:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1989:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20Extended_$20391__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1913:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1924:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1935:4:110",
                "type": ""
              }
            ],
            "src": "1819:227:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2225:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2242:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2253:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2235:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2235:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2235:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2276:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2287:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2272:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2272:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2292:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2265:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2265:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2265:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2315:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2326:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2311:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2311:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2331:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2304:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2304:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2304:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2386:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2397:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2382:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2382:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2402:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2375:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2375:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2375:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2420:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2432:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2443:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2428:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2428:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2420:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2202:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2216:4:110",
                "type": ""
              }
            ],
            "src": "2051:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2632:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2649:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2660:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2642:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2642:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2642:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2683:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2694:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2679:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2679:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2699:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2672:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2672:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2672:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2722:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2733:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2718:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2718:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2738:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2711:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2711:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2711:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2782:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2794:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2805:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2790:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2790:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2782:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2609:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2623:4:110",
                "type": ""
              }
            ],
            "src": "2458:356:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_contract_IERC20(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_ISynth_$19877__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20Extended_$20391(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_contract_IERC20(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_3fe652b19e1f3b0e431a9a5ebb42dfac096c8cbf60c6d99c2be0b75198ddb721__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SynthFactory::createSynth: Alrea\")\n        mstore(add(headStart, 96), \"dy Created\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC20Extended_$20391__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "154:779:37:-:0;;;285:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;734:10:18;936:18:0;:32::i;:::-;-1:-1:-1;;;;;345:22:37;;323:115;;;;-1:-1:-1;;;323:115:37;;511:2:110;323:115:37;;;493:21:110;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:110;;;633:41;691:19;;323:115:37;;;;;;;;;449:24;467:5;449:17;:24::i;:::-;285:196;154:779;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;2074:198::-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;923:2:110;2154:73:0::1;::::0;::::1;905:21:110::0;962:2;942:18;;;935:30;1001:34;981:18;;;974:62;-1:-1:-1;;;1052:18:110;;;1045:36;1098:19;;2154:73:0::1;721:402:110::0;2154:73:0::1;2237:28;2256:8:::0;2237:18:::1;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;1330:2:110;1414:68:0;;;1312:21:110;;;1349:18;;;1342:30;1408:34;1388:18;;;1381:62;1460:18;;1414:68:0;1128:356:110;1414:68:0;1359:130::o;14:290:110:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:110;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:110:o;1128:356::-;154:779:37;;;;;;",
  "deployedSourceMap": "154:779:37:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1824:101:0;;;:::i;:::-;;1201:85;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;;-1:-1:-1;;;;;178:32:110;;;160:51;;148:2;133:18;1201:85:0;;;;;;;228:48:37;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;228:48:37;;;489:441;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;1824:101::-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;489:441:37:-;605:6;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;651:21:37;;::::1;238:1:98;651:21:37::0;;;:6:::1;:21;::::0;;;;;::::1;:46:::0;629:138:::1;;;::::0;-1:-1:-1;;;629:138:37;;1610:2:110;629:138:37::1;::::0;::::1;1592:21:110::0;1649:2;1629:18;;;1622:30;1688:34;1668:18;;;1661:62;-1:-1:-1;;;1739:18:110;;;1732:40;1789:19;;629:138:37::1;;;;;;;;;780:11;804:5;794:16;;;;;:::i;:::-;-1:-1:-1::0;;;;;178:32:110;;;160:51;;148:2;133:18;794:16:37::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;780:30;;823:5;-1:-1:-1::0;;;;;823:23:37::1;;847:7;1247::0::0;1273:6;-1:-1:-1;;;;;1273:6:0;;1201:85;847:7:37::1;823:32;::::0;-1:-1:-1;;;;;;823:32:37::1;::::0;;;;;;-1:-1:-1;;;;;178:32:110;;;823::37::1;::::0;::::1;160:51:110::0;133:18;;823:32:37::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;;;;;;;;868:21:37;;::::1;;::::0;;;:6:::1;:21;::::0;;;;:29;;-1:-1:-1;;;;;;868:29:37::1;::::0;;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;868:29:37;489:441::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;2253:2:110;2154:73:0::1;::::0;::::1;2235:21:110::0;2292:2;2272:18;;;2265:30;2331:34;2311:18;;;2304:62;-1:-1:-1;;;2382:18:110;;;2375:36;2428:19;;2154:73:0::1;2051:402:110::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;2660:2:110;1414:68:0;;;2642:21:110;;;2679:18;;;2672:30;2738:34;2718:18;;;2711:62;2790:18;;1414:68:0;2458:356:110;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;-1:-1:-1:-;;;;;;;;:::o;222:139:110:-;-1:-1:-1;;;;;305:31:110;;295:42;;285:70;;351:1;348;341:12;366:269;439:6;492:2;480:9;471:7;467:23;463:32;460:52;;;508:1;505;498:12;460:52;547:9;534:23;566:39;599:5;566:39;:::i;:::-;624:5;366:269;-1:-1:-1;;;366:269:110:o",
  "source": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity =0.8.9;\r\n\r\nimport \"./Synth.sol\";\r\n\r\nimport \"../../interfaces/dex-v2/synth/ISynthFactory.sol\";\r\n\r\ncontract SynthFactory is ISynthFactory, ProtocolConstants, Ownable {\r\n    mapping(IERC20 => ISynth) public override synths;\r\n\r\n    constructor(address _pool) {\r\n        require(\r\n            _pool != _ZERO_ADDRESS,\r\n            \"SynthFactory::constructor: Misconfiguration\"\r\n        );\r\n        transferOwnership(_pool);\r\n    }\r\n\r\n    function createSynth(IERC20Extended token)\r\n        external\r\n        override\r\n        onlyOwner\r\n        returns (ISynth)\r\n    {\r\n        require(\r\n            synths[IERC20(token)] == ISynth(_ZERO_ADDRESS),\r\n            \"SynthFactory::createSynth: Already Created\"\r\n        );\r\n\r\n        Synth synth = new Synth(token);\r\n\r\n        synth.transferOwnership(owner());\r\n\r\n        synths[IERC20(token)] = synth;\r\n\r\n        return synth;\r\n    }\r\n}\r\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/dex-v2/synths/SynthFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/dex-v2/synths/SynthFactory.sol",
    "exportedSymbols": {
      "Context": [
        3760
      ],
      "ERC20": [
        891
      ],
      "IERC20": [
        969
      ],
      "IERC20Extended": [
        20391
      ],
      "IERC20Metadata": [
        1900
      ],
      "ISynth": [
        19877
      ],
      "ISynthFactory": [
        19901
      ],
      "Ownable": [
        112
      ],
      "ProtocolConstants": [
        21440
      ],
      "Synth": [
        10789
      ],
      "SynthFactory": [
        10876
      ]
    },
    "id": 10877,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10791,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:37"
      },
      {
        "absolutePath": "project:/contracts/dex-v2/synths/Synth.sol",
        "file": "./Synth.sol",
        "id": 10792,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10877,
        "sourceUnit": 10790,
        "src": "68:21:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/dex-v2/synth/ISynthFactory.sol",
        "file": "../../interfaces/dex-v2/synth/ISynthFactory.sol",
        "id": 10793,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10877,
        "sourceUnit": 19902,
        "src": "93:57:37",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10794,
              "name": "ISynthFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19901,
              "src": "179:13:37"
            },
            "id": 10795,
            "nodeType": "InheritanceSpecifier",
            "src": "179:13:37"
          },
          {
            "baseName": {
              "id": 10796,
              "name": "ProtocolConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21440,
              "src": "194:17:37"
            },
            "id": 10797,
            "nodeType": "InheritanceSpecifier",
            "src": "194:17:37"
          },
          {
            "baseName": {
              "id": 10798,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "213:7:37"
            },
            "id": 10799,
            "nodeType": "InheritanceSpecifier",
            "src": "213:7:37"
          }
        ],
        "canonicalName": "SynthFactory",
        "contractDependencies": [
          10789
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10876,
        "linearizedBaseContracts": [
          10876,
          112,
          3760,
          21440,
          19901
        ],
        "name": "SynthFactory",
        "nameLocation": "163:12:37",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "baseFunctions": [
              19891
            ],
            "constant": false,
            "functionSelector": "9f087dd6",
            "id": 10806,
            "mutability": "mutable",
            "name": "synths",
            "nameLocation": "270:6:37",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 10805,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "261:8:37"
            },
            "scope": 10876,
            "src": "228:48:37",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_ISynth_$19877_$",
              "typeString": "mapping(contract IERC20 => contract ISynth)"
            },
            "typeName": {
              "id": 10804,
              "keyType": {
                "id": 10801,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10800,
                  "name": "IERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 969,
                  "src": "236:6:37"
                },
                "referencedDeclaration": 969,
                "src": "236:6:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IERC20_$969",
                  "typeString": "contract IERC20"
                }
              },
              "nodeType": "Mapping",
              "src": "228:25:37",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_ISynth_$19877_$",
                "typeString": "mapping(contract IERC20 => contract ISynth)"
              },
              "valueType": {
                "id": 10803,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 10802,
                  "name": "ISynth",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19877,
                  "src": "246:6:37"
                },
                "referencedDeclaration": 19877,
                "src": "246:6:37",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_ISynth_$19877",
                  "typeString": "contract ISynth"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10822,
              "nodeType": "Block",
              "src": "312:169:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10812,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10808,
                          "src": "345:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 10813,
                          "name": "_ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21375,
                          "src": "354:13:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "345:22:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e7468466163746f72793a3a636f6e7374727563746f723a204d6973636f6e66696775726174696f6e",
                        "id": 10815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "382:45:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b296d051205eb0c3b5def13fbe5aaa2eab8a323bc506ee891e6182a8fd06492c",
                          "typeString": "literal_string \"SynthFactory::constructor: Misconfiguration\""
                        },
                        "value": "SynthFactory::constructor: Misconfiguration"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b296d051205eb0c3b5def13fbe5aaa2eab8a323bc506ee891e6182a8fd06492c",
                          "typeString": "literal_string \"SynthFactory::constructor: Misconfiguration\""
                        }
                      ],
                      "id": 10811,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "323:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "323:115:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10817,
                  "nodeType": "ExpressionStatement",
                  "src": "323:115:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10819,
                        "name": "_pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10808,
                        "src": "467:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10818,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "449:17:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "449:24:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10821,
                  "nodeType": "ExpressionStatement",
                  "src": "449:24:37"
                }
              ]
            },
            "id": 10823,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10808,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "305:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10823,
                  "src": "297:13:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10807,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:37",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:15:37"
            },
            "returnParameters": {
              "id": 10810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "312:0:37"
            },
            "scope": 10876,
            "src": "285:196:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19900
            ],
            "body": {
              "id": 10874,
              "nodeType": "Block",
              "src": "618:312:37",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_ISynth_$19877",
                          "typeString": "contract ISynth"
                        },
                        "id": 10844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 10836,
                            "name": "synths",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10806,
                            "src": "651:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_ISynth_$19877_$",
                              "typeString": "mapping(contract IERC20 => contract ISynth)"
                            }
                          },
                          "id": 10840,
                          "indexExpression": {
                            "arguments": [
                              {
                                "id": 10838,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10826,
                                "src": "665:5:37",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                                  "typeString": "contract IERC20Extended"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                                  "typeString": "contract IERC20Extended"
                                }
                              ],
                              "id": 10837,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "658:6:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 10839,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "658:13:37",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "651:21:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISynth_$19877",
                            "typeString": "contract ISynth"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10842,
                              "name": "_ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21375,
                              "src": "683:13:37",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10841,
                            "name": "ISynth",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19877,
                            "src": "676:6:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ISynth_$19877_$",
                              "typeString": "type(contract ISynth)"
                            }
                          },
                          "id": 10843,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "676:21:37",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISynth_$19877",
                            "typeString": "contract ISynth"
                          }
                        },
                        "src": "651:46:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53796e7468466163746f72793a3a63726561746553796e74683a20416c72656164792043726561746564",
                        "id": 10845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "712:44:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3fe652b19e1f3b0e431a9a5ebb42dfac096c8cbf60c6d99c2be0b75198ddb721",
                          "typeString": "literal_string \"SynthFactory::createSynth: Already Created\""
                        },
                        "value": "SynthFactory::createSynth: Already Created"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3fe652b19e1f3b0e431a9a5ebb42dfac096c8cbf60c6d99c2be0b75198ddb721",
                          "typeString": "literal_string \"SynthFactory::createSynth: Already Created\""
                        }
                      ],
                      "id": 10835,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "629:7:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "629:138:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10847,
                  "nodeType": "ExpressionStatement",
                  "src": "629:138:37"
                },
                {
                  "assignments": [
                    10850
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10850,
                      "mutability": "mutable",
                      "name": "synth",
                      "nameLocation": "786:5:37",
                      "nodeType": "VariableDeclaration",
                      "scope": 10874,
                      "src": "780:11:37",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Synth_$10789",
                        "typeString": "contract Synth"
                      },
                      "typeName": {
                        "id": 10849,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10848,
                          "name": "Synth",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10789,
                          "src": "780:5:37"
                        },
                        "referencedDeclaration": 10789,
                        "src": "780:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Synth_$10789",
                          "typeString": "contract Synth"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10856,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10854,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10826,
                        "src": "804:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                          "typeString": "contract IERC20Extended"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                          "typeString": "contract IERC20Extended"
                        }
                      ],
                      "id": 10853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "794:9:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_IERC20Extended_$20391_$returns$_t_contract$_Synth_$10789_$",
                        "typeString": "function (contract IERC20Extended) returns (contract Synth)"
                      },
                      "typeName": {
                        "id": 10852,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10851,
                          "name": "Synth",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 10789,
                          "src": "798:5:37"
                        },
                        "referencedDeclaration": 10789,
                        "src": "798:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Synth_$10789",
                          "typeString": "contract Synth"
                        }
                      }
                    },
                    "id": 10855,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "794:16:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Synth_$10789",
                      "typeString": "contract Synth"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "780:30:37"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 10860,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40,
                          "src": "847:5:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 10861,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "847:7:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10857,
                        "name": "synth",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10850,
                        "src": "823:5:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Synth_$10789",
                          "typeString": "contract Synth"
                        }
                      },
                      "id": 10859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnership",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 91,
                      "src": "823:23:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 10862,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "823:32:37",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10863,
                  "nodeType": "ExpressionStatement",
                  "src": "823:32:37"
                },
                {
                  "expression": {
                    "id": 10870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10864,
                        "name": "synths",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10806,
                        "src": "868:6:37",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IERC20_$969_$_t_contract$_ISynth_$19877_$",
                          "typeString": "mapping(contract IERC20 => contract ISynth)"
                        }
                      },
                      "id": 10868,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 10866,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10826,
                            "src": "882:5:37",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                              "typeString": "contract IERC20Extended"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                              "typeString": "contract IERC20Extended"
                            }
                          ],
                          "id": 10865,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 969,
                          "src": "875:6:37",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 10867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "875:13:37",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "868:21:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISynth_$19877",
                        "typeString": "contract ISynth"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10869,
                      "name": "synth",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10850,
                      "src": "892:5:37",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Synth_$10789",
                        "typeString": "contract Synth"
                      }
                    },
                    "src": "868:29:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISynth_$19877",
                      "typeString": "contract ISynth"
                    }
                  },
                  "id": 10871,
                  "nodeType": "ExpressionStatement",
                  "src": "868:29:37"
                },
                {
                  "expression": {
                    "id": 10872,
                    "name": "synth",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10850,
                    "src": "917:5:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Synth_$10789",
                      "typeString": "contract Synth"
                    }
                  },
                  "functionReturnParameters": 10834,
                  "id": 10873,
                  "nodeType": "Return",
                  "src": "910:12:37"
                }
              ]
            },
            "functionSelector": "cf62480d",
            "id": 10875,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10830,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10829,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "577:9:37"
                },
                "nodeType": "ModifierInvocation",
                "src": "577:9:37"
              }
            ],
            "name": "createSynth",
            "nameLocation": "498:11:37",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10828,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "559:8:37"
            },
            "parameters": {
              "id": 10827,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10826,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "525:5:37",
                  "nodeType": "VariableDeclaration",
                  "scope": 10875,
                  "src": "510:20:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                    "typeString": "contract IERC20Extended"
                  },
                  "typeName": {
                    "id": 10825,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10824,
                      "name": "IERC20Extended",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20391,
                      "src": "510:14:37"
                    },
                    "referencedDeclaration": 20391,
                    "src": "510:14:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                      "typeString": "contract IERC20Extended"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:22:37"
            },
            "returnParameters": {
              "id": 10834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10875,
                  "src": "605:6:37",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISynth_$19877",
                    "typeString": "contract ISynth"
                  },
                  "typeName": {
                    "id": 10832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10831,
                      "name": "ISynth",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19877,
                      "src": "605:6:37"
                    },
                    "referencedDeclaration": 19877,
                    "src": "605:6:37",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISynth_$19877",
                      "typeString": "contract ISynth"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "604:8:37"
            },
            "scope": 10876,
            "src": "489:441:37",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10877,
        "src": "154:779:37",
        "usedErrors": []
      }
    ],
    "src": "41:894:37"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.031Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}