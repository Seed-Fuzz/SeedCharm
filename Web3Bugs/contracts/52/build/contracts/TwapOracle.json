{
  "contractName": "TwapOracle",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "vaderPool",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "updatePeriod",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "USDV",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "VADER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "pairExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        }
      ],
      "name": "consult",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usdvAmount",
          "type": "uint256"
        }
      ],
      "name": "usdvtoVader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "vaderAmount",
          "type": "uint256"
        }
      ],
      "name": "vaderToUsdv",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdv",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_vader",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "enableUSDV",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "aggregator",
          "type": "address"
        }
      ],
      "name": "registerAggregator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "factory",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "registerPair",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "update",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"vaderPool\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"updatePeriod\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"USDV\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"VADER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"consult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableUSDV\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdv\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_vader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"pairExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"aggregator\",\"type\":\"address\"}],\"name\":\"registerAggregator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"registerPair\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"update\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdvAmount\",\"type\":\"uint256\"}],\"name\":\"usdvtoVader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"vaderAmount\",\"type\":\"uint256\"}],\"name\":\"vaderToUsdv\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Constructs a new TWAP oracle with a VADER pool and update period.\",\"params\":{\"updatePeriod\":\"The required period of time between each oracle update.\",\"vaderPool\":\"The VADER pool address.\"}},\"consult(address)\":{\"details\":\"Performs a consultation to retrieve the equivalent to {amountIn} for the supplied {token} address. The {token} address must have a registered pairing, otherwise the transaction will revert.\",\"params\":{\"token\":\"The token address to consult the equivalent {amountIn} for.\"}},\"enableUSDV()\":{\"details\":\"Enables utilization of USDV.\"},\"getRate()\":{\"details\":\"Gets the exchange rate for the Vader to USDV.\"},\"initialize(address,address)\":{\"details\":\"Initializes the variables for VADER and USDV.\",\"params\":{\"_usdv\":\"The USDV token address.\",\"_vader\":\"The VADER token address.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pairExists(address,address)\":{\"details\":\"Checks if a pair exists for the supplied {token0} and {token1} addresses.\",\"params\":{\"token0\":\"The primary token address, either VADER or USDV.\",\"token1\":\"The asset token address, paired to either VADER or USDV.\"}},\"registerAggregator(address,address)\":{\"details\":\"Registers a chainlink {aggregator} for the supplied {asset} address.\",\"params\":{\"aggregator\":\"The address of the chainlink aggregator.\",\"asset\":\"The address of the native asset.\"}},\"registerPair(address,address,address)\":{\"details\":\"Registers either a VADER or USDV pairing in the TWAP oracle.\",\"params\":{\"factory\":\"The factory address, if any.\",\"token0\":\"The primary token address, either VADER or USDV.\",\"token1\":\"The asset token address, paired to VADER or USDV.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"update()\":{\"details\":\"Updates the average prices for all token pairs registered in the TWAP oracle.\"},\"usdvtoVader(uint256)\":{\"details\":\"Gets the VADER amount from the supplied USDV amount.\",\"params\":{\"usdvAmount\":\"The amount in USDV.\"}},\"vaderToUsdv(uint256)\":{\"details\":\"Gets the USDV amount from the supplied VADER amount.\",\"params\":{\"vaderAmount\":\"The amount in VADER.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/twap/TwapOracle.sol\":\"TwapOracle\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x58b21219689909c4f8339af00813760337f7e2e7f169a97fe49e2896dcfb3b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8e012e946dec20e59f2d4446f4b44bb098f3fa8bac103b1b5112fff777447b\",\"dweb:/ipfs/QmVTooKWcLkJ9W68yNX4MgdrbAKiAXwuRN9A7f4NkdcdtQ\"]},\"project:/contracts/external/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x533261510414ff2b0ead90c32001a277e26bc4f5eb19c95b8b47e32be0b9aad7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28e428a666203d630b65ff58cfe6834c8f1d4552382812bd351cdb9b45ab2d46\",\"dweb:/ipfs/QmeKKVMoidNENnfSK5JExWJderSY6AS4H1ei9Zb5F1wXK1\"]},\"project:/contracts/external/interfaces/IUniswapV2ERC20.sol\":{\"keccak256\":\"0x947a64db0a81787f383a1d72a45f5914a44efd9287fa4990f6f6b1e26f9bd266\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ce1a6e5bcda63d9223b89bd3c101fdd7252085e809afd24a146a06db726b2be6\",\"dweb:/ipfs/QmcPbXXeqXs3ywEPnoEKtJnVftPmif43XArLqSanHY1yfd\"]},\"project:/contracts/external/interfaces/IUniswapV2Factory.sol\":{\"keccak256\":\"0x67505b5fe7ac3f267511738e8021420dda8632ba3dd444ff4e39ece3201b420b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://2c1edf298e3a83b7292b55ebe962ac876a54548bdbcea56ccec2193f2e96c879\",\"dweb:/ipfs/QmXo6EYXh7kHiYMWfauTvo7QAkJTRrwugtbCHc1zXhptdw\"]},\"project:/contracts/external/interfaces/IUniswapV2Pair.sol\":{\"keccak256\":\"0x343236598429a1076843cca4655abf04200d1827e2e257e47313086dc6019c21\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://1d8c47d87df7626527d734a15d27a72666f754cd2e11b0f800c4b9dd1e22c106\",\"dweb:/ipfs/QmZEdTRx2r2ybRYnPepTjiteNkfbp4SWPWGAgKijh17i3E\"]},\"project:/contracts/external/libraries/Babylonian.sol\":{\"keccak256\":\"0x43e29879aa9d87742f02a6777892712fb0d7151250b4db2718b5ae2e6d876499\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://b0a0686e9697d74a4b2facf261bf05fa9b7b39dcc86f325d0f9a8dca2f37b316\",\"dweb:/ipfs/QmTFUUzn3WV8eWBxyBLRfHDXP7JdiSkF7HXNCpXsomqbLM\"]},\"project:/contracts/external/libraries/BitMath.sol\":{\"keccak256\":\"0xe802484c48f734f702cfe189b5496b4d6d4606e559df719ef44ca726df5ab50b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://e9720eef85cb94844420ce9e351ebe8166e7ce14e1b03ec573b721d70610a894\",\"dweb:/ipfs/QmaNNNuxv4PZZh9sKPieYGRUGwAqC5NuBQwViF3QU5P66f\"]},\"project:/contracts/external/libraries/FixedPoint.sol\":{\"keccak256\":\"0x8786d02eec8cd0d784ba6cb2b9e9567ec907019c978e58497f85193e6c71dfb4\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://d856853d03356af7e4e12dbafb5dbf9741070c854be3881b1b496ec7f729186c\",\"dweb:/ipfs/QmNWsoAhwBR8xCgMbX4yrs9JTKQkiAUdBWoCjugYH8xyB2\"]},\"project:/contracts/external/libraries/FullMath.sol\":{\"keccak256\":\"0xdb39b65e331f7b976a265a09a8a78ee40b2f97537da37b2e74ab4b2cae5a2a3b\",\"license\":\"CC-BY-4.0\",\"urls\":[\"bzz-raw://a76ab194637ce556b9335860defaf0c725a455f3b10c894eedd347671c041b75\",\"dweb:/ipfs/QmaFe4nkrK3778yTap7wjxY5CKMQRXqruCQAz54fPF3qVg\"]},\"project:/contracts/external/libraries/UniswapV2Library.sol\":{\"keccak256\":\"0x81059ce7f2119379ee0600d530557a842668d92208cd7e2e23c9fad284ca4b26\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://57ccd9880c025e787ae36b0250be7d3cb1d886cdde5a5debb297af4e1e18742c\",\"dweb:/ipfs/QmY2TYvD3o5yCSNuFnKaQEeJ3kPNryWgVAuAwDsbcqWUpx\"]},\"project:/contracts/external/libraries/UniswapV2OracleLibrary.sol\":{\"keccak256\":\"0x0e91620fbcaf57a4f60eaad0e1dfcf1378f2c45e3e6956e47aad9c79f4f28b0e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://64a7cac0876f6fe333ad60545b7e5a183122c1a440e7fad13fd247742f7aa695\",\"dweb:/ipfs/QmVUSQJ1JYB1gyUgNhfgUktKZ6TpHE3efURMZknxAwfKqx\"]},\"project:/contracts/interfaces/dex-v2/pool/IBasePoolV2.sol\":{\"keccak256\":\"0xaf563d0e1d9be9e944f704fc466b0c2b695c1f2c51d1749fba58cd5b62447be9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8e72d4c8ddefabe5011871258ce550d86d63aac705c60f96d0f2503ee7128839\",\"dweb:/ipfs/QmbPyhb2xahGkzCh7PWWtgDNo85RwjUYJaiTbNNQzP3nfH\"]},\"project:/contracts/interfaces/dex-v2/pool/IVaderPoolV2.sol\":{\"keccak256\":\"0xbcf9ce93c5d47084e35e5bfec9c6322b65ca3f5f308c63dda834e4679565ecda\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4758bbbf5307517d029b4025939066f77966240f44ac2482274cb32397341b44\",\"dweb:/ipfs/QmNWLeZYSqvzgsHRMG1XYZKHdMrpXgof5KDLQzKnXrwNng\"]},\"project:/contracts/twap/TwapOracle.sol\":{\"keccak256\":\"0x02bffbaa9bed09a46197aa324f18a5014dd1c71005c1329c67e5d5b6bcc092da\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://6d7c44106f76a106ec63af7b727dad1266e15735681677ab7136175a04e1947b\",\"dweb:/ipfs/QmR6N1kY9JLEy6RJ9oZuJRUjMPAYn9pfNSi4o6QzU7RG1i\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620021ec380380620021ec8339810160408190526200003491620000b9565b6200003f3362000069565b600480546001600160a01b0319166001600160a01b039390931692909217909155600555620000f5565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060408385031215620000cd57600080fd5b82516001600160a01b0381168114620000e557600080fd5b6020939093015192949293505050565b6120e780620001056000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063837e788511610097578063bfbd029711610066578063bfbd0297146101e5578063c2ace4f2146101f8578063e2c3b04614610200578063f2fde38b1461021357600080fd5b8063837e7885146101a65780638da5cb5b146101b957806397916dbe146101ca578063a2e62045146101dd57600080fd5b806366a7bc4b116100d357806366a7bc4b14610160578063679aefce14610183578063715018a61461018b57806378906a141461019357600080fd5b806301681315146100fa578063283583c61461012a578063485cc9551461014b575b600080fd5b60015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004611cbc565b610226565b604051908152602001610121565b61015e610159366004611cd9565b6105f2565b005b61017361016e366004611cd9565b61074c565b6040519015158152602001610121565b61013d6107de565b61015e610826565b61013d6101a1366004611d12565b61083a565b61015e6101b4366004611cd9565b61084e565b6000546001600160a01b031661010d565b61013d6101d8366004611d12565b610a4c565b61015e610a93565b61015e6101f3366004611d2b565b610d26565b61015e6114dd565b60025461010d906001600160a01b031681565b61015e610221366004611cbc565b6114fa565b6006546000908180805b838110156104ff5760006006828154811061024d5761024d611d76565b60009182526020918290206040805161010081018252600890930290910180546001600160a01b0390811684526001820154811684860190815260028301548216858501526003830154606086015260048301546080860152600583015463ffffffff1660a08601528351808701855260068401546001600160e01b03908116825260c08701919091528451968701909452600790920154909216845260e08301939093529151909250888216911614156104ec5760e081015161031d90610316906001611573565b5160701c90565b610330906001600160901b031685611da2565b60e0820151519094506001600160e01b031615610351578361035157600080fd5b6040808201516001600160a01b0390811660009081526003602052828120548351633fabe5a360e21b8152935191938493849392169163feaf968c9160048082019260a092909190829003018186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611dd9565b94505050925092508269ffffffffffffffffffff168169ffffffffffffffffffff16101561046d5760405162461bcd60e51b815260206004820152602a60248201527f547761704f7261636c653a3a636f6e73756c743a207374616c6520636861696e6044820152696c696e6b20707269636560b01b60648201526084015b60405180910390fd5b816104cd5760405162461bcd60e51b815260206004820152602a60248201527f547761704f7261636c653a3a636f6e73756c743a20636861696e6c696e6b206d60448201526930b6333ab731ba34b7b760b11b6064820152608401610464565b6104dc826402540be400611e29565b6104e69087611da2565b95505050505b50806104f781611e48565b915050610230565b50816105605760405162461bcd60e51b815260206004820152602a60248201527f547761704f7261636c653a3a636f6e73756c743a2053756d206f66206e6174696044820152697665206973207a65726f60b01b6064820152608401610464565b81856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190611e63565b6105df9060ff1683611e29565b6105e99190611e9c565b95945050505050565b6105fa611611565b6001546001600160a01b0316156106655760405162461bcd60e51b815260206004820152602960248201527f547761704f7261636c653a3a696e697469616c697a653a20566164657220616c6044820152681c9958591e481cd95d60ba1b6064820152608401610464565b6002546001600160a01b0316156106cf5760405162461bcd60e51b815260206004820152602860248201527f547761704f7261636c653a3a696e697469616c697a653a205553445620616c726044820152671958591e481cd95d60c21b6064820152608401610464565b6001600160a01b0382166106f55760405162461bcd60e51b815260040161046490611eb0565b6001600160a01b03811661071b5760405162461bcd60e51b815260040161046490611eb0565b600180546001600160a01b039283166001600160a01b03199182161790915560028054939092169216919091179055565b6000808383604051602001610762929190611f05565b6040516020818303038152906040528051906020012090506000838560405160200161078f929190611f05565b60408051601f1981840301815291815281516020928301206000858152600790935291205490915060ff16806107d3575060008181526007602052604090205460ff165b925050505b92915050565b60025460009081906107f8906001600160a01b0316610226565b600154909150600090610813906001600160a01b0316610226565b905061081f8183611e9c565b9250505090565b61082e611611565b610838600061166b565b565b60006108446107de565b6107d89083611e29565b610856611611565b6001546001600160a01b03161580159061087a57506002546001600160a01b031615155b6108965760405162461bcd60e51b815260040161046490611f2c565b6001600160a01b0382166109125760405162461bcd60e51b815260206004820152603b60248201527f547761704f7261636c653a3a726567697374657241676772656761746f723a2060448201527f6173736574207a65726f20616464726573732070726f766964656400000000006064820152608401610464565b6001600160a01b038116610990576040805162461bcd60e51b81526020600482015260248101919091527f547761704f7261636c653a3a726567697374657241676772656761746f723a2060448201527f61676772656761746f72207a65726f20616464726573732070726f76696465646064820152608401610464565b6001600160a01b038281166000908152600360205260409020541615610a1e5760405162461bcd60e51b815260206004820152603960248201527f547761704f7261636c653a3a726567697374657241676772656761746f723a2060448201527f61676772656761746f7220616c726561647920657869737473000000000000006064820152608401610464565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b600254600090600160a01b900460ff16610a81576001548290610a77906001600160a01b0316610226565b6107d89190611e29565b610a896107de565b6107d89083611e9c565b610a9b611611565b6001546001600160a01b031615801590610abf57506002546001600160a01b031615155b610adb5760405162461bcd60e51b815260040161046490611f2c565b60065460005b81811015610d2257600060068281548110610afe57610afe611d76565b60009182526020822060018054600890930290910190810154909350829182916001600160a01b03908116911614610bb8576004805460028601546040516309cbfe4960e31b81526001600160a01b03918216938101939093521690634e5ff2489060240160606040518083038186803b158015610b7b57600080fd5b505afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190611f88565b610bcc565b8354610bcc906001600160a01b03166116bb565b6005808801549054939650919450925063ffffffff9081168303919082161015610c475760405162461bcd60e51b815260206004820152602660248201527f547761704f7261636c653a3a7570646174653a20506572696f64206e6f7420656044820152651b185c1cd95960d21b6064820152608401610464565b60405180602001604052808263ffffffff168760030154870381610c6d57610c6d611e86565b046001600160e01b0390811690915290516006870180546001600160e01b0319169190921617905560408051602081019091526004860154819063ffffffff841690860381610cbe57610cbe611e86565b046001600160e01b0390811690915290516007870180546001600160e01b0319169190921617905550600384019290925560048301556005909101805463ffffffff191663ffffffff90921691909117905580610d1a81611e48565b915050610ae1565b5050565b610d2e611611565b6001546001600160a01b031615801590610d5257506002546001600160a01b031615155b610d6e5760405162461bcd60e51b815260040161046490611f2c565b6001546001600160a01b0383811691161480610d9757506002546001600160a01b038381169116145b610dfc5760405162461bcd60e51b815260206004820152603060248201527f547761704f7261636c653a3a7265676973746572506169723a20496e76616c6960448201526f6420746f6b656e30206164647265737360801b6064820152608401610464565b806001600160a01b0316826001600160a01b03161415610e735760405162461bcd60e51b815260206004820152602c60248201527f547761704f7261636c653a3a7265676973746572506169723a2053616d65207460448201526b6f6b656e206164647265737360a01b6064820152608401610464565b610e7d828261074c565b15610ed85760405162461bcd60e51b815260206004820152602560248201527f547761704f7261636c653a3a7265676973746572506169723a20506169722065604482015264786973747360d81b6064820152608401610464565b600154600090819081908190819081906001600160a01b03898116911614156110ea5760405163e6a4390560e01b81526001600160a01b0389811660048301528881166024830152600091908b169063e6a439059060440160206040518083038186803b158015610f4857600080fd5b505afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f809190611fbd565b9050809650806001600160a01b0316635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b158015610fbe57600080fd5b505afa158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff69190611fda565b9550806001600160a01b0316635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b15801561103157600080fd5b505afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110699190611fda565b9450806001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156110a457600080fd5b505afa1580156110b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dc919061200a565b919550935091506111f99050565b600480546040516309cbfe4960e31b81526001600160a01b038a811693820193909352911696508690634e5ff2489060240160606040518083038186803b15801561113457600080fd5b505afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c9190611f88565b5060048054604051630fa6707960e21b81526001600160a01b038c8116938201939093529398509196501690633e99c1e49060240160606040518083038186803b1580156111b957600080fd5b505afa1580156111cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f1919061200a565b919450925090505b6001600160701b0383161580159061121957506001600160701b03821615155b6112735760405162461bcd60e51b815260206004820152602560248201527f547761704f7261636c653a3a7265676973746572506169723a204e6f20726573604482015264657276657360d81b6064820152608401610464565b6001600760008a8a60405160200161128c929190611f05565b60408051808303601f1901815291815281516020928301208352828201939093529082016000908120805460ff1916941515949094179093558151610100810183526001600160a01b03998a1681529a89168b82019081529989168b830190815260608c0198895260808c0197885263ffffffff94851660a08d019081528351808401855285815260c08e01908152845193840190945284835260e08d019283526006805460018101825595529b517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600890950294850180546001600160a01b0319908116928d169290921790559a517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40850180548d16918c16919091179055517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184018054909b1699169890981790985594517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4286015592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d43850155505093517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d448201805463ffffffff191691909516179093559051517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d45830180546001600160e01b03199081166001600160e01b03938416179091559151517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d469093018054909216921691909117905550565b6114e5611611565b6002805460ff60a01b1916600160a01b179055565b611502611611565b6001600160a01b0381166115675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610464565b6115708161166b565b50565b60408051602081019091526000815260008215806115b0575083516001600160e01b0316836115a28183611e29565b92506115ae9083611e9c565b145b6115fc5760405162461bcd60e51b815260206004820152601960248201527f4669786564506f696e743a3a6d756c3a206f766572666c6f77000000000000006044820152606401610464565b60408051602081019091529081529392505050565b6000546001600160a01b031633146108385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610464565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006116c86118df565b9050836001600160a01b0316635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b15801561170357600080fd5b505afa158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b9190611fda565b9250836001600160a01b0316635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b15801561177657600080fd5b505afa15801561178a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ae9190611fda565b91506000806000866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156117ee57600080fd5b505afa158015611802573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611826919061200a565b9250925092508363ffffffff168163ffffffff16146118d557600061184b8286612044565b90508063ffffffff16611870846001600160701b0316866001600160701b03166118f5565b5161188491906001600160e01b0316611e29565b61188e9088611da2565b96508063ffffffff166118b3856001600160701b0316856001600160701b03166118f5565b516118c791906001600160e01b0316611e29565b6118d19087611da2565b9550505b5050509193909250565b60006118f064010000000042612069565b905090565b604080516020810190915260008152600082116119635760405162461bcd60e51b815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201526579207a65726f60d01b6064820152608401610464565b8261197d57506040805160208101909152600081526107d8565b6001600160901b038311611a1457600061199b83607086901b611e9c565b90506001600160e01b038111156119f45760405162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f7700006044820152606401610464565b6040518060200160405280826001600160e01b03168152509150506107d8565b600061199b84600160701b856000806000611a2f8686611aea565b9150915060008480611a4357611a43611e86565b868809905082811115611a5e57611a5b60018361207d565b91505b611a68818461207d565b925081611a8357611a798584611e9c565b9350505050611ae3565b848210611ad25760405162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a2046554c4c4449565f4f564552464c4f570000000000006044820152606401610464565b611add838387611b2c565b93505050505b9392505050565b600080806000198486099050611b008486611e29565b9250611b0c838261207d565b915082811015611b2457611b2160018361207d565b91505b509250929050565b600080611b3883612094565b83169050611b468184611e9c565b9250611b528186611e9c565b945080611b5e81612094565b611b689190611e9c565b611b73906001611da2565b611b7d9085611e29565b611b879086611da2565b94506001611b958185611e29565b611ba090600261207d565b611baa9082611e29565b9050611bb68185611e29565b611bc190600261207d565b611bcb9082611e29565b9050611bd78185611e29565b611be290600261207d565b611bec9082611e29565b9050611bf88185611e29565b611c0390600261207d565b611c0d9082611e29565b9050611c198185611e29565b611c2490600261207d565b611c2e9082611e29565b9050611c3a8185611e29565b611c4590600261207d565b611c4f9082611e29565b9050611c5b8185611e29565b611c6690600261207d565b611c709082611e29565b9050611c7c8185611e29565b611c8790600261207d565b611c919082611e29565b9050611c9d8187611e29565b9695505050505050565b6001600160a01b038116811461157057600080fd5b600060208284031215611cce57600080fd5b8135611ae381611ca7565b60008060408385031215611cec57600080fd5b8235611cf781611ca7565b91506020830135611d0781611ca7565b809150509250929050565b600060208284031215611d2457600080fd5b5035919050565b600080600060608486031215611d4057600080fd5b8335611d4b81611ca7565b92506020840135611d5b81611ca7565b91506040840135611d6b81611ca7565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611db557611db5611d8c565b500190565b805169ffffffffffffffffffff81168114611dd457600080fd5b919050565b600080600080600060a08688031215611df157600080fd5b611dfa86611dba565b9450602086015193506040860151925060608601519150611e1d60808701611dba565b90509295509295909350565b6000816000190483118215151615611e4357611e43611d8c565b500290565b6000600019821415611e5c57611e5c611d8c565b5060010190565b600060208284031215611e7557600080fd5b815160ff81168114611ae357600080fd5b634e487b7160e01b600052601260045260246000fd5b600082611eab57611eab611e86565b500490565b60208082526035908201527f547761704f7261636c653a3a696e697469616c697a653a2063616e206e6f742060408201527473657420746f2061207a65726f206164647265737360581b606082015260800190565b6bffffffffffffffffffffffff19606093841b811682529190921b16601482015260280190565b60208082526028908201527f547761704f7261636c653a3a696e697469616c697a65643a206e6f7420696e696040820152671d1a585b1a5e995960c21b606082015260800190565b805163ffffffff81168114611dd457600080fd5b600080600060608486031215611f9d57600080fd5b8351925060208401519150611fb460408501611f74565b90509250925092565b600060208284031215611fcf57600080fd5b8151611ae381611ca7565b600060208284031215611fec57600080fd5b5051919050565b80516001600160701b0381168114611dd457600080fd5b60008060006060848603121561201f57600080fd5b61202884611ff3565b925061203660208501611ff3565b9150611fb460408501611f74565b600063ffffffff8381169083168181101561206157612061611d8c565b039392505050565b60008261207857612078611e86565b500690565b60008282101561208f5761208f611d8c565b500390565b6000600160ff1b8214156120aa576120aa611d8c565b506000039056fea2646970667358221220d58880a2fb9bab2c51d457ee099a4ca1134c9fe20180b8a028367f7ea7acbac364736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100f55760003560e01c8063837e788511610097578063bfbd029711610066578063bfbd0297146101e5578063c2ace4f2146101f8578063e2c3b04614610200578063f2fde38b1461021357600080fd5b8063837e7885146101a65780638da5cb5b146101b957806397916dbe146101ca578063a2e62045146101dd57600080fd5b806366a7bc4b116100d357806366a7bc4b14610160578063679aefce14610183578063715018a61461018b57806378906a141461019357600080fd5b806301681315146100fa578063283583c61461012a578063485cc9551461014b575b600080fd5b60015461010d906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61013d610138366004611cbc565b610226565b604051908152602001610121565b61015e610159366004611cd9565b6105f2565b005b61017361016e366004611cd9565b61074c565b6040519015158152602001610121565b61013d6107de565b61015e610826565b61013d6101a1366004611d12565b61083a565b61015e6101b4366004611cd9565b61084e565b6000546001600160a01b031661010d565b61013d6101d8366004611d12565b610a4c565b61015e610a93565b61015e6101f3366004611d2b565b610d26565b61015e6114dd565b60025461010d906001600160a01b031681565b61015e610221366004611cbc565b6114fa565b6006546000908180805b838110156104ff5760006006828154811061024d5761024d611d76565b60009182526020918290206040805161010081018252600890930290910180546001600160a01b0390811684526001820154811684860190815260028301548216858501526003830154606086015260048301546080860152600583015463ffffffff1660a08601528351808701855260068401546001600160e01b03908116825260c08701919091528451968701909452600790920154909216845260e08301939093529151909250888216911614156104ec5760e081015161031d90610316906001611573565b5160701c90565b610330906001600160901b031685611da2565b60e0820151519094506001600160e01b031615610351578361035157600080fd5b6040808201516001600160a01b0390811660009081526003602052828120548351633fabe5a360e21b8152935191938493849392169163feaf968c9160048082019260a092909190829003018186803b1580156103ad57600080fd5b505afa1580156103c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e59190611dd9565b94505050925092508269ffffffffffffffffffff168169ffffffffffffffffffff16101561046d5760405162461bcd60e51b815260206004820152602a60248201527f547761704f7261636c653a3a636f6e73756c743a207374616c6520636861696e6044820152696c696e6b20707269636560b01b60648201526084015b60405180910390fd5b816104cd5760405162461bcd60e51b815260206004820152602a60248201527f547761704f7261636c653a3a636f6e73756c743a20636861696e6c696e6b206d60448201526930b6333ab731ba34b7b760b11b6064820152608401610464565b6104dc826402540be400611e29565b6104e69087611da2565b95505050505b50806104f781611e48565b915050610230565b50816105605760405162461bcd60e51b815260206004820152602a60248201527f547761704f7261636c653a3a636f6e73756c743a2053756d206f66206e6174696044820152697665206973207a65726f60b01b6064820152608401610464565b81856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561059a57600080fd5b505afa1580156105ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105d29190611e63565b6105df9060ff1683611e29565b6105e99190611e9c565b95945050505050565b6105fa611611565b6001546001600160a01b0316156106655760405162461bcd60e51b815260206004820152602960248201527f547761704f7261636c653a3a696e697469616c697a653a20566164657220616c6044820152681c9958591e481cd95d60ba1b6064820152608401610464565b6002546001600160a01b0316156106cf5760405162461bcd60e51b815260206004820152602860248201527f547761704f7261636c653a3a696e697469616c697a653a205553445620616c726044820152671958591e481cd95d60c21b6064820152608401610464565b6001600160a01b0382166106f55760405162461bcd60e51b815260040161046490611eb0565b6001600160a01b03811661071b5760405162461bcd60e51b815260040161046490611eb0565b600180546001600160a01b039283166001600160a01b03199182161790915560028054939092169216919091179055565b6000808383604051602001610762929190611f05565b6040516020818303038152906040528051906020012090506000838560405160200161078f929190611f05565b60408051601f1981840301815291815281516020928301206000858152600790935291205490915060ff16806107d3575060008181526007602052604090205460ff165b925050505b92915050565b60025460009081906107f8906001600160a01b0316610226565b600154909150600090610813906001600160a01b0316610226565b905061081f8183611e9c565b9250505090565b61082e611611565b610838600061166b565b565b60006108446107de565b6107d89083611e29565b610856611611565b6001546001600160a01b03161580159061087a57506002546001600160a01b031615155b6108965760405162461bcd60e51b815260040161046490611f2c565b6001600160a01b0382166109125760405162461bcd60e51b815260206004820152603b60248201527f547761704f7261636c653a3a726567697374657241676772656761746f723a2060448201527f6173736574207a65726f20616464726573732070726f766964656400000000006064820152608401610464565b6001600160a01b038116610990576040805162461bcd60e51b81526020600482015260248101919091527f547761704f7261636c653a3a726567697374657241676772656761746f723a2060448201527f61676772656761746f72207a65726f20616464726573732070726f76696465646064820152608401610464565b6001600160a01b038281166000908152600360205260409020541615610a1e5760405162461bcd60e51b815260206004820152603960248201527f547761704f7261636c653a3a726567697374657241676772656761746f723a2060448201527f61676772656761746f7220616c726561647920657869737473000000000000006064820152608401610464565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b600254600090600160a01b900460ff16610a81576001548290610a77906001600160a01b0316610226565b6107d89190611e29565b610a896107de565b6107d89083611e9c565b610a9b611611565b6001546001600160a01b031615801590610abf57506002546001600160a01b031615155b610adb5760405162461bcd60e51b815260040161046490611f2c565b60065460005b81811015610d2257600060068281548110610afe57610afe611d76565b60009182526020822060018054600890930290910190810154909350829182916001600160a01b03908116911614610bb8576004805460028601546040516309cbfe4960e31b81526001600160a01b03918216938101939093521690634e5ff2489060240160606040518083038186803b158015610b7b57600080fd5b505afa158015610b8f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bb39190611f88565b610bcc565b8354610bcc906001600160a01b03166116bb565b6005808801549054939650919450925063ffffffff9081168303919082161015610c475760405162461bcd60e51b815260206004820152602660248201527f547761704f7261636c653a3a7570646174653a20506572696f64206e6f7420656044820152651b185c1cd95960d21b6064820152608401610464565b60405180602001604052808263ffffffff168760030154870381610c6d57610c6d611e86565b046001600160e01b0390811690915290516006870180546001600160e01b0319169190921617905560408051602081019091526004860154819063ffffffff841690860381610cbe57610cbe611e86565b046001600160e01b0390811690915290516007870180546001600160e01b0319169190921617905550600384019290925560048301556005909101805463ffffffff191663ffffffff90921691909117905580610d1a81611e48565b915050610ae1565b5050565b610d2e611611565b6001546001600160a01b031615801590610d5257506002546001600160a01b031615155b610d6e5760405162461bcd60e51b815260040161046490611f2c565b6001546001600160a01b0383811691161480610d9757506002546001600160a01b038381169116145b610dfc5760405162461bcd60e51b815260206004820152603060248201527f547761704f7261636c653a3a7265676973746572506169723a20496e76616c6960448201526f6420746f6b656e30206164647265737360801b6064820152608401610464565b806001600160a01b0316826001600160a01b03161415610e735760405162461bcd60e51b815260206004820152602c60248201527f547761704f7261636c653a3a7265676973746572506169723a2053616d65207460448201526b6f6b656e206164647265737360a01b6064820152608401610464565b610e7d828261074c565b15610ed85760405162461bcd60e51b815260206004820152602560248201527f547761704f7261636c653a3a7265676973746572506169723a20506169722065604482015264786973747360d81b6064820152608401610464565b600154600090819081908190819081906001600160a01b03898116911614156110ea5760405163e6a4390560e01b81526001600160a01b0389811660048301528881166024830152600091908b169063e6a439059060440160206040518083038186803b158015610f4857600080fd5b505afa158015610f5c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f809190611fbd565b9050809650806001600160a01b0316635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b158015610fbe57600080fd5b505afa158015610fd2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ff69190611fda565b9550806001600160a01b0316635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b15801561103157600080fd5b505afa158015611045573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110699190611fda565b9450806001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156110a457600080fd5b505afa1580156110b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110dc919061200a565b919550935091506111f99050565b600480546040516309cbfe4960e31b81526001600160a01b038a811693820193909352911696508690634e5ff2489060240160606040518083038186803b15801561113457600080fd5b505afa158015611148573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061116c9190611f88565b5060048054604051630fa6707960e21b81526001600160a01b038c8116938201939093529398509196501690633e99c1e49060240160606040518083038186803b1580156111b957600080fd5b505afa1580156111cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f1919061200a565b919450925090505b6001600160701b0383161580159061121957506001600160701b03821615155b6112735760405162461bcd60e51b815260206004820152602560248201527f547761704f7261636c653a3a7265676973746572506169723a204e6f20726573604482015264657276657360d81b6064820152608401610464565b6001600760008a8a60405160200161128c929190611f05565b60408051808303601f1901815291815281516020928301208352828201939093529082016000908120805460ff1916941515949094179093558151610100810183526001600160a01b03998a1681529a89168b82019081529989168b830190815260608c0198895260808c0197885263ffffffff94851660a08d019081528351808401855285815260c08e01908152845193840190945284835260e08d019283526006805460018101825595529b517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f600890950294850180546001600160a01b0319908116928d169290921790559a517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d40850180548d16918c16919091179055517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4184018054909b1699169890981790985594517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d4286015592517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d43850155505093517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d448201805463ffffffff191691909516179093559051517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d45830180546001600160e01b03199081166001600160e01b03938416179091559151517ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d469093018054909216921691909117905550565b6114e5611611565b6002805460ff60a01b1916600160a01b179055565b611502611611565b6001600160a01b0381166115675760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610464565b6115708161166b565b50565b60408051602081019091526000815260008215806115b0575083516001600160e01b0316836115a28183611e29565b92506115ae9083611e9c565b145b6115fc5760405162461bcd60e51b815260206004820152601960248201527f4669786564506f696e743a3a6d756c3a206f766572666c6f77000000000000006044820152606401610464565b60408051602081019091529081529392505050565b6000546001600160a01b031633146108385760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610464565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008060006116c86118df565b9050836001600160a01b0316635909c0d56040518163ffffffff1660e01b815260040160206040518083038186803b15801561170357600080fd5b505afa158015611717573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173b9190611fda565b9250836001600160a01b0316635a3d54936040518163ffffffff1660e01b815260040160206040518083038186803b15801561177657600080fd5b505afa15801561178a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ae9190611fda565b91506000806000866001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b1580156117ee57600080fd5b505afa158015611802573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611826919061200a565b9250925092508363ffffffff168163ffffffff16146118d557600061184b8286612044565b90508063ffffffff16611870846001600160701b0316866001600160701b03166118f5565b5161188491906001600160e01b0316611e29565b61188e9088611da2565b96508063ffffffff166118b3856001600160701b0316856001600160701b03166118f5565b516118c791906001600160e01b0316611e29565b6118d19087611da2565b9550505b5050509193909250565b60006118f064010000000042612069565b905090565b604080516020810190915260008152600082116119635760405162461bcd60e51b815260206004820152602660248201527f4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e206260448201526579207a65726f60d01b6064820152608401610464565b8261197d57506040805160208101909152600081526107d8565b6001600160901b038311611a1457600061199b83607086901b611e9c565b90506001600160e01b038111156119f45760405162461bcd60e51b815260206004820152601e60248201527f4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f7700006044820152606401610464565b6040518060200160405280826001600160e01b03168152509150506107d8565b600061199b84600160701b856000806000611a2f8686611aea565b9150915060008480611a4357611a43611e86565b868809905082811115611a5e57611a5b60018361207d565b91505b611a68818461207d565b925081611a8357611a798584611e9c565b9350505050611ae3565b848210611ad25760405162461bcd60e51b815260206004820152601a60248201527f46756c6c4d6174683a2046554c4c4449565f4f564552464c4f570000000000006044820152606401610464565b611add838387611b2c565b93505050505b9392505050565b600080806000198486099050611b008486611e29565b9250611b0c838261207d565b915082811015611b2457611b2160018361207d565b91505b509250929050565b600080611b3883612094565b83169050611b468184611e9c565b9250611b528186611e9c565b945080611b5e81612094565b611b689190611e9c565b611b73906001611da2565b611b7d9085611e29565b611b879086611da2565b94506001611b958185611e29565b611ba090600261207d565b611baa9082611e29565b9050611bb68185611e29565b611bc190600261207d565b611bcb9082611e29565b9050611bd78185611e29565b611be290600261207d565b611bec9082611e29565b9050611bf88185611e29565b611c0390600261207d565b611c0d9082611e29565b9050611c198185611e29565b611c2490600261207d565b611c2e9082611e29565b9050611c3a8185611e29565b611c4590600261207d565b611c4f9082611e29565b9050611c5b8185611e29565b611c6690600261207d565b611c709082611e29565b9050611c7c8185611e29565b611c8790600261207d565b611c919082611e29565b9050611c9d8187611e29565b9695505050505050565b6001600160a01b038116811461157057600080fd5b600060208284031215611cce57600080fd5b8135611ae381611ca7565b60008060408385031215611cec57600080fd5b8235611cf781611ca7565b91506020830135611d0781611ca7565b809150509250929050565b600060208284031215611d2457600080fd5b5035919050565b600080600060608486031215611d4057600080fd5b8335611d4b81611ca7565b92506020840135611d5b81611ca7565b91506040840135611d6b81611ca7565b809150509250925092565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60008219821115611db557611db5611d8c565b500190565b805169ffffffffffffffffffff81168114611dd457600080fd5b919050565b600080600080600060a08688031215611df157600080fd5b611dfa86611dba565b9450602086015193506040860151925060608601519150611e1d60808701611dba565b90509295509295909350565b6000816000190483118215151615611e4357611e43611d8c565b500290565b6000600019821415611e5c57611e5c611d8c565b5060010190565b600060208284031215611e7557600080fd5b815160ff81168114611ae357600080fd5b634e487b7160e01b600052601260045260246000fd5b600082611eab57611eab611e86565b500490565b60208082526035908201527f547761704f7261636c653a3a696e697469616c697a653a2063616e206e6f742060408201527473657420746f2061207a65726f206164647265737360581b606082015260800190565b6bffffffffffffffffffffffff19606093841b811682529190921b16601482015260280190565b60208082526028908201527f547761704f7261636c653a3a696e697469616c697a65643a206e6f7420696e696040820152671d1a585b1a5e995960c21b606082015260800190565b805163ffffffff81168114611dd457600080fd5b600080600060608486031215611f9d57600080fd5b8351925060208401519150611fb460408501611f74565b90509250925092565b600060208284031215611fcf57600080fd5b8151611ae381611ca7565b600060208284031215611fec57600080fd5b5051919050565b80516001600160701b0381168114611dd457600080fd5b60008060006060848603121561201f57600080fd5b61202884611ff3565b925061203660208501611ff3565b9150611fb460408501611f74565b600063ffffffff8381169083168181101561206157612061611d8c565b039392505050565b60008261207857612078611e86565b500690565b60008282101561208f5761208f611d8c565b500390565b6000600160ff1b8214156120aa576120aa611d8c565b506000039056fea2646970667358221220d58880a2fb9bab2c51d457ee099a4ca1134c9fe20180b8a028367f7ea7acbac364736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:367:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "112:253:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "158:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "167:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "170:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "160:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "160:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "160:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "133:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "142:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "129:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "129:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "154:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "125:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "125:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "122:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "183:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "202:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "196:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "196:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "187:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "275:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "284:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "287:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "277:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "277:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "277:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "234:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "245:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "260:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "265:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "256:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "256:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "269:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "252:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "252:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "241:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "241:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "231:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "231:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "224:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "224:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "221:70:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "300:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "310:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "300:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "324:35:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "344:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "355:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "340:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "340:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "334:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "334:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "324:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "70:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "81:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "93:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "101:6:110",
                "type": ""
              }
            ],
            "src": "14:351:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n        value1 := mload(add(headStart, 32))\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:15469:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "182:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "198:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "203:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "194:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "194:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "207:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "190:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "190:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "178:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "178:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:110",
                "type": ""
              }
            ],
            "src": "14:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "267:86:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "331:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "340:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "343:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "333:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "333:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "333:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "290:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "301:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "316:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "321:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "312:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "312:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "325:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "308:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "308:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "297:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "297:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "287:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "287:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "280:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "280:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "277:70:110"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "256:5:110",
                "type": ""
              }
            ],
            "src": "222:131:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "428:177:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "474:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "483:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "486:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "476:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "476:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "476:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "449:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "458:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "445:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "445:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "470:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "441:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "441:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "438:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "499:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "525:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "512:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "512:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "503:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "569:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "544:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "544:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "544:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "584:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "594:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "584:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "394:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "405:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "417:6:110",
                "type": ""
              }
            ],
            "src": "358:247:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "711:76:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "721:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "733:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "729:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "729:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "721:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "763:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "774:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "756:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "756:25:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "680:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "691:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "702:4:110",
                "type": ""
              }
            ],
            "src": "610:177:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "879:301:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "925:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "934:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "937:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "927:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "927:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "927:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "900:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "909:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "896:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "896:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "921:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "892:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "892:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "889:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "950:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "976:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "963:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "963:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "954:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1020:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "995:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "995:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "995:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1035:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1045:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1035:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1059:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1091:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1102:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1087:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1087:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1074:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1074:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1063:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1140:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1115:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1115:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1115:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1157:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1167:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1157:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "837:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "848:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "860:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "868:6:110",
                "type": ""
              }
            ],
            "src": "792:388:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1280:92:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1290:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1302:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1313:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1298:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1298:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1290:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1332:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1357:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1350:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1350:14:110"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1343:6:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1343:22:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1325:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1325:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1325:41:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1249:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1260:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1271:4:110",
                "type": ""
              }
            ],
            "src": "1185:187:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1447:110:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1493:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1502:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1505:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1495:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1495:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1495:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1468:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1477:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1464:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1464:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1489:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1460:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1460:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1457:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1518:33:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1541:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1528:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1528:23:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1518:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1413:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1424:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1436:6:110",
                "type": ""
              }
            ],
            "src": "1377:180:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1666:425:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1712:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1721:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1724:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1714:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1714:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1714:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1687:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1696:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1683:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1683:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1708:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1679:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1679:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1676:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1737:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1763:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1750:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1750:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1741:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1807:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1782:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1782:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1782:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1822:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1832:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1822:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1846:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1878:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1889:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1874:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1874:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1861:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1861:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1850:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1927:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1902:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1902:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1902:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1944:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1954:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1944:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1970:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2002:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2013:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1998:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1998:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1985:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1985:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "1974:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2051:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2026:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2026:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2026:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2068:17:110",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2078:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2068:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1616:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1627:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1639:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1647:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1655:6:110",
                "type": ""
              }
            ],
            "src": "1562:529:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2128:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2145:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2152:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2157:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2148:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2148:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2138:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2138:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2138:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2185:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2188:4:110",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2178:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2178:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2178:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2209:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2212:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2202:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2202:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2202:15:110"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "2096:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2260:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2277:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2284:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2289:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2280:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2280:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2270:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2270:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2270:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2317:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2320:4:110",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2310:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2310:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2310:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2341:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2344:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2334:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2334:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2334:15:110"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2228:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2408:80:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2435:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2437:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2437:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2437:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2424:1:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "2431:1:110"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2427:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2427:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2421:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2421:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2418:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2466:16:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2477:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2480:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2473:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2473:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "2466:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2391:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2394:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "2400:3:110",
                "type": ""
              }
            ],
            "src": "2360:128:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2552:120:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2562:22:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2577:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2571:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2571:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "2562:5:110"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2650:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2659:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2662:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2652:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2652:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2652:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2606:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2617:5:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2624:22:110",
                                "type": "",
                                "value": "0xffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2613:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2613:34:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2603:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2603:45:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2596:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2596:53:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2593:73:110"
                }
              ]
            },
            "name": "abi_decode_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2531:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2542:5:110",
                "type": ""
              }
            ],
            "src": "2493:179:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2823:327:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2870:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2879:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2882:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2872:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2872:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2872:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2844:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2853:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2840:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2840:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2865:3:110",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2836:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:33:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2833:53:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2895:49:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2934:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2905:28:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2905:39:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2895:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2953:35:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2973:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2984:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2969:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2969:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2963:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2963:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2997:35:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3017:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3028:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3013:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3013:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3007:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2997:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3041:35:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3061:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3072:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3057:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3057:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3051:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3051:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3041:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3085:59:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3128:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3139:3:110",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3124:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3124:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint80_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "3095:28:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3095:49:110"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2757:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2768:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2780:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2788:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2796:6:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2804:6:110",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2812:6:110",
                "type": ""
              }
            ],
            "src": "2677:473:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3329:232:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3346:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3357:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3339:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3339:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3339:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3380:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3391:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3376:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3376:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3396:2:110",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3369:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3369:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3369:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3419:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3430:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3415:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3415:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a636f6e73756c743a207374616c6520636861696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3435:34:110",
                        "type": "",
                        "value": "TwapOracle::consult: stale chain"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3408:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3408:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3408:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3490:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3501:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3486:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3486:18:110"
                      },
                      {
                        "hexValue": "6c696e6b207072696365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3506:12:110",
                        "type": "",
                        "value": "link price"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3479:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3479:40:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3479:40:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3528:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3540:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3551:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3536:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3536:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3528:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e8e1617a1af5144797c5a5fb7c4b2f8fc1db320c156a89095952d226e5edfce1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3306:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3320:4:110",
                "type": ""
              }
            ],
            "src": "3155:406:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3740:232:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3757:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3768:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3750:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3750:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3750:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3791:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3802:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3787:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3787:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3807:2:110",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3780:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3780:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3780:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3830:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3841:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3826:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3826:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a636f6e73756c743a20636861696e6c696e6b206d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3846:34:110",
                        "type": "",
                        "value": "TwapOracle::consult: chainlink m"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3819:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3819:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3901:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3912:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3897:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3897:18:110"
                      },
                      {
                        "hexValue": "616c66756e6374696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3917:12:110",
                        "type": "",
                        "value": "alfunction"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3890:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3890:40:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3890:40:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3939:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3951:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3962:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3947:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3947:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3939:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d69c8186b789cb26aacc233b0c377b728f505b4b41c87090d71a22a9f5f63754__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3717:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3731:4:110",
                "type": ""
              }
            ],
            "src": "3566:406:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4029:116:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4088:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4090:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4090:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4090:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4060:1:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4053:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4053:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "4046:6:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4046:17:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "4068:1:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4079:1:110",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "4075:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4075:6:110"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4083:1:110"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "4071:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4071:14:110"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "4065:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4065:21:110"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4042:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4042:45:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4039:71:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4119:20:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4134:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4137:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "4130:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4130:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "4119:7:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4008:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4011:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "4017:7:110",
                "type": ""
              }
            ],
            "src": "3977:168:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4197:88:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4228:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4230:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4230:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4230:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4213:5:110"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4224:1:110",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "4220:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4220:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4210:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4210:17:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4207:43:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4259:20:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4270:5:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4277:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4266:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4266:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "4259:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4179:5:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "4189:3:110",
                "type": ""
              }
            ],
            "src": "4150:135:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4464:232:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4481:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4492:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4474:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4474:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4474:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4515:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4526:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4511:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4511:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4531:2:110",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4504:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4504:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4504:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4554:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4565:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4550:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4550:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a636f6e73756c743a2053756d206f66206e617469",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4570:34:110",
                        "type": "",
                        "value": "TwapOracle::consult: Sum of nati"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4543:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4543:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4625:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4636:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4621:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4621:18:110"
                      },
                      {
                        "hexValue": "7665206973207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4641:12:110",
                        "type": "",
                        "value": "ve is zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4614:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4614:40:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4614:40:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4663:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4675:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4686:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4671:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4671:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4663:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1fcc25fcf30dfe637a0ed060f67a33839e7126a59c15fc1ce53bb64e1ac4ef40__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4441:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4455:4:110",
                "type": ""
              }
            ],
            "src": "4290:406:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4780:194:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4826:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4835:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4838:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4828:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4828:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4828:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4801:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4810:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4797:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4797:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4822:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4793:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4793:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4790:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4851:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4870:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "4864:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4864:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4855:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4928:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4937:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4940:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4930:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4930:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4930:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4902:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4913:5:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4920:4:110",
                                "type": "",
                                "value": "0xff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "4909:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4909:16:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4899:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4899:27:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4892:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4892:35:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4889:55:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4953:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4963:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4953:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint8_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4746:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4757:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4769:6:110",
                "type": ""
              }
            ],
            "src": "4701:273:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5011:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5028:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5035:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5040:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "5031:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5031:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5021:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5021:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5021:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5068:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5071:4:110",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5061:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5061:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5061:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5092:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5095:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5085:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5085:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5085:15:110"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "4979:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5157:74:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5180:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "5182:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5182:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5182:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5177:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5170:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5170:9:110"
                  },
                  "nodeType": "YulIf",
                  "src": "5167:35:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5211:14:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5220:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5223:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "5216:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5216:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "5211:1:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5142:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5145:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "5151:1:110",
                "type": ""
              }
            ],
            "src": "5111:120:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5410:231:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5427:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5438:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5420:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5420:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5420:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5461:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5472:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5457:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5457:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5477:2:110",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5450:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5450:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5450:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5500:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5511:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5496:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5496:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a653a20566164657220616c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5516:34:110",
                        "type": "",
                        "value": "TwapOracle::initialize: Vader al"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5489:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5489:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5489:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5571:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5582:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5567:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5567:18:110"
                      },
                      {
                        "hexValue": "726561647920736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5587:11:110",
                        "type": "",
                        "value": "ready set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5560:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5560:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5560:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5608:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5620:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5631:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5616:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5616:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5608:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99106f1a7ff13da8a95a09b9cb50e4fda814c9f3b79cd38b8ec26b5a08da1427__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5387:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5401:4:110",
                "type": ""
              }
            ],
            "src": "5236:405:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5820:230:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5837:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5848:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5830:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5830:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5830:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5871:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5882:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5867:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5867:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5887:2:110",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5860:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5860:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5860:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5910:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5921:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5906:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5906:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a653a205553445620616c72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5926:34:110",
                        "type": "",
                        "value": "TwapOracle::initialize: USDV alr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5899:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5899:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5899:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5981:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5992:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5977:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5977:18:110"
                      },
                      {
                        "hexValue": "6561647920736574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5997:10:110",
                        "type": "",
                        "value": "eady set"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5970:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5970:38:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5970:38:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6017:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6029:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6040:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6025:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6025:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6017:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9fa9b3d896c492db38c2a570c80cc6f796104a28351b416975a26fdd4cbe8e5f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5797:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5811:4:110",
                "type": ""
              }
            ],
            "src": "5646:404:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6229:243:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6246:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6257:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6239:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6239:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6239:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6280:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6291:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6276:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6276:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6296:2:110",
                        "type": "",
                        "value": "53"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6269:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6269:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6269:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6319:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6330:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6315:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6315:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a653a2063616e206e6f7420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6335:34:110",
                        "type": "",
                        "value": "TwapOracle::initialize: can not "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6308:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6308:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6308:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6390:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6401:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6386:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6386:18:110"
                      },
                      {
                        "hexValue": "73657420746f2061207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6406:23:110",
                        "type": "",
                        "value": "set to a zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6379:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6379:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6379:51:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6439:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6451:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6462:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6447:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6447:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6439:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_add09aa044341cbb6c570f970ab7f1739d7cb564cdbe029614e6fb6c00a39a2b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6206:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6220:4:110",
                "type": ""
              }
            ],
            "src": "6055:417:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6624:186:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6634:41:110",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6648:26:110",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "6644:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6644:31:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6638:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6691:3:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6704:2:110",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "6708:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6700:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6700:15:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6717:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6696:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6696:24:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6684:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6684:37:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6684:37:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "6741:3:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6746:2:110",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6737:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6737:12:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6759:2:110",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "6763:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "6755:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6755:15:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6772:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6751:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6751:24:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6730:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6730:46:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6730:46:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6785:19:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6796:3:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6801:2:110",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6792:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6792:12:110"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "6785:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6592:3:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6597:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6605:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "6616:3:110",
                "type": ""
              }
            ],
            "src": "6477:333:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6989:230:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7006:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7017:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6999:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6999:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6999:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7040:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7051:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7036:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7036:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7056:2:110",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7029:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7029:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7029:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7079:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7090:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7075:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7075:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a65643a206e6f7420696e69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7095:34:110",
                        "type": "",
                        "value": "TwapOracle::initialized: not ini"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7068:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7068:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7068:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7150:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7161:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7146:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7146:18:110"
                      },
                      {
                        "hexValue": "7469616c697a6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7166:10:110",
                        "type": "",
                        "value": "tialized"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7139:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7139:38:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7139:38:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7186:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7198:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7209:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7194:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7194:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7186:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b1c39b73f21e6271bf94bf07e3036ab7d0bc1bd2b4a5b3a9c470e3f110cee98d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6966:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6980:4:110",
                "type": ""
              }
            ],
            "src": "6815:404:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7398:249:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7415:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7426:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7408:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7408:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7408:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7449:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7460:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7445:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7445:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7465:2:110",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7438:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7438:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7438:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7488:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7499:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7484:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7484:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a726567697374657241676772656761746f723a20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7504:34:110",
                        "type": "",
                        "value": "TwapOracle::registerAggregator: "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7477:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7477:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7477:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7559:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7570:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7555:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7555:18:110"
                      },
                      {
                        "hexValue": "6173736574207a65726f20616464726573732070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7575:29:110",
                        "type": "",
                        "value": "asset zero address provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7548:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7548:57:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7548:57:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7614:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7626:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7637:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7622:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7622:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7614:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_59bfdbcf395f9e27ea46f2d5a4d35fbdcd98b5bb3a9cacc6e06f8fdfc681fe16__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7375:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7389:4:110",
                "type": ""
              }
            ],
            "src": "7224:423:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7826:254:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7843:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7854:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7836:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7836:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7836:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7877:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7888:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7873:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7873:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7893:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7866:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7866:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7866:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7916:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7927:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7912:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7912:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a726567697374657241676772656761746f723a20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7932:34:110",
                        "type": "",
                        "value": "TwapOracle::registerAggregator: "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7905:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7905:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7905:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7987:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7998:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7983:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7983:18:110"
                      },
                      {
                        "hexValue": "61676772656761746f72207a65726f20616464726573732070726f7669646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8003:34:110",
                        "type": "",
                        "value": "aggregator zero address provided"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7976:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7976:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7976:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8047:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8059:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8070:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8055:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8055:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8047:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9f626a8ff664dbadf66986f4e0fbb2e76a6e7255c32590274087e3f395caf900__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7803:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7817:4:110",
                "type": ""
              }
            ],
            "src": "7652:428:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8259:247:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8276:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8287:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8269:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8269:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8269:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8310:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8321:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8306:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8306:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8326:2:110",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8299:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8299:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8299:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8349:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8360:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8345:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8345:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a726567697374657241676772656761746f723a20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8365:34:110",
                        "type": "",
                        "value": "TwapOracle::registerAggregator: "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8338:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8338:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8338:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8420:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8431:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8416:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8416:18:110"
                      },
                      {
                        "hexValue": "61676772656761746f7220616c726561647920657869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8436:27:110",
                        "type": "",
                        "value": "aggregator already exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8409:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8409:55:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8409:55:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8473:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8485:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8496:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8481:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8481:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8473:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_58f994cf1f0e5913b769c6ede68c8385d7d0b56c41a22efcaead55db2ef204b8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8236:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8250:4:110",
                "type": ""
              }
            ],
            "src": "8085:421:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8626:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8636:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8648:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8659:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8644:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8644:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8636:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8678:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8693:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8709:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8714:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "8705:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8705:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8718:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "8701:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8701:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8689:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8689:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8671:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8671:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8671:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$969__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8595:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8606:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8617:4:110",
                "type": ""
              }
            ],
            "src": "8511:217:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8792:108:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8802:22:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "8817:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8811:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8811:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "8802:5:110"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8878:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8887:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8890:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8880:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8880:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8880:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "8846:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "8857:5:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8864:10:110",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "8853:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8853:22:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "8843:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8843:33:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "8836:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8836:41:110"
                  },
                  "nodeType": "YulIf",
                  "src": "8833:61:110"
                }
              ]
            },
            "name": "abi_decode_uint32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "8771:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "8782:5:110",
                "type": ""
              }
            ],
            "src": "8733:167:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9019:214:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9065:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9074:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9077:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9067:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9067:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9067:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9040:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9049:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9036:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9036:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9061:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9032:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9032:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "9029:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9090:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9106:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9100:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9100:16:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9090:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9125:35:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9145:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9156:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9141:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9141:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9135:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9135:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9125:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9169:58:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9212:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9223:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9208:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9208:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "9179:28:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9179:48:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9169:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8969:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8980:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8992:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9000:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9008:6:110",
                "type": ""
              }
            ],
            "src": "8905:328:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9412:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9429:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9440:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9422:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9422:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9422:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9463:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9474:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9459:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9459:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9479:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9452:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9452:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9452:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9502:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9513:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9498:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9498:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7570646174653a20506572696f64206e6f742065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9518:34:110",
                        "type": "",
                        "value": "TwapOracle::update: Period not e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9491:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9491:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9491:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9573:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9584:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9569:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9569:18:110"
                      },
                      {
                        "hexValue": "6c6170736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9589:8:110",
                        "type": "",
                        "value": "lapsed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9562:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9562:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9562:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9607:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9619:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9630:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9615:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9615:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9607:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b8f44df00030f638ea788e4f837a71a99ed39ac15201c5fbc318c1e06e9f560e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9389:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9403:4:110",
                "type": ""
              }
            ],
            "src": "9238:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9819:238:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9836:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9847:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9829:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9829:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9829:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9870:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9881:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9866:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9866:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9886:2:110",
                        "type": "",
                        "value": "48"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9859:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9859:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9859:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9909:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9920:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9905:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9905:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a20496e76616c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9925:34:110",
                        "type": "",
                        "value": "TwapOracle::registerPair: Invali"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9898:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9898:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9898:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9980:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9991:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9976:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9976:18:110"
                      },
                      {
                        "hexValue": "6420746f6b656e302061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9996:18:110",
                        "type": "",
                        "value": "d token0 address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9969:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9969:46:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9969:46:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10024:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10036:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10047:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10032:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10032:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10024:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2a9220d314ec676f678af04d5b88ea7fa1523d128e45ea7b584bf4a6aad1d25b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9796:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9810:4:110",
                "type": ""
              }
            ],
            "src": "9645:412:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10236:234:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10253:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10264:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10246:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10246:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10246:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10287:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10298:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10283:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10283:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10303:2:110",
                        "type": "",
                        "value": "44"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10276:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10276:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10276:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10326:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10337:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10322:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10322:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a2053616d652074",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10342:34:110",
                        "type": "",
                        "value": "TwapOracle::registerPair: Same t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10315:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10315:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10315:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10397:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10408:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10393:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10393:18:110"
                      },
                      {
                        "hexValue": "6f6b656e2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10413:14:110",
                        "type": "",
                        "value": "oken address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10386:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10386:42:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10386:42:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10437:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10449:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10460:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10445:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10445:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10437:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_773eb87fb67540ad11b6d15067e5c1d27b3442540099b3c8ea3a409729e82c3f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10213:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10227:4:110",
                "type": ""
              }
            ],
            "src": "10062:408:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10649:227:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10666:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10677:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10659:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10659:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10659:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10700:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10711:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10696:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10696:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10716:2:110",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10689:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10689:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10689:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10739:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10750:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10735:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10735:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a20506169722065",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10755:34:110",
                        "type": "",
                        "value": "TwapOracle::registerPair: Pair e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10728:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10728:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10728:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10810:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10821:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10806:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10806:18:110"
                      },
                      {
                        "hexValue": "7869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10826:7:110",
                        "type": "",
                        "value": "xists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10799:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10799:35:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10799:35:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10843:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10855:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10866:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10851:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10851:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10843:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_79b723d02d8c7fba7c4632101be14e6088721782e0859b020e56f30c6cfd93a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10626:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10640:4:110",
                "type": ""
              }
            ],
            "src": "10475:401:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11010:175:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11020:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11032:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11043:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11028:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11028:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11020:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11055:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11073:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11078:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11069:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11069:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11082:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "11065:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11065:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "11059:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11100:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "11115:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11123:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11111:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11111:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11093:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11093:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11093:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11147:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11158:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11143:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11143:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "11167:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "11175:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "11163:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11163:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11136:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11136:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11136:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10971:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10982:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10990:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11001:4:110",
                "type": ""
              }
            ],
            "src": "10881:304:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11271:170:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11317:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11326:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11329:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11319:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11319:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11319:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11292:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11301:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11288:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11288:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11313:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11284:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11284:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "11281:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11342:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11361:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11355:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11355:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11346:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11405:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11380:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11380:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11380:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11420:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11430:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11420:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11237:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11248:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11260:6:110",
                "type": ""
              }
            ],
            "src": "11190:251:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11527:103:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11573:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11582:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11585:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11575:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11575:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11575:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11548:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11557:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11544:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11544:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11569:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11540:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11540:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "11537:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11598:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11614:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11608:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11608:16:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11598:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11493:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11504:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11516:6:110",
                "type": ""
              }
            ],
            "src": "11446:184:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11695:128:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11705:22:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "11720:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "11714:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11714:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "11705:5:110"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11801:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11810:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11813:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11803:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11803:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11803:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "11749:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "11760:5:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11767:30:110",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "11756:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11756:42:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "11746:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11746:53:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "11739:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11739:61:110"
                  },
                  "nodeType": "YulIf",
                  "src": "11736:81:110"
                }
              ]
            },
            "name": "abi_decode_uint112_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "11674:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "11685:5:110",
                "type": ""
              }
            ],
            "src": "11635:188:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11942:262:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11988:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11997:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "12000:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11990:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11990:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11990:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11963:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11972:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11959:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11959:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11984:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11955:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11955:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "11952:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12013:50:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12053:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint112_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "12023:29:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12023:40:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "12013:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12072:59:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12116:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12127:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12112:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12112:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint112_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "12082:29:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12082:49:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "12072:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12140:58:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12183:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12194:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12179:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12179:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_uint32_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "12150:28:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12150:48:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "12140:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11892:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11903:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11915:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "11923:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "11931:6:110",
                "type": ""
              }
            ],
            "src": "11828:376:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12383:227:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12400:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12411:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12393:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12393:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12393:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12434:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12445:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12430:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12430:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12450:2:110",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12423:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12423:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12423:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12473:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12484:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12469:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12469:18:110"
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a204e6f20726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12489:34:110",
                        "type": "",
                        "value": "TwapOracle::registerPair: No res"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12462:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12462:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12462:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12544:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12555:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12540:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12540:18:110"
                      },
                      {
                        "hexValue": "6572766573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12560:7:110",
                        "type": "",
                        "value": "erves"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12533:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12533:35:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12533:35:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12577:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12589:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12600:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12585:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12585:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12577:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8adcd2021c941587b1de6826add1d21f415164ffe70b9aa0222c0735b6dbd25f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12360:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12374:4:110",
                "type": ""
              }
            ],
            "src": "12209:401:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12789:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12806:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12817:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12799:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12799:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12799:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12840:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12851:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12836:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12836:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12856:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12829:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12829:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12829:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12879:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12890:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12875:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12875:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12895:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12868:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12868:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12868:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12950:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12961:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12946:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12946:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12966:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12939:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12939:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12939:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12984:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12996:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13007:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12992:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12992:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12984:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12766:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12780:4:110",
                "type": ""
              }
            ],
            "src": "12615:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13196:175:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13213:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13224:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13206:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13206:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13206:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13247:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13258:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13243:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13243:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13263:2:110",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13236:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13236:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13236:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13286:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13297:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13282:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13282:18:110"
                      },
                      {
                        "hexValue": "4669786564506f696e743a3a6d756c3a206f766572666c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13302:27:110",
                        "type": "",
                        "value": "FixedPoint::mul: overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13275:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13275:55:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13275:55:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13339:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13351:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13362:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13347:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13347:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13339:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4948de739aba85946a14984f472451f25a4920e9fae93fb8ed011d3024f8abcf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13173:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13187:4:110",
                "type": ""
              }
            ],
            "src": "13022:349:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13550:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13567:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13578:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13560:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13560:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13560:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13601:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13612:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13597:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13597:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13617:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13590:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13590:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13590:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13640:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13651:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13636:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13636:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13656:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13629:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13629:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13629:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13700:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13712:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13723:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13708:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13708:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13700:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13527:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13541:4:110",
                "type": ""
              }
            ],
            "src": "13376:356:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13785:173:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13795:20:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "13805:10:110",
                    "type": "",
                    "value": "0xffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13799:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13824:21:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13839:1:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "13842:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13835:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13835:10:110"
                  },
                  "variables": [
                    {
                      "name": "x_1",
                      "nodeType": "YulTypedName",
                      "src": "13828:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13854:21:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13869:1:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "13872:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "13865:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13865:10:110"
                  },
                  "variables": [
                    {
                      "name": "y_1",
                      "nodeType": "YulTypedName",
                      "src": "13858:3:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13900:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13902:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13902:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13902:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "13890:3:110"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "13895:3:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "13887:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13887:12:110"
                  },
                  "nodeType": "YulIf",
                  "src": "13884:38:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13931:21:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x_1",
                        "nodeType": "YulIdentifier",
                        "src": "13943:3:110"
                      },
                      {
                        "name": "y_1",
                        "nodeType": "YulIdentifier",
                        "src": "13948:3:110"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13939:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13939:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "13931:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13767:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13770:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "13776:4:110",
                "type": ""
              }
            ],
            "src": "13737:221:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14001:74:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14024:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "14026:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14026:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14026:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14021:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "14014:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14014:9:110"
                  },
                  "nodeType": "YulIf",
                  "src": "14011:35:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14055:14:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14064:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14067:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "mod",
                      "nodeType": "YulIdentifier",
                      "src": "14060:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14060:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "14055:1:110"
                    }
                  ]
                }
              ]
            },
            "name": "mod_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13986:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13989:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "13995:1:110",
                "type": ""
              }
            ],
            "src": "13963:112:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14254:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14271:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14282:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14264:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14264:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14264:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14305:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14316:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14301:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14301:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14321:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14294:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14294:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14294:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14344:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14355:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14340:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14340:18:110"
                      },
                      {
                        "hexValue": "4669786564506f696e743a3a6672616374696f6e3a206469766973696f6e2062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14360:34:110",
                        "type": "",
                        "value": "FixedPoint::fraction: division b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14333:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14333:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14333:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14415:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14426:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14411:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14411:18:110"
                      },
                      {
                        "hexValue": "79207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14431:8:110",
                        "type": "",
                        "value": "y zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14404:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14404:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14404:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14449:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14461:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14472:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14457:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14457:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14449:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14231:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14245:4:110",
                "type": ""
              }
            ],
            "src": "14080:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14661:180:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14678:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14689:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14671:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14671:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14671:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14712:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14723:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14708:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14708:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14728:2:110",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14701:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14701:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14701:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14751:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14762:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14747:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14747:18:110"
                      },
                      {
                        "hexValue": "4669786564506f696e743a3a6672616374696f6e3a206f766572666c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14767:32:110",
                        "type": "",
                        "value": "FixedPoint::fraction: overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14740:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14740:60:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14740:60:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14809:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14821:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14832:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14817:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14817:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14809:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14638:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14652:4:110",
                "type": ""
              }
            ],
            "src": "14487:354:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14895:76:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "14917:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "14919:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "14919:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "14919:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14911:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14914:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "14908:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14908:8:110"
                  },
                  "nodeType": "YulIf",
                  "src": "14905:34:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14948:17:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "14960:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "14963:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "14956:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14956:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "14948:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "14877:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "14880:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "14886:4:110",
                "type": ""
              }
            ],
            "src": "14846:125:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15150:176:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15167:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15178:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15160:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15160:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15160:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15201:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15212:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15197:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15197:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15217:2:110",
                        "type": "",
                        "value": "26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15190:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15190:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15190:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15240:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15251:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15236:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15236:18:110"
                      },
                      {
                        "hexValue": "46756c6c4d6174683a2046554c4c4449565f4f564552464c4f57",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15256:28:110",
                        "type": "",
                        "value": "FullMath: FULLDIV_OVERFLOW"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15229:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15229:56:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15229:56:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15294:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15306:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15317:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15302:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15302:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15294:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9573a614b6ab65c92932376c168e5635a05a20769ae8cb8b8a2d9575aad107da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15127:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15141:4:110",
                "type": ""
              }
            ],
            "src": "14976:350:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15374:93:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15410:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "15412:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15412:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15412:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15390:5:110"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15401:3:110",
                            "type": "",
                            "value": "255"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15406:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "15397:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15397:11:110"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "15387:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15387:22:110"
                  },
                  "nodeType": "YulIf",
                  "src": "15384:48:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15441:20:110",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15452:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "15455:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "15448:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15448:13:110"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "15441:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "negate_t_int256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "15356:5:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "15366:3:110",
                "type": ""
              }
            ],
            "src": "15331:136:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_decode_uint80_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint80t_int256t_uint256t_uint256t_uint80_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_uint80_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_uint80_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_e8e1617a1af5144797c5a5fb7c4b2f8fc1db320c156a89095952d226e5edfce1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TwapOracle::consult: stale chain\")\n        mstore(add(headStart, 96), \"link price\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_d69c8186b789cb26aacc233b0c377b728f505b4b41c87090d71a22a9f5f63754__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TwapOracle::consult: chainlink m\")\n        mstore(add(headStart, 96), \"alfunction\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_1fcc25fcf30dfe637a0ed060f67a33839e7126a59c15fc1ce53bb64e1ac4ef40__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"TwapOracle::consult: Sum of nati\")\n        mstore(add(headStart, 96), \"ve is zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n        value0 := value\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_99106f1a7ff13da8a95a09b9cb50e4fda814c9f3b79cd38b8ec26b5a08da1427__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"TwapOracle::initialize: Vader al\")\n        mstore(add(headStart, 96), \"ready set\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9fa9b3d896c492db38c2a570c80cc6f796104a28351b416975a26fdd4cbe8e5f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"TwapOracle::initialize: USDV alr\")\n        mstore(add(headStart, 96), \"eady set\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_add09aa044341cbb6c570f970ab7f1739d7cb564cdbe029614e6fb6c00a39a2b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 53)\n        mstore(add(headStart, 64), \"TwapOracle::initialize: can not \")\n        mstore(add(headStart, 96), \"set to a zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_t_stringliteral_b1c39b73f21e6271bf94bf07e3036ab7d0bc1bd2b4a5b3a9c470e3f110cee98d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"TwapOracle::initialized: not ini\")\n        mstore(add(headStart, 96), \"tialized\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_59bfdbcf395f9e27ea46f2d5a4d35fbdcd98b5bb3a9cacc6e06f8fdfc681fe16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 59)\n        mstore(add(headStart, 64), \"TwapOracle::registerAggregator: \")\n        mstore(add(headStart, 96), \"asset zero address provided\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9f626a8ff664dbadf66986f4e0fbb2e76a6e7255c32590274087e3f395caf900__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"TwapOracle::registerAggregator: \")\n        mstore(add(headStart, 96), \"aggregator zero address provided\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_58f994cf1f0e5913b769c6ede68c8385d7d0b56c41a22efcaead55db2ef204b8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"TwapOracle::registerAggregator: \")\n        mstore(add(headStart, 96), \"aggregator already exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$969__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_uint32_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := abi_decode_uint32_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_b8f44df00030f638ea788e4f837a71a99ed39ac15201c5fbc318c1e06e9f560e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"TwapOracle::update: Period not e\")\n        mstore(add(headStart, 96), \"lapsed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a9220d314ec676f678af04d5b88ea7fa1523d128e45ea7b584bf4a6aad1d25b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 48)\n        mstore(add(headStart, 64), \"TwapOracle::registerPair: Invali\")\n        mstore(add(headStart, 96), \"d token0 address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_773eb87fb67540ad11b6d15067e5c1d27b3442540099b3c8ea3a409729e82c3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"TwapOracle::registerPair: Same t\")\n        mstore(add(headStart, 96), \"oken address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_79b723d02d8c7fba7c4632101be14e6088721782e0859b020e56f30c6cfd93a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"TwapOracle::registerPair: Pair e\")\n        mstore(add(headStart, 96), \"xists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_uint112_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_uint112t_uint112t_uint32_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_uint112_fromMemory(headStart)\n        value1 := abi_decode_uint112_fromMemory(add(headStart, 32))\n        value2 := abi_decode_uint32_fromMemory(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_8adcd2021c941587b1de6826add1d21f415164ffe70b9aa0222c0735b6dbd25f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"TwapOracle::registerPair: No res\")\n        mstore(add(headStart, 96), \"erves\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4948de739aba85946a14984f472451f25a4920e9fae93fb8ed011d3024f8abcf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"FixedPoint::mul: overflow\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint32(x, y) -> diff\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if lt(x_1, y_1) { panic_error_0x11() }\n        diff := sub(x_1, y_1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_5e8a6c8dfacd0a41f2501735d8ee26d996b9e7e81ff5467dfdfd11a3728a15e7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"FixedPoint::fraction: division b\")\n        mstore(add(headStart, 96), \"y zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9fe8d10e95984e9ccfd1797a961d8375075b4df29dfe16192bd5e7445ed87d53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"FixedPoint::fraction: overflow\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_9573a614b6ab65c92932376c168e5635a05a20769ae8cb8b8a2d9575aad107da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"FullMath: FULLDIV_OVERFLOW\")\n        tail := add(headStart, 96)\n    }\n    function negate_t_int256(value) -> ret\n    {\n        if eq(value, shl(255, 1)) { panic_error_0x11() }\n        ret := sub(0, value)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "632:12114:108:-:0;;;2565:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;734:10:18;936:18:0;:32::i;:::-;2638:10:108::1;:36:::0;;-1:-1:-1;;;;;;2638:36:108::1;-1:-1:-1::0;;;;;2638:36:108;;;::::1;::::0;;;::::1;::::0;;;2684:13:::1;:28:::0;632:12114;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:351:110:-;93:6;101;154:2;142:9;133:7;129:23;125:32;122:52;;;170:1;167;160:12;122:52;196:16;;-1:-1:-1;;;;;241:31:110;;231:42;;221:70;;287:1;284;277:12;221:70;355:2;340:18;;;;334:25;310:5;;334:25;;-1:-1:-1;;;14:351:110:o;:::-;632:12114:108;;;;;;",
  "deployedSourceMap": "632:12114:108:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1604:20;;;;;-1:-1:-1;;;;;1604:20:108;;;;;;-1:-1:-1;;;;;178:32:110;;;160:51;;148:2;133:18;1604:20:108;;;;;;;;3878:1519;;;;;;:::i;:::-;;:::i;:::-;;;756:25:110;;;744:2;729:18;3878:1519:108;610:177:110;6695:581:108;;;;;;:::i;:::-;;:::i;:::-;;3242:325;;;;;;:::i;:::-;;:::i;:::-;;;1350:14:110;;1343:22;1325:41;;1313:2;1298:18;3242:325:108;1185:187:110;5477:197:108;;;:::i;1824:101:0:-;;;:::i;5806:119:108:-;;;;;;:::i;:::-;;:::i;7638:599::-;;;;;;:::i;:::-;;:::i;1201:85:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;6059:414:108;;;;;;:::i;:::-;;:::i;10730:2014::-;;;:::i;8524:2094::-;;;;;;:::i;:::-;;:::i;7339:77::-;;;:::i;1678:19::-;;;;;-1:-1:-1;;;;;1678:19:108;;;2074:198:0;;;;;;:::i;:::-;;:::i;3878:1519:108:-;3977:6;:13;3931:14;;;;;4060:1176;4084:9;4080:1;:13;4060:1176;;;4114:24;4141:6;4148:1;4141:9;;;;;;;;:::i;:::-;;;;;;;;;;4114:36;;;;;;;;4141:9;;;;;;;4114:36;;-1:-1:-1;;;;;4114:36:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;4114:36:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4178:15;;4114:36;;-1:-1:-1;4169:24:108;;;;;;4165:1061;;;4384:22;;;;:41;;:29;;4411:1;4384:26;:29::i;:::-;1578:7:56;530:3;1578:21;;1479:128;4384:41:108;4371:54;;-1:-1:-1;;;;;4371:54:108;;;:::i;:::-;4470:22;;;;:25;4371:54;;-1:-1:-1;;;;;;4470:30:108;;4466:100;;4532:14;4524:23;;;;;;4798:15;;;;;-1:-1:-1;;;;;4785:29:108;;;4606:14;4785:29;;;:12;:29;;;;;;4763:95;;-1:-1:-1;;;4763:95:108;;;;4606:14;;;;;;4785:29;;;4763:93;;:95;;;;;;;;;;;;;;;4785:29;4763:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4584:274;;;;;;;;4925:7;4906:26;;:15;:26;;;;4877:139;;;;-1:-1:-1;;;4877:139:108;;3357:2:110;4877:139:108;;;3339:21:110;3396:2;3376:18;;;3369:30;3435:34;3415:18;;;3408:62;-1:-1:-1;;;3486:18:110;;;3479:40;3536:19;;4877:139:108;;;;;;;;;5063:10;5034:123;;;;-1:-1:-1;;;5034:123:108;;3768:2:110;5034:123:108;;;3750:21:110;3807:2;3787:18;;;3780:30;3846:34;3826:18;;;3819:62;-1:-1:-1;;;3897:18:110;;;3890:40;3947:19;;5034:123:108;3566:406:110;5034:123:108;5186:25;5194:5;5204:6;5186:25;:::i;:::-;5176:35;;;;:::i;:::-;;;4195:1031;;;4165:1061;-1:-1:-1;4095:3:108;;;;:::i;:::-;;;;4060:1176;;;-1:-1:-1;5253:14:108;5245:69;;;;-1:-1:-1;;;5245:69:108;;4492:2:110;5245:69:108;;;4474:21:110;4531:2;4511:18;;;4504:30;4570:34;4550:18;;;4543:62;-1:-1:-1;;;4621:18:110;;;4614:40;4671:19;;5245:69:108;4290:406:110;5245:69:108;5380:9;5359:5;-1:-1:-1;;;;;5344:30:108;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5335:41;;;;:6;:41;:::i;:::-;5334:55;;;;:::i;:::-;5324:66;3878:1519;-1:-1:-1;;;;;3878:1519:108:o;6695:581::-;1094:13:0;:11;:13::i;:::-;6796:5:108::1;::::0;-1:-1:-1;;;;;6796:5:108::1;:19:::0;6775:107:::1;;;::::0;-1:-1:-1;;;6775:107:108;;5438:2:110;6775:107:108::1;::::0;::::1;5420:21:110::0;5477:2;5457:18;;;5450:30;5516:34;5496:18;;;5489:62;-1:-1:-1;;;5567:18:110;;;5560:39;5616:19;;6775:107:108::1;5236:405:110::0;6775:107:108::1;6900:4;::::0;-1:-1:-1;;;;;6900:4:108::1;:18:::0;6892:71:::1;;;::::0;-1:-1:-1;;;6892:71:108;;5848:2:110;6892:71:108::1;::::0;::::1;5830:21:110::0;5887:2;5867:18;;;5860:30;5926:34;5906:18;;;5899:62;-1:-1:-1;;;5977:18:110;;;5970:38;6025:19;;6892:71:108::1;5646:404:110::0;6892:71:108::1;-1:-1:-1::0;;;;;6994:19:108;::::1;6973:119;;;;-1:-1:-1::0;;;6973:119:108::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7123:20:108;::::1;7102:120;;;;-1:-1:-1::0;;;7102:120:108::1;;;;;;;:::i;:::-;7233:5;:14:::0;;-1:-1:-1;;;;;7233:14:108;;::::1;-1:-1:-1::0;;;;;;7233:14:108;;::::1;;::::0;;;7257:4:::1;:12:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;6695:581::o;3242:325::-;3339:4;3359:17;3406:6;3414;3389:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3379:43;;;;;;3359:63;;3432:17;3479:6;3487;3462:32;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3462:32:108;;;;;;;;;3452:43;;3462:32;3452:43;;;;3512:22;;;;:11;:22;;;;;;3452:43;;-1:-1:-1;3512:22:108;;;:48;;-1:-1:-1;3538:22:108;;;;:11;:22;;;;;;;;3512:48;3505:55;;;;3242:325;;;;;:::o;5477:197::-;5572:4;;5517:14;;;;5564:13;;-1:-1:-1;;;;;5572:4:108;5564:7;:13::i;:::-;5617:5;;5543:34;;-1:-1:-1;5587:19:108;;5609:14;;-1:-1:-1;;;;;5617:5:108;5609:7;:14::i;:::-;5587:36;-1:-1:-1;5643:24:108;5587:36;5643:10;:24;:::i;:::-;5634:33;;5533:141;;5477:197;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;5806:119:108:-;5870:7;5909:9;:7;:9::i;:::-;5896:22;;:10;:22;:::i;7638:599::-;1094:13:0;:11;:13::i;:::-;2822:5:108::1;::::0;-1:-1:-1;;;;;2822:5:108::1;:19:::0;;::::1;::::0;:41:::1;;-1:-1:-1::0;2845:4:108::1;::::0;-1:-1:-1;;;;;2845:4:108::1;:18:::0;::::1;2822:41;2801:128;;;;-1:-1:-1::0;;;2801:128:108::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7791:19:108;::::2;7770:125;;;::::0;-1:-1:-1;;;7770:125:108;;7426:2:110;7770:125:108::2;::::0;::::2;7408:21:110::0;7465:2;7445:18;;;7438:30;7504:34;7484:18;;;7477:62;7575:29;7555:18;;;7548:57;7622:19;;7770:125:108::2;7224:423:110::0;7770:125:108::2;-1:-1:-1::0;;;;;7926:24:108;::::2;7905:135;;;::::0;;-1:-1:-1;;;7905:135:108;;7854:2:110;7905:135:108::2;::::0;::::2;7836:21:110::0;7873:18;;;7866:30;;;;7932:34;7912:18;;;7905:62;8003:34;7983:18;;;7976:62;8055:19;;7905:135:108::2;7652:428:110::0;7905:135:108::2;-1:-1:-1::0;;;;;8071:19:108;;::::2;8102:1;8071:19:::0;;;:12:::2;:19;::::0;;;;;::::2;:33:::0;8050:137:::2;;;::::0;-1:-1:-1;;;8050:137:108;;8287:2:110;8050:137:108::2;::::0;::::2;8269:21:110::0;8326:2;8306:18;;;8299:30;8365:34;8345:18;;;8338:62;8436:27;8416:18;;;8409:55;8481:19;;8050:137:108::2;8085:421:110::0;8050:137:108::2;-1:-1:-1::0;;;;;8198:19:108;;::::2;;::::0;;;:12:::2;:19;::::0;;;;:32;;-1:-1:-1;;;;;;8198:32:108::2;::::0;;;::::2;;::::0;;7638:599::o;6059:414::-;6148:12;;6124:7;;-1:-1:-1;;;6148:12:108;;;;6143:185;;6297:5;;6306:11;;6289:14;;-1:-1:-1;;;;;6297:5:108;6289:7;:14::i;:::-;:28;;;;:::i;6143:185::-;6457:9;:7;:9::i;:::-;6443:23;;:11;:23;:::i;10730:2014::-;1094:13:0;:11;:13::i;:::-;2822:5:108::1;::::0;-1:-1:-1;;;;;2822:5:108::1;:19:::0;;::::1;::::0;:41:::1;;-1:-1:-1::0;2845:4:108::1;::::0;-1:-1:-1;;;;;2845:4:108::1;:18:::0;::::1;2822:41;2801:128;;;;-1:-1:-1::0;;;2801:128:108::1;;;;;;;:::i;:::-;10809:6:::2;:13:::0;10789:17:::2;10899:1839;10923:9;10919:1;:13;10899:1839;;;10953:25;10981:6;10988:1;10981:9;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;11258:5:::2;::::0;;10981:9:::2;::::0;;::::2;::::0;;::::2;11239:15:::0;;::::2;::::0;10981:9;;-1:-1:-1;10981:9:108;;;;-1:-1:-1;;;;;11239:15:108;;::::2;11258:5:::0;::::2;11239:24;11238:231;;11417:10;::::0;;11452:15:::2;::::0;::::2;::::0;11417:52:::2;::::0;-1:-1:-1;;;11417:52:108;;-1:-1:-1;;;;;11452:15:108;;::::2;11417:52:::0;;::::2;160:51:110::0;;;;11417:10:108::2;::::0;:27:::2;::::0;133:18:110;;11417:52:108::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11238:231;;;11359:13:::0;;11287:107:::2;::::0;-1:-1:-1;;;;;11359:13:108::2;11287:46;:107::i;:::-;11672:27;::::0;;::::2;::::0;11761:13;;11098:371;;-1:-1:-1;11098:371:108;;-1:-1:-1;11098:371:108;-1:-1:-1;11672:27:108::2;::::0;;::::2;11635:64:::0;::::2;::::0;11746:28;;::::2;;;11717:137;;;::::0;-1:-1:-1;;;11717:137:108;;9440:2:110;11717:137:108::2;::::0;::::2;9422:21:110::0;9479:2;9459:18;;;9452:30;9518:34;9498:18;;;9491:62;-1:-1:-1;;;9569:18:110;;;9562:36;9615:19;;11717:137:108::2;9238:402:110::0;11717:137:108::2;12027:207;;;;;;;;12183:11;12102:92;;12122:8;:29;;;12103:16;:48;12102:92;;;;;:::i;:::-;;-1:-1:-1::0;;;;;12027:207:108;;::::2;::::0;;;12002:232;;:22:::2;::::0;::::2;:232:::0;;-1:-1:-1;;;;;;12002:232:108::2;::::0;;;::::2;;::::0;;12277:207:::2;::::0;;::::2;::::0;::::2;::::0;;;12372:29:::2;::::0;::::2;::::0;12277:207;;12352:92:::2;::::0;::::2;::::0;12353:48;::::2;12352:92:::0;::::2;;;;:::i;:::-;;-1:-1:-1::0;;;;;12277:207:108;;::::2;::::0;;;12252:232;;:22:::2;::::0;::::2;:232:::0;;-1:-1:-1;;;;;;12252:232:108::2;::::0;;;::::2;;::::0;;-1:-1:-1;12559:29:108::2;::::0;::::2;:48:::0;;;;-1:-1:-1;12621:29:108;::::2;:48:::0;12683:27:::2;::::0;;::::2;:44:::0;;-1:-1:-1;;12683:44:108::2;;::::0;;::::2;::::0;;;::::2;::::0;;10934:3;::::2;::::0;::::2;:::i;:::-;;;;10899:1839;;;;10779:1965;10730:2014::o:0;8524:2094::-;1094:13:0;:11;:13::i;:::-;2822:5:108::1;::::0;-1:-1:-1;;;;;2822:5:108::1;:19:::0;;::::1;::::0;:41:::1;;-1:-1:-1::0;2845:4:108::1;::::0;-1:-1:-1;;;;;2845:4:108::1;:18:::0;::::1;2822:41;2801:128;;;;-1:-1:-1::0;;;2801:128:108::1;;;;;;;:::i;:::-;8697:5:::2;::::0;-1:-1:-1;;;;;8687:15:108;;::::2;8697:5:::0;::::2;8687:15;::::0;:33:::2;;-1:-1:-1::0;8716:4:108::2;::::0;-1:-1:-1;;;;;8706:14:108;;::::2;8716:4:::0;::::2;8706:14;8687:33;8666:128;;;::::0;-1:-1:-1;;;8666:128:108;;9847:2:110;8666:128:108::2;::::0;::::2;9829:21:110::0;9886:2;9866:18;;;9859:30;9925:34;9905:18;;;9898:62;-1:-1:-1;;;9976:18:110;;;9969:46;10032:19;;8666:128:108::2;9645:412:110::0;8666:128:108::2;8835:6;-1:-1:-1::0;;;;;8825:16:108::2;:6;-1:-1:-1::0;;;;;8825:16:108::2;;;8804:107;;;::::0;-1:-1:-1;;;8804:107:108;;10264:2:110;8804:107:108::2;::::0;::::2;10246:21:110::0;10303:2;10283:18;;;10276:30;10342:34;10322:18;;;10315:62;-1:-1:-1;;;10393:18:110;;;10386:42;10445:19;;8804:107:108::2;10062:408:110::0;8804:107:108::2;8943:26;8954:6;8962;8943:10;:26::i;:::-;8942:27;8921:111;;;::::0;-1:-1:-1;;;8921:111:108;;10677:2:110;8921:111:108::2;::::0;::::2;10659:21:110::0;10716:2;10696:18;;;10689:30;10755:34;10735:18;;;10728:62;-1:-1:-1;;;10806:18:110;;;10799:35;10851:19;;8921:111:108::2;10475:401:110::0;8921:111:108::2;9247:5;::::0;9043:16:::2;::::0;;;;;;;;;;;-1:-1:-1;;;;;9237:15:108;;::::2;9247:5:::0;::::2;9237:15;9233:714;;;9322:50;::::0;-1:-1:-1;;;9322:50:108;;-1:-1:-1;;;;;11111:15:110;;;9322:50:108::2;::::0;::::2;11093:34:110::0;11163:15;;;11143:18;;;11136:43;9268:19:108::2;::::0;9322:34;;::::2;::::0;::::2;::::0;11028:18:110;;9322:50:108::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9268:118;;9419:4;9400:24;;9461:4;-1:-1:-1::0;;;;;9461:25:108::2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9438:50;;9525:4;-1:-1:-1::0;;;;;9525:25:108::2;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9502:50;;9609:4;-1:-1:-1::0;;;;;9609:16:108::2;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9566:61:::0;;-1:-1:-1;9566:61:108;-1:-1:-1;9566:61:108;-1:-1:-1;9233:714:108::2;::::0;-1:-1:-1;9233:714:108::2;;9677:10;::::0;;9751:60:::2;::::0;-1:-1:-1;;;9751:60:108;;-1:-1:-1;;;;;178:32:110;;;9751:60:108;;::::2;160:51:110::0;;;;9677:10:108;::::2;::::0;-1:-1:-1;9677:10:108;;9751:44:::2;::::0;133:18:110;;9751:60:108::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;9868:10:108::2;::::0;;:68:::2;::::0;-1:-1:-1;;;9868:68:108;;-1:-1:-1;;;;;178:32:110;;;9868:68:108;;::::2;160:51:110::0;;;;9702:109:108;;-1:-1:-1;9702:109:108;;-1:-1:-1;9868:10:108::2;::::0;:22:::2;::::0;133:18:110;;9868:68:108::2;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9825:111:::0;;-1:-1:-1;9825:111:108;-1:-1:-1;9825:111:108;-1:-1:-1;9233:714:108::2;-1:-1:-1::0;;;;;9978:13:108;::::2;::::0;;::::2;::::0;:30:::2;;-1:-1:-1::0;;;;;;9995:13:108;::::2;::::0;::::2;9978:30;9957:114;;;::::0;-1:-1:-1;;;9957:114:108;;12411:2:110;9957:114:108::2;::::0;::::2;12393:21:110::0;12450:2;12430:18;;;12423:30;12489:34;12469:18;;;12462:62;-1:-1:-1;;;12540:18:110;;;12533:35;12585:19;;9957:114:108::2;12209:401:110::0;9957:114:108::2;10141:4;10082:11;:56;10121:6;10129;10104:32;;;;;;;;;:::i;:::-;;::::0;;;;::::2;-1:-1:-1::0;;10104:32:108;;;;;;10094:43;;10104:32:::2;10094:43:::0;;::::2;::::0;10082:56;;;;::::2;::::0;;;;;;;-1:-1:-1;10082:56:108;;;:63;;-1:-1:-1;;10082:63:108::2;::::0;::::2;;::::0;;;::::2;::::0;;;10181:420;;10082:63:::2;10181:420:::0;::::2;::::0;;-1:-1:-1;;;;;10181:420:108;;::::2;::::0;;;;::::2;::::0;;::::2;::::0;;;;;::::2;::::0;;;;;;;;;;;;;;;;;;::::2;::::0;;::::2;::::0;;;;;;10495:29;;;;::::2;::::0;;;;;10181:420;;;;;;10557:29;;;;::::2;::::0;;;;;;10181:420;;;;;;10156:6:::2;:455:::0;;-1:-1:-1;10156:455:108;::::2;::::0;;;;;;;::::2;::::0;;::::2;::::0;;::::2;::::0;;-1:-1:-1;;;;;;10156:455:108;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;;;;;;;::::2;::::0;;::::2;::::0;;;::::2;::::0;;;;;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;;;;;;;;;;;;;;-1:-1:-1;;10156:455:108;;;;;;;-1:-1:-1;;10156:455:108::2;::::0;;;::::2;;::::0;;;;;;;;;;;-1:-1:-1;;;;;;10156:455:108;;::::2;-1:-1:-1::0;;;;;10156:455:108;;::::2;;::::0;;;;;;;;;;;;;;::::2;::::0;::::2;::::0;;;::::2;::::0;;-1:-1:-1;8524:2094:108:o;7339:77::-;1094:13:0;:11;:13::i;:::-;7390:12:108::1;:19:::0;;-1:-1:-1;;;;7390:19:108::1;-1:-1:-1::0;;;7390:19:108::1;::::0;;7339:77::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;12817:2:110;2154:73:0::1;::::0;::::1;12799:21:110::0;12856:2;12836:18;;;12829:30;12895:34;12875:18;;;12868:62;-1:-1:-1;;;12946:18:110;;;12939:36;12992:19;;2154:73:0::1;12615:402:110::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1701:299:56:-;-1:-1:-1;;;;;;;;;;;;1827:9:56;1871:6;;;:42;;-1:-1:-1;1906:7:56;;-1:-1:-1;;;;;1881:32:56;1901:1;1886:11;1901:1;1881:32;1886:11;:::i;:::-;1882:15;-1:-1:-1;1881:21:56;;1882:15;1881:21;:::i;:::-;:32;1871:42;1850:114;;;;-1:-1:-1;;;1850:114:56;;13224:2:110;1850:114:56;;;13206:21:110;13263:2;13243:18;;;13236:30;13302:27;13282:18;;;13275:55;13347:18;;1850:114:56;13022:349:110;1850:114:56;1981:12;;;;;;;;;;;;;1701:299;-1:-1:-1;;;1701:299:56:o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;13578:2:110;1414:68:0;;;13560:21:110;;;13597:18;;;13590:30;13656:34;13636:18;;;13629:62;13708:18;;1414:68:0;13376:356:110;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;627:1222:61:-;734:24;772;810:21;873:23;:21;:23::i;:::-;856:40;;940:4;-1:-1:-1;;;;;925:41:61;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;906:62;;1012:4;-1:-1:-1;;;;;997:41:61;;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;978:62;;1165:16;1195;1225:25;1278:4;-1:-1:-1;;;;;1263:32:61;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1151:146;;;;;;1333:14;1311:36;;:18;:36;;;1307:536;;1410:18;1431:35;1448:18;1431:14;:35;:::i;:::-;1410:56;;1660:11;1590:81;;1598:39;1618:8;-1:-1:-1;;;;;1598:39:61;1628:8;-1:-1:-1;;;;;1598:39:61;:19;:39::i;:::-;:42;1590:81;;;-1:-1:-1;;;;;1590:51:61;:81;:::i;:::-;1554:117;;;;:::i;:::-;;;1821:11;1751:81;;1759:39;1779:8;-1:-1:-1;;;;;1759:39:61;1789:8;-1:-1:-1;;;;;1759:39:61;:19;:39::i;:::-;:42;1751:81;;;-1:-1:-1;;;;;1751:51:61;:81;:::i;:::-;1715:117;;;;:::i;:::-;;;1349:494;1307:536;846:1003;;;627:1222;;;;;:::o;405:119::-;461:6;493:23;511:5;493:15;:23;:::i;:::-;479:38;;405:119;:::o;4779:844:56:-;-1:-1:-1;;;;;;;;;;;;4938:1:56;4924:11;:15;4916:66;;;;-1:-1:-1;;;4916:66:56;;14282:2:110;4916:66:56;;;14264:21:110;14321:2;14301:18;;;14294:30;14360:34;14340:18;;;14333:62;-1:-1:-1;;;14411:18:110;;;14404:36;14457:19;;4916:66:56;14080:402:110;4916:66:56;4996:14;4992:50;;-1:-1:-1;5019:23:56;;;;;;;;;-1:-1:-1;5019:23:56;;5012:30;;4992:50;-1:-1:-1;;;;;5057:30:56;;5053:564;;5103:14;5120:39;5148:11;530:3;5121:23;;;5120:39;:::i;:::-;5103:56;-1:-1:-1;;;;;;5198:27:56;;;5173:116;;;;-1:-1:-1;;;5173:116:56;;14689:2:110;5173:116:56;;;14671:21:110;14728:2;14708:18;;;14701:30;14767:32;14747:18;;;14740:60;14817:18;;5173:116:56;14487:354:110;5173:116:56;5310:26;;;;;;;;5328:6;-1:-1:-1;;;;;5310:26:56;;;;5303:33;;;;;5053:564;5367:14;5384:45;5400:9;-1:-1:-1;;;5417:11:56;1064:7:57;1084:9;1095;1108:13;1116:1;1119;1108:7;:13::i;:::-;1083:38;;;;1132:10;1158:1;1145:15;;;;;:::i;:::-;1155:1;1152;1145:15;1132:28;;1179:1;1174:2;:6;1170:18;;;1182:6;1187:1;1182:6;;:::i;:::-;;;1170:18;1198:7;1203:2;1198:7;;:::i;:::-;;-1:-1:-1;1220:6:57;1216:24;;1235:5;1239:1;1235;:5;:::i;:::-;1228:12;;;;;;;1216:24;1263:1;1259;:5;1251:44;;;;-1:-1:-1;;;1251:44:57;;15178:2:110;1251:44:57;;;15160:21:110;15217:2;15197:18;;;15190:30;15256:28;15236:18;;;15229:56;15302:18;;1251:44:57;14976:350:110;1251:44:57;1312:16;1320:1;1323;1326;1312:7;:16::i;:::-;1305:23;;;;;962:373;;;;;;:::o;215:240::-;301:9;;;-1:-1:-1;;360:1:57;357;350:31;337:44;-1:-1:-1;395:5:57;399:1;395;:5;:::i;:::-;391:9;-1:-1:-1;414:6:57;391:9;414:2;:6;:::i;:::-;410:10;;439:1;434:2;:6;430:18;;;442:6;447:1;442:6;;:::i;:::-;;;430:18;327:128;215:240;;;;;:::o;461:495::-;563:7;;609:10;617:1;609:10;:::i;:::-;597:23;;;-1:-1:-1;630:9:57;597:23;:1;630:9;:::i;:::-;;-1:-1:-1;649:9:57;654:4;649:9;;:::i;:::-;;-1:-1:-1;703:4:57;686:13;703:4;686:13;:::i;:::-;678:29;;;;:::i;:::-;:33;;710:1;678:33;:::i;:::-;673:39;;:1;:39;:::i;:::-;668:44;;;;:::i;:::-;;-1:-1:-1;734:1:57;754:5;734:1;754;:5;:::i;:::-;750:9;;:1;:9;:::i;:::-;745:14;;;;:::i;:::-;;-1:-1:-1;778:5:57;745:14;778:1;:5;:::i;:::-;774:9;;:1;:9;:::i;:::-;769:14;;;;:::i;:::-;;-1:-1:-1;802:5:57;769:14;802:1;:5;:::i;:::-;798:9;;:1;:9;:::i;:::-;793:14;;;;:::i;:::-;;-1:-1:-1;826:5:57;793:14;826:1;:5;:::i;:::-;822:9;;:1;:9;:::i;:::-;817:14;;;;:::i;:::-;;-1:-1:-1;850:5:57;817:14;850:1;:5;:::i;:::-;846:9;;:1;:9;:::i;:::-;841:14;;;;:::i;:::-;;-1:-1:-1;874:5:57;841:14;874:1;:5;:::i;:::-;870:9;;:1;:9;:::i;:::-;865:14;;;;:::i;:::-;;-1:-1:-1;898:5:57;865:14;898:1;:5;:::i;:::-;894:9;;:1;:9;:::i;:::-;889:14;;;;:::i;:::-;;-1:-1:-1;922:5:57;889:14;922:1;:5;:::i;:::-;918:9;;:1;:9;:::i;:::-;913:14;;;;:::i;:::-;;-1:-1:-1;944:5:57;913:14;944:1;:5;:::i;:::-;937:12;461:495;-1:-1:-1;;;;;;461:495:57:o;222:131:110:-;-1:-1:-1;;;;;297:31:110;;287:42;;277:70;;343:1;340;333:12;358:247;417:6;470:2;458:9;449:7;445:23;441:32;438:52;;;486:1;483;476:12;438:52;525:9;512:23;544:31;569:5;544:31;:::i;792:388::-;860:6;868;921:2;909:9;900:7;896:23;892:32;889:52;;;937:1;934;927:12;889:52;976:9;963:23;995:31;1020:5;995:31;:::i;:::-;1045:5;-1:-1:-1;1102:2:110;1087:18;;1074:32;1115:33;1074:32;1115:33;:::i;:::-;1167:7;1157:17;;;792:388;;;;;:::o;1377:180::-;1436:6;1489:2;1477:9;1468:7;1464:23;1460:32;1457:52;;;1505:1;1502;1495:12;1457:52;-1:-1:-1;1528:23:110;;1377:180;-1:-1:-1;1377:180:110:o;1562:529::-;1639:6;1647;1655;1708:2;1696:9;1687:7;1683:23;1679:32;1676:52;;;1724:1;1721;1714:12;1676:52;1763:9;1750:23;1782:31;1807:5;1782:31;:::i;:::-;1832:5;-1:-1:-1;1889:2:110;1874:18;;1861:32;1902:33;1861:32;1902:33;:::i;:::-;1954:7;-1:-1:-1;2013:2:110;1998:18;;1985:32;2026:33;1985:32;2026:33;:::i;:::-;2078:7;2068:17;;;1562:529;;;;;:::o;2096:127::-;2157:10;2152:3;2148:20;2145:1;2138:31;2188:4;2185:1;2178:15;2212:4;2209:1;2202:15;2228:127;2289:10;2284:3;2280:20;2277:1;2270:31;2320:4;2317:1;2310:15;2344:4;2341:1;2334:15;2360:128;2400:3;2431:1;2427:6;2424:1;2421:13;2418:39;;;2437:18;;:::i;:::-;-1:-1:-1;2473:9:110;;2360:128::o;2493:179::-;2571:13;;2624:22;2613:34;;2603:45;;2593:73;;2662:1;2659;2652:12;2593:73;2493:179;;;:::o;2677:473::-;2780:6;2788;2796;2804;2812;2865:3;2853:9;2844:7;2840:23;2836:33;2833:53;;;2882:1;2879;2872:12;2833:53;2905:39;2934:9;2905:39;:::i;:::-;2895:49;;2984:2;2973:9;2969:18;2963:25;2953:35;;3028:2;3017:9;3013:18;3007:25;2997:35;;3072:2;3061:9;3057:18;3051:25;3041:35;;3095:49;3139:3;3128:9;3124:19;3095:49;:::i;:::-;3085:59;;2677:473;;;;;;;;:::o;3977:168::-;4017:7;4083:1;4079;4075:6;4071:14;4068:1;4065:21;4060:1;4053:9;4046:17;4042:45;4039:71;;;4090:18;;:::i;:::-;-1:-1:-1;4130:9:110;;3977:168::o;4150:135::-;4189:3;-1:-1:-1;;4210:17:110;;4207:43;;;4230:18;;:::i;:::-;-1:-1:-1;4277:1:110;4266:13;;4150:135::o;4701:273::-;4769:6;4822:2;4810:9;4801:7;4797:23;4793:32;4790:52;;;4838:1;4835;4828:12;4790:52;4870:9;4864:16;4920:4;4913:5;4909:16;4902:5;4899:27;4889:55;;4940:1;4937;4930:12;4979:127;5040:10;5035:3;5031:20;5028:1;5021:31;5071:4;5068:1;5061:15;5095:4;5092:1;5085:15;5111:120;5151:1;5177;5167:35;;5182:18;;:::i;:::-;-1:-1:-1;5216:9:110;;5111:120::o;6055:417::-;6257:2;6239:21;;;6296:2;6276:18;;;6269:30;6335:34;6330:2;6315:18;;6308:62;-1:-1:-1;;;6401:2:110;6386:18;;6379:51;6462:3;6447:19;;6055:417::o;6477:333::-;-1:-1:-1;;6704:2:110;6700:15;;;6696:24;;6684:37;;6755:15;;;;6751:24;6746:2;6737:12;;6730:46;6801:2;6792:12;;6477:333::o;6815:404::-;7017:2;6999:21;;;7056:2;7036:18;;;7029:30;7095:34;7090:2;7075:18;;7068:62;-1:-1:-1;;;7161:2:110;7146:18;;7139:38;7209:3;7194:19;;6815:404::o;8733:167::-;8811:13;;8864:10;8853:22;;8843:33;;8833:61;;8890:1;8887;8880:12;8905:328;8992:6;9000;9008;9061:2;9049:9;9040:7;9036:23;9032:32;9029:52;;;9077:1;9074;9067:12;9029:52;9106:9;9100:16;9090:26;;9156:2;9145:9;9141:18;9135:25;9125:35;;9179:48;9223:2;9212:9;9208:18;9179:48;:::i;:::-;9169:58;;8905:328;;;;;:::o;11190:251::-;11260:6;11313:2;11301:9;11292:7;11288:23;11284:32;11281:52;;;11329:1;11326;11319:12;11281:52;11361:9;11355:16;11380:31;11405:5;11380:31;:::i;11446:184::-;11516:6;11569:2;11557:9;11548:7;11544:23;11540:32;11537:52;;;11585:1;11582;11575:12;11537:52;-1:-1:-1;11608:16:110;;11446:184;-1:-1:-1;11446:184:110:o;11635:188::-;11714:13;;-1:-1:-1;;;;;11756:42:110;;11746:53;;11736:81;;11813:1;11810;11803:12;11828:376;11915:6;11923;11931;11984:2;11972:9;11963:7;11959:23;11955:32;11952:52;;;12000:1;11997;11990:12;11952:52;12023:40;12053:9;12023:40;:::i;:::-;12013:50;;12082:49;12127:2;12116:9;12112:18;12082:49;:::i;:::-;12072:59;;12150:48;12194:2;12183:9;12179:18;12150:48;:::i;13737:221::-;13776:4;13805:10;13865;;;;13835;;13887:12;;;13884:38;;;13902:18;;:::i;:::-;13939:13;;13737:221;-1:-1:-1;;;13737:221:110:o;13963:112::-;13995:1;14021;14011:35;;14026:18;;:::i;:::-;-1:-1:-1;14060:9:110;;13963:112::o;14846:125::-;14886:4;14914:1;14911;14908:8;14905:34;;;14919:18;;:::i;:::-;-1:-1:-1;14956:9:110;;14846:125::o;15331:136::-;15366:3;-1:-1:-1;;;15387:22:110;;15384:48;;;15412:18;;:::i;:::-;-1:-1:-1;15452:1:110;15448:13;;15331:136::o",
  "source": "// SPDX-License-Identifier: Unlicense\n\npragma solidity =0.8.9;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\";\n\nimport \"../external/interfaces/AggregatorV3Interface.sol\";\nimport \"../external/interfaces/IUniswapV2Factory.sol\";\nimport \"../external/interfaces/IUniswapV2Pair.sol\";\n\nimport \"../external/libraries/FixedPoint.sol\";\nimport \"../external/libraries/UniswapV2OracleLibrary.sol\";\nimport \"../external/libraries/UniswapV2Library.sol\";\n\nimport \"../interfaces/dex-v2/pool/IVaderPoolV2.sol\";\n\ncontract TwapOracle is Ownable {\n    /* ========== LIBRARIES ========== */\n\n    using FixedPoint for *;\n\n    /* ========== STRUCTURES ========== */\n\n    struct PairData {\n        // The address of the pair interface (IUniswapV2Pair or IVaderPoolV2)\n        address pair;\n        // The first token of the pair.\n        address token0;\n        // The second token of the pair.\n        address token1;\n        // The last cumulative price of the first token.\n        uint256 price0CumulativeLast;\n        // The last cumulative price of the second token.\n        uint256 price1CumulativeLast;\n        // The block timestamp of the last update.\n        uint32 blockTimestampLast;\n        // The average price of the first token.\n        FixedPoint.uq112x112 price0Average;\n        // The average price of the second token.\n        FixedPoint.uq112x112 price1Average;\n    }\n\n    /* ========== STATE VARIABLES ========== */\n\n    // The address of the deployed VADER token.\n    address public VADER;\n\n    // The address of the deployed USDV token.\n    address public USDV;\n\n    // A predicated which determines if USDV is enabled.\n    bool private _usdvEnabled;\n\n    // The mapping of native assets to USD aggregators.\n    mapping(address => address) private _aggregators;\n\n    // The vader pool used across all native assets.\n    IVaderPoolV2 private _vaderPool;\n\n    // The frequency that the pair collection should be updated.\n    uint256 private _updatePeriod;\n\n    // The collection of pairs tracked by the TWAP oracle.\n    PairData[] private _pairs;\n\n    // A mapping of pair hashes to existence predicates.\n    mapping(bytes32 => bool) private _pairExists;\n\n    /* ========== CONSTRUCTOR ========== */\n\n    /**\n     * @dev Constructs a new TWAP oracle with a VADER pool and update period.\n     * @param vaderPool The VADER pool address.\n     * @param updatePeriod The required period of time between each oracle update.\n     */\n    constructor(address vaderPool, uint256 updatePeriod) Ownable() {\n        _vaderPool = IVaderPoolV2(vaderPool);\n        _updatePeriod = updatePeriod;\n    }\n\n    /* ========== MODIFIERS ========== */\n\n    modifier initialized() {\n        require(\n            VADER != address(0) && USDV != address(0),\n            \"TwapOracle::initialized: not initialized\"\n        );\n        _;\n    }\n\n    /* ========== VIEWS ========== */\n\n    /**\n     * @dev Checks if a pair exists for the supplied {token0} and {token1} addresses.\n     * @param token0 The primary token address, either VADER or USDV.\n     * @param token1 The asset token address, paired to either VADER or USDV.\n     */\n    function pairExists(address token0, address token1)\n        public\n        view\n        returns (bool)\n    {\n        bytes32 pairHash0 = keccak256(abi.encodePacked(token0, token1));\n        bytes32 pairHash1 = keccak256(abi.encodePacked(token1, token0));\n        return _pairExists[pairHash0] || _pairExists[pairHash1];\n    }\n\n    /**\n     * @dev Performs a consultation to retrieve the equivalent to {amountIn} for the supplied {token} address.\n     * The {token} address must have a registered pairing, otherwise the transaction will revert.\n     * @param token The token address to consult the equivalent {amountIn} for.\n     */\n    function consult(address token) public view returns (uint256 result) {\n        uint256 pairCount = _pairs.length;\n        uint256 sumNative = 0;\n        uint256 sumUSD = 0;\n\n        for (uint256 i = 0; i < pairCount; i++) {\n            PairData memory pairData = _pairs[i];\n\n            if (token == pairData.token0) {\n                //\n                // TODO - Review:\n                //   Verify price1Average is amount of USDV against 1 unit of token1\n                //\n\n                sumNative += pairData.price1Average.mul(1).decode144(); // native asset amount\n                if (pairData.price1Average._x != 0) {\n                    require(sumNative != 0);\n                }\n\n                (\n                    uint80 roundID,\n                    int256 price,\n                    ,\n                    ,\n                    uint80 answeredInRound\n                ) = AggregatorV3Interface(_aggregators[pairData.token1])\n                        .latestRoundData();\n\n                require(\n                    answeredInRound >= roundID,\n                    \"TwapOracle::consult: stale chainlink price\"\n                );\n                require(\n                    price != 0,\n                    \"TwapOracle::consult: chainlink malfunction\"\n                );\n\n                sumUSD += uint256(price) * (10**10);\n            }\n        }\n        require(sumNative != 0, \"TwapOracle::consult: Sum of native is zero\");\n        result = ((sumUSD * IERC20Metadata(token).decimals()) / sumNative);\n    }\n\n    /**\n     * @dev Gets the exchange rate for the Vader to USDV.\n     */\n    function getRate() public view returns (uint256 result) {\n        uint256 tUSDInUSDV = consult(USDV);\n        uint256 tUSDInVader = consult(VADER);\n\n        result = tUSDInUSDV / tUSDInVader;\n    }\n\n    /**\n     * @dev Gets the VADER amount from the supplied USDV amount.\n     * @param usdvAmount The amount in USDV.\n     */\n    function usdvtoVader(uint256 usdvAmount) external view returns (uint256) {\n        return usdvAmount * getRate();\n    }\n\n    /**\n     * @dev Gets the USDV amount from the supplied VADER amount.\n     * @param vaderAmount The amount in VADER.\n     */\n    function vaderToUsdv(uint256 vaderAmount) external view returns (uint256) {\n        if (!_usdvEnabled) {\n            // consult call returns true USD amount against 1 Vader and is multiplied with {vaderAmount}.\n            return consult(VADER) * vaderAmount;\n        }\n\n        // usdv price is disabled so true USD value of both Vader and USDV is taken into account.\n        return vaderAmount / getRate();\n    }\n\n    /* ========== MUTATIVE FUNCTIONS ========== */\n\n    /**\n     * @dev Initializes the variables for VADER and USDV.\n     * @param _usdv The USDV token address.\n     * @param _vader The VADER token address.\n     */\n    function initialize(address _usdv, address _vader) external onlyOwner {\n        require(\n            VADER == address(0),\n            \"TwapOracle::initialize: Vader already set\"\n        );\n        require(USDV == address(0), \"TwapOracle::initialize: USDV already set\");\n        require(\n            _usdv != address(0),\n            \"TwapOracle::initialize: can not set to a zero address\"\n        );\n        require(\n            _vader != address(0),\n            \"TwapOracle::initialize: can not set to a zero address\"\n        );\n\n        VADER = _vader;\n        USDV = _usdv;\n    }\n\n    /**\n     * @dev Enables utilization of USDV.\n     */\n    function enableUSDV() external onlyOwner {\n        _usdvEnabled = true;\n    }\n\n    /**\n     * @dev Registers a chainlink {aggregator} for the supplied {asset} address.\n     * @param asset The address of the native asset.\n     * @param aggregator The address of the chainlink aggregator.\n     */\n    function registerAggregator(address asset, address aggregator)\n        external\n        onlyOwner\n        initialized\n    {\n        require(\n            asset != address(0),\n            \"TwapOracle::registerAggregator: asset zero address provided\"\n        );\n        require(\n            aggregator != address(0),\n            \"TwapOracle::registerAggregator: aggregator zero address provided\"\n        );\n        require(\n            _aggregators[asset] == address(0),\n            \"TwapOracle::registerAggregator: aggregator already exists\"\n        );\n\n        _aggregators[asset] = aggregator;\n    }\n\n    /**\n     * @dev Registers either a VADER or USDV pairing in the TWAP oracle.\n     * @param factory The factory address, if any.\n     * @param token0 The primary token address, either VADER or USDV.\n     * @param token1 The asset token address, paired to VADER or USDV.\n     */\n    function registerPair(\n        address factory,\n        address token0,\n        address token1\n    ) external onlyOwner initialized {\n        require(\n            token0 == VADER || token0 == USDV,\n            \"TwapOracle::registerPair: Invalid token0 address\"\n        );\n        require(\n            token0 != token1,\n            \"TwapOracle::registerPair: Same token address\"\n        );\n        require(\n            !pairExists(token0, token1),\n            \"TwapOracle::registerPair: Pair exists\"\n        );\n\n        address pairAddr;\n        uint256 price0CumulativeLast;\n        uint256 price1CumulativeLast;\n        uint112 reserve0;\n        uint112 reserve1;\n        uint32 blockTimestampLast;\n\n        if (token0 == VADER) {\n            IUniswapV2Pair pair = IUniswapV2Pair(\n                IUniswapV2Factory(factory).getPair(token0, token1)\n            );\n            pairAddr = address(pair);\n            price0CumulativeLast = pair.price0CumulativeLast();\n            price1CumulativeLast = pair.price1CumulativeLast();\n            (reserve0, reserve1, blockTimestampLast) = pair.getReserves();\n        } else {\n            pairAddr = address(_vaderPool);\n            (price0CumulativeLast, price1CumulativeLast, ) = _vaderPool\n                .cumulativePrices(IERC20(token1));\n            (reserve0, reserve1, blockTimestampLast) = _vaderPool.getReserves(\n                IERC20(token1)\n            );\n        }\n\n        require(\n            reserve0 != 0 && reserve1 != 0,\n            \"TwapOracle::registerPair: No reserves\"\n        );\n\n        _pairExists[keccak256(abi.encodePacked(token0, token1))] = true;\n\n        _pairs.push(\n            PairData({\n                pair: pairAddr,\n                token0: token0,\n                token1: token1,\n                price0CumulativeLast: price0CumulativeLast,\n                price1CumulativeLast: price1CumulativeLast,\n                blockTimestampLast: blockTimestampLast,\n                price0Average: FixedPoint.uq112x112({_x: 0}),\n                price1Average: FixedPoint.uq112x112({_x: 0})\n            })\n        );\n    }\n\n    /**\n     * @dev Updates the average prices for all token pairs registered in the TWAP oracle.\n     */\n    function update() external onlyOwner initialized {\n        uint256 pairCount = _pairs.length;\n\n        // Update all of the registered pairs in the TWAP oracle.\n        for (uint256 i = 0; i < pairCount; i++) {\n            PairData storage pairData = _pairs[i];\n\n            // Get the current cumulative prices and block timestamp of the current pairing.\n            (\n                uint256 price0Cumulative,\n                uint256 price1Cumulative,\n                uint32 blockTimestamp\n            ) = (pairData.token0 == VADER)\n                    ? UniswapV2OracleLibrary.currentCumulativePrices(\n                        pairData.pair\n                    )\n                    : _vaderPool.cumulativePrices(IERC20(pairData.token1));\n\n            unchecked {\n                // Ensure that at least one full period has passed since the pairing was last update.\n                uint32 timeElapsed = blockTimestamp -\n                    pairData.blockTimestampLast;\n                require(\n                    timeElapsed >= _updatePeriod,\n                    \"TwapOracle::update: Period not elapsed\"\n                );\n\n                // Cumulative price is in (uq112x112 price * seconds) units so we simply wrap it after division by time elapsed.\n                pairData.price0Average = FixedPoint.uq112x112(\n                    uint224(\n                        (price0Cumulative - pairData.price0CumulativeLast) /\n                            timeElapsed\n                    )\n                );\n                pairData.price1Average = FixedPoint.uq112x112(\n                    uint224(\n                        (price1Cumulative - pairData.price1CumulativeLast) /\n                            timeElapsed\n                    )\n                );\n            }\n\n            // Update the stored pairing data\n            pairData.price0CumulativeLast = price0Cumulative;\n            pairData.price1CumulativeLast = price1Cumulative;\n            pairData.blockTimestampLast = blockTimestamp;\n        }\n    }\n}\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/twap/TwapOracle.sol",
  "ast": {
    "absolutePath": "project:/contracts/twap/TwapOracle.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        15040
      ],
      "Babylonian": [
        15568
      ],
      "BitMath": [
        15846
      ],
      "Context": [
        3760
      ],
      "FixedPoint": [
        16493
      ],
      "FullMath": [
        16725
      ],
      "IBasePoolV2": [
        19623
      ],
      "IERC165": [
        5523
      ],
      "IERC20": [
        969
      ],
      "IERC20Metadata": [
        1900
      ],
      "IERC721": [
        3355
      ],
      "IUniswapV2ERC20": [
        15172
      ],
      "IUniswapV2Factory": [
        15235
      ],
      "IUniswapV2Pair": [
        15365
      ],
      "IVaderPoolV2": [
        19775
      ],
      "Ownable": [
        112
      ],
      "SafeMath": [
        8242
      ],
      "TwapOracle": [
        24280
      ],
      "UniswapV2Library": [
        17321
      ],
      "UniswapV2OracleLibrary": [
        17428
      ]
    },
    "id": 24281,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 23518,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "39:23:108"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 23519,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 113,
        "src": "64:52:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 23520,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 970,
        "src": "117:56:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
        "id": 23521,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 1901,
        "src": "174:75:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/external/interfaces/AggregatorV3Interface.sol",
        "file": "../external/interfaces/AggregatorV3Interface.sol",
        "id": 23522,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 15041,
        "src": "251:58:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/external/interfaces/IUniswapV2Factory.sol",
        "file": "../external/interfaces/IUniswapV2Factory.sol",
        "id": 23523,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 15236,
        "src": "310:54:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/external/interfaces/IUniswapV2Pair.sol",
        "file": "../external/interfaces/IUniswapV2Pair.sol",
        "id": 23524,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 15366,
        "src": "365:51:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/external/libraries/FixedPoint.sol",
        "file": "../external/libraries/FixedPoint.sol",
        "id": 23525,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 16494,
        "src": "418:46:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/external/libraries/UniswapV2OracleLibrary.sol",
        "file": "../external/libraries/UniswapV2OracleLibrary.sol",
        "id": 23526,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 17429,
        "src": "465:58:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/external/libraries/UniswapV2Library.sol",
        "file": "../external/libraries/UniswapV2Library.sol",
        "id": 23527,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 17322,
        "src": "524:52:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/dex-v2/pool/IVaderPoolV2.sol",
        "file": "../interfaces/dex-v2/pool/IVaderPoolV2.sol",
        "id": 23528,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 24281,
        "sourceUnit": 19776,
        "src": "578:52:108",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 23529,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "655:7:108"
            },
            "id": 23530,
            "nodeType": "InheritanceSpecifier",
            "src": "655:7:108"
          }
        ],
        "canonicalName": "TwapOracle",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 24280,
        "linearizedBaseContracts": [
          24280,
          112,
          3760
        ],
        "name": "TwapOracle",
        "nameLocation": "641:10:108",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 23532,
            "libraryName": {
              "id": 23531,
              "name": "FixedPoint",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 16493,
              "src": "718:10:108"
            },
            "nodeType": "UsingForDirective",
            "src": "712:23:108"
          },
          {
            "canonicalName": "TwapOracle.PairData",
            "id": 23551,
            "members": [
              {
                "constant": false,
                "id": 23534,
                "mutability": "mutable",
                "name": "pair",
                "nameLocation": "897:4:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "889:12:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23533,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "889:7:108",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23536,
                "mutability": "mutable",
                "name": "token0",
                "nameLocation": "959:6:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "951:14:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23535,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "951:7:108",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23538,
                "mutability": "mutable",
                "name": "token1",
                "nameLocation": "1024:6:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "1016:14:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 23537,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1016:7:108",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23540,
                "mutability": "mutable",
                "name": "price0CumulativeLast",
                "nameLocation": "1105:20:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "1097:28:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23539,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1097:7:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23542,
                "mutability": "mutable",
                "name": "price1CumulativeLast",
                "nameLocation": "1201:20:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "1193:28:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 23541,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1193:7:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23544,
                "mutability": "mutable",
                "name": "blockTimestampLast",
                "nameLocation": "1289:18:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "1282:25:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 23543,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1282:6:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23547,
                "mutability": "mutable",
                "name": "price0Average",
                "nameLocation": "1387:13:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "1366:34:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_uq112x112_$15854_storage_ptr",
                  "typeString": "struct FixedPoint.uq112x112"
                },
                "typeName": {
                  "id": 23546,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 23545,
                    "name": "FixedPoint.uq112x112",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 15854,
                    "src": "1366:20:108"
                  },
                  "referencedDeclaration": 15854,
                  "src": "1366:20:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_uq112x112_$15854_storage_ptr",
                    "typeString": "struct FixedPoint.uq112x112"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 23550,
                "mutability": "mutable",
                "name": "price1Average",
                "nameLocation": "1481:13:108",
                "nodeType": "VariableDeclaration",
                "scope": 23551,
                "src": "1460:34:108",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_uq112x112_$15854_storage_ptr",
                  "typeString": "struct FixedPoint.uq112x112"
                },
                "typeName": {
                  "id": 23549,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 23548,
                    "name": "FixedPoint.uq112x112",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 15854,
                    "src": "1460:20:108"
                  },
                  "referencedDeclaration": 15854,
                  "src": "1460:20:108",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_uq112x112_$15854_storage_ptr",
                    "typeString": "struct FixedPoint.uq112x112"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "PairData",
            "nameLocation": "792:8:108",
            "nodeType": "StructDefinition",
            "scope": 24280,
            "src": "785:716:108",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "01681315",
            "id": 23553,
            "mutability": "mutable",
            "name": "VADER",
            "nameLocation": "1619:5:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "1604:20:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23552,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1604:7:108",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e2c3b046",
            "id": 23555,
            "mutability": "mutable",
            "name": "USDV",
            "nameLocation": "1693:4:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "1678:19:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 23554,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1678:7:108",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23557,
            "mutability": "mutable",
            "name": "_usdvEnabled",
            "nameLocation": "1774:12:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "1761:25:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 23556,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "1761:4:108",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23561,
            "mutability": "mutable",
            "name": "_aggregators",
            "nameLocation": "1885:12:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "1849:48:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 23560,
              "keyType": {
                "id": 23558,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1857:7:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1849:27:108",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 23559,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1868:7:108",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23564,
            "mutability": "mutable",
            "name": "_vaderPool",
            "nameLocation": "1978:10:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "1957:31:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
              "typeString": "contract IVaderPoolV2"
            },
            "typeName": {
              "id": 23563,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 23562,
                "name": "IVaderPoolV2",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 19775,
                "src": "1957:12:108"
              },
              "referencedDeclaration": 19775,
              "src": "1957:12:108",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                "typeString": "contract IVaderPoolV2"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23566,
            "mutability": "mutable",
            "name": "_updatePeriod",
            "nameLocation": "2076:13:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "2060:29:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 23565,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2060:7:108",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23570,
            "mutability": "mutable",
            "name": "_pairs",
            "nameLocation": "2174:6:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "2155:25:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_PairData_$23551_storage_$dyn_storage",
              "typeString": "struct TwapOracle.PairData[]"
            },
            "typeName": {
              "baseType": {
                "id": 23568,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 23567,
                  "name": "PairData",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23551,
                  "src": "2155:8:108"
                },
                "referencedDeclaration": 23551,
                "src": "2155:8:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                  "typeString": "struct TwapOracle.PairData"
                }
              },
              "id": 23569,
              "nodeType": "ArrayTypeName",
              "src": "2155:10:108",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_PairData_$23551_storage_$dyn_storage_ptr",
                "typeString": "struct TwapOracle.PairData[]"
              }
            },
            "visibility": "private"
          },
          {
            "constant": false,
            "id": 23574,
            "mutability": "mutable",
            "name": "_pairExists",
            "nameLocation": "2277:11:108",
            "nodeType": "VariableDeclaration",
            "scope": 24280,
            "src": "2244:44:108",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 23573,
              "keyType": {
                "id": 23571,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2252:7:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2244:24:108",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 23572,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2263:4:108",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 23594,
              "nodeType": "Block",
              "src": "2628:91:108",
              "statements": [
                {
                  "expression": {
                    "id": 23588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23584,
                      "name": "_vaderPool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23564,
                      "src": "2638:10:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                        "typeString": "contract IVaderPoolV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 23586,
                          "name": "vaderPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23577,
                          "src": "2664:9:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 23585,
                        "name": "IVaderPoolV2",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19775,
                        "src": "2651:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IVaderPoolV2_$19775_$",
                          "typeString": "type(contract IVaderPoolV2)"
                        }
                      },
                      "id": 23587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2651:23:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                        "typeString": "contract IVaderPoolV2"
                      }
                    },
                    "src": "2638:36:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                      "typeString": "contract IVaderPoolV2"
                    }
                  },
                  "id": 23589,
                  "nodeType": "ExpressionStatement",
                  "src": "2638:36:108"
                },
                {
                  "expression": {
                    "id": 23592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23590,
                      "name": "_updatePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23566,
                      "src": "2684:13:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23591,
                      "name": "updatePeriod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23579,
                      "src": "2700:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2684:28:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23593,
                  "nodeType": "ExpressionStatement",
                  "src": "2684:28:108"
                }
              ]
            },
            "documentation": {
              "id": 23575,
              "nodeType": "StructuredDocumentation",
              "src": "2340:220:108",
              "text": " @dev Constructs a new TWAP oracle with a VADER pool and update period.\n @param vaderPool The VADER pool address.\n @param updatePeriod The required period of time between each oracle update."
            },
            "id": 23595,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [],
                "id": 23582,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 23581,
                  "name": "Ownable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 112,
                  "src": "2618:7:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "2618:9:108"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23577,
                  "mutability": "mutable",
                  "name": "vaderPool",
                  "nameLocation": "2585:9:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23595,
                  "src": "2577:17:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2577:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23579,
                  "mutability": "mutable",
                  "name": "updatePeriod",
                  "nameLocation": "2604:12:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23595,
                  "src": "2596:20:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2596:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2576:41:108"
            },
            "returnParameters": {
              "id": 23583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2628:0:108"
            },
            "scope": 24280,
            "src": "2565:154:108",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23615,
              "nodeType": "Block",
              "src": "2791:156:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 23603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23598,
                            "name": "VADER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23553,
                            "src": "2822:5:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 23601,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2839:1:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 23600,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2831:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 23599,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2831:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2831:10:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2822:19:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 23609,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23604,
                            "name": "USDV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23555,
                            "src": "2845:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 23607,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2861:1:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 23606,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2853:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 23605,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2853:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 23608,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2853:10:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2845:18:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2822:41:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a65643a206e6f7420696e697469616c697a6564",
                        "id": 23611,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2877:42:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1c39b73f21e6271bf94bf07e3036ab7d0bc1bd2b4a5b3a9c470e3f110cee98d",
                          "typeString": "literal_string \"TwapOracle::initialized: not initialized\""
                        },
                        "value": "TwapOracle::initialized: not initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1c39b73f21e6271bf94bf07e3036ab7d0bc1bd2b4a5b3a9c470e3f110cee98d",
                          "typeString": "literal_string \"TwapOracle::initialized: not initialized\""
                        }
                      ],
                      "id": 23597,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2801:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23612,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2801:128:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23613,
                  "nodeType": "ExpressionStatement",
                  "src": "2801:128:108"
                },
                {
                  "id": 23614,
                  "nodeType": "PlaceholderStatement",
                  "src": "2939:1:108"
                }
              ]
            },
            "id": 23616,
            "name": "initialized",
            "nameLocation": "2777:11:108",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 23596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2788:2:108"
            },
            "src": "2768:179:108",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 23654,
              "nodeType": "Block",
              "src": "3349:218:108",
              "statements": [
                {
                  "assignments": [
                    23627
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23627,
                      "mutability": "mutable",
                      "name": "pairHash0",
                      "nameLocation": "3367:9:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 23654,
                      "src": "3359:17:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 23626,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3359:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23635,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23631,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23619,
                            "src": "3406:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23632,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23621,
                            "src": "3414:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23629,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3389:3:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 23630,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3389:16:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 23633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3389:32:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23628,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3379:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 23634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3379:43:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3359:63:108"
                },
                {
                  "assignments": [
                    23637
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23637,
                      "mutability": "mutable",
                      "name": "pairHash1",
                      "nameLocation": "3440:9:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 23654,
                      "src": "3432:17:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 23636,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3432:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23645,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 23641,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23621,
                            "src": "3479:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 23642,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23619,
                            "src": "3487:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 23639,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "3462:3:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 23640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "3462:16:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 23643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3462:32:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 23638,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "3452:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 23644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3452:43:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3432:63:108"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 23652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 23646,
                        "name": "_pairExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23574,
                        "src": "3512:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 23648,
                      "indexExpression": {
                        "id": 23647,
                        "name": "pairHash0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23627,
                        "src": "3524:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3512:22:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 23649,
                        "name": "_pairExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23574,
                        "src": "3538:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 23651,
                      "indexExpression": {
                        "id": 23650,
                        "name": "pairHash1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23637,
                        "src": "3550:9:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3538:22:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3512:48:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 23625,
                  "id": 23653,
                  "nodeType": "Return",
                  "src": "3505:55:108"
                }
              ]
            },
            "documentation": {
              "id": 23617,
              "nodeType": "StructuredDocumentation",
              "src": "2992:245:108",
              "text": " @dev Checks if a pair exists for the supplied {token0} and {token1} addresses.\n @param token0 The primary token address, either VADER or USDV.\n @param token1 The asset token address, paired to either VADER or USDV."
            },
            "functionSelector": "66a7bc4b",
            "id": 23655,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pairExists",
            "nameLocation": "3251:10:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23622,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23619,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "3270:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23655,
                  "src": "3262:14:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23618,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3262:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23621,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "3286:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23655,
                  "src": "3278:14:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23620,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3278:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3261:32:108"
            },
            "returnParameters": {
              "id": 23625,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23624,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23655,
                  "src": "3339:4:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 23623,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3339:4:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3338:6:108"
            },
            "scope": 24280,
            "src": "3242:325:108",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23786,
              "nodeType": "Block",
              "src": "3947:1450:108",
              "statements": [
                {
                  "assignments": [
                    23664
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23664,
                      "mutability": "mutable",
                      "name": "pairCount",
                      "nameLocation": "3965:9:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 23786,
                      "src": "3957:17:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23663,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3957:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23667,
                  "initialValue": {
                    "expression": {
                      "id": 23665,
                      "name": "_pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23570,
                      "src": "3977:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PairData_$23551_storage_$dyn_storage",
                        "typeString": "struct TwapOracle.PairData storage ref[] storage ref"
                      }
                    },
                    "id": 23666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "3977:13:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3957:33:108"
                },
                {
                  "assignments": [
                    23669
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23669,
                      "mutability": "mutable",
                      "name": "sumNative",
                      "nameLocation": "4008:9:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 23786,
                      "src": "4000:17:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23668,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4000:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23671,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 23670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4020:1:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4000:21:108"
                },
                {
                  "assignments": [
                    23673
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23673,
                      "mutability": "mutable",
                      "name": "sumUSD",
                      "nameLocation": "4039:6:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 23786,
                      "src": "4031:14:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23672,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4031:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23675,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 23674,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4048:1:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4031:18:108"
                },
                {
                  "body": {
                    "id": 23763,
                    "nodeType": "Block",
                    "src": "4100:1136:108",
                    "statements": [
                      {
                        "assignments": [
                          23688
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 23688,
                            "mutability": "mutable",
                            "name": "pairData",
                            "nameLocation": "4130:8:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 23763,
                            "src": "4114:24:108",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PairData_$23551_memory_ptr",
                              "typeString": "struct TwapOracle.PairData"
                            },
                            "typeName": {
                              "id": 23687,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 23686,
                                "name": "PairData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 23551,
                                "src": "4114:8:108"
                              },
                              "referencedDeclaration": 23551,
                              "src": "4114:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                "typeString": "struct TwapOracle.PairData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 23692,
                        "initialValue": {
                          "baseExpression": {
                            "id": 23689,
                            "name": "_pairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23570,
                            "src": "4141:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PairData_$23551_storage_$dyn_storage",
                              "typeString": "struct TwapOracle.PairData storage ref[] storage ref"
                            }
                          },
                          "id": 23691,
                          "indexExpression": {
                            "id": 23690,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23677,
                            "src": "4148:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4141:9:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairData_$23551_storage",
                            "typeString": "struct TwapOracle.PairData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4114:36:108"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 23696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23693,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23658,
                            "src": "4169:5:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 23694,
                              "name": "pairData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23688,
                              "src": "4178:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$23551_memory_ptr",
                                "typeString": "struct TwapOracle.PairData memory"
                              }
                            },
                            "id": 23695,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "token0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23536,
                            "src": "4178:15:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4169:24:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 23762,
                        "nodeType": "IfStatement",
                        "src": "4165:1061:108",
                        "trueBody": {
                          "id": 23761,
                          "nodeType": "Block",
                          "src": "4195:1031:108",
                          "statements": [
                            {
                              "expression": {
                                "id": 23705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 23697,
                                  "name": "sumNative",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23669,
                                  "src": "4371:9:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "hexValue": "31",
                                          "id": 23701,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "4411:1:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          },
                                          "value": "1"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_rational_1_by_1",
                                            "typeString": "int_const 1"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "id": 23698,
                                            "name": "pairData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 23688,
                                            "src": "4384:8:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_PairData_$23551_memory_ptr",
                                              "typeString": "struct TwapOracle.PairData memory"
                                            }
                                          },
                                          "id": 23699,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "price1Average",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 23550,
                                          "src": "4384:22:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                                            "typeString": "struct FixedPoint.uq112x112 memory"
                                          }
                                        },
                                        "id": 23700,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mul",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 15979,
                                        "src": "4384:26:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_struct$_uq112x112_$15854_memory_ptr_$_t_uint256_$returns$_t_struct$_uq144x112_$15857_memory_ptr_$bound_to$_t_struct$_uq112x112_$15854_memory_ptr_$",
                                          "typeString": "function (struct FixedPoint.uq112x112 memory,uint256) pure returns (struct FixedPoint.uq144x112 memory)"
                                        }
                                      },
                                      "id": 23702,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4384:29:108",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_uq144x112_$15857_memory_ptr",
                                        "typeString": "struct FixedPoint.uq144x112 memory"
                                      }
                                    },
                                    "id": 23703,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decode144",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 15939,
                                    "src": "4384:39:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_struct$_uq144x112_$15857_memory_ptr_$returns$_t_uint144_$bound_to$_t_struct$_uq144x112_$15857_memory_ptr_$",
                                      "typeString": "function (struct FixedPoint.uq144x112 memory) pure returns (uint144)"
                                    }
                                  },
                                  "id": 23704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4384:41:108",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint144",
                                    "typeString": "uint144"
                                  }
                                },
                                "src": "4371:54:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 23706,
                              "nodeType": "ExpressionStatement",
                              "src": "4371:54:108"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint224",
                                  "typeString": "uint224"
                                },
                                "id": 23711,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 23707,
                                      "name": "pairData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23688,
                                      "src": "4470:8:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PairData_$23551_memory_ptr",
                                        "typeString": "struct TwapOracle.PairData memory"
                                      }
                                    },
                                    "id": 23708,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "price1Average",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23550,
                                    "src": "4470:22:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                                      "typeString": "struct FixedPoint.uq112x112 memory"
                                    }
                                  },
                                  "id": 23709,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "_x",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15853,
                                  "src": "4470:25:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint224",
                                    "typeString": "uint224"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 23710,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4499:1:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4470:30:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 23719,
                              "nodeType": "IfStatement",
                              "src": "4466:100:108",
                              "trueBody": {
                                "id": 23718,
                                "nodeType": "Block",
                                "src": "4502:64:108",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 23715,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "id": 23713,
                                            "name": "sumNative",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 23669,
                                            "src": "4532:9:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "!=",
                                          "rightExpression": {
                                            "hexValue": "30",
                                            "id": 23714,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "4545:1:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_0_by_1",
                                              "typeString": "int_const 0"
                                            },
                                            "value": "0"
                                          },
                                          "src": "4532:14:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        ],
                                        "id": 23712,
                                        "name": "require",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [
                                          4294967278,
                                          4294967278
                                        ],
                                        "referencedDeclaration": 4294967278,
                                        "src": "4524:7:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                                          "typeString": "function (bool) pure"
                                        }
                                      },
                                      "id": 23716,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4524:23:108",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 23717,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4524:23:108"
                                  }
                                ]
                              }
                            },
                            {
                              "assignments": [
                                23721,
                                23723,
                                null,
                                null,
                                23725
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 23721,
                                  "mutability": "mutable",
                                  "name": "roundID",
                                  "nameLocation": "4613:7:108",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 23761,
                                  "src": "4606:14:108",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  },
                                  "typeName": {
                                    "id": 23720,
                                    "name": "uint80",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4606:6:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                {
                                  "constant": false,
                                  "id": 23723,
                                  "mutability": "mutable",
                                  "name": "price",
                                  "nameLocation": "4649:5:108",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 23761,
                                  "src": "4642:12:108",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_int256",
                                    "typeString": "int256"
                                  },
                                  "typeName": {
                                    "id": 23722,
                                    "name": "int256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4642:6:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    }
                                  },
                                  "visibility": "internal"
                                },
                                null,
                                null,
                                {
                                  "constant": false,
                                  "id": 23725,
                                  "mutability": "mutable",
                                  "name": "answeredInRound",
                                  "nameLocation": "4727:15:108",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 23761,
                                  "src": "4720:22:108",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint80",
                                    "typeString": "uint80"
                                  },
                                  "typeName": {
                                    "id": 23724,
                                    "name": "uint80",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "4720:6:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 23734,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 23727,
                                          "name": "_aggregators",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23561,
                                          "src": "4785:12:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                                            "typeString": "mapping(address => address)"
                                          }
                                        },
                                        "id": 23730,
                                        "indexExpression": {
                                          "expression": {
                                            "id": 23728,
                                            "name": "pairData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 23688,
                                            "src": "4798:8:108",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_PairData_$23551_memory_ptr",
                                              "typeString": "struct TwapOracle.PairData memory"
                                            }
                                          },
                                          "id": 23729,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "token1",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 23538,
                                          "src": "4798:15:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4785:29:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 23726,
                                      "name": "AggregatorV3Interface",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 15040,
                                      "src": "4763:21:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$15040_$",
                                        "typeString": "type(contract AggregatorV3Interface)"
                                      }
                                    },
                                    "id": 23731,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "4763:52:108",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$15040",
                                      "typeString": "contract AggregatorV3Interface"
                                    }
                                  },
                                  "id": 23732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "latestRoundData",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15039,
                                  "src": "4763:93:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                    "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                                  }
                                },
                                "id": 23733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4763:95:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                                  "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "4584:274:108"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint80",
                                      "typeString": "uint80"
                                    },
                                    "id": 23738,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 23736,
                                      "name": "answeredInRound",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23725,
                                      "src": "4906:15:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 23737,
                                      "name": "roundID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23721,
                                      "src": "4925:7:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint80",
                                        "typeString": "uint80"
                                      }
                                    },
                                    "src": "4906:26:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "547761704f7261636c653a3a636f6e73756c743a207374616c6520636861696e6c696e6b207072696365",
                                    "id": 23739,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4954:44:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_e8e1617a1af5144797c5a5fb7c4b2f8fc1db320c156a89095952d226e5edfce1",
                                      "typeString": "literal_string \"TwapOracle::consult: stale chainlink price\""
                                    },
                                    "value": "TwapOracle::consult: stale chainlink price"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e8e1617a1af5144797c5a5fb7c4b2f8fc1db320c156a89095952d226e5edfce1",
                                      "typeString": "literal_string \"TwapOracle::consult: stale chainlink price\""
                                    }
                                  ],
                                  "id": 23735,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "4877:7:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 23740,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4877:139:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 23741,
                              "nodeType": "ExpressionStatement",
                              "src": "4877:139:108"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_int256",
                                      "typeString": "int256"
                                    },
                                    "id": 23745,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 23743,
                                      "name": "price",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23723,
                                      "src": "5063:5:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_int256",
                                        "typeString": "int256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "!=",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 23744,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5072:1:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "5063:10:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "547761704f7261636c653a3a636f6e73756c743a20636861696e6c696e6b206d616c66756e6374696f6e",
                                    "id": 23746,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "5095:44:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_d69c8186b789cb26aacc233b0c377b728f505b4b41c87090d71a22a9f5f63754",
                                      "typeString": "literal_string \"TwapOracle::consult: chainlink malfunction\""
                                    },
                                    "value": "TwapOracle::consult: chainlink malfunction"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_d69c8186b789cb26aacc233b0c377b728f505b4b41c87090d71a22a9f5f63754",
                                      "typeString": "literal_string \"TwapOracle::consult: chainlink malfunction\""
                                    }
                                  ],
                                  "id": 23742,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "5034:7:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 23747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5034:123:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 23748,
                              "nodeType": "ExpressionStatement",
                              "src": "5034:123:108"
                            },
                            {
                              "expression": {
                                "id": 23759,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 23749,
                                  "name": "sumUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23673,
                                  "src": "5176:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 23758,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 23752,
                                        "name": "price",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 23723,
                                        "src": "5194:5:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_int256",
                                          "typeString": "int256"
                                        }
                                      ],
                                      "id": 23751,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "5186:7:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint256_$",
                                        "typeString": "type(uint256)"
                                      },
                                      "typeName": {
                                        "id": 23750,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "5186:7:108",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 23753,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5186:14:108",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "components": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_rational_10000000000_by_1",
                                          "typeString": "int_const 10000000000"
                                        },
                                        "id": 23756,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "hexValue": "3130",
                                          "id": 23754,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5204:2:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "**",
                                        "rightExpression": {
                                          "hexValue": "3130",
                                          "id": 23755,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "number",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "5208:2:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_rational_10_by_1",
                                            "typeString": "int_const 10"
                                          },
                                          "value": "10"
                                        },
                                        "src": "5204:6:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_10000000000_by_1",
                                          "typeString": "int_const 10000000000"
                                        }
                                      }
                                    ],
                                    "id": 23757,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "TupleExpression",
                                    "src": "5203:8:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10000000000_by_1",
                                      "typeString": "int_const 10000000000"
                                    }
                                  },
                                  "src": "5186:25:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5176:35:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 23760,
                              "nodeType": "ExpressionStatement",
                              "src": "5176:35:108"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23680,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23677,
                      "src": "4080:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 23681,
                      "name": "pairCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23664,
                      "src": "4084:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4080:13:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23764,
                  "initializationExpression": {
                    "assignments": [
                      23677
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 23677,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4073:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 23764,
                        "src": "4065:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 23676,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4065:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 23679,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 23678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4077:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4065:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 23684,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4095:3:108",
                      "subExpression": {
                        "id": 23683,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23677,
                        "src": "4095:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 23685,
                    "nodeType": "ExpressionStatement",
                    "src": "4095:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "4060:1176:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 23768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23766,
                          "name": "sumNative",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23669,
                          "src": "5253:9:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 23767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5266:1:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "5253:14:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a636f6e73756c743a2053756d206f66206e6174697665206973207a65726f",
                        "id": 23769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5269:44:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1fcc25fcf30dfe637a0ed060f67a33839e7126a59c15fc1ce53bb64e1ac4ef40",
                          "typeString": "literal_string \"TwapOracle::consult: Sum of native is zero\""
                        },
                        "value": "TwapOracle::consult: Sum of native is zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1fcc25fcf30dfe637a0ed060f67a33839e7126a59c15fc1ce53bb64e1ac4ef40",
                          "typeString": "literal_string \"TwapOracle::consult: Sum of native is zero\""
                        }
                      ],
                      "id": 23765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5245:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5245:69:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23771,
                  "nodeType": "ExpressionStatement",
                  "src": "5245:69:108"
                },
                {
                  "expression": {
                    "id": 23784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23772,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23661,
                      "src": "5324:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 23779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 23773,
                                  "name": "sumUSD",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23673,
                                  "src": "5335:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 23775,
                                          "name": "token",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 23658,
                                          "src": "5359:5:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        ],
                                        "id": 23774,
                                        "name": "IERC20Metadata",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1900,
                                        "src": "5344:14:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$1900_$",
                                          "typeString": "type(contract IERC20Metadata)"
                                        }
                                      },
                                      "id": 23776,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "5344:21:108",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20Metadata_$1900",
                                        "typeString": "contract IERC20Metadata"
                                      }
                                    },
                                    "id": 23777,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "decimals",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1899,
                                    "src": "5344:30:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                                      "typeString": "function () view external returns (uint8)"
                                    }
                                  },
                                  "id": 23778,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "5344:32:108",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "src": "5335:41:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 23780,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "5334:43:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 23781,
                            "name": "sumNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23669,
                            "src": "5380:9:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5334:55:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 23783,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "5333:57:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5324:66:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23785,
                  "nodeType": "ExpressionStatement",
                  "src": "5324:66:108"
                }
              ]
            },
            "documentation": {
              "id": 23656,
              "nodeType": "StructuredDocumentation",
              "src": "3573:300:108",
              "text": " @dev Performs a consultation to retrieve the equivalent to {amountIn} for the supplied {token} address.\n The {token} address must have a registered pairing, otherwise the transaction will revert.\n @param token The token address to consult the equivalent {amountIn} for."
            },
            "functionSelector": "283583c6",
            "id": 23787,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consult",
            "nameLocation": "3887:7:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23659,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23658,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "3903:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "3895:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3895:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3894:15:108"
            },
            "returnParameters": {
              "id": 23662,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23661,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "3939:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23787,
                  "src": "3931:14:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23660,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3931:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3930:16:108"
            },
            "scope": 24280,
            "src": "3878:1519:108",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23811,
              "nodeType": "Block",
              "src": "5533:141:108",
              "statements": [
                {
                  "assignments": [
                    23794
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23794,
                      "mutability": "mutable",
                      "name": "tUSDInUSDV",
                      "nameLocation": "5551:10:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 23811,
                      "src": "5543:18:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23793,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5543:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23798,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23796,
                        "name": "USDV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23555,
                        "src": "5572:4:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23795,
                      "name": "consult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23787,
                      "src": "5564:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 23797,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5564:13:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5543:34:108"
                },
                {
                  "assignments": [
                    23800
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 23800,
                      "mutability": "mutable",
                      "name": "tUSDInVader",
                      "nameLocation": "5595:11:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 23811,
                      "src": "5587:19:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 23799,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5587:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 23804,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 23802,
                        "name": "VADER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23553,
                        "src": "5617:5:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 23801,
                      "name": "consult",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23787,
                      "src": "5609:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 23803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5609:14:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5587:36:108"
                },
                {
                  "expression": {
                    "id": 23809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23805,
                      "name": "result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23791,
                      "src": "5634:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 23808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 23806,
                        "name": "tUSDInUSDV",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23794,
                        "src": "5643:10:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 23807,
                        "name": "tUSDInVader",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23800,
                        "src": "5656:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5643:24:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5634:33:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 23810,
                  "nodeType": "ExpressionStatement",
                  "src": "5634:33:108"
                }
              ]
            },
            "documentation": {
              "id": 23788,
              "nodeType": "StructuredDocumentation",
              "src": "5403:69:108",
              "text": " @dev Gets the exchange rate for the Vader to USDV."
            },
            "functionSelector": "679aefce",
            "id": 23812,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRate",
            "nameLocation": "5486:7:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23789,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5493:2:108"
            },
            "returnParameters": {
              "id": 23792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23791,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "5525:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23812,
                  "src": "5517:14:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5517:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5516:16:108"
            },
            "scope": 24280,
            "src": "5477:197:108",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 23825,
              "nodeType": "Block",
              "src": "5879:46:108",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23823,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23820,
                      "name": "usdvAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23815,
                      "src": "5896:10:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23821,
                        "name": "getRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23812,
                        "src": "5909:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 23822,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5909:9:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5896:22:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23819,
                  "id": 23824,
                  "nodeType": "Return",
                  "src": "5889:29:108"
                }
              ]
            },
            "documentation": {
              "id": 23813,
              "nodeType": "StructuredDocumentation",
              "src": "5680:121:108",
              "text": " @dev Gets the VADER amount from the supplied USDV amount.\n @param usdvAmount The amount in USDV."
            },
            "functionSelector": "78906a14",
            "id": 23826,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "usdvtoVader",
            "nameLocation": "5815:11:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23815,
                  "mutability": "mutable",
                  "name": "usdvAmount",
                  "nameLocation": "5835:10:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23826,
                  "src": "5827:18:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5827:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5826:20:108"
            },
            "returnParameters": {
              "id": 23819,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23818,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23826,
                  "src": "5870:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23817,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5870:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5869:9:108"
            },
            "scope": 24280,
            "src": "5806:119:108",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23849,
              "nodeType": "Block",
              "src": "6133:340:108",
              "statements": [
                {
                  "condition": {
                    "id": 23835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "6147:13:108",
                    "subExpression": {
                      "id": 23834,
                      "name": "_usdvEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23557,
                      "src": "6148:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23843,
                  "nodeType": "IfStatement",
                  "src": "6143:185:108",
                  "trueBody": {
                    "id": 23842,
                    "nodeType": "Block",
                    "src": "6162:166:108",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 23840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 23837,
                                "name": "VADER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23553,
                                "src": "6297:5:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 23836,
                              "name": "consult",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23787,
                              "src": "6289:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) view returns (uint256)"
                              }
                            },
                            "id": 23838,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6289:14:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 23839,
                            "name": "vaderAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23829,
                            "src": "6306:11:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6289:28:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 23833,
                        "id": 23841,
                        "nodeType": "Return",
                        "src": "6282:35:108"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 23847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 23844,
                      "name": "vaderAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23829,
                      "src": "6443:11:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 23845,
                        "name": "getRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23812,
                        "src": "6457:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 23846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6457:9:108",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6443:23:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 23833,
                  "id": 23848,
                  "nodeType": "Return",
                  "src": "6436:30:108"
                }
              ]
            },
            "documentation": {
              "id": 23827,
              "nodeType": "StructuredDocumentation",
              "src": "5931:123:108",
              "text": " @dev Gets the USDV amount from the supplied VADER amount.\n @param vaderAmount The amount in VADER."
            },
            "functionSelector": "97916dbe",
            "id": 23850,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "vaderToUsdv",
            "nameLocation": "6068:11:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23829,
                  "mutability": "mutable",
                  "name": "vaderAmount",
                  "nameLocation": "6088:11:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23850,
                  "src": "6080:19:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23828,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6080:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6079:21:108"
            },
            "returnParameters": {
              "id": 23833,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23832,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 23850,
                  "src": "6124:7:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:7:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6123:9:108"
            },
            "scope": 24280,
            "src": "6059:414:108",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23908,
              "nodeType": "Block",
              "src": "6765:511:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23861,
                          "name": "VADER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23553,
                          "src": "6796:5:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6813:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6805:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23862,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6805:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6805:10:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6796:19:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a653a20566164657220616c726561647920736574",
                        "id": 23867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6829:43:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99106f1a7ff13da8a95a09b9cb50e4fda814c9f3b79cd38b8ec26b5a08da1427",
                          "typeString": "literal_string \"TwapOracle::initialize: Vader already set\""
                        },
                        "value": "TwapOracle::initialize: Vader already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99106f1a7ff13da8a95a09b9cb50e4fda814c9f3b79cd38b8ec26b5a08da1427",
                          "typeString": "literal_string \"TwapOracle::initialize: Vader already set\""
                        }
                      ],
                      "id": 23860,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6775:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6775:107:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23869,
                  "nodeType": "ExpressionStatement",
                  "src": "6775:107:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23871,
                          "name": "USDV",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23555,
                          "src": "6900:4:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6916:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23873,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6908:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23872,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6908:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6908:10:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6900:18:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a653a205553445620616c726561647920736574",
                        "id": 23877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6920:42:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9fa9b3d896c492db38c2a570c80cc6f796104a28351b416975a26fdd4cbe8e5f",
                          "typeString": "literal_string \"TwapOracle::initialize: USDV already set\""
                        },
                        "value": "TwapOracle::initialize: USDV already set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9fa9b3d896c492db38c2a570c80cc6f796104a28351b416975a26fdd4cbe8e5f",
                          "typeString": "literal_string \"TwapOracle::initialize: USDV already set\""
                        }
                      ],
                      "id": 23870,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6892:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6892:71:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23879,
                  "nodeType": "ExpressionStatement",
                  "src": "6892:71:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23886,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23881,
                          "name": "_usdv",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23853,
                          "src": "6994:5:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23884,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7011:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23883,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7003:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23882,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7003:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23885,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7003:10:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6994:19:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a653a2063616e206e6f742073657420746f2061207a65726f2061646472657373",
                        "id": 23887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7027:55:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_add09aa044341cbb6c570f970ab7f1739d7cb564cdbe029614e6fb6c00a39a2b",
                          "typeString": "literal_string \"TwapOracle::initialize: can not set to a zero address\""
                        },
                        "value": "TwapOracle::initialize: can not set to a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_add09aa044341cbb6c570f970ab7f1739d7cb564cdbe029614e6fb6c00a39a2b",
                          "typeString": "literal_string \"TwapOracle::initialize: can not set to a zero address\""
                        }
                      ],
                      "id": 23880,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6973:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6973:119:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23889,
                  "nodeType": "ExpressionStatement",
                  "src": "6973:119:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23891,
                          "name": "_vader",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23855,
                          "src": "7123:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7141:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23893,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7133:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23892,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7133:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7133:10:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7123:20:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a696e697469616c697a653a2063616e206e6f742073657420746f2061207a65726f2061646472657373",
                        "id": 23897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7157:55:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_add09aa044341cbb6c570f970ab7f1739d7cb564cdbe029614e6fb6c00a39a2b",
                          "typeString": "literal_string \"TwapOracle::initialize: can not set to a zero address\""
                        },
                        "value": "TwapOracle::initialize: can not set to a zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_add09aa044341cbb6c570f970ab7f1739d7cb564cdbe029614e6fb6c00a39a2b",
                          "typeString": "literal_string \"TwapOracle::initialize: can not set to a zero address\""
                        }
                      ],
                      "id": 23890,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7102:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7102:120:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23899,
                  "nodeType": "ExpressionStatement",
                  "src": "7102:120:108"
                },
                {
                  "expression": {
                    "id": 23902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23900,
                      "name": "VADER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23553,
                      "src": "7233:5:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23901,
                      "name": "_vader",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23855,
                      "src": "7241:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7233:14:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23903,
                  "nodeType": "ExpressionStatement",
                  "src": "7233:14:108"
                },
                {
                  "expression": {
                    "id": 23906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23904,
                      "name": "USDV",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23555,
                      "src": "7257:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23905,
                      "name": "_usdv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23853,
                      "src": "7264:5:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7257:12:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23907,
                  "nodeType": "ExpressionStatement",
                  "src": "7257:12:108"
                }
              ]
            },
            "documentation": {
              "id": 23851,
              "nodeType": "StructuredDocumentation",
              "src": "6531:159:108",
              "text": " @dev Initializes the variables for VADER and USDV.\n @param _usdv The USDV token address.\n @param _vader The VADER token address."
            },
            "functionSelector": "485cc955",
            "id": 23909,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23858,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23857,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "6755:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "6755:9:108"
              }
            ],
            "name": "initialize",
            "nameLocation": "6704:10:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23856,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23853,
                  "mutability": "mutable",
                  "name": "_usdv",
                  "nameLocation": "6723:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23909,
                  "src": "6715:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23852,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6715:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23855,
                  "mutability": "mutable",
                  "name": "_vader",
                  "nameLocation": "6738:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23909,
                  "src": "6730:14:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23854,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6730:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6714:31:108"
            },
            "returnParameters": {
              "id": 23859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6765:0:108"
            },
            "scope": 24280,
            "src": "6695:581:108",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23919,
              "nodeType": "Block",
              "src": "7380:36:108",
              "statements": [
                {
                  "expression": {
                    "id": 23917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 23915,
                      "name": "_usdvEnabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23557,
                      "src": "7390:12:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 23916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7405:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7390:19:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 23918,
                  "nodeType": "ExpressionStatement",
                  "src": "7390:19:108"
                }
              ]
            },
            "documentation": {
              "id": 23910,
              "nodeType": "StructuredDocumentation",
              "src": "7282:52:108",
              "text": " @dev Enables utilization of USDV."
            },
            "functionSelector": "c2ace4f2",
            "id": 23920,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23913,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23912,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "7370:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "7370:9:108"
              }
            ],
            "name": "enableUSDV",
            "nameLocation": "7348:10:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7358:2:108"
            },
            "returnParameters": {
              "id": 23914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7380:0:108"
            },
            "scope": 24280,
            "src": "7339:77:108",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 23970,
              "nodeType": "Block",
              "src": "7760:477:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23933,
                          "name": "asset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23923,
                          "src": "7791:5:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7808:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7800:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23934,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7800:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7800:10:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7791:19:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a726567697374657241676772656761746f723a206173736574207a65726f20616464726573732070726f7669646564",
                        "id": 23939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7824:61:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_59bfdbcf395f9e27ea46f2d5a4d35fbdcd98b5bb3a9cacc6e06f8fdfc681fe16",
                          "typeString": "literal_string \"TwapOracle::registerAggregator: asset zero address provided\""
                        },
                        "value": "TwapOracle::registerAggregator: asset zero address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_59bfdbcf395f9e27ea46f2d5a4d35fbdcd98b5bb3a9cacc6e06f8fdfc681fe16",
                          "typeString": "literal_string \"TwapOracle::registerAggregator: asset zero address provided\""
                        }
                      ],
                      "id": 23932,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7770:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7770:125:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23941,
                  "nodeType": "ExpressionStatement",
                  "src": "7770:125:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23943,
                          "name": "aggregator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23925,
                          "src": "7926:10:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7948:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23945,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7940:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23944,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7940:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23947,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7940:10:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7926:24:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a726567697374657241676772656761746f723a2061676772656761746f72207a65726f20616464726573732070726f7669646564",
                        "id": 23949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7964:66:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f626a8ff664dbadf66986f4e0fbb2e76a6e7255c32590274087e3f395caf900",
                          "typeString": "literal_string \"TwapOracle::registerAggregator: aggregator zero address provided\""
                        },
                        "value": "TwapOracle::registerAggregator: aggregator zero address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f626a8ff664dbadf66986f4e0fbb2e76a6e7255c32590274087e3f395caf900",
                          "typeString": "literal_string \"TwapOracle::registerAggregator: aggregator zero address provided\""
                        }
                      ],
                      "id": 23942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7905:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7905:135:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23951,
                  "nodeType": "ExpressionStatement",
                  "src": "7905:135:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 23953,
                            "name": "_aggregators",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23561,
                            "src": "8071:12:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 23955,
                          "indexExpression": {
                            "id": 23954,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23923,
                            "src": "8084:5:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8071:19:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 23958,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8102:1:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 23957,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "8094:7:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 23956,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8094:7:108",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 23959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8094:10:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8071:33:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a726567697374657241676772656761746f723a2061676772656761746f7220616c726561647920657869737473",
                        "id": 23961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8118:59:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_58f994cf1f0e5913b769c6ede68c8385d7d0b56c41a22efcaead55db2ef204b8",
                          "typeString": "literal_string \"TwapOracle::registerAggregator: aggregator already exists\""
                        },
                        "value": "TwapOracle::registerAggregator: aggregator already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_58f994cf1f0e5913b769c6ede68c8385d7d0b56c41a22efcaead55db2ef204b8",
                          "typeString": "literal_string \"TwapOracle::registerAggregator: aggregator already exists\""
                        }
                      ],
                      "id": 23952,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8050:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8050:137:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23963,
                  "nodeType": "ExpressionStatement",
                  "src": "8050:137:108"
                },
                {
                  "expression": {
                    "id": 23968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 23964,
                        "name": "_aggregators",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23561,
                        "src": "8198:12:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 23966,
                      "indexExpression": {
                        "id": 23965,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23923,
                        "src": "8211:5:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "8198:19:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 23967,
                      "name": "aggregator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23925,
                      "src": "8220:10:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8198:32:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 23969,
                  "nodeType": "ExpressionStatement",
                  "src": "8198:32:108"
                }
              ]
            },
            "documentation": {
              "id": 23921,
              "nodeType": "StructuredDocumentation",
              "src": "7422:211:108",
              "text": " @dev Registers a chainlink {aggregator} for the supplied {asset} address.\n @param asset The address of the native asset.\n @param aggregator The address of the chainlink aggregator."
            },
            "functionSelector": "837e7885",
            "id": 23971,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23928,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23927,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "7726:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "7726:9:108"
              },
              {
                "id": 23930,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23929,
                  "name": "initialized",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23616,
                  "src": "7744:11:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "7744:11:108"
              }
            ],
            "name": "registerAggregator",
            "nameLocation": "7647:18:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23923,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "7674:5:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23971,
                  "src": "7666:13:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7666:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23925,
                  "mutability": "mutable",
                  "name": "aggregator",
                  "nameLocation": "7689:10:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 23971,
                  "src": "7681:18:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23924,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7681:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7665:35:108"
            },
            "returnParameters": {
              "id": 23931,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7760:0:108"
            },
            "scope": 24280,
            "src": "7638:599:108",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24151,
              "nodeType": "Block",
              "src": "8656:1962:108",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 23992,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 23988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23986,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23976,
                            "src": "8687:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 23987,
                            "name": "VADER",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23553,
                            "src": "8697:5:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8687:15:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 23991,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 23989,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23976,
                            "src": "8706:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 23990,
                            "name": "USDV",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23555,
                            "src": "8716:4:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "8706:14:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8687:33:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a20496e76616c696420746f6b656e302061646472657373",
                        "id": 23993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8734:50:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a9220d314ec676f678af04d5b88ea7fa1523d128e45ea7b584bf4a6aad1d25b",
                          "typeString": "literal_string \"TwapOracle::registerPair: Invalid token0 address\""
                        },
                        "value": "TwapOracle::registerPair: Invalid token0 address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a9220d314ec676f678af04d5b88ea7fa1523d128e45ea7b584bf4a6aad1d25b",
                          "typeString": "literal_string \"TwapOracle::registerPair: Invalid token0 address\""
                        }
                      ],
                      "id": 23985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8666:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 23994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8666:128:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 23995,
                  "nodeType": "ExpressionStatement",
                  "src": "8666:128:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 23999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 23997,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23976,
                          "src": "8825:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 23998,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23978,
                          "src": "8835:6:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "8825:16:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a2053616d6520746f6b656e2061646472657373",
                        "id": 24000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8855:46:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_773eb87fb67540ad11b6d15067e5c1d27b3442540099b3c8ea3a409729e82c3f",
                          "typeString": "literal_string \"TwapOracle::registerPair: Same token address\""
                        },
                        "value": "TwapOracle::registerPair: Same token address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_773eb87fb67540ad11b6d15067e5c1d27b3442540099b3c8ea3a409729e82c3f",
                          "typeString": "literal_string \"TwapOracle::registerPair: Same token address\""
                        }
                      ],
                      "id": 23996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8804:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8804:107:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24002,
                  "nodeType": "ExpressionStatement",
                  "src": "8804:107:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 24008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "8942:27:108",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 24005,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23976,
                              "src": "8954:6:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 24006,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23978,
                              "src": "8962:6:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24004,
                            "name": "pairExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23655,
                            "src": "8943:10:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address,address) view returns (bool)"
                            }
                          },
                          "id": 24007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8943:26:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a205061697220657869737473",
                        "id": 24009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8983:39:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79b723d02d8c7fba7c4632101be14e6088721782e0859b020e56f30c6cfd93a8",
                          "typeString": "literal_string \"TwapOracle::registerPair: Pair exists\""
                        },
                        "value": "TwapOracle::registerPair: Pair exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79b723d02d8c7fba7c4632101be14e6088721782e0859b020e56f30c6cfd93a8",
                          "typeString": "literal_string \"TwapOracle::registerPair: Pair exists\""
                        }
                      ],
                      "id": 24003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8921:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8921:111:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24011,
                  "nodeType": "ExpressionStatement",
                  "src": "8921:111:108"
                },
                {
                  "assignments": [
                    24013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24013,
                      "mutability": "mutable",
                      "name": "pairAddr",
                      "nameLocation": "9051:8:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 24151,
                      "src": "9043:16:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 24012,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "9043:7:108",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24014,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9043:16:108"
                },
                {
                  "assignments": [
                    24016
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24016,
                      "mutability": "mutable",
                      "name": "price0CumulativeLast",
                      "nameLocation": "9077:20:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 24151,
                      "src": "9069:28:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24015,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9069:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24017,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9069:28:108"
                },
                {
                  "assignments": [
                    24019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24019,
                      "mutability": "mutable",
                      "name": "price1CumulativeLast",
                      "nameLocation": "9115:20:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 24151,
                      "src": "9107:28:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24018,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9107:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24020,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9107:28:108"
                },
                {
                  "assignments": [
                    24022
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24022,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nameLocation": "9153:8:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 24151,
                      "src": "9145:16:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 24021,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "9145:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24023,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9145:16:108"
                },
                {
                  "assignments": [
                    24025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24025,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "9179:8:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 24151,
                      "src": "9171:16:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 24024,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "9171:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24026,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9171:16:108"
                },
                {
                  "assignments": [
                    24028
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24028,
                      "mutability": "mutable",
                      "name": "blockTimestampLast",
                      "nameLocation": "9204:18:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 24151,
                      "src": "9197:25:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 24027,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9197:6:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24029,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9197:25:108"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 24032,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24030,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23976,
                      "src": "9237:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 24031,
                      "name": "VADER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23553,
                      "src": "9247:5:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9237:15:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 24105,
                    "nodeType": "Block",
                    "src": "9644:303:108",
                    "statements": [
                      {
                        "expression": {
                          "id": 24080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24075,
                            "name": "pairAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24013,
                            "src": "9658:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 24078,
                                "name": "_vaderPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23564,
                                "src": "9677:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                  "typeString": "contract IVaderPoolV2"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                  "typeString": "contract IVaderPoolV2"
                                }
                              ],
                              "id": 24077,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9669:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24076,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9669:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9669:19:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9658:30:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24081,
                        "nodeType": "ExpressionStatement",
                        "src": "9658:30:108"
                      },
                      {
                        "expression": {
                          "id": 24091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 24082,
                                "name": "price0CumulativeLast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24016,
                                "src": "9703:20:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 24083,
                                "name": "price1CumulativeLast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24019,
                                "src": "9725:20:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              null
                            ],
                            "id": 24084,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9702:46:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$__$",
                              "typeString": "tuple(uint256,uint256,)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 24088,
                                    "name": "token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23978,
                                    "src": "9803:6:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 24087,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "9796:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 24089,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9796:14:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "expression": {
                                "id": 24085,
                                "name": "_vaderPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23564,
                                "src": "9751:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                  "typeString": "contract IVaderPoolV2"
                                }
                              },
                              "id": 24086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cumulativePrices",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19684,
                              "src": "9751:44:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$969_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                "typeString": "function (contract IERC20) view external returns (uint256,uint256,uint32)"
                              }
                            },
                            "id": 24090,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9751:60:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                              "typeString": "tuple(uint256,uint256,uint32)"
                            }
                          },
                          "src": "9702:109:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24092,
                        "nodeType": "ExpressionStatement",
                        "src": "9702:109:108"
                      },
                      {
                        "expression": {
                          "id": 24103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 24093,
                                "name": "reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24022,
                                "src": "9826:8:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              {
                                "id": 24094,
                                "name": "reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24025,
                                "src": "9836:8:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              {
                                "id": 24095,
                                "name": "blockTimestampLast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24028,
                                "src": "9846:18:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "id": 24096,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9825:40:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "tuple(uint112,uint112,uint32)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "id": 24100,
                                    "name": "token1",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23978,
                                    "src": "9915:6:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 24099,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "9908:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 24101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9908:14:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "expression": {
                                "id": 24097,
                                "name": "_vaderPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23564,
                                "src": "9868:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                  "typeString": "contract IVaderPoolV2"
                                }
                              },
                              "id": 24098,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getReserves",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19481,
                              "src": "9868:22:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$969_$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                "typeString": "function (contract IERC20) view external returns (uint112,uint112,uint32)"
                              }
                            },
                            "id": 24102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9868:68:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "tuple(uint112,uint112,uint32)"
                            }
                          },
                          "src": "9825:111:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24104,
                        "nodeType": "ExpressionStatement",
                        "src": "9825:111:108"
                      }
                    ]
                  },
                  "id": 24106,
                  "nodeType": "IfStatement",
                  "src": "9233:714:108",
                  "trueBody": {
                    "id": 24074,
                    "nodeType": "Block",
                    "src": "9254:384:108",
                    "statements": [
                      {
                        "assignments": [
                          24035
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24035,
                            "mutability": "mutable",
                            "name": "pair",
                            "nameLocation": "9283:4:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 24074,
                            "src": "9268:19:108",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                              "typeString": "contract IUniswapV2Pair"
                            },
                            "typeName": {
                              "id": 24034,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24033,
                                "name": "IUniswapV2Pair",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 15365,
                                "src": "9268:14:108"
                              },
                              "referencedDeclaration": 15365,
                              "src": "9268:14:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                                "typeString": "contract IUniswapV2Pair"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24045,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 24041,
                                  "name": "token0",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23976,
                                  "src": "9357:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 24042,
                                  "name": "token1",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23978,
                                  "src": "9365:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 24038,
                                      "name": "factory",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 23974,
                                      "src": "9340:7:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 24037,
                                    "name": "IUniswapV2Factory",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 15235,
                                    "src": "9322:17:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IUniswapV2Factory_$15235_$",
                                      "typeString": "type(contract IUniswapV2Factory)"
                                    }
                                  },
                                  "id": 24039,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9322:26:108",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IUniswapV2Factory_$15235",
                                    "typeString": "contract IUniswapV2Factory"
                                  }
                                },
                                "id": 24040,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getPair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 15203,
                                "src": "9322:34:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_address_$",
                                  "typeString": "function (address,address) view external returns (address)"
                                }
                              },
                              "id": 24043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9322:50:108",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 24036,
                            "name": "IUniswapV2Pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15365,
                            "src": "9290:14:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IUniswapV2Pair_$15365_$",
                              "typeString": "type(contract IUniswapV2Pair)"
                            }
                          },
                          "id": 24044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9290:96:108",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                            "typeString": "contract IUniswapV2Pair"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9268:118:108"
                      },
                      {
                        "expression": {
                          "id": 24051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24046,
                            "name": "pairAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24013,
                            "src": "9400:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 24049,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24035,
                                "src": "9419:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              ],
                              "id": 24048,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "9411:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 24047,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "9411:7:108",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 24050,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9411:13:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9400:24:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 24052,
                        "nodeType": "ExpressionStatement",
                        "src": "9400:24:108"
                      },
                      {
                        "expression": {
                          "id": 24057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24053,
                            "name": "price0CumulativeLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24016,
                            "src": "9438:20:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 24054,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24035,
                                "src": "9461:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 24055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price0CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15312,
                              "src": "9461:25:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 24056,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9461:27:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9438:50:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24058,
                        "nodeType": "ExpressionStatement",
                        "src": "9438:50:108"
                      },
                      {
                        "expression": {
                          "id": 24063,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 24059,
                            "name": "price1CumulativeLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24019,
                            "src": "9502:20:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 24060,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24035,
                                "src": "9525:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 24061,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "price1CumulativeLast",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15317,
                              "src": "9525:25:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                                "typeString": "function () view external returns (uint256)"
                              }
                            },
                            "id": 24062,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9525:27:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9502:50:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24064,
                        "nodeType": "ExpressionStatement",
                        "src": "9502:50:108"
                      },
                      {
                        "expression": {
                          "id": 24072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "components": [
                              {
                                "id": 24065,
                                "name": "reserve0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24022,
                                "src": "9567:8:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              {
                                "id": 24066,
                                "name": "reserve1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24025,
                                "src": "9577:8:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint112",
                                  "typeString": "uint112"
                                }
                              },
                              {
                                "id": 24067,
                                "name": "blockTimestampLast",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24028,
                                "src": "9587:18:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              }
                            ],
                            "id": 24068,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "TupleExpression",
                            "src": "9566:40:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "tuple(uint112,uint112,uint32)"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 24069,
                                "name": "pair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24035,
                                "src": "9609:4:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IUniswapV2Pair_$15365",
                                  "typeString": "contract IUniswapV2Pair"
                                }
                              },
                              "id": 24070,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "getReserves",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15307,
                              "src": "9609:16:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                                "typeString": "function () view external returns (uint112,uint112,uint32)"
                              }
                            },
                            "id": 24071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9609:18:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                              "typeString": "tuple(uint112,uint112,uint32)"
                            }
                          },
                          "src": "9566:61:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 24073,
                        "nodeType": "ExpressionStatement",
                        "src": "9566:61:108"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 24114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "id": 24110,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24108,
                            "name": "reserve0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24022,
                            "src": "9978:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 24109,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9990:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9978:13:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint112",
                            "typeString": "uint112"
                          },
                          "id": 24113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 24111,
                            "name": "reserve1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24025,
                            "src": "9995:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint112",
                              "typeString": "uint112"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 24112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10007:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "9995:13:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9978:30:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "547761704f7261636c653a3a7265676973746572506169723a204e6f207265736572766573",
                        "id": 24115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10022:39:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8adcd2021c941587b1de6826add1d21f415164ffe70b9aa0222c0735b6dbd25f",
                          "typeString": "literal_string \"TwapOracle::registerPair: No reserves\""
                        },
                        "value": "TwapOracle::registerPair: No reserves"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8adcd2021c941587b1de6826add1d21f415164ffe70b9aa0222c0735b6dbd25f",
                          "typeString": "literal_string \"TwapOracle::registerPair: No reserves\""
                        }
                      ],
                      "id": 24107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9957:7:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 24116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9957:114:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24117,
                  "nodeType": "ExpressionStatement",
                  "src": "9957:114:108"
                },
                {
                  "expression": {
                    "id": 24128,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 24118,
                        "name": "_pairExists",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23574,
                        "src": "10082:11:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 24126,
                      "indexExpression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 24122,
                                "name": "token0",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23976,
                                "src": "10121:6:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 24123,
                                "name": "token1",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23978,
                                "src": "10129:6:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 24120,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967295,
                                "src": "10104:3:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 24121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encodePacked",
                              "nodeType": "MemberAccess",
                              "src": "10104:16:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 24124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10104:32:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 24119,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967288,
                          "src": "10094:9:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 24125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10094:43:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10082:56:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 24127,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10141:4:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10082:63:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24129,
                  "nodeType": "ExpressionStatement",
                  "src": "10082:63:108"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 24134,
                            "name": "pairAddr",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24013,
                            "src": "10214:8:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24135,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23976,
                            "src": "10248:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24136,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23978,
                            "src": "10280:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 24137,
                            "name": "price0CumulativeLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24016,
                            "src": "10326:20:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24138,
                            "name": "price1CumulativeLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24019,
                            "src": "10386:20:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 24139,
                            "name": "blockTimestampLast",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24028,
                            "src": "10444:18:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 24142,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10521:1:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 24140,
                                "name": "FixedPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16493,
                                "src": "10495:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixedPoint_$16493_$",
                                  "typeString": "type(library FixedPoint)"
                                }
                              },
                              "id": 24141,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "uq112x112",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15854,
                              "src": "10495:20:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_uq112x112_$15854_storage_ptr_$",
                                "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                              }
                            },
                            "id": 24143,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "_x"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10495:29:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                              "typeString": "struct FixedPoint.uq112x112 memory"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 24146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10583:1:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "id": 24144,
                                "name": "FixedPoint",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16493,
                                "src": "10557:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixedPoint_$16493_$",
                                  "typeString": "type(library FixedPoint)"
                                }
                              },
                              "id": 24145,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "uq112x112",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15854,
                              "src": "10557:20:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_uq112x112_$15854_storage_ptr_$",
                                "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                              }
                            },
                            "id": 24147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [
                              "_x"
                            ],
                            "nodeType": "FunctionCall",
                            "src": "10557:29:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                              "typeString": "struct FixedPoint.uq112x112 memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                              "typeString": "struct FixedPoint.uq112x112 memory"
                            },
                            {
                              "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                              "typeString": "struct FixedPoint.uq112x112 memory"
                            }
                          ],
                          "id": 24133,
                          "name": "PairData",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23551,
                          "src": "10181:8:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_PairData_$23551_storage_ptr_$",
                            "typeString": "type(struct TwapOracle.PairData storage pointer)"
                          }
                        },
                        "id": 24148,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "pair",
                          "token0",
                          "token1",
                          "price0CumulativeLast",
                          "price1CumulativeLast",
                          "blockTimestampLast",
                          "price0Average",
                          "price1Average"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "10181:420:108",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_PairData_$23551_memory_ptr",
                          "typeString": "struct TwapOracle.PairData memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_PairData_$23551_memory_ptr",
                          "typeString": "struct TwapOracle.PairData memory"
                        }
                      ],
                      "expression": {
                        "id": 24130,
                        "name": "_pairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23570,
                        "src": "10156:6:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_PairData_$23551_storage_$dyn_storage",
                          "typeString": "struct TwapOracle.PairData storage ref[] storage ref"
                        }
                      },
                      "id": 24132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "10156:11:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_PairData_$23551_storage_$dyn_storage_ptr_$_t_struct$_PairData_$23551_storage_$returns$__$bound_to$_t_array$_t_struct$_PairData_$23551_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct TwapOracle.PairData storage ref[] storage pointer,struct TwapOracle.PairData storage ref)"
                      }
                    },
                    "id": 24149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10156:455:108",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24150,
                  "nodeType": "ExpressionStatement",
                  "src": "10156:455:108"
                }
              ]
            },
            "documentation": {
              "id": 23972,
              "nodeType": "StructuredDocumentation",
              "src": "8243:276:108",
              "text": " @dev Registers either a VADER or USDV pairing in the TWAP oracle.\n @param factory The factory address, if any.\n @param token0 The primary token address, either VADER or USDV.\n @param token1 The asset token address, paired to VADER or USDV."
            },
            "functionSelector": "bfbd0297",
            "id": 24152,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 23981,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23980,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "8634:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "8634:9:108"
              },
              {
                "id": 23983,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 23982,
                  "name": "initialized",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23616,
                  "src": "8644:11:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "8644:11:108"
              }
            ],
            "name": "registerPair",
            "nameLocation": "8533:12:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 23979,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 23974,
                  "mutability": "mutable",
                  "name": "factory",
                  "nameLocation": "8563:7:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 24152,
                  "src": "8555:15:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8555:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23976,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "8588:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 24152,
                  "src": "8580:14:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8580:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23978,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "8612:6:108",
                  "nodeType": "VariableDeclaration",
                  "scope": 24152,
                  "src": "8604:14:108",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 23977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8604:7:108",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8545:79:108"
            },
            "returnParameters": {
              "id": 23984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8656:0:108"
            },
            "scope": 24280,
            "src": "8524:2094:108",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 24278,
              "nodeType": "Block",
              "src": "10779:1965:108",
              "statements": [
                {
                  "assignments": [
                    24161
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 24161,
                      "mutability": "mutable",
                      "name": "pairCount",
                      "nameLocation": "10797:9:108",
                      "nodeType": "VariableDeclaration",
                      "scope": 24278,
                      "src": "10789:17:108",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 24160,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10789:7:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 24164,
                  "initialValue": {
                    "expression": {
                      "id": 24162,
                      "name": "_pairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23570,
                      "src": "10809:6:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_PairData_$23551_storage_$dyn_storage",
                        "typeString": "struct TwapOracle.PairData storage ref[] storage ref"
                      }
                    },
                    "id": 24163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "10809:13:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10789:33:108"
                },
                {
                  "body": {
                    "id": 24276,
                    "nodeType": "Block",
                    "src": "10939:1799:108",
                    "statements": [
                      {
                        "assignments": [
                          24177
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24177,
                            "mutability": "mutable",
                            "name": "pairData",
                            "nameLocation": "10970:8:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 24276,
                            "src": "10953:25:108",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                              "typeString": "struct TwapOracle.PairData"
                            },
                            "typeName": {
                              "id": 24176,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 24175,
                                "name": "PairData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 23551,
                                "src": "10953:8:108"
                              },
                              "referencedDeclaration": 23551,
                              "src": "10953:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                "typeString": "struct TwapOracle.PairData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24181,
                        "initialValue": {
                          "baseExpression": {
                            "id": 24178,
                            "name": "_pairs",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 23570,
                            "src": "10981:6:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_PairData_$23551_storage_$dyn_storage",
                              "typeString": "struct TwapOracle.PairData storage ref[] storage ref"
                            }
                          },
                          "id": 24180,
                          "indexExpression": {
                            "id": 24179,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24166,
                            "src": "10988:1:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "10981:9:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_PairData_$23551_storage",
                            "typeString": "struct TwapOracle.PairData storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10953:37:108"
                      },
                      {
                        "assignments": [
                          24183,
                          24185,
                          24187
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 24183,
                            "mutability": "mutable",
                            "name": "price0Cumulative",
                            "nameLocation": "11124:16:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 24276,
                            "src": "11116:24:108",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 24182,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11116:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 24185,
                            "mutability": "mutable",
                            "name": "price1Cumulative",
                            "nameLocation": "11166:16:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 24276,
                            "src": "11158:24:108",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 24184,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11158:7:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 24187,
                            "mutability": "mutable",
                            "name": "blockTimestamp",
                            "nameLocation": "11207:14:108",
                            "nodeType": "VariableDeclaration",
                            "scope": 24276,
                            "src": "11200:21:108",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 24186,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11200:6:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 24206,
                        "initialValue": {
                          "condition": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 24191,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 24188,
                                    "name": "pairData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24177,
                                    "src": "11239:8:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                      "typeString": "struct TwapOracle.PairData storage pointer"
                                    }
                                  },
                                  "id": 24189,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "token0",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 23536,
                                  "src": "11239:15:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 24190,
                                  "name": "VADER",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23553,
                                  "src": "11258:5:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "11239:24:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              }
                            ],
                            "id": 24192,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "11238:26:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 24201,
                                      "name": "pairData",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 24177,
                                      "src": "11452:8:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                        "typeString": "struct TwapOracle.PairData storage pointer"
                                      }
                                    },
                                    "id": 24202,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "token1",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 23538,
                                    "src": "11452:15:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 24200,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "11445:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 24203,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11445:23:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              ],
                              "expression": {
                                "id": 24198,
                                "name": "_vaderPool",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23564,
                                "src": "11417:10:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                  "typeString": "contract IVaderPoolV2"
                                }
                              },
                              "id": 24199,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "cumulativePrices",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 19684,
                              "src": "11417:27:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$969_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                "typeString": "function (contract IERC20) view external returns (uint256,uint256,uint32)"
                              }
                            },
                            "id": 24204,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11417:52:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                              "typeString": "tuple(uint256,uint256,uint32)"
                            }
                          },
                          "id": 24205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "11238:231:108",
                          "trueExpression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 24195,
                                  "name": "pairData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24177,
                                  "src": "11359:8:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                    "typeString": "struct TwapOracle.PairData storage pointer"
                                  }
                                },
                                "id": 24196,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "pair",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23534,
                                "src": "11359:13:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 24193,
                                "name": "UniswapV2OracleLibrary",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 17428,
                                "src": "11287:22:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_UniswapV2OracleLibrary_$17428_$",
                                  "typeString": "type(library UniswapV2OracleLibrary)"
                                }
                              },
                              "id": 24194,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "currentCumulativePrices",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 17427,
                              "src": "11287:46:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint32_$",
                                "typeString": "function (address) view returns (uint256,uint256,uint32)"
                              }
                            },
                            "id": 24197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11287:107:108",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                              "typeString": "tuple(uint256,uint256,uint32)"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint32_$",
                            "typeString": "tuple(uint256,uint256,uint32)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11098:371:108"
                      },
                      {
                        "id": 24257,
                        "nodeType": "UncheckedBlock",
                        "src": "11484:1015:108",
                        "statements": [
                          {
                            "assignments": [
                              24208
                            ],
                            "declarations": [
                              {
                                "constant": false,
                                "id": 24208,
                                "mutability": "mutable",
                                "name": "timeElapsed",
                                "nameLocation": "11621:11:108",
                                "nodeType": "VariableDeclaration",
                                "scope": 24257,
                                "src": "11614:18:108",
                                "stateVariable": false,
                                "storageLocation": "default",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                "typeName": {
                                  "id": 24207,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11614:6:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "visibility": "internal"
                              }
                            ],
                            "id": 24213,
                            "initialValue": {
                              "commonType": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              "id": 24212,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 24209,
                                "name": "blockTimestamp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 24187,
                                "src": "11635:14:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "id": 24210,
                                  "name": "pairData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24177,
                                  "src": "11672:8:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                    "typeString": "struct TwapOracle.PairData storage pointer"
                                  }
                                },
                                "id": 24211,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "blockTimestampLast",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23544,
                                "src": "11672:27:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "src": "11635:64:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "VariableDeclarationStatement",
                            "src": "11614:85:108"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 24217,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 24215,
                                    "name": "timeElapsed",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 24208,
                                    "src": "11746:11:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "id": 24216,
                                    "name": "_updatePeriod",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 23566,
                                    "src": "11761:13:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "11746:28:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                {
                                  "hexValue": "547761704f7261636c653a3a7570646174653a20506572696f64206e6f7420656c6170736564",
                                  "id": 24218,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "string",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "11796:40:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_stringliteral_b8f44df00030f638ea788e4f837a71a99ed39ac15201c5fbc318c1e06e9f560e",
                                    "typeString": "literal_string \"TwapOracle::update: Period not elapsed\""
                                  },
                                  "value": "TwapOracle::update: Period not elapsed"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  {
                                    "typeIdentifier": "t_stringliteral_b8f44df00030f638ea788e4f837a71a99ed39ac15201c5fbc318c1e06e9f560e",
                                    "typeString": "literal_string \"TwapOracle::update: Period not elapsed\""
                                  }
                                ],
                                "id": 24214,
                                "name": "require",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [
                                  4294967278,
                                  4294967278
                                ],
                                "referencedDeclaration": 4294967278,
                                "src": "11717:7:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                  "typeString": "function (bool,string memory) pure"
                                }
                              },
                              "id": 24219,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11717:137:108",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 24220,
                            "nodeType": "ExpressionStatement",
                            "src": "11717:137:108"
                          },
                          {
                            "expression": {
                              "id": 24237,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 24221,
                                  "name": "pairData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24177,
                                  "src": "12002:8:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                    "typeString": "struct TwapOracle.PairData storage pointer"
                                  }
                                },
                                "id": 24223,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "price0Average",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23547,
                                "src": "12002:22:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_uq112x112_$15854_storage",
                                  "typeString": "struct FixedPoint.uq112x112 storage ref"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 24234,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 24231,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 24228,
                                                "name": "price0Cumulative",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24183,
                                                "src": "12103:16:108",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 24229,
                                                  "name": "pairData",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 24177,
                                                  "src": "12122:8:108",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                                    "typeString": "struct TwapOracle.PairData storage pointer"
                                                  }
                                                },
                                                "id": 24230,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "price0CumulativeLast",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 23540,
                                                "src": "12122:29:108",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "12103:48:108",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 24232,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "12102:50:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 24233,
                                          "name": "timeElapsed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24208,
                                          "src": "12183:11:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "src": "12102:92:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 24227,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12069:7:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint224_$",
                                        "typeString": "type(uint224)"
                                      },
                                      "typeName": {
                                        "id": 24226,
                                        "name": "uint224",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12069:7:108",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 24235,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12069:147:108",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    }
                                  ],
                                  "expression": {
                                    "id": 24224,
                                    "name": "FixedPoint",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16493,
                                    "src": "12027:10:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_FixedPoint_$16493_$",
                                      "typeString": "type(library FixedPoint)"
                                    }
                                  },
                                  "id": 24225,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "uq112x112",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15854,
                                  "src": "12027:20:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_uq112x112_$15854_storage_ptr_$",
                                    "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                  }
                                },
                                "id": 24236,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12027:207:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                                  "typeString": "struct FixedPoint.uq112x112 memory"
                                }
                              },
                              "src": "12002:232:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_uq112x112_$15854_storage",
                                "typeString": "struct FixedPoint.uq112x112 storage ref"
                              }
                            },
                            "id": 24238,
                            "nodeType": "ExpressionStatement",
                            "src": "12002:232:108"
                          },
                          {
                            "expression": {
                              "id": 24255,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "expression": {
                                  "id": 24239,
                                  "name": "pairData",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 24177,
                                  "src": "12252:8:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                    "typeString": "struct TwapOracle.PairData storage pointer"
                                  }
                                },
                                "id": 24241,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "memberName": "price1Average",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 23550,
                                "src": "12252:22:108",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_uq112x112_$15854_storage",
                                  "typeString": "struct FixedPoint.uq112x112 storage ref"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 24252,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "components": [
                                            {
                                              "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              },
                                              "id": 24249,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "leftExpression": {
                                                "id": 24246,
                                                "name": "price1Cumulative",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 24185,
                                                "src": "12353:16:108",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "nodeType": "BinaryOperation",
                                              "operator": "-",
                                              "rightExpression": {
                                                "expression": {
                                                  "id": 24247,
                                                  "name": "pairData",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 24177,
                                                  "src": "12372:8:108",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                                    "typeString": "struct TwapOracle.PairData storage pointer"
                                                  }
                                                },
                                                "id": 24248,
                                                "isConstant": false,
                                                "isLValue": true,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "memberName": "price1CumulativeLast",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 23542,
                                                "src": "12372:29:108",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint256",
                                                  "typeString": "uint256"
                                                }
                                              },
                                              "src": "12353:48:108",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            }
                                          ],
                                          "id": 24250,
                                          "isConstant": false,
                                          "isInlineArray": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "TupleExpression",
                                          "src": "12352:50:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "/",
                                        "rightExpression": {
                                          "id": 24251,
                                          "name": "timeElapsed",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 24208,
                                          "src": "12433:11:108",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint32",
                                            "typeString": "uint32"
                                          }
                                        },
                                        "src": "12352:92:108",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 24245,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "12319:7:108",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint224_$",
                                        "typeString": "type(uint224)"
                                      },
                                      "typeName": {
                                        "id": 24244,
                                        "name": "uint224",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "12319:7:108",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 24253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "12319:147:108",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint224",
                                      "typeString": "uint224"
                                    }
                                  ],
                                  "expression": {
                                    "id": 24242,
                                    "name": "FixedPoint",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 16493,
                                    "src": "12277:10:108",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_FixedPoint_$16493_$",
                                      "typeString": "type(library FixedPoint)"
                                    }
                                  },
                                  "id": 24243,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "uq112x112",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 15854,
                                  "src": "12277:20:108",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_struct$_uq112x112_$15854_storage_ptr_$",
                                    "typeString": "type(struct FixedPoint.uq112x112 storage pointer)"
                                  }
                                },
                                "id": 24254,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "structConstructorCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12277:207:108",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_uq112x112_$15854_memory_ptr",
                                  "typeString": "struct FixedPoint.uq112x112 memory"
                                }
                              },
                              "src": "12252:232:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_uq112x112_$15854_storage",
                                "typeString": "struct FixedPoint.uq112x112 storage ref"
                              }
                            },
                            "id": 24256,
                            "nodeType": "ExpressionStatement",
                            "src": "12252:232:108"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 24262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 24258,
                              "name": "pairData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24177,
                              "src": "12559:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                "typeString": "struct TwapOracle.PairData storage pointer"
                              }
                            },
                            "id": 24260,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price0CumulativeLast",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23540,
                            "src": "12559:29:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 24261,
                            "name": "price0Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24183,
                            "src": "12591:16:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12559:48:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24263,
                        "nodeType": "ExpressionStatement",
                        "src": "12559:48:108"
                      },
                      {
                        "expression": {
                          "id": 24268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 24264,
                              "name": "pairData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24177,
                              "src": "12621:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                "typeString": "struct TwapOracle.PairData storage pointer"
                              }
                            },
                            "id": 24266,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "price1CumulativeLast",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23542,
                            "src": "12621:29:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 24267,
                            "name": "price1Cumulative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24185,
                            "src": "12653:16:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12621:48:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 24269,
                        "nodeType": "ExpressionStatement",
                        "src": "12621:48:108"
                      },
                      {
                        "expression": {
                          "id": 24274,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "id": 24270,
                              "name": "pairData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 24177,
                              "src": "12683:8:108",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_PairData_$23551_storage_ptr",
                                "typeString": "struct TwapOracle.PairData storage pointer"
                              }
                            },
                            "id": 24272,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "blockTimestampLast",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 23544,
                            "src": "12683:27:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 24273,
                            "name": "blockTimestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24187,
                            "src": "12713:14:108",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "12683:44:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 24275,
                        "nodeType": "ExpressionStatement",
                        "src": "12683:44:108"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 24171,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 24169,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24166,
                      "src": "10919:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 24170,
                      "name": "pairCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24161,
                      "src": "10923:9:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10919:13:108",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 24277,
                  "initializationExpression": {
                    "assignments": [
                      24166
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 24166,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "10912:1:108",
                        "nodeType": "VariableDeclaration",
                        "scope": 24277,
                        "src": "10904:9:108",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 24165,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10904:7:108",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 24168,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 24167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10916:1:108",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "10904:13:108"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 24173,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "10934:3:108",
                      "subExpression": {
                        "id": 24172,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 24166,
                        "src": "10934:1:108",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 24174,
                    "nodeType": "ExpressionStatement",
                    "src": "10934:3:108"
                  },
                  "nodeType": "ForStatement",
                  "src": "10899:1839:108"
                }
              ]
            },
            "documentation": {
              "id": 24153,
              "nodeType": "StructuredDocumentation",
              "src": "10624:101:108",
              "text": " @dev Updates the average prices for all token pairs registered in the TWAP oracle."
            },
            "functionSelector": "a2e62045",
            "id": 24279,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 24156,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24155,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "10757:9:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "10757:9:108"
              },
              {
                "id": 24158,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 24157,
                  "name": "initialized",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 23616,
                  "src": "10767:11:108"
                },
                "nodeType": "ModifierInvocation",
                "src": "10767:11:108"
              }
            ],
            "name": "update",
            "nameLocation": "10739:6:108",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 24154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10745:2:108"
            },
            "returnParameters": {
              "id": 24159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10779:0:108"
            },
            "scope": 24280,
            "src": "10730:2014:108",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 24281,
        "src": "632:12114:108",
        "usedErrors": []
      }
    ],
    "src": "39:12708:108"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.100Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Constructs a new TWAP oracle with a VADER pool and update period.",
        "params": {
          "updatePeriod": "The required period of time between each oracle update.",
          "vaderPool": "The VADER pool address."
        }
      },
      "consult(address)": {
        "details": "Performs a consultation to retrieve the equivalent to {amountIn} for the supplied {token} address. The {token} address must have a registered pairing, otherwise the transaction will revert.",
        "params": {
          "token": "The token address to consult the equivalent {amountIn} for."
        }
      },
      "enableUSDV()": {
        "details": "Enables utilization of USDV."
      },
      "getRate()": {
        "details": "Gets the exchange rate for the Vader to USDV."
      },
      "initialize(address,address)": {
        "details": "Initializes the variables for VADER and USDV.",
        "params": {
          "_usdv": "The USDV token address.",
          "_vader": "The VADER token address."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pairExists(address,address)": {
        "details": "Checks if a pair exists for the supplied {token0} and {token1} addresses.",
        "params": {
          "token0": "The primary token address, either VADER or USDV.",
          "token1": "The asset token address, paired to either VADER or USDV."
        }
      },
      "registerAggregator(address,address)": {
        "details": "Registers a chainlink {aggregator} for the supplied {asset} address.",
        "params": {
          "aggregator": "The address of the chainlink aggregator.",
          "asset": "The address of the native asset."
        }
      },
      "registerPair(address,address,address)": {
        "details": "Registers either a VADER or USDV pairing in the TWAP oracle.",
        "params": {
          "factory": "The factory address, if any.",
          "token0": "The primary token address, either VADER or USDV.",
          "token1": "The asset token address, paired to VADER or USDV."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "update()": {
        "details": "Updates the average prices for all token pairs registered in the TWAP oracle."
      },
      "usdvtoVader(uint256)": {
        "details": "Gets the VADER amount from the supplied USDV amount.",
        "params": {
          "usdvAmount": "The amount in USDV."
        }
      },
      "vaderToUsdv(uint256)": {
        "details": "Gets the USDV amount from the supplied VADER amount.",
        "params": {
          "vaderAmount": "The amount in VADER."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}