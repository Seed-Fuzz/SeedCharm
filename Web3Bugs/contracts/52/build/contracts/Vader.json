{
  "contractName": "Vader",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Emission",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previous",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "next",
          "type": "uint256"
        }
      ],
      "name": "EmissionChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "GrantClaimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previous",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "next",
          "type": "uint256"
        }
      ],
      "name": "MaxSupplyChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "converter",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "vest",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "usdv",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "dao",
          "type": "address"
        }
      ],
      "name": "ProtocolInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "converter",
      "outputs": [
        {
          "internalType": "contract IConverter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "emissionCurve",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastEmission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "maxSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "untaxed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "usdv",
      "outputs": [
        {
          "internalType": "contract IUSDV",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vest",
      "outputs": [
        {
          "internalType": "contract ILinearVesting",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "calculateFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "basisPoints",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentEraEmission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "currentSupply",
          "type": "uint256"
        }
      ],
      "name": "getEraEmission",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "createEmission",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IConverter",
          "name": "_converter",
          "type": "address"
        },
        {
          "internalType": "contract ILinearVesting",
          "name": "_vest",
          "type": "address"
        },
        {
          "internalType": "contract IUSDV",
          "name": "_usdv",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "dao",
          "type": "address"
        }
      ],
      "name": "setComponents",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "beneficiary",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "claimGrant",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_maxSupply",
          "type": "uint256"
        }
      ],
      "name": "adjustMaxSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Emission\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"next\",\"type\":\"uint256\"}],\"name\":\"EmissionChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"GrantClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previous\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"next\",\"type\":\"uint256\"}],\"name\":\"MaxSupplyChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"converter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"vest\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"usdv\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"ProtocolInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_maxSupply\",\"type\":\"uint256\"}],\"name\":\"adjustMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"calculateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"basisPoints\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beneficiary\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"claimGrant\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"converter\",\"outputs\":[{\"internalType\":\"contract IConverter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createEmission\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emissionCurve\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentEraEmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"currentSupply\",\"type\":\"uint256\"}],\"name\":\"getEraEmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastEmission\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IConverter\",\"name\":\"_converter\",\"type\":\"address\"},{\"internalType\":\"contract ILinearVesting\",\"name\":\"_vest\",\"type\":\"address\"},{\"internalType\":\"contract IUSDV\",\"name\":\"_usdv\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"}],\"name\":\"setComponents\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"untaxed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdv\",\"outputs\":[{\"internalType\":\"contract IUSDV\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vest\",\"outputs\":[{\"internalType\":\"contract ILinearVesting\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IVader} interface. The Vader token that acts as the backbone of the Vader protocol, burned and minted to mint and burn USDV tokens respectively. The token contains a dynamically adjusting fee that fluctuates between 0% and 1% depending on the total supply of the token in comparison to the maximum supply possible, which is initially equal to 2.5 billion units. A daily emission schedule is built in the contract as well, meant to supply the Vader USDV treasury at a diminishing rate that inches closer to 0 as the total supply of the token nears the maximum supply possible.\",\"kind\":\"dev\",\"methods\":{\"adjustMaxSupply(uint256)\":{\"details\":\"Allows the maximum supply of the token to be adjusted. Emits an {MaxSupplyChanged} event indicating the previous and next maximum total supplies. Requirements: - the caller must be the DAO - the new maximum supply must be greater than the current one\"},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"calculateFee()\":{\"details\":\"Returns the current fee that the protocol applies to transactions. The fee organically adjusts itself as the actual total supply of the token fluctuates and will always hold a value between [0%, 1%] expressed in basis points.\"},\"claimGrant(address,uint256)\":{\"details\":\"Allows a strategic partnership grant to be claimed. Emits a {GrantClaimed} event indicating the beneficiary of the grant as well as the grant amount. Requirements: - the caller must be the DAO - the token must hold sufficient Vader allocation for the grant - the grant must be of a non-zero amount\"},\"constructor\":{\"details\":\"Mints the ecosystem growth fund described in the whitepaper to the token contract itself. As the token is meant to be minted and burned freely between USDV and itself, there is no real initialization taking place apart from the initially minted supply for the following components: - Ecosystem Growth: An allocation that is released to strategic partners for the protocol's expansion - Team Allocation: An allocation that is gradually vested over a 2 year duration to the Vader team to incentivize maintainance of the protocol - Vether Holder Allocation: An allocation that is immediately available to all existing and future Vether holders that allows them to swap their Vether for Vader by burning the former The latter two of the allocations are minted at a later date given that the addresses of the converter and vesting contract are not known on deployment.\"},\"createEmission(address,uint256)\":{\"details\":\"Creates a manual emission event Emits an {Emission} event indicating the amount emitted as well as what the current era's timestamp is.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"getCurrentEraEmission()\":{\"details\":\"Returns the current era's emission based on the existing total supply of the token. The era emissions diminish as the total supply of the token increases, inching closer to 0 as the total supply reaches its cap.\"},\"getEraEmission(uint256)\":{\"details\":\"Calculates and returns the constantly diminishing era emission based on the difference between the current and maximum supply spread over a one year based in on the emission's era duration.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"setComponents(address,address,address,address)\":{\"details\":\"Sets the initial {converter}, {vest}, and {usdv} contract addresses prior to transferring ownership to the DAO. Additionally, mints the Vader amount available for conversion as well as the team allocation that is meant to be vested to each respective contract. Emits a {ProtocolInitialized} event indicating all the supplied values of the function. Requirements: - the caller must be the deployer of the contract - the contract must not have already been initialized\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/tokens/Vader.sol\":\"Vader\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xa56ca923f70c1748830700250b19c61b70db9a683516dc5e216694a50445d99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cac938788bc4be12101e59d45588b4e059579f4e61062e1cda8d6b06c0191b15\",\"dweb:/ipfs/QmV2JKCyjTVH3rkWNrfdJRhAT7tZ3usAN2XcnD4h53Mvih\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"project:/contracts/interfaces/tokens/IUSDV.sol\":{\"keccak256\":\"0xe2385226c76595cc2aee584310e67dbe802a78c006f3e1f076efc2c1ac5dcd36\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://c9faba744a1667360f6202523c0bcf42ecaa8cb5cbb01a671f42a39b6c27ce60\",\"dweb:/ipfs/QmbjdKGUJVTbqteq99mwko47YNd1ytLkCTnxa5UXr6LAEn\"]},\"project:/contracts/interfaces/tokens/IVader.sol\":{\"keccak256\":\"0xd3b10a02b3bc403f2bfc596925d43521e41e4eb47b97ab0268e6d5e3aef575ce\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://e97f2807e8fc90ca221b2325b54916193c0d53ccb99e13510f0d514c807738df\",\"dweb:/ipfs/QmUSVHxVbLTMN8o59D54rmvtvKCeoosBkvKf6UhRr7LcBJ\"]},\"project:/contracts/interfaces/tokens/converter/IConverter.sol\":{\"keccak256\":\"0x983e6e67767a8a031a2ff2cbfe122a20aacf29d9e5f1e293ff1ada5255af3c4e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://abe7ea21658fb75c1ee140ce555ca218f49bf7ae10c2f98e2d9d5f10e625ec78\",\"dweb:/ipfs/QmeBj2WZ1hMgt81o4Uosg17Q5EoVuKG2J4YRR3oVqNCyUy\"]},\"project:/contracts/interfaces/tokens/vesting/ILinearVesting.sol\":{\"keccak256\":\"0xb1c4ca2744c93e92af0a05bfd602797de082f96610f6ba56ea377a49e5aefe0e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4f68ba73c41560e0543a205bbf6e98dfd04b751811f025ed13585335b048bf77\",\"dweb:/ipfs/QmaA6jdFJzbmhHJPZauQbCnQYWkC5E7xbPT9Sy84TYzxAb\"]},\"project:/contracts/shared/ProtocolConstants.sol\":{\"keccak256\":\"0x845b3cdb262b4cc3a2ce4fd0c094c6e6b5e818988cd7c21d4b7b3295b80b7b22\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://763268835823e795ce64059ff8bb147224fb548a4f33b90be4b80b35c59598e2\",\"dweb:/ipfs/QmPbyyps31R4f2PVMpqCbkhWDw8UtG5vfikcNxL6Mg51e5\"]},\"project:/contracts/tokens/Vader.sol\":{\"keccak256\":\"0x5d6d83082a191a5e1b81a59ca3e082ffd2be0e808a5c5561c7dfad0d91371253\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://cc57d2475a7ba34b0c66f49bb2e343c67d24f8ed4db252263b4b17e278a27631\",\"dweb:/ipfs/QmeBxYW1ScR1hp9h648SEn7qe9tgZNsqGASZFAtXCZFJqL\"]}},\"version\":1}",
  "bytecode": "0x6080604052600560095542600a556b0813f3978f89409844000000600b553480156200002a57600080fd5b50604051806040016040528060058152602001642b30b232b960d91b815250604051806040016040528060058152602001642b20a222a960d91b81525081600390805190602001906200007f9291906200028e565b508051620000959060049060208401906200028e565b505050620000b2620000ac620000cf60201b60201c565b620000d3565b620000c9306acecb8f27f4200f3a00000062000125565b62000398565b3390565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216620001815760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064015b60405180910390fd5b6200018f60008383620001fa565b8060026000828254620001a3919062000334565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b0383166200028957600b54816200021760025490565b62000223919062000334565b1115620002895760405162461bcd60e51b815260206004820152602d60248201527f56616465723a3a5f6265666f7265546f6b656e5472616e736665723a204d696e60448201526c07420657863656564732063617609c1b606482015260840162000178565b505050565b8280546200029c906200035b565b90600052602060002090601f016020900481019282620002c057600085556200030b565b82601f10620002db57805160ff19168380011785556200030b565b828001600101855582156200030b579182015b828111156200030b578251825591602001919060010190620002ee565b50620003199291506200031d565b5090565b5b808211156200031957600081556001016200031e565b600082198211156200035657634e487b7160e01b600052601160045260246000fd5b500190565b600181811c908216806200037057607f821691505b602082108114156200039257634e487b7160e01b600052602260045260246000fd5b50919050565b61154880620003a86000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c80638dfdc0ca116100f9578063bd38837b11610097578063e30de15e11610071578063e30de15e146103a6578063e6af35f0146103b9578063e9ba3184146103c1578063f2fde38b146103d457600080fd5b8063bd38837b14610377578063d5abeb011461038a578063dd62ed3e1461039357600080fd5b80639921786c116100d35780639921786c146103405780639a67759b14610348578063a457c2d714610351578063a9059cbb1461036457600080fd5b80638dfdc0ca1461031c5780639420069c1461032557806395d89b411461033857600080fd5b806345afdc8d116101665780637373aa9f116101405780637373aa9f146102c25780637e76e2c5146102d55780637e867d14146102e85780638da5cb5b1461030b57600080fd5b806345afdc8d1461027c57806370a0823114610291578063715018a6146102ba57600080fd5b806323b872dd116101a257806323b872dd1461021c578063313ce5671461022f578063395093511461023e578063458efde31461025157600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d16103e7565b6040516101de91906112a8565b60405180910390f35b6101fa6101f5366004611312565b610479565b60405190151581526020016101de565b6002545b6040519081526020016101de565b6101fa61022a36600461133e565b610491565b604051601281526020016101de565b6101fa61024c366004611312565b6104b5565b600754610264906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b61028f61028a36600461137f565b6104d7565b005b61020e61029f3660046113db565b6001600160a01b031660009081526020819052604090205490565b61028f610749565b61028f6102d0366004611312565b61075d565b61020e6102e33660046113ff565b6107b5565b6101fa6102f63660046113db565b600c6020526000908152604090205460ff1681565b6005546001600160a01b0316610264565b61020e600a5481565b600854610264906001600160a01b031681565b6101d16107f3565b61020e610802565b61020e60095481565b6101fa61035f366004611312565b610815565b6101fa610372366004611312565b610890565b600654610264906001600160a01b031681565b61020e600b5481565b61020e6103a1366004611418565b61089e565b61028f6103b43660046113ff565b6108c9565b61020e61098c565b61028f6103cf366004611312565b6109af565b61028f6103e23660046113db565b610a6a565b6060600380546103f690611451565b80601f016020809104026020016040519081016040528092919081815260200182805461042290611451565b801561046f5780601f106104445761010080835404028352916020019161046f565b820191906000526020600020905b81548152906001019060200180831161045257829003601f168201915b5050505050905090565b600033610487818585610ae3565b5060019392505050565b60003361049f858285610c07565b6104aa858585610c81565b506001949350505050565b6000336104878185856104c8838361089e565b6104d291906114a2565b610ae3565b6104df610cf8565b6001600160a01b038416158015906104ff57506001600160a01b03831615155b801561051357506001600160a01b03821615155b801561052757506001600160a01b03811615155b61058a5760405162461bcd60e51b815260206004820152602960248201527f56616465723a3a736574436f6d706f6e656e74733a20496e636f727265637420604482015268417267756d656e747360b81b60648201526084015b60405180910390fd5b6006546001600160a01b0316156105ed5760405162461bcd60e51b815260206004820152602160248201527f56616465723a3a736574436f6d706f6e656e74733a20416c72656164792053656044820152601d60fa1b6064820152608401610581565b600680546001600160a01b038087166001600160a01b03199283168117909355600780548783169084168117909155600880549287169290931682179092556000928352600c6020526040808420805460ff19908116600190811790925593855281852080548516821790559184529092208054909116909117905561067f846b033b2e3c9fd0803ce8000000610d52565b610694836acecb8f27f4200f3a000000610d52565b826001600160a01b0316631bce6ff36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106cf57600080fd5b505af11580156106e3573d6000803e3d6000fd5b505050506106f081610a6a565b604080516001600160a01b0386811682528581166020830152848116828401528316606082015290517fac4d1eb40bd843ac98b3f3cc28e14e29ecb2968f64105baffe1fc38807148f059181900360800190a150505050565b610751610cf8565b61075b6000610e1d565b565b610765610cf8565b61076f8282610d52565b604080516001600160a01b0384168152602081018390527ff54dbf4cddb908bac0d67a3e6d3e4de95d0e7bc059afe2d34b37a6ebbc3879ca910160405180910390a15050565b60006107c8620151806301e133806114ba565b60095483600b546107d991906114dc565b6107e391906114ba565b6107ed91906114ba565b92915050565b6060600480546103f690611451565b60006108106102e360025490565b905090565b60003381610823828661089e565b9050838110156108835760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610581565b6104aa8286868403610ae3565b600033610487818585610c81565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6108d1610e6f565b60025481101561094b576040805162461bcd60e51b81526020600482015260248101919091527f56616465723a3a61646a7573744d6178537570706c793a204d6178207375707060448201527f6c792063616e6e6f7420737562636564652063757272656e7420737570706c796064820152608401610581565b600b5460408051918252602082018390527fa626f93317e2474b716846a09cf0e28aacb96052643b252fe97704208fecf9b5910160405180910390a1600b55565b6000600b5461099a60025490565b6109a59060646114f3565b61081091906114ba565b6109b7610e6f565b80610a185760405162461bcd60e51b815260206004820152602b60248201527f56616465723a3a636c61696d4772616e743a204e6f6e2d5a65726f20416d6f7560448201526a1b9d0814995c5d5a5c995960aa1b6064820152608401610581565b816001600160a01b03167f2aa1d398fac8a867531b04feb1273747a6f1ec3d4700f40a2901dce75363edc082604051610a5391815260200190565b60405180910390a2610a66308383610f32565b5050565b610a72610cf8565b6001600160a01b038116610ad75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610581565b610ae081610e1d565b50565b6001600160a01b038316610b455760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610581565b6001600160a01b038216610ba65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610581565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c13848461089e565b90506000198114610c7b5781811015610c6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610581565b610c7b8484848403610ae3565b50505050565b336000908152600c602052604090205460ff1615610ca957610ca4838383610f32565b505050565b6000610cb361098c565b90506000612710610cc483856114f3565b610cce91906114ba565b9050610cda81846114dc565b9250610ce685826110e1565b610cf1858585610f32565b5050505050565b6005546001600160a01b0316331461075b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610581565b6001600160a01b038216610da85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610581565b610db46000838361121f565b8060026000828254610dc691906114a2565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6006546001600160a01b0316610ec75760405162461bcd60e51b815260206004820181905260248201527f56616465723a3a5f6f6e6c7944414f3a2044414f206e6f7420736574207965746044820152606401610581565b6005546001600160a01b0316331461075b5760405162461bcd60e51b815260206004820152602860248201527f56616465723a3a5f6f6e6c7944414f3a20496e73756666696369656e742050726044820152676976696c6567657360c01b6064820152608401610581565b6001600160a01b038316610f965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610581565b6001600160a01b038216610ff85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610581565b61100383838361121f565b6001600160a01b0383166000908152602081905260409020548181101561107b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610581565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c7b565b6001600160a01b0382166111415760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610581565b61114d8260008361121f565b6001600160a01b038216600090815260208190526040902054818110156111c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610581565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b038316610ca457600b548161123a60025490565b61124491906114a2565b1115610ca45760405162461bcd60e51b815260206004820152602d60248201527f56616465723a3a5f6265666f7265546f6b656e5472616e736665723a204d696e60448201526c07420657863656564732063617609c1b6064820152608401610581565b600060208083528351808285015260005b818110156112d5578581018301518582016040015282016112b9565b818111156112e7576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610ae057600080fd5b6000806040838503121561132557600080fd5b8235611330816112fd565b946020939093013593505050565b60008060006060848603121561135357600080fd5b833561135e816112fd565b9250602084013561136e816112fd565b929592945050506040919091013590565b6000806000806080858703121561139557600080fd5b84356113a0816112fd565b935060208501356113b0816112fd565b925060408501356113c0816112fd565b915060608501356113d0816112fd565b939692955090935050565b6000602082840312156113ed57600080fd5b81356113f8816112fd565b9392505050565b60006020828403121561141157600080fd5b5035919050565b6000806040838503121561142b57600080fd5b8235611436816112fd565b91506020830135611446816112fd565b809150509250929050565b600181811c9082168061146557607f821691505b6020821081141561148657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156114b5576114b561148c565b500190565b6000826114d757634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156114ee576114ee61148c565b500390565b600081600019048311821515161561150d5761150d61148c565b50029056fea2646970667358221220216ce588cbe191f1cbb0b09b7e003e73bf0ad497068033b19daa2ed1e469734764736f6c63430008090033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101c45760003560e01c80638dfdc0ca116100f9578063bd38837b11610097578063e30de15e11610071578063e30de15e146103a6578063e6af35f0146103b9578063e9ba3184146103c1578063f2fde38b146103d457600080fd5b8063bd38837b14610377578063d5abeb011461038a578063dd62ed3e1461039357600080fd5b80639921786c116100d35780639921786c146103405780639a67759b14610348578063a457c2d714610351578063a9059cbb1461036457600080fd5b80638dfdc0ca1461031c5780639420069c1461032557806395d89b411461033857600080fd5b806345afdc8d116101665780637373aa9f116101405780637373aa9f146102c25780637e76e2c5146102d55780637e867d14146102e85780638da5cb5b1461030b57600080fd5b806345afdc8d1461027c57806370a0823114610291578063715018a6146102ba57600080fd5b806323b872dd116101a257806323b872dd1461021c578063313ce5671461022f578063395093511461023e578063458efde31461025157600080fd5b806306fdde03146101c9578063095ea7b3146101e757806318160ddd1461020a575b600080fd5b6101d16103e7565b6040516101de91906112a8565b60405180910390f35b6101fa6101f5366004611312565b610479565b60405190151581526020016101de565b6002545b6040519081526020016101de565b6101fa61022a36600461133e565b610491565b604051601281526020016101de565b6101fa61024c366004611312565b6104b5565b600754610264906001600160a01b031681565b6040516001600160a01b0390911681526020016101de565b61028f61028a36600461137f565b6104d7565b005b61020e61029f3660046113db565b6001600160a01b031660009081526020819052604090205490565b61028f610749565b61028f6102d0366004611312565b61075d565b61020e6102e33660046113ff565b6107b5565b6101fa6102f63660046113db565b600c6020526000908152604090205460ff1681565b6005546001600160a01b0316610264565b61020e600a5481565b600854610264906001600160a01b031681565b6101d16107f3565b61020e610802565b61020e60095481565b6101fa61035f366004611312565b610815565b6101fa610372366004611312565b610890565b600654610264906001600160a01b031681565b61020e600b5481565b61020e6103a1366004611418565b61089e565b61028f6103b43660046113ff565b6108c9565b61020e61098c565b61028f6103cf366004611312565b6109af565b61028f6103e23660046113db565b610a6a565b6060600380546103f690611451565b80601f016020809104026020016040519081016040528092919081815260200182805461042290611451565b801561046f5780601f106104445761010080835404028352916020019161046f565b820191906000526020600020905b81548152906001019060200180831161045257829003601f168201915b5050505050905090565b600033610487818585610ae3565b5060019392505050565b60003361049f858285610c07565b6104aa858585610c81565b506001949350505050565b6000336104878185856104c8838361089e565b6104d291906114a2565b610ae3565b6104df610cf8565b6001600160a01b038416158015906104ff57506001600160a01b03831615155b801561051357506001600160a01b03821615155b801561052757506001600160a01b03811615155b61058a5760405162461bcd60e51b815260206004820152602960248201527f56616465723a3a736574436f6d706f6e656e74733a20496e636f727265637420604482015268417267756d656e747360b81b60648201526084015b60405180910390fd5b6006546001600160a01b0316156105ed5760405162461bcd60e51b815260206004820152602160248201527f56616465723a3a736574436f6d706f6e656e74733a20416c72656164792053656044820152601d60fa1b6064820152608401610581565b600680546001600160a01b038087166001600160a01b03199283168117909355600780548783169084168117909155600880549287169290931682179092556000928352600c6020526040808420805460ff19908116600190811790925593855281852080548516821790559184529092208054909116909117905561067f846b033b2e3c9fd0803ce8000000610d52565b610694836acecb8f27f4200f3a000000610d52565b826001600160a01b0316631bce6ff36040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156106cf57600080fd5b505af11580156106e3573d6000803e3d6000fd5b505050506106f081610a6a565b604080516001600160a01b0386811682528581166020830152848116828401528316606082015290517fac4d1eb40bd843ac98b3f3cc28e14e29ecb2968f64105baffe1fc38807148f059181900360800190a150505050565b610751610cf8565b61075b6000610e1d565b565b610765610cf8565b61076f8282610d52565b604080516001600160a01b0384168152602081018390527ff54dbf4cddb908bac0d67a3e6d3e4de95d0e7bc059afe2d34b37a6ebbc3879ca910160405180910390a15050565b60006107c8620151806301e133806114ba565b60095483600b546107d991906114dc565b6107e391906114ba565b6107ed91906114ba565b92915050565b6060600480546103f690611451565b60006108106102e360025490565b905090565b60003381610823828661089e565b9050838110156108835760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b6064820152608401610581565b6104aa8286868403610ae3565b600033610487818585610c81565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6108d1610e6f565b60025481101561094b576040805162461bcd60e51b81526020600482015260248101919091527f56616465723a3a61646a7573744d6178537570706c793a204d6178207375707060448201527f6c792063616e6e6f7420737562636564652063757272656e7420737570706c796064820152608401610581565b600b5460408051918252602082018390527fa626f93317e2474b716846a09cf0e28aacb96052643b252fe97704208fecf9b5910160405180910390a1600b55565b6000600b5461099a60025490565b6109a59060646114f3565b61081091906114ba565b6109b7610e6f565b80610a185760405162461bcd60e51b815260206004820152602b60248201527f56616465723a3a636c61696d4772616e743a204e6f6e2d5a65726f20416d6f7560448201526a1b9d0814995c5d5a5c995960aa1b6064820152608401610581565b816001600160a01b03167f2aa1d398fac8a867531b04feb1273747a6f1ec3d4700f40a2901dce75363edc082604051610a5391815260200190565b60405180910390a2610a66308383610f32565b5050565b610a72610cf8565b6001600160a01b038116610ad75760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610581565b610ae081610e1d565b50565b6001600160a01b038316610b455760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610581565b6001600160a01b038216610ba65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610581565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610c13848461089e565b90506000198114610c7b5781811015610c6e5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610581565b610c7b8484848403610ae3565b50505050565b336000908152600c602052604090205460ff1615610ca957610ca4838383610f32565b505050565b6000610cb361098c565b90506000612710610cc483856114f3565b610cce91906114ba565b9050610cda81846114dc565b9250610ce685826110e1565b610cf1858585610f32565b5050505050565b6005546001600160a01b0316331461075b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610581565b6001600160a01b038216610da85760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610581565b610db46000838361121f565b8060026000828254610dc691906114a2565b90915550506001600160a01b038216600081815260208181526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6006546001600160a01b0316610ec75760405162461bcd60e51b815260206004820181905260248201527f56616465723a3a5f6f6e6c7944414f3a2044414f206e6f7420736574207965746044820152606401610581565b6005546001600160a01b0316331461075b5760405162461bcd60e51b815260206004820152602860248201527f56616465723a3a5f6f6e6c7944414f3a20496e73756666696369656e742050726044820152676976696c6567657360c01b6064820152608401610581565b6001600160a01b038316610f965760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610581565b6001600160a01b038216610ff85760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610581565b61100383838361121f565b6001600160a01b0383166000908152602081905260409020548181101561107b5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610581565b6001600160a01b03848116600081815260208181526040808320878703905593871680835291849020805487019055925185815290927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3610c7b565b6001600160a01b0382166111415760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610581565b61114d8260008361121f565b6001600160a01b038216600090815260208190526040902054818110156111c15760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b6064820152608401610581565b6001600160a01b0383166000818152602081815260408083208686039055600280548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a3505050565b6001600160a01b038316610ca457600b548161123a60025490565b61124491906114a2565b1115610ca45760405162461bcd60e51b815260206004820152602d60248201527f56616465723a3a5f6265666f7265546f6b656e5472616e736665723a204d696e60448201526c07420657863656564732063617609c1b6064820152608401610581565b600060208083528351808285015260005b818110156112d5578581018301518582016040015282016112b9565b818111156112e7576000604083870101525b50601f01601f1916929092016040019392505050565b6001600160a01b0381168114610ae057600080fd5b6000806040838503121561132557600080fd5b8235611330816112fd565b946020939093013593505050565b60008060006060848603121561135357600080fd5b833561135e816112fd565b9250602084013561136e816112fd565b929592945050506040919091013590565b6000806000806080858703121561139557600080fd5b84356113a0816112fd565b935060208501356113b0816112fd565b925060408501356113c0816112fd565b915060608501356113d0816112fd565b939692955090935050565b6000602082840312156113ed57600080fd5b81356113f8816112fd565b9392505050565b60006020828403121561141157600080fd5b5035919050565b6000806040838503121561142b57600080fd5b8235611436816112fd565b91506020830135611446816112fd565b809150509250929050565b600181811c9082168061146557607f821691505b6020821081141561148657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082198211156114b5576114b561148c565b500190565b6000826114d757634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156114ee576114ee61148c565b500390565b600081600019048311821515161561150d5761150d61148c565b50029056fea2646970667358221220216ce588cbe191f1cbb0b09b7e003e73bf0ad497068033b19daa2ed1e469734764736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1582:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "188:181:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "205:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "216:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "198:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "198:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "198:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "239:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "250:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "235:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "235:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "255:2:110",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "228:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "228:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "228:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "278:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "289:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "274:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "274:18:110"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "294:33:110",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "267:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "267:61:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "267:61:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "337:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "349:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "360:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "345:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "345:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "337:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "165:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "179:4:110",
                "type": ""
              }
            ],
            "src": "14:355:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "422:177:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "457:111:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "478:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "485:3:110",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "490:10:110",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "481:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "481:20:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "471:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "471:31:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "471:31:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:110",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:4:110",
                              "type": "",
                              "value": "0x11"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "515:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "515:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "515:15:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "550:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "553:4:110",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "543:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "543:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "543:15:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "438:1:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "445:1:110"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "441:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "441:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "435:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "435:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "432:136:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "577:16:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "588:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "591:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "584:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "584:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "577:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "405:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "408:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "414:3:110",
                "type": ""
              }
            ],
            "src": "374:225:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "705:76:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "715:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "727:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "738:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "723:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "723:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "715:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "757:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "768:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "750:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "750:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "750:25:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "674:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "685:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "696:4:110",
                "type": ""
              }
            ],
            "src": "604:177:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "960:235:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "977:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "988:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "970:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "970:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "970:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1011:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1022:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1007:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1007:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1027:2:110",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1000:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1000:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1050:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1061:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1046:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1046:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a5f6265666f7265546f6b656e5472616e736665723a204d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1066:34:110",
                        "type": "",
                        "value": "Vader::_beforeTokenTransfer: Min"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1039:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1039:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1121:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1132:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1117:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1117:18:110"
                      },
                      {
                        "hexValue": "74206578636565647320636170",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1137:15:110",
                        "type": "",
                        "value": "t exceeds cap"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1110:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1110:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1110:43:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1162:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1174:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1185:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1170:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1170:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1162:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_066044bd5a57dd8ad819eb714a077bde0fcc1888ec413966c979878d10946e03__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "937:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "951:4:110",
                "type": ""
              }
            ],
            "src": "786:409:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1255:325:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1265:22:110",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1279:1:110",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1282:4:110"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "1275:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1275:12:110"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1265:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1296:38:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "1326:4:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1332:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1322:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1322:12:110"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "1300:18:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1373:31:110",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1375:27:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "1389:6:110"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1397:4:110",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1385:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1385:17:110"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1375:6:110"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1353:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1346:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1346:26:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1343:61:110"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1463:111:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1484:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1491:3:110",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1496:10:110",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1487:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1487:20:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1477:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1477:31:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1477:31:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1528:1:110",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1531:4:110",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1521:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1521:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1521:15:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1556:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1559:4:110",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1549:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1549:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1549:15:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "1419:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "1442:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1450:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1439:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1439:14:110"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "1416:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1416:38:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1413:161:110"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1235:4:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1244:6:110",
                "type": ""
              }
            ],
            "src": "1200:380:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_066044bd5a57dd8ad819eb714a077bde0fcc1888ec413966c979878d10946e03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Vader::_beforeTokenTransfer: Min\")\n        mstore(add(headStart, 96), \"t exceeds cap\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:14289:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "135:476:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "145:12:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "155:2:110",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "149:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "173:9:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "184:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "166:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "166:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "166:21:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "196:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "216:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "210:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "210:13:110"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "200:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "243:9:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "254:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "239:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "239:18:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "259:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "232:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "232:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "232:34:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "275:10:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "284:1:110",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "279:1:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "344:90:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "373:9:110"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "384:1:110"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "369:3:110"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "369:17:110"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "388:2:110",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "365:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "365:26:110"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "407:6:110"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "415:1:110"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "403:3:110"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "403:14:110"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "419:2:110"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "399:3:110"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "399:23:110"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "393:5:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "393:30:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "358:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "358:66:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "358:66:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "305:1:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "308:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "302:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:13:110"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "316:19:110",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "318:15:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "327:1:110"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:110"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "323:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "323:10:110"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "318:1:110"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "298:3:110",
                    "statements": []
                  },
                  "src": "294:140:110"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "468:66:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:9:110"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "508:6:110"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "493:3:110"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "493:22:110"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "517:2:110",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "489:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "489:31:110"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "522:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "482:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "482:42:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "482:42:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "449:1:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "452:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "446:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "446:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "443:91:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "543:62:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "559:9:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "578:6:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "586:2:110",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "574:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "574:15:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "595:2:110",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "591:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "591:7:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "570:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "570:29:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "555:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "555:45:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "602:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "551:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:54:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "543:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "104:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "115:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "126:4:110",
                "type": ""
              }
            ],
            "src": "14:597:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "661:86:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "725:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "734:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "737:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "727:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "727:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "727:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "684:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "695:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "710:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "715:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "706:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "706:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "719:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "702:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "702:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "691:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "691:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "681:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "681:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "674:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "674:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "671:70:110"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "650:5:110",
                "type": ""
              }
            ],
            "src": "616:131:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "839:228:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "885:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "894:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "897:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "887:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "887:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "887:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "860:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "869:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "856:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "856:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "881:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "852:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "852:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "849:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "910:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "936:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "923:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "923:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "914:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "980:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "955:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "955:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "955:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "995:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1005:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "995:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1019:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1046:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1057:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1042:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1042:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1029:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1029:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1019:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "797:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "808:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "820:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "828:6:110",
                "type": ""
              }
            ],
            "src": "752:315:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1167:92:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1177:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1189:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1200:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1185:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1185:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1177:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1219:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1244:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1237:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1237:14:110"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1230:6:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1230:22:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1212:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1212:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1212:41:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1136:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1147:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1158:4:110",
                "type": ""
              }
            ],
            "src": "1072:187:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1365:76:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1375:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1387:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1398:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1383:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1383:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1375:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1417:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1428:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1410:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1410:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1410:25:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1334:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1345:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1356:4:110",
                "type": ""
              }
            ],
            "src": "1264:177:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1550:352:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1596:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1605:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1608:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1598:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1598:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1598:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1571:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1580:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1567:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1567:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1592:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1563:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1563:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1560:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1621:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1647:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1634:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1625:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1691:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1666:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1666:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1666:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1706:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1716:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1706:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1730:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1762:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1773:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1758:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1758:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1745:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1734:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "1811:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1786:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1786:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1786:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1828:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "1838:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1828:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1854:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1881:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1892:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1877:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1877:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1864:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1864:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1854:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1500:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1511:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1523:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1531:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1539:6:110",
                "type": ""
              }
            ],
            "src": "1446:456:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2004:87:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2014:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2026:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2037:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2022:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2014:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2056:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2071:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2079:4:110",
                            "type": "",
                            "value": "0xff"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2067:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2067:17:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2049:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2049:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2049:36:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1973:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1984:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1995:4:110",
                "type": ""
              }
            ],
            "src": "1907:184:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2221:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2231:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2243:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2254:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2239:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2239:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2231:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2273:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2288:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2304:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2309:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2300:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2300:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2313:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2296:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2296:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2284:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2266:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2266:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2266:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_ILinearVesting_$20526__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2190:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2201:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2212:4:110",
                "type": ""
              }
            ],
            "src": "2096:227:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2508:550:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2555:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2564:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2567:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2557:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2557:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2557:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2529:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2538:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2525:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2525:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2550:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2521:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2521:33:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2518:53:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2580:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2606:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2593:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2593:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2584:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2650:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2625:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2625:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2625:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2665:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2675:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2665:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2689:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2721:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2732:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2717:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2717:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2704:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2693:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2770:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2745:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2745:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2745:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2787:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2797:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2787:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2813:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2845:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2856:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2841:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2841:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2828:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2828:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2817:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2894:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2869:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2869:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2869:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2911:17:110",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2921:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2911:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2937:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2969:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2980:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2965:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2965:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2952:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2952:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_3",
                      "nodeType": "YulTypedName",
                      "src": "2941:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_3",
                        "nodeType": "YulIdentifier",
                        "src": "3018:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2993:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2993:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2993:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3035:17:110",
                  "value": {
                    "name": "value_3",
                    "nodeType": "YulIdentifier",
                    "src": "3045:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3035:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IConverter_$20479t_contract$_ILinearVesting_$20526t_contract$_IUSDV_$20397t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2450:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2461:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2473:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2481:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2489:6:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2497:6:110",
                "type": ""
              }
            ],
            "src": "2328:730:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3133:177:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3179:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3188:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3191:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3181:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3181:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3181:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3154:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3163:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3150:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3150:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3175:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3146:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3146:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "3143:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3204:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3230:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3217:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3217:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3208:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3274:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3249:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3249:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3289:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3299:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3289:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3099:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3110:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3122:6:110",
                "type": ""
              }
            ],
            "src": "3063:247:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3385:110:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3431:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3440:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3443:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3433:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3433:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3433:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3406:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3415:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3402:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3402:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3427:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3398:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3398:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "3395:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3456:33:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3479:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3466:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3466:23:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3456:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3351:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3362:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3374:6:110",
                "type": ""
              }
            ],
            "src": "3315:180:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3601:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3611:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3623:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3634:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3619:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3619:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3611:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3653:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3668:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3684:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3689:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3680:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3680:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3693:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3676:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3676:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3664:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3664:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3646:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3646:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3646:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3570:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3581:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3592:4:110",
                "type": ""
              }
            ],
            "src": "3500:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3824:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3834:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3846:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3857:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3842:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3842:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3834:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3876:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3891:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3907:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3912:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3903:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3903:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3916:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3899:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3899:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3887:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3887:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3869:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3869:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3869:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IUSDV_$20397__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3793:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3804:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3815:4:110",
                "type": ""
              }
            ],
            "src": "3708:218:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4052:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4062:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4074:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4085:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4070:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4070:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4062:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4104:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4119:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4135:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4140:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4131:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4131:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4144:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4127:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4127:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4115:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4115:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4097:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4097:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4097:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IConverter_$20479__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4021:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4032:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4043:4:110",
                "type": ""
              }
            ],
            "src": "3931:223:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4246:301:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4292:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4301:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4304:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4294:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4294:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4294:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4267:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4276:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4263:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4263:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4288:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4259:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4259:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4256:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4317:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4343:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4330:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4330:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4321:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4387:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4362:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4362:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4362:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4402:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4412:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4402:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4426:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4458:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4469:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4454:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4454:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4441:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4441:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4430:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4507:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4482:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4482:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4482:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4524:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4534:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4524:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4204:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4215:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4227:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4235:6:110",
                "type": ""
              }
            ],
            "src": "4159:388:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4607:325:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4617:22:110",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4631:1:110",
                        "type": "",
                        "value": "1"
                      },
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4634:4:110"
                      }
                    ],
                    "functionName": {
                      "name": "shr",
                      "nodeType": "YulIdentifier",
                      "src": "4627:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4627:12:110"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4617:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4648:38:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4678:4:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4684:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4674:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4674:12:110"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "4652:18:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4725:31:110",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4727:27:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4741:6:110"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4749:4:110",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4737:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4737:17:110"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4727:6:110"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4705:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4698:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:26:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4695:61:110"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4815:111:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4836:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4843:3:110",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4848:10:110",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4839:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4839:20:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4829:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4829:31:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4829:31:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4880:1:110",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4883:4:110",
                              "type": "",
                              "value": "0x22"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4873:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4873:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4873:15:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4908:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4911:4:110",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4901:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4901:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4901:15:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4771:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4794:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4802:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4791:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4791:14:110"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4768:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4768:38:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4765:161:110"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4587:4:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4596:6:110",
                "type": ""
              }
            ],
            "src": "4552:380:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4969:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4986:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4993:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4998:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4989:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4989:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4979:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4979:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4979:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5026:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5029:4:110",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5019:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5019:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5019:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5050:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5053:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5043:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5043:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5043:15:110"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "4937:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5117:80:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5144:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5146:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5146:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5146:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5133:1:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "5140:1:110"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "5136:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5136:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5130:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5130:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "5127:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5175:16:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5186:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5189:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5182:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5182:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5175:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5100:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5103:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5109:3:110",
                "type": ""
              }
            ],
            "src": "5069:128:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5376:231:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5393:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5404:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5386:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5386:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5386:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5427:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5438:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5423:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5423:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5443:2:110",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5416:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5416:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5416:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5466:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5477:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5462:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5462:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a736574436f6d706f6e656e74733a20496e636f727265637420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5482:34:110",
                        "type": "",
                        "value": "Vader::setComponents: Incorrect "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5455:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5455:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5455:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5537:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5548:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5533:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5533:18:110"
                      },
                      {
                        "hexValue": "417267756d656e7473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5553:11:110",
                        "type": "",
                        "value": "Arguments"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5526:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5526:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5526:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5574:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5586:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5597:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5582:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5582:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5574:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_abeb5880c43adcc85e30612fc4a0e975aee6b0eb8a54a17acd026f6ea67e572f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5353:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5367:4:110",
                "type": ""
              }
            ],
            "src": "5202:405:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5786:223:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5803:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5814:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5796:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5796:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5796:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5837:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5848:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5833:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5833:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5853:2:110",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5826:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5826:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5826:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5876:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5887:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5872:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5872:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a736574436f6d706f6e656e74733a20416c7265616479205365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5892:34:110",
                        "type": "",
                        "value": "Vader::setComponents: Already Se"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5865:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5865:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5865:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5947:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5958:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5943:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5943:18:110"
                      },
                      {
                        "hexValue": "74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5963:3:110",
                        "type": "",
                        "value": "t"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5936:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5936:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5936:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5976:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5988:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5999:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5984:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5984:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5976:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_41bd8471d50e800425741a7e2bc90a0b49531e06b708bdf320239199d6fde200__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5763:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5777:4:110",
                "type": ""
              }
            ],
            "src": "5612:397:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6199:280:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6209:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6221:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6232:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6217:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6217:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6209:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6245:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6263:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6268:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "6259:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6259:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6272:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6255:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6255:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "6249:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6290:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6305:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6313:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6301:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6301:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6283:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6283:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6283:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6337:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6348:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6333:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6333:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "6357:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6365:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6353:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6353:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6326:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6326:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6326:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6389:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6400:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6385:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6385:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "6409:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6417:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6405:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6405:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6378:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6378:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6378:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6441:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6452:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6437:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6437:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "6461:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "6469:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6457:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6457:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6430:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6430:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6430:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6144:9:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "6155:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "6163:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6171:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6179:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6190:4:110",
                "type": ""
              }
            ],
            "src": "6014:465:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6613:145:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6623:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6635:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6646:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6631:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6631:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6623:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6665:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6680:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6696:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6701:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "6692:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6692:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6705:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "6688:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6688:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "6676:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6676:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6658:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6658:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6658:51:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6729:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6740:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6725:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6725:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6745:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6718:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6718:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6718:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6574:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6585:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6593:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6604:4:110",
                "type": ""
              }
            ],
            "src": "6484:274:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6809:171:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6840:111:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6861:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6868:3:110",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "6873:10:110",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "6864:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "6864:20:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6854:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6854:31:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6854:31:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6905:1:110",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6908:4:110",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "6898:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6898:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6898:15:110"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6933:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6936:4:110",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6926:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6926:15:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6926:15:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6829:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6822:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6822:9:110"
                  },
                  "nodeType": "YulIf",
                  "src": "6819:132:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6960:14:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6969:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6972:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6965:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6965:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6960:1:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6794:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6797:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6803:1:110",
                "type": ""
              }
            ],
            "src": "6763:217:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7034:76:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7056:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "7058:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7058:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7058:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7050:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7053:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "7047:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7047:8:110"
                  },
                  "nodeType": "YulIf",
                  "src": "7044:34:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7087:17:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "7099:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "7102:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7095:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7095:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "7087:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "7016:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "7019:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "7025:4:110",
                "type": ""
              }
            ],
            "src": "6985:125:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7289:227:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7306:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7317:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7299:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7299:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7299:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7340:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7351:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7336:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7336:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7356:2:110",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7329:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7329:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7329:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7379:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7390:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7375:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7375:18:110"
                      },
                      {
                        "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7395:34:110",
                        "type": "",
                        "value": "ERC20: decreased allowance below"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7368:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7368:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7368:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7450:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7461:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7446:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7446:18:110"
                      },
                      {
                        "hexValue": "207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7466:7:110",
                        "type": "",
                        "value": " zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7439:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7439:35:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7439:35:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7483:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7495:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7506:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7491:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7491:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7483:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7266:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7280:4:110",
                "type": ""
              }
            ],
            "src": "7115:401:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7695:254:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7712:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7723:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7705:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7705:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7705:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7746:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7757:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7742:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7742:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7762:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7735:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7735:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7735:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7785:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7796:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7781:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7781:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a61646a7573744d6178537570706c793a204d61782073757070",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7801:34:110",
                        "type": "",
                        "value": "Vader::adjustMaxSupply: Max supp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7774:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7774:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7774:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7856:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7867:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7852:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7852:18:110"
                      },
                      {
                        "hexValue": "6c792063616e6e6f7420737562636564652063757272656e7420737570706c79",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7872:34:110",
                        "type": "",
                        "value": "ly cannot subcede current supply"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7845:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7845:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7845:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7916:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7928:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7939:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7924:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7924:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7916:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f452244e7ca71a78790a52b49a0b50606cf046daedbd4e111efa411cc31bddf7__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7672:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7686:4:110",
                "type": ""
              }
            ],
            "src": "7521:428:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8083:119:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8093:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8105:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8116:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8101:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8101:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8093:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8135:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8146:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8128:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8128:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8128:25:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8173:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8184:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8169:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8169:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "8189:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8162:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8162:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8162:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8044:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8055:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8063:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8074:4:110",
                "type": ""
              }
            ],
            "src": "7954:248:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8259:116:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8318:22:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "8320:16:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8320:18:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8320:18:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8290:1:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "8283:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8283:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "8276:6:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8276:17:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "8298:1:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8309:1:110",
                                    "type": "",
                                    "value": "0"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "8305:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8305:6:110"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "8313:1:110"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "8301:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8301:14:110"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "8295:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8295:21:110"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "8272:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8272:45:110"
                  },
                  "nodeType": "YulIf",
                  "src": "8269:71:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8349:20:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "8364:1:110"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "8367:1:110"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "8360:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8360:9:110"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "8349:7:110"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "8238:1:110",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "8241:1:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "8247:7:110",
                "type": ""
              }
            ],
            "src": "8207:168:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8554:233:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8571:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8582:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8564:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8564:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8564:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8605:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8616:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8601:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8601:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8621:2:110",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8594:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8594:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8594:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8644:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8655:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8640:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8640:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a636c61696d4772616e743a204e6f6e2d5a65726f20416d6f75",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8660:34:110",
                        "type": "",
                        "value": "Vader::claimGrant: Non-Zero Amou"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8633:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8633:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8633:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8715:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8726:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8711:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8711:18:110"
                      },
                      {
                        "hexValue": "6e74205265717569726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8731:13:110",
                        "type": "",
                        "value": "nt Required"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8704:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8704:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8704:41:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8754:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8766:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8777:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8762:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8762:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8754:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f6eae03fa4f61e32f9833ddc9f9113f5ae90001b90414d53189e3a0078551073__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8531:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8545:4:110",
                "type": ""
              }
            ],
            "src": "8380:407:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8966:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8983:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8994:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8976:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8976:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8976:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9017:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9028:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9013:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9013:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9033:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9006:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9006:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9006:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9056:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9067:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9052:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9052:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9072:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9045:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9045:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9045:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9127:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9138:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9123:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9123:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9143:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9116:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9116:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9116:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9161:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9173:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9184:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9169:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9169:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9161:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8943:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8957:4:110",
                "type": ""
              }
            ],
            "src": "8792:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9373:226:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9390:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9401:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9383:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9383:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9383:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9424:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9435:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9420:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9420:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9440:2:110",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9413:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9413:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9413:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9463:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9474:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9459:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9459:18:110"
                      },
                      {
                        "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f20616464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9479:34:110",
                        "type": "",
                        "value": "ERC20: approve from the zero add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9452:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9452:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9452:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9534:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9545:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9530:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9530:18:110"
                      },
                      {
                        "hexValue": "72657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9550:6:110",
                        "type": "",
                        "value": "ress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9523:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9523:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9523:34:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9566:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9578:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9589:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9574:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9574:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9566:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9350:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9364:4:110",
                "type": ""
              }
            ],
            "src": "9199:400:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9778:224:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9795:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9806:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9788:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9788:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9788:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9829:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9840:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9825:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9825:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9845:2:110",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9818:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9818:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9818:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9868:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9879:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9864:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9864:18:110"
                      },
                      {
                        "hexValue": "45524332303a20617070726f766520746f20746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9884:34:110",
                        "type": "",
                        "value": "ERC20: approve to the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9857:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9857:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9857:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9939:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9950:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9935:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9935:18:110"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9955:4:110",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9928:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9928:32:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9928:32:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9969:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9981:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9992:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9977:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9977:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9969:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9755:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9769:4:110",
                "type": ""
              }
            ],
            "src": "9604:398:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10181:179:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10198:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10209:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10191:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10191:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10191:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10232:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10243:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10228:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10228:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10248:2:110",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10221:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10221:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10221:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10271:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10282:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10267:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10267:18:110"
                      },
                      {
                        "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10287:31:110",
                        "type": "",
                        "value": "ERC20: insufficient allowance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10260:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10260:59:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10260:59:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10328:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10340:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10351:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10336:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10336:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10328:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10158:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10172:4:110",
                "type": ""
              }
            ],
            "src": "10007:353:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10539:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10556:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10567:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10549:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10549:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10549:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10590:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10601:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10586:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10586:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10606:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10579:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10579:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10579:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10629:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10640:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10625:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10625:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10645:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10618:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10618:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10618:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10689:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10701:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10712:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10697:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10697:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10689:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10516:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10530:4:110",
                "type": ""
              }
            ],
            "src": "10365:356:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10900:181:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10917:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10928:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10910:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10910:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10910:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10951:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10962:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10947:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10947:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10967:2:110",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10940:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10940:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10940:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10990:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11001:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10986:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10986:18:110"
                      },
                      {
                        "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11006:33:110",
                        "type": "",
                        "value": "ERC20: mint to the zero address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10979:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10979:61:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10979:61:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11049:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11061:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11072:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11057:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11057:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11049:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10877:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10891:4:110",
                "type": ""
              }
            ],
            "src": "10726:355:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11260:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11277:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11288:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11270:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11270:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11270:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11311:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11322:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11307:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11307:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11327:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11300:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11300:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11300:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11350:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11361:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11346:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11346:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a5f6f6e6c7944414f3a2044414f206e6f742073657420796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11366:34:110",
                        "type": "",
                        "value": "Vader::_onlyDAO: DAO not set yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11339:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11339:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11339:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11410:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11422:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11433:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11418:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11418:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11410:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5cbb420b73fb7815ca07ca7847f438fda8756d037b4e603a987552cac37ca497__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11237:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11251:4:110",
                "type": ""
              }
            ],
            "src": "11086:356:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11621:230:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11638:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11649:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11631:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11631:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11631:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11672:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11683:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11668:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11668:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11688:2:110",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11661:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11661:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11661:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11711:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11722:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11707:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11707:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a5f6f6e6c7944414f3a20496e73756666696369656e74205072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11727:34:110",
                        "type": "",
                        "value": "Vader::_onlyDAO: Insufficient Pr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11700:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11700:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11700:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11782:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11793:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11778:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11778:18:110"
                      },
                      {
                        "hexValue": "6976696c65676573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11798:10:110",
                        "type": "",
                        "value": "ivileges"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11771:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11771:38:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11771:38:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11818:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11830:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11841:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11826:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11826:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11818:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc420bdf89f5adb7de07fd9b682743e054b1b39c966bdf819fdad20d553f5dc8__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11598:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11612:4:110",
                "type": ""
              }
            ],
            "src": "11447:404:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12030:227:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12047:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12058:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12040:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12040:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12040:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12081:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12092:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12077:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12077:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12097:2:110",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12070:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12070:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12070:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12120:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12131:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12116:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12116:18:110"
                      },
                      {
                        "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f206164",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12136:34:110",
                        "type": "",
                        "value": "ERC20: transfer from the zero ad"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12109:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12109:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12109:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12191:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12202:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12187:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12187:18:110"
                      },
                      {
                        "hexValue": "6472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12207:7:110",
                        "type": "",
                        "value": "dress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12180:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12180:35:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12180:35:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12224:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12236:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12247:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12232:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12232:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12224:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12007:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12021:4:110",
                "type": ""
              }
            ],
            "src": "11856:401:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12436:225:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12453:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12464:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12446:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12446:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12446:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12487:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12498:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12483:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12483:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12503:2:110",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12476:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12476:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12476:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12526:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12537:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12522:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12522:18:110"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12542:34:110",
                        "type": "",
                        "value": "ERC20: transfer to the zero addr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12515:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12515:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12515:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12597:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12608:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12593:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12593:18:110"
                      },
                      {
                        "hexValue": "657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12613:5:110",
                        "type": "",
                        "value": "ess"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12586:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12586:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12586:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12628:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12640:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12651:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12636:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12636:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12628:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12413:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12427:4:110",
                "type": ""
              }
            ],
            "src": "12262:399:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12840:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12857:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12868:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12850:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12850:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12850:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12891:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12902:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12887:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12887:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12907:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12880:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12880:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12880:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12930:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12941:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12926:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12926:18:110"
                      },
                      {
                        "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12946:34:110",
                        "type": "",
                        "value": "ERC20: transfer amount exceeds b"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12919:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12919:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12919:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13001:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13012:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12997:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12997:18:110"
                      },
                      {
                        "hexValue": "616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13017:8:110",
                        "type": "",
                        "value": "alance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12990:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12990:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12990:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13035:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13047:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13058:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13043:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13043:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13035:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12817:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12831:4:110",
                "type": ""
              }
            ],
            "src": "12666:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13247:223:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13264:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13275:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13257:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13257:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13257:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13298:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13309:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13294:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13294:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13314:2:110",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13287:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13287:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13287:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13337:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13348:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13333:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13333:18:110"
                      },
                      {
                        "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f20616464726573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13353:34:110",
                        "type": "",
                        "value": "ERC20: burn from the zero addres"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13326:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13326:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13326:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13408:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13419:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13404:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13404:18:110"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13424:3:110",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13397:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13397:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13397:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13437:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13449:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13460:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13445:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13445:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13437:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13224:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13238:4:110",
                "type": ""
              }
            ],
            "src": "13073:397:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13649:224:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13666:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13677:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13659:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13659:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13659:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13700:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13711:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13696:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13696:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13716:2:110",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13689:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13689:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13689:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13739:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13750:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13735:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13735:18:110"
                      },
                      {
                        "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13755:34:110",
                        "type": "",
                        "value": "ERC20: burn amount exceeds balan"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13728:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13728:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13728:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13810:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13821:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13806:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13806:18:110"
                      },
                      {
                        "hexValue": "6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13826:4:110",
                        "type": "",
                        "value": "ce"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13799:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13799:32:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13799:32:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13840:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13852:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13863:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13848:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13848:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13840:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13626:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13640:4:110",
                "type": ""
              }
            ],
            "src": "13475:398:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14052:235:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14069:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14080:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14062:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14062:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14062:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14103:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14114:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14099:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14099:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14119:2:110",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14092:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14092:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14092:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14142:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14153:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14138:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14138:18:110"
                      },
                      {
                        "hexValue": "56616465723a3a5f6265666f7265546f6b656e5472616e736665723a204d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14158:34:110",
                        "type": "",
                        "value": "Vader::_beforeTokenTransfer: Min"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14131:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14131:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14131:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14213:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14224:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14209:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14209:18:110"
                      },
                      {
                        "hexValue": "74206578636565647320636170",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14229:15:110",
                        "type": "",
                        "value": "t exceeds cap"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14202:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14202:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14202:43:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14254:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14266:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14277:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14262:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14262:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14254:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_066044bd5a57dd8ad819eb714a077bde0fcc1888ec413966c979878d10946e03__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14029:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14043:4:110",
                "type": ""
              }
            ],
            "src": "13878:409:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function abi_encode_tuple_t_contract$_ILinearVesting_$20526__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IConverter_$20479t_contract$_ILinearVesting_$20526t_contract$_IUSDV_$20397t_address(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUSDV_$20397__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IConverter_$20479__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_abeb5880c43adcc85e30612fc4a0e975aee6b0eb8a54a17acd026f6ea67e572f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"Vader::setComponents: Incorrect \")\n        mstore(add(headStart, 96), \"Arguments\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_41bd8471d50e800425741a7e2bc90a0b49531e06b708bdf320239199d6fde200__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Vader::setComponents: Already Se\")\n        mstore(add(headStart, 96), \"t\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_address_t_address__to_t_address_t_address_t_address_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f452244e7ca71a78790a52b49a0b50606cf046daedbd4e111efa411cc31bddf7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), \"Vader::adjustMaxSupply: Max supp\")\n        mstore(add(headStart, 96), \"ly cannot subcede current supply\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_f6eae03fa4f61e32f9833ddc9f9113f5ae90001b90414d53189e3a0078551073__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Vader::claimGrant: Non-Zero Amou\")\n        mstore(add(headStart, 96), \"nt Required\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5cbb420b73fb7815ca07ca7847f438fda8756d037b4e603a987552cac37ca497__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Vader::_onlyDAO: DAO not set yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cc420bdf89f5adb7de07fd9b682743e054b1b39c966bdf819fdad20d553f5dc8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Vader::_onlyDAO: Insufficient Pr\")\n        mstore(add(headStart, 96), \"ivileges\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_066044bd5a57dd8ad819eb714a077bde0fcc1888ec413966c979878d10946e03__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Vader::_beforeTokenTransfer: Min\")\n        mstore(add(headStart, 96), \"t exceeds cap\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1099:10792:105:-:0;;;1130:1:98;1538:54:105;;1690:15;1660:45;;534:23:98;1790:48:105;;3076:96;;;;;;;;;;1980:113:6;;;;;;;;;;;;;-1:-1:-1;;;1980:113:6;;;;;;;;;;;;;;;;-1:-1:-1;;;1980:113:6;;;2054:5;2046;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2069:17:6;;;;:7;;:17;;;;;:::i;:::-;;1980:113;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;3125:39:105::1;3139:4;934:21:98;3125:5:105;:39::i;:::-;1099:10792:::0;;655:96:18;734:10;;655:96::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;8520:535:6:-;-1:-1:-1;;;;;8603:21:6;;8595:65;;;;-1:-1:-1;;;8595:65:6;;216:2:110;8595:65:6;;;198:21:110;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8595:65:6;;;;;;;;;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:6;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;750:25:110;;;8952:37:6;;723:18:110;8952:37:6;;;;;;;8520:535;;:::o;8338:356:105:-;-1:-1:-1;;;;;8479:18:105;;8475:179;;8564:9;;8554:6;8538:13;3342:12:6;;;3255:106;8538:13:105;:22;;;;:::i;:::-;:35;;8512:142;;;;-1:-1:-1;;;8512:142:105;;988:2:110;8512:142:105;;;970:21:110;1027:2;1007:18;;;1000:30;1066:34;1046:18;;;1039:62;-1:-1:-1;;;1117:18:110;;;1110:43;1170:19;;8512:142:105;786:409:110;8512:142:105;8338:356;;;:::o;1099:10792::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1099:10792:105;;;-1:-1:-1;1099:10792:105;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;374:225:110;414:3;445:1;441:6;438:1;435:13;432:136;;;490:10;485:3;481:20;478:1;471:31;525:4;522:1;515:15;553:4;550:1;543:15;432:136;-1:-1:-1;584:9:110;;374:225::o;1200:380::-;1279:1;1275:12;;;;1322;;;1343:61;;1397:4;1389:6;1385:17;1375:27;;1343:61;1450:2;1442:6;1439:14;1419:18;1416:38;1413:161;;;1496:10;1491:3;1487:20;1484:1;1477:31;1531:4;1528:1;1521:15;1559:4;1556:1;1549:15;1413:161;;1200:380;;;:::o;:::-;1099:10792:105;;;;;;",
  "deployedSourceMap": "1099:10792:105:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98:6;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4444:197;;;;;;:::i;:::-;;:::i;:::-;;;1237:14:110;;1230:22;1212:41;;1200:2;1185:18;4444:197:6;1072:187:110;3255:106:6;3342:12;;3255:106;;;1410:25:110;;;1398:2;1383:18;3255:106:6;1264:177:110;5203:256:6;;;;;;:::i;:::-;;:::i;3104:91::-;;;3186:2;2049:36:110;;2037:2;2022:18;3104:91:6;1907:184:110;5854:234:6;;;;;;:::i;:::-;;:::i;1341:26:105:-;;;;;-1:-1:-1;;;;;1341:26:105;;;;;;-1:-1:-1;;;;;2284:32:110;;;2266:51;;2254:2;2239:18;1341:26:105;2096:227:110;5617:1122:105;;;;;;:::i;:::-;;:::i;:::-;;3419:125:6;;;;;;:::i;:::-;-1:-1:-1;;;;;3519:18:6;3493:7;3519:18;;;;;;;;;;;;3419:125;1824:101:0;;;:::i;4793:190:105:-;;;;;;:::i;:::-;;:::i;4286:254::-;;;;;;:::i;:::-;;:::i;1942:39::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1201:85:0;1273:6;;-1:-1:-1;;;;;1273:6:0;1201:85;;1660:45:105;;;;;;1439:17;;;;;-1:-1:-1;;;;;1439:17:105;;;2369:102:6;;;:::i;3920:129:105:-;;;:::i;1538:54::-;;;;;;6575:427:6;;;;;;:::i;:::-;;:::i;3740:189::-;;;;;;:::i;:::-;;:::i;1265:27:105:-;;;;;-1:-1:-1;;;;;1265:27:105;;;1790:48;;;;;;3987:149:6;;;;;;:::i;:::-;;:::i;7773:310:105:-;;;;;;:::i;:::-;;:::i;3494:159::-;;;:::i;7148:271::-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;2158:98:6:-;2212:13;2244:5;2237:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2158:98;:::o;4444:197::-;4527:4;734:10:18;4581:32:6;734:10:18;4597:7:6;4606:6;4581:8;:32::i;:::-;-1:-1:-1;4630:4:6;;4444:197;-1:-1:-1;;;4444:197:6:o;5203:256::-;5300:4;734:10:18;5356:38:6;5372:4;734:10:18;5387:6:6;5356:15;:38::i;:::-;5404:27;5414:4;5420:2;5424:6;5404:9;:27::i;:::-;-1:-1:-1;5448:4:6;;5203:256;-1:-1:-1;;;;5203:256:6:o;5854:234::-;5942:4;734:10:18;5996:64:6;734:10:18;6012:7:6;6049:10;6021:25;734:10:18;6012:7:6;6021:9;:25::i;:::-;:38;;;;:::i;:::-;5996:8;:64::i;5617:1122:105:-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;5806:39:105;::::1;::::0;;::::1;::::0;:98:::1;;-1:-1:-1::0;;;;;;5866:38:105;::::1;::::0;::::1;5806:98;:148;;;;-1:-1:-1::0;;;;;;5925:29:105;::::1;::::0;::::1;5806:148;:189;;;;-1:-1:-1::0;;;;;;5975:20:105;::::1;::::0;::::1;5806:189;5784:280;;;::::0;-1:-1:-1;;;5784:280:105;;5404:2:110;5784:280:105::1;::::0;::::1;5386:21:110::0;5443:2;5423:18;;;5416:30;5482:34;5462:18;;;5455:62;-1:-1:-1;;;5533:18:110;;;5526:39;5582:19;;5784:280:105::1;;;;;;;;;6097:9;::::0;-1:-1:-1;;;;;6097:9:105::1;:38:::0;6075:121:::1;;;::::0;-1:-1:-1;;;6075:121:105;;5814:2:110;6075:121:105::1;::::0;::::1;5796:21:110::0;5853:2;5833:18;;;5826:30;5892:34;5872:18;;;5865:62;-1:-1:-1;;;5943:18:110;;;5936:31;5984:19;;6075:121:105::1;5612:397:110::0;6075:121:105::1;6209:9;:22:::0;;-1:-1:-1;;;;;6209:22:105;;::::1;-1:-1:-1::0;;;;;;6209:22:105;;::::1;::::0;::::1;::::0;;;6242:4:::1;:12:::0;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;6265:4:::1;:12:::0;;;;::::1;::::0;;;::::1;::::0;::::1;::::0;;;6209:9:::1;6290:28:::0;;;:7:::1;:28;::::0;;;;;:35;;-1:-1:-1;;6290:35:105;;::::1;6209:22:::0;6290:35;;::::1;::::0;;;6336:23;;;;;;:30;;;::::1;::::0;::::1;::::0;;6377:23;;;;;;:30;;;;::::1;::::0;;::::1;::::0;;6420:44:::1;6221:10:::0;647:23:98::1;6420:5:105;:44::i;:::-;6475:39;6489:5;785:21:98;6475:5:105;:39::i;:::-;6527:5;-1:-1:-1::0;;;;;6527:11:105::1;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6551:22;6569:3;6551:17;:22::i;:::-;6591:140;::::0;;-1:-1:-1;;;;;6301:15:110;;;6283:34;;6353:15;;;6348:2;6333:18;;6326:43;6405:15;;;6385:18;;;6378:43;6457:15;;6452:2;6437:18;;6430:43;6591:140:105;;::::1;::::0;;;;6232:3:110;6591:140:105;;::::1;5617:1122:::0;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;4793:190:105:-;1094:13:0;:11;:13::i;:::-;4918:19:105::1;4924:4;4930:6;4918:5;:19::i;:::-;4953:22;::::0;;-1:-1:-1;;;;;6676:32:110;;6658:51;;6740:2;6725:18;;6718:34;;;4953:22:105::1;::::0;6631:18:110;4953:22:105::1;;;;;;;4793:190:::0;;:::o;4286:254::-;4399:7;4506:25;1027:8:98;313;4506:25:105;:::i;:::-;4475:13;;4458;4446:9;;:25;;;;:::i;:::-;4445:43;;;;:::i;:::-;4444:88;;;;:::i;:::-;4424:108;4286:254;-1:-1:-1;;4286:254:105:o;2369:102:6:-;2425:13;2457:7;2450:14;;;;;:::i;3920:129:105:-;3985:7;4012:29;4027:13;3342:12:6;;;3255:106;4012:29:105;4005:36;;3920:129;:::o;6575:427:6:-;6668:4;734:10:18;6668:4:6;6749:25;734:10:18;6766:7:6;6749:9;:25::i;:::-;6722:52;;6812:15;6792:16;:35;;6784:85;;;;-1:-1:-1;;;6784:85:6;;7317:2:110;6784:85:6;;;7299:21:110;7356:2;7336:18;;;7329:30;7395:34;7375:18;;;7368:62;-1:-1:-1;;;7446:18:110;;;7439:35;7491:19;;6784:85:6;7115:401:110;6784:85:6;6903:60;6912:5;6919:7;6947:15;6928:16;:34;6903:8;:60::i;3740:189::-;3819:4;734:10:18;3873:28:6;734:10:18;3890:2:6;3894:6;3873:9;:28::i;3987:149::-;-1:-1:-1;;;;;4102:18:6;;;4076:7;4102:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3987:149::o;7773:310:105:-;9980:10;:8;:10::i;:::-;3342:12:6;;7868:10:105::1;:27;;7846:141;;;::::0;;-1:-1:-1;;;7846:141:105;;7723:2:110;7846:141:105::1;::::0;::::1;7705:21:110::0;7742:18;;;7735:30;;;;7801:34;7781:18;;;7774:62;7872:34;7852:18;;;7845:62;7924:19;;7846:141:105::1;7521:428:110::0;7846:141:105::1;8020:9;::::0;8003:39:::1;::::0;;8128:25:110;;;8184:2;8169:18;;8162:34;;;8003:39:105::1;::::0;8101:18:110;8003:39:105::1;;;;;;;8053:9;:22:::0;7773:310::o;3494:159::-;3548:19;3636:9;;3619:13;3342:12:6;;;3255:106;3619:13:105;3595:37;;1215:4:98;3595:37:105;:::i;:::-;3594:51;;;;:::i;7148:271::-;9980:10;:8;:10::i;:::-;7241:11;7233:67:::1;;;::::0;-1:-1:-1;;;7233:67:105;;8582:2:110;7233:67:105::1;::::0;::::1;8564:21:110::0;8621:2;8601:18;;;8594:30;8660:34;8640:18;;;8633:62;-1:-1:-1;;;8711:18:110;;;8704:41;8762:19;;7233:67:105::1;8380:407:110::0;7233:67:105::1;7329:11;-1:-1:-1::0;;;;;7316:33:105::1;;7342:6;7316:33;;;;1410:25:110::0;;1398:2;1383:18;;1264:177;7316:33:105::1;;;;;;;;7360:51;7384:4;7391:11;7404:6;7360:15;:51::i;:::-;7148:271:::0;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;8994:2:110;2154:73:0::1;::::0;::::1;8976:21:110::0;9033:2;9013:18;;;9006:30;9072:34;9052:18;;;9045:62;-1:-1:-1;;;9123:18:110;;;9116:36;9169:19;;2154:73:0::1;8792:402:110::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;10457:340:6:-;-1:-1:-1;;;;;10558:19:6;;10550:68;;;;-1:-1:-1;;;10550:68:6;;9401:2:110;10550:68:6;;;9383:21:110;9440:2;9420:18;;;9413:30;9479:34;9459:18;;;9452:62;-1:-1:-1;;;9530:18:110;;;9523:34;9574:19;;10550:68:6;9199:400:110;10550:68:6;-1:-1:-1;;;;;10636:21:6;;10628:68;;;;-1:-1:-1;;;10628:68:6;;9806:2:110;10628:68:6;;;9788:21:110;9845:2;9825:18;;;9818:30;9884:34;9864:18;;;9857:62;-1:-1:-1;;;9935:18:110;;;9928:32;9977:19;;10628:68:6;9604:398:110;10628:68:6;-1:-1:-1;;;;;10707:18:6;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10758:32;;1410:25:110;;;10758:32:6;;1383:18:110;10758:32:6;;;;;;;10457:340;;;:::o;11078:411::-;11178:24;11205:25;11215:5;11222:7;11205:9;:25::i;:::-;11178:52;;-1:-1:-1;;11244:16:6;:37;11240:243;;11325:6;11305:16;:26;;11297:68;;;;-1:-1:-1;;;11297:68:6;;10209:2:110;11297:68:6;;;10191:21:110;10248:2;10228:18;;;10221:30;10287:31;10267:18;;;10260:59;10336:18;;11297:68:6;10007:353:110;11297:68:6;11407:51;11416:5;11423:7;11451:6;11432:16;:25;11407:8;:51::i;:::-;11168:321;11078:411;;;:::o;8830:442:105:-;8975:10;8967:19;;;;:7;:19;;;;;;;;8963:87;;;9008:42;9024:6;9032:9;9043:6;9008:15;:42::i;:::-;8830:442;;;:::o;8963:87::-;9063:11;9077:14;:12;:14::i;:::-;9063:28;-1:-1:-1;9104:11:105;397:6:98;9119:12:105;9063:28;9119:6;:12;:::i;:::-;9118:34;;;;:::i;:::-;9104:48;-1:-1:-1;9165:13:105;9104:48;9165:13;;:::i;:::-;;;9191:18;9197:6;9205:3;9191:5;:18::i;:::-;9222:42;9238:6;9246:9;9257:6;9222:15;:42::i;:::-;8952:320;;8830:442;;;:::o;1359:130:0:-;1273:6;;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;10567:2:110;1414:68:0;;;10549:21:110;;;10586:18;;;10579:30;10645:34;10625:18;;;10618:62;10697:18;;1414:68:0;10365:356:110;8520:535:6;-1:-1:-1;;;;;8603:21:6;;8595:65;;;;-1:-1:-1;;;8595:65:6;;10928:2:110;8595:65:6;;;10910:21:110;10967:2;10947:18;;;10940:30;11006:33;10986:18;;;10979:61;11057:18;;8595:65:6;10726:355:110;8595:65:6;8671:49;8700:1;8704:7;8713:6;8671:20;:49::i;:::-;8747:6;8731:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8899:18:6;;:9;:18;;;;;;;;;;;:28;;;;;;8952:37;1410:25:110;;;8952:37:6;;1383:18:110;8952:37:6;;;;;;;7148:271:105;;:::o;2426:187:0:-;2518:6;;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;;2566:40;;2518:6;;;2534:17;2518:6;;2566:40;;2499:16;;2566:40;2489:124;2426:187;:::o;9518:296:105:-;9584:9;;-1:-1:-1;;;;;9584:9:105;9562:120;;;;-1:-1:-1;;;9562:120:105;;11288:2:110;9562:120:105;;;11270:21:110;;;11307:18;;;11300:30;11366:34;11346:18;;;11339:62;11418:18;;9562:120:105;11086:356:110;9562:120:105;1273:6:0;;-1:-1:-1;;;;;1273:6:0;734:10:18;9715:23:105;9693:113;;;;-1:-1:-1;;;9693:113:105;;11649:2:110;9693:113:105;;;11631:21:110;11688:2;11668:18;;;11661:30;11727:34;11707:18;;;11700:62;-1:-1:-1;;;11778:18:110;;;11771:38;11826:19;;9693:113:105;11447:404:110;7456:788:6;-1:-1:-1;;;;;7552:18:6;;7544:68;;;;-1:-1:-1;;;7544:68:6;;12058:2:110;7544:68:6;;;12040:21:110;12097:2;12077:18;;;12070:30;12136:34;12116:18;;;12109:62;-1:-1:-1;;;12187:18:110;;;12180:35;12232:19;;7544:68:6;11856:401:110;7544:68:6;-1:-1:-1;;;;;7630:16:6;;7622:64;;;;-1:-1:-1;;;7622:64:6;;12464:2:110;7622:64:6;;;12446:21:110;12503:2;12483:18;;;12476:30;12542:34;12522:18;;;12515:62;-1:-1:-1;;;12593:18:110;;;12586:33;12636:19;;7622:64:6;12262:399:110;7622:64:6;7697:38;7718:4;7724:2;7728:6;7697:20;:38::i;:::-;-1:-1:-1;;;;;7768:15:6;;7746:19;7768:15;;;;;;;;;;;7801:21;;;;7793:72;;;;-1:-1:-1;;;7793:72:6;;12868:2:110;7793:72:6;;;12850:21:110;12907:2;12887:18;;;12880:30;12946:34;12926:18;;;12919:62;-1:-1:-1;;;12997:18:110;;;12990:36;13043:19;;7793:72:6;12666:402:110;7793:72:6;-1:-1:-1;;;;;7899:15:6;;;:9;:15;;;;;;;;;;;7917:20;;;7899:38;;8114:13;;;;;;;;;;:23;;;;;;8163:26;;1410:25:110;;;8114:13:6;;8163:26;;1383:18:110;8163:26:6;;;;;;;8200:37;8830:442:105;9375:659:6;-1:-1:-1;;;;;9458:21:6;;9450:67;;;;-1:-1:-1;;;9450:67:6;;13275:2:110;9450:67:6;;;13257:21:110;13314:2;13294:18;;;13287:30;13353:34;13333:18;;;13326:62;-1:-1:-1;;;13404:18:110;;;13397:31;13445:19;;9450:67:6;13073:397:110;9450:67:6;9528:49;9549:7;9566:1;9570:6;9528:20;:49::i;:::-;-1:-1:-1;;;;;9613:18:6;;9588:22;9613:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:6;;13677:2:110;9641:71:6;;;13659:21:110;13716:2;13696:18;;;13689:30;13755:34;13735:18;;;13728:62;-1:-1:-1;;;13806:18:110;;;13799:32;13848:19;;9641:71:6;13475:398:110;9641:71:6;-1:-1:-1;;;;;9746:18:6;;:9;:18;;;;;;;;;;;9767:23;;;9746:44;;9883:12;:22;;;;;;;9931:37;1410:25:110;;;9746:9:6;;:18;9931:37;;1383:18:110;9931:37:6;;;;;;;8830:442:105;;;:::o;8338:356::-;-1:-1:-1;;;;;8479:18:105;;8475:179;;8564:9;;8554:6;8538:13;3342:12:6;;;3255:106;8538:13:105;:22;;;;:::i;:::-;:35;;8512:142;;;;-1:-1:-1;;;8512:142:105;;14080:2:110;8512:142:105;;;14062:21:110;14119:2;14099:18;;;14092:30;14158:34;14138:18;;;14131:62;-1:-1:-1;;;14209:18:110;;;14202:43;14262:19;;8512:142:105;13878:409:110;14:597;126:4;155:2;184;173:9;166:21;216:6;210:13;259:6;254:2;243:9;239:18;232:34;284:1;294:140;308:6;305:1;302:13;294:140;;;403:14;;;399:23;;393:30;369:17;;;388:2;365:26;358:66;323:10;;294:140;;;452:6;449:1;446:13;443:91;;;522:1;517:2;508:6;497:9;493:22;489:31;482:42;443:91;-1:-1:-1;595:2:110;574:15;-1:-1:-1;;570:29:110;555:45;;;;602:2;551:54;;14:597;-1:-1:-1;;;14:597:110:o;616:131::-;-1:-1:-1;;;;;691:31:110;;681:42;;671:70;;737:1;734;727:12;752:315;820:6;828;881:2;869:9;860:7;856:23;852:32;849:52;;;897:1;894;887:12;849:52;936:9;923:23;955:31;980:5;955:31;:::i;:::-;1005:5;1057:2;1042:18;;;;1029:32;;-1:-1:-1;;;752:315:110:o;1446:456::-;1523:6;1531;1539;1592:2;1580:9;1571:7;1567:23;1563:32;1560:52;;;1608:1;1605;1598:12;1560:52;1647:9;1634:23;1666:31;1691:5;1666:31;:::i;:::-;1716:5;-1:-1:-1;1773:2:110;1758:18;;1745:32;1786:33;1745:32;1786:33;:::i;:::-;1446:456;;1838:7;;-1:-1:-1;;;1892:2:110;1877:18;;;;1864:32;;1446:456::o;2328:730::-;2473:6;2481;2489;2497;2550:3;2538:9;2529:7;2525:23;2521:33;2518:53;;;2567:1;2564;2557:12;2518:53;2606:9;2593:23;2625:31;2650:5;2625:31;:::i;:::-;2675:5;-1:-1:-1;2732:2:110;2717:18;;2704:32;2745:33;2704:32;2745:33;:::i;:::-;2797:7;-1:-1:-1;2856:2:110;2841:18;;2828:32;2869:33;2828:32;2869:33;:::i;:::-;2921:7;-1:-1:-1;2980:2:110;2965:18;;2952:32;2993:33;2952:32;2993:33;:::i;:::-;2328:730;;;;-1:-1:-1;2328:730:110;;-1:-1:-1;;2328:730:110:o;3063:247::-;3122:6;3175:2;3163:9;3154:7;3150:23;3146:32;3143:52;;;3191:1;3188;3181:12;3143:52;3230:9;3217:23;3249:31;3274:5;3249:31;:::i;:::-;3299:5;3063:247;-1:-1:-1;;;3063:247:110:o;3315:180::-;3374:6;3427:2;3415:9;3406:7;3402:23;3398:32;3395:52;;;3443:1;3440;3433:12;3395:52;-1:-1:-1;3466:23:110;;3315:180;-1:-1:-1;3315:180:110:o;4159:388::-;4227:6;4235;4288:2;4276:9;4267:7;4263:23;4259:32;4256:52;;;4304:1;4301;4294:12;4256:52;4343:9;4330:23;4362:31;4387:5;4362:31;:::i;:::-;4412:5;-1:-1:-1;4469:2:110;4454:18;;4441:32;4482:33;4441:32;4482:33;:::i;:::-;4534:7;4524:17;;;4159:388;;;;;:::o;4552:380::-;4631:1;4627:12;;;;4674;;;4695:61;;4749:4;4741:6;4737:17;4727:27;;4695:61;4802:2;4794:6;4791:14;4771:18;4768:38;4765:161;;;4848:10;4843:3;4839:20;4836:1;4829:31;4883:4;4880:1;4873:15;4911:4;4908:1;4901:15;4765:161;;4552:380;;;:::o;4937:127::-;4998:10;4993:3;4989:20;4986:1;4979:31;5029:4;5026:1;5019:15;5053:4;5050:1;5043:15;5069:128;5109:3;5140:1;5136:6;5133:1;5130:13;5127:39;;;5146:18;;:::i;:::-;-1:-1:-1;5182:9:110;;5069:128::o;6763:217::-;6803:1;6829;6819:132;;6873:10;6868:3;6864:20;6861:1;6854:31;6908:4;6905:1;6898:15;6936:4;6933:1;6926:15;6819:132;-1:-1:-1;6965:9:110;;6763:217::o;6985:125::-;7025:4;7053:1;7050;7047:8;7044:34;;;7058:18;;:::i;:::-;-1:-1:-1;7095:9:110;;6985:125::o;8207:168::-;8247:7;8313:1;8309;8305:6;8301:14;8298:1;8295:21;8290:1;8283:9;8276:17;8272:45;8269:71;;;8320:18;;:::i;:::-;-1:-1:-1;8360:9:110;;8207:168::o",
  "source": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity =0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\n\r\nimport \"../shared/ProtocolConstants.sol\";\r\n\r\nimport \"../interfaces/tokens/IUSDV.sol\";\r\nimport \"../interfaces/tokens/IVader.sol\";\r\nimport \"../interfaces/tokens/vesting/ILinearVesting.sol\";\r\nimport \"../interfaces/tokens/converter/IConverter.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IVader} interface.\r\n *\r\n * The Vader token that acts as the backbone of the Vader protocol,\r\n * burned and minted to mint and burn USDV tokens respectively.\r\n *\r\n * The token contains a dynamically adjusting fee that fluctuates\r\n * between 0% and 1% depending on the total supply of the token\r\n * in comparison to the maximum supply possible, which is initially\r\n * equal to 2.5 billion units.\r\n *\r\n * A daily emission schedule is built in the contract as well,\r\n * meant to supply the Vader USDV treasury at a diminishing\r\n * rate that inches closer to 0 as the total supply of the token\r\n * nears the maximum supply possible.\r\n */\r\ncontract Vader is IVader, ProtocolConstants, ERC20, Ownable {\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    // The Vader <-> Vether converter contract\r\n    IConverter public converter;\r\n\r\n    // The Vader Team vesting contract\r\n    ILinearVesting public vest;\r\n\r\n    // The USDV contract, used to apply proper access control\r\n    IUSDV public usdv;\r\n\r\n    // The adjustable emission curve of the protocol, used as a divisor\r\n    uint256 public emissionCurve = _INITIAL_EMISSION_CURVE;\r\n\r\n    // The last emission's timestamp expressed in seconds\r\n    uint256 public lastEmission = block.timestamp;\r\n\r\n    // The initial maximum supply of the token, equivalent to 2.5 bn units\r\n    uint256 public maxSupply = _INITIAL_VADER_SUPPLY;\r\n\r\n    // A list of addresses that do not have a tax applied to them, used for system components\r\n    mapping(address => bool) public untaxed;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    /**\r\n     * @dev Mints the ecosystem growth fund described in the whitepaper to the\r\n     * token contract itself.\r\n     *\r\n     * As the token is meant to be minted and burned freely between USDV and itself,\r\n     * there is no real initialization taking place apart from the initially minted\r\n     * supply for the following components:\r\n     *\r\n     * - Ecosystem Growth: An allocation that is released to strategic partners for the\r\n     * protocol's expansion\r\n     *\r\n     * - Team Allocation: An allocation that is gradually vested over a 2 year duration to\r\n     * the Vader team to incentivize maintainance of the protocol\r\n     *\r\n     * - Vether Holder Allocation: An allocation that is immediately available to all existing\r\n     * and future Vether holders that allows them to swap their Vether for Vader by burning the\r\n     * former\r\n     *\r\n     * The latter two of the allocations are minted at a later date given that the addresses of\r\n     * the converter and vesting contract are not known on deployment.\r\n     */\r\n    constructor() ERC20(\"Vader\", \"VADER\") {\r\n        _mint(address(this), _ECOSYSTEM_GROWTH);\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    /**\r\n     * @dev Returns the current fee that the protocol applies to transactions. The fee\r\n     * organically adjusts itself as the actual total supply of the token fluctuates and\r\n     * will always hold a value between [0%, 1%] expressed in basis points.\r\n     */\r\n    function calculateFee() public view override returns (uint256 basisPoints) {\r\n        basisPoints = (_MAX_FEE_BASIS_POINTS * totalSupply()) / maxSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the current era's emission based on the existing total supply of the\r\n     * token. The era emissions diminish as the total supply of the token increases, inching\r\n     * closer to 0 as the total supply reaches its cap.\r\n     */\r\n    function getCurrentEraEmission() external view override returns (uint256) {\r\n        return getEraEmission(totalSupply());\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates and returns the constantly diminishing era emission based on the difference between\r\n     * the current and maximum supply spread over a one year based in on the emission's era duration.\r\n     */\r\n    function getEraEmission(uint256 currentSupply)\r\n        public\r\n        view\r\n        override\r\n        returns (uint256)\r\n    {\r\n        return\r\n            ((maxSupply - currentSupply) / emissionCurve) /\r\n            (_ONE_YEAR / _EMISSION_ERA);\r\n    }\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Creates a manual emission event\r\n     *\r\n     * Emits an {Emission} event indicating the amount emitted as well as what the current\r\n     * era's timestamp is.\r\n     */\r\n    function createEmission(address user, uint256 amount)\r\n        external\r\n        override\r\n        onlyOwner\r\n    {\r\n        _mint(user, amount);\r\n        emit Emission(user, amount);\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Sets the initial {converter}, {vest}, and {usdv} contract addresses prior to transferring\r\n     * ownership to the DAO. Additionally, mints the Vader amount available for conversion as well\r\n     * as the team allocation that is meant to be vested to each respective contract.\r\n     *\r\n     * Emits a {ProtocolInitialized} event indicating all the supplied values of the function.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the deployer of the contract\r\n     * - the contract must not have already been initialized\r\n     */\r\n    function setComponents(\r\n        IConverter _converter,\r\n        ILinearVesting _vest,\r\n        IUSDV _usdv,\r\n        address dao\r\n    ) external onlyOwner {\r\n        require(\r\n            _converter != IConverter(_ZERO_ADDRESS) &&\r\n                _vest != ILinearVesting(_ZERO_ADDRESS) &&\r\n                _usdv != IUSDV(_ZERO_ADDRESS) &&\r\n                dao != _ZERO_ADDRESS,\r\n            \"Vader::setComponents: Incorrect Arguments\"\r\n        );\r\n        require(\r\n            converter == IConverter(_ZERO_ADDRESS),\r\n            \"Vader::setComponents: Already Set\"\r\n        );\r\n\r\n        converter = _converter;\r\n        vest = _vest;\r\n        usdv = _usdv;\r\n\r\n        untaxed[address(_converter)] = true;\r\n        untaxed[address(_vest)] = true;\r\n        untaxed[address(_usdv)] = true;\r\n\r\n        _mint(address(_converter), _VETH_ALLOCATION);\r\n        _mint(address(_vest), _TEAM_ALLOCATION);\r\n\r\n        _vest.begin();\r\n        transferOwnership(dao);\r\n\r\n        emit ProtocolInitialized(\r\n            address(_converter),\r\n            address(_vest),\r\n            address(_usdv),\r\n            dao\r\n        );\r\n    }\r\n\r\n    /**\r\n     * @dev Allows a strategic partnership grant to be claimed.\r\n     *\r\n     * Emits a {GrantClaimed} event indicating the beneficiary of the grant as\r\n     * well as the grant amount.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the DAO\r\n     * - the token must hold sufficient Vader allocation for the grant\r\n     * - the grant must be of a non-zero amount\r\n     */\r\n    function claimGrant(address beneficiary, uint256 amount) external onlyDAO {\r\n        require(amount != 0, \"Vader::claimGrant: Non-Zero Amount Required\");\r\n        emit GrantClaimed(beneficiary, amount);\r\n        ERC20._transfer(address(this), beneficiary, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Allows the maximum supply of the token to be adjusted.\r\n     *\r\n     * Emits an {MaxSupplyChanged} event indicating the previous and next maximum\r\n     * total supplies.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the DAO\r\n     * - the new maximum supply must be greater than the current one\r\n     */\r\n    function adjustMaxSupply(uint256 _maxSupply) external onlyDAO {\r\n        require(\r\n            _maxSupply >= totalSupply(),\r\n            \"Vader::adjustMaxSupply: Max supply cannot subcede current supply\"\r\n        );\r\n        emit MaxSupplyChanged(maxSupply, _maxSupply);\r\n        maxSupply = _maxSupply;\r\n    }\r\n\r\n    /* ========== INTERNAL FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Ensures that the daily emission of the token gets automatically executed\r\n     * when the time is right and enforces the maximum supply limit on mint operations.\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address,\r\n        uint256 amount\r\n    ) internal view override {\r\n        if (from == address(0))\r\n            require(\r\n                totalSupply() + amount <= maxSupply,\r\n                \"Vader::_beforeTokenTransfer: Mint exceeds cap\"\r\n            );\r\n\r\n        // _syncEmissions();\r\n    }\r\n\r\n    /**\r\n     * @dev Overrides the existing ERC-20 {_transfer} functionality to apply a fee on each\r\n     * transfer.\r\n     */\r\n    function _transfer(\r\n        address sender,\r\n        address recipient,\r\n        uint256 amount\r\n    ) internal override {\r\n        if (untaxed[msg.sender])\r\n            return ERC20._transfer(sender, recipient, amount);\r\n\r\n        uint256 fee = calculateFee();\r\n\r\n        uint256 tax = (amount * fee) / _MAX_BASIS_POINTS;\r\n\r\n        amount -= tax;\r\n\r\n        _burn(sender, tax);\r\n\r\n        ERC20._transfer(sender, recipient, amount);\r\n    }\r\n\r\n    /* ========== PRIVATE FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Ensures only the DAO is able to invoke a particular function by validating that the\r\n     * contract has been set up and that the owner is the msg.sender\r\n     */\r\n    function _onlyDAO() private view {\r\n        require(\r\n            converter != IConverter(_ZERO_ADDRESS),\r\n            \"Vader::_onlyDAO: DAO not set yet\"\r\n        );\r\n        require(\r\n            owner() == _msgSender(),\r\n            \"Vader::_onlyDAO: Insufficient Privileges\"\r\n        );\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    /**\r\n     * @dev Throws if invoked by anyone else other than the DAO\r\n     */\r\n    modifier onlyDAO() {\r\n        _onlyDAO();\r\n        _;\r\n    }\r\n\r\n    /* ========== DEPRECATED FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Allows the daily emission curve of the token to be adjusted.\r\n     *\r\n     * Emits an {EmissionChanged} event indicating the previous and next emission\r\n     * curves.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - the caller must be the DAO\r\n     * - the new emission must be non-zero\r\n     */\r\n    // function adjustEmission(uint256 _emissionCurve) external onlyDAO {\r\n    //     require(\r\n    //         _emissionCurve != 0,\r\n    //         \"Vader::adjustEmission: Incorrect Curve Emission\"\r\n    //     );\r\n    //     emit EmissionChanged(emissionCurve, _emissionCurve);\r\n    //     emissionCurve = _emissionCurve;\r\n    // }\r\n\r\n    /**\r\n     * @dev Syncs the current emission schedule by advancing the necessary epochs to match the\r\n     * current timestamp and mints the corresponding Vader to the USDV contract for distribution\r\n     * via the {distributeEmission} function.\r\n     */\r\n    // function _syncEmissions() private {\r\n    //     uint256 currentSupply = totalSupply();\r\n    //     uint256 _lastEmission = lastEmission;\r\n    //     if (\r\n    //         block.timestamp >= _lastEmission + _EMISSION_ERA &&\r\n    //         maxSupply != currentSupply\r\n    //     ) {\r\n    //         uint256 eras = (block.timestamp - _lastEmission) / _EMISSION_ERA;\r\n\r\n    //         // NOTE: Current Supply + Emission guaranteed to not overflow as <= maxSupply\r\n    //         uint256 emission;\r\n    //         for (uint256 i = 0; i < eras; i++)\r\n    //             emission += getEraEmission(currentSupply + emission);\r\n\r\n    //         _mint(address(usdv), emission);\r\n\r\n    //         usdv.distributeEmission();\r\n\r\n    //         _lastEmission += (_EMISSION_ERA * eras);\r\n    //         lastEmission = _lastEmission;\r\n\r\n    //         emit Emission(emission, _lastEmission);\r\n    //     }\r\n    // }\r\n}\r\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/tokens/Vader.sol",
  "ast": {
    "absolutePath": "project:/contracts/tokens/Vader.sol",
    "exportedSymbols": {
      "Context": [
        3760
      ],
      "ERC20": [
        891
      ],
      "IConverter": [
        20479
      ],
      "IERC20": [
        969
      ],
      "IERC20Metadata": [
        1900
      ],
      "ILinearVesting": [
        20526
      ],
      "IUSDV": [
        20397
      ],
      "IVader": [
        20458
      ],
      "Ownable": [
        112
      ],
      "ProtocolConstants": [
        21440
      ],
      "Vader": [
        22804
      ]
    },
    "id": 22805,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 22364,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:105"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 22365,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22805,
        "sourceUnit": 113,
        "src": "68:52:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 22366,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22805,
        "sourceUnit": 892,
        "src": "122:55:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/shared/ProtocolConstants.sol",
        "file": "../shared/ProtocolConstants.sol",
        "id": 22367,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22805,
        "sourceUnit": 21441,
        "src": "181:41:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/tokens/IUSDV.sol",
        "file": "../interfaces/tokens/IUSDV.sol",
        "id": 22368,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22805,
        "sourceUnit": 20398,
        "src": "226:40:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/tokens/IVader.sol",
        "file": "../interfaces/tokens/IVader.sol",
        "id": 22369,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22805,
        "sourceUnit": 20459,
        "src": "268:41:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/tokens/vesting/ILinearVesting.sol",
        "file": "../interfaces/tokens/vesting/ILinearVesting.sol",
        "id": 22370,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22805,
        "sourceUnit": 20527,
        "src": "311:57:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/tokens/converter/IConverter.sol",
        "file": "../interfaces/tokens/converter/IConverter.sol",
        "id": 22371,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22805,
        "sourceUnit": 20480,
        "src": "370:55:105",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 22373,
              "name": "IVader",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20458,
              "src": "1117:6:105"
            },
            "id": 22374,
            "nodeType": "InheritanceSpecifier",
            "src": "1117:6:105"
          },
          {
            "baseName": {
              "id": 22375,
              "name": "ProtocolConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21440,
              "src": "1125:17:105"
            },
            "id": 22376,
            "nodeType": "InheritanceSpecifier",
            "src": "1125:17:105"
          },
          {
            "baseName": {
              "id": 22377,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 891,
              "src": "1144:5:105"
            },
            "id": 22378,
            "nodeType": "InheritanceSpecifier",
            "src": "1144:5:105"
          },
          {
            "baseName": {
              "id": 22379,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "1151:7:105"
            },
            "id": 22380,
            "nodeType": "InheritanceSpecifier",
            "src": "1151:7:105"
          }
        ],
        "canonicalName": "Vader",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 22372,
          "nodeType": "StructuredDocumentation",
          "src": "429:668:105",
          "text": " @dev Implementation of the {IVader} interface.\n The Vader token that acts as the backbone of the Vader protocol,\n burned and minted to mint and burn USDV tokens respectively.\n The token contains a dynamically adjusting fee that fluctuates\n between 0% and 1% depending on the total supply of the token\n in comparison to the maximum supply possible, which is initially\n equal to 2.5 billion units.\n A daily emission schedule is built in the contract as well,\n meant to supply the Vader USDV treasury at a diminishing\n rate that inches closer to 0 as the total supply of the token\n nears the maximum supply possible."
        },
        "fullyImplemented": true,
        "id": 22804,
        "linearizedBaseContracts": [
          22804,
          112,
          891,
          1900,
          969,
          3760,
          21440,
          20458
        ],
        "name": "Vader",
        "nameLocation": "1108:5:105",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "bd38837b",
            "id": 22383,
            "mutability": "mutable",
            "name": "converter",
            "nameLocation": "1283:9:105",
            "nodeType": "VariableDeclaration",
            "scope": 22804,
            "src": "1265:27:105",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IConverter_$20479",
              "typeString": "contract IConverter"
            },
            "typeName": {
              "id": 22382,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22381,
                "name": "IConverter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20479,
                "src": "1265:10:105"
              },
              "referencedDeclaration": 20479,
              "src": "1265:10:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IConverter_$20479",
                "typeString": "contract IConverter"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "458efde3",
            "id": 22386,
            "mutability": "mutable",
            "name": "vest",
            "nameLocation": "1363:4:105",
            "nodeType": "VariableDeclaration",
            "scope": 22804,
            "src": "1341:26:105",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ILinearVesting_$20526",
              "typeString": "contract ILinearVesting"
            },
            "typeName": {
              "id": 22385,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22384,
                "name": "ILinearVesting",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20526,
                "src": "1341:14:105"
              },
              "referencedDeclaration": 20526,
              "src": "1341:14:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                "typeString": "contract ILinearVesting"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9420069c",
            "id": 22389,
            "mutability": "mutable",
            "name": "usdv",
            "nameLocation": "1452:4:105",
            "nodeType": "VariableDeclaration",
            "scope": 22804,
            "src": "1439:17:105",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IUSDV_$20397",
              "typeString": "contract IUSDV"
            },
            "typeName": {
              "id": 22388,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 22387,
                "name": "IUSDV",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20397,
                "src": "1439:5:105"
              },
              "referencedDeclaration": 20397,
              "src": "1439:5:105",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IUSDV_$20397",
                "typeString": "contract IUSDV"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9a67759b",
            "id": 22392,
            "mutability": "mutable",
            "name": "emissionCurve",
            "nameLocation": "1553:13:105",
            "nodeType": "VariableDeclaration",
            "scope": 22804,
            "src": "1538:54:105",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22390,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1538:7:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "id": 22391,
              "name": "_INITIAL_EMISSION_CURVE",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21407,
              "src": "1569:23:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8dfdc0ca",
            "id": 22396,
            "mutability": "mutable",
            "name": "lastEmission",
            "nameLocation": "1675:12:105",
            "nodeType": "VariableDeclaration",
            "scope": 22804,
            "src": "1660:45:105",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22393,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1660:7:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "expression": {
                "id": 22394,
                "name": "block",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967292,
                "src": "1690:5:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_magic_block",
                  "typeString": "block"
                }
              },
              "id": 22395,
              "isConstant": false,
              "isLValue": false,
              "isPure": false,
              "lValueRequested": false,
              "memberName": "timestamp",
              "nodeType": "MemberAccess",
              "src": "1690:15:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "d5abeb01",
            "id": 22399,
            "mutability": "mutable",
            "name": "maxSupply",
            "nameLocation": "1805:9:105",
            "nodeType": "VariableDeclaration",
            "scope": 22804,
            "src": "1790:48:105",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22397,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1790:7:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "id": 22398,
              "name": "_INITIAL_VADER_SUPPLY",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21386,
              "src": "1817:21:105",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7e867d14",
            "id": 22403,
            "mutability": "mutable",
            "name": "untaxed",
            "nameLocation": "1974:7:105",
            "nodeType": "VariableDeclaration",
            "scope": 22804,
            "src": "1942:39:105",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 22402,
              "keyType": {
                "id": 22400,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1950:7:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1942:24:105",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 22401,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1961:4:105",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 22419,
              "nodeType": "Block",
              "src": "3114:58:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22414,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3139:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vader_$22804",
                              "typeString": "contract Vader"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vader_$22804",
                              "typeString": "contract Vader"
                            }
                          ],
                          "id": 22413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3131:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22412,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3131:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3131:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22416,
                        "name": "_ECOSYSTEM_GROWTH",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21401,
                        "src": "3146:17:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22411,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "3125:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3125:39:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22418,
                  "nodeType": "ExpressionStatement",
                  "src": "3125:39:105"
                }
              ]
            },
            "documentation": {
              "id": 22404,
              "nodeType": "StructuredDocumentation",
              "src": "2037:1033:105",
              "text": " @dev Mints the ecosystem growth fund described in the whitepaper to the\n token contract itself.\n As the token is meant to be minted and burned freely between USDV and itself,\n there is no real initialization taking place apart from the initially minted\n supply for the following components:\n - Ecosystem Growth: An allocation that is released to strategic partners for the\n protocol's expansion\n - Team Allocation: An allocation that is gradually vested over a 2 year duration to\n the Vader team to incentivize maintainance of the protocol\n - Vether Holder Allocation: An allocation that is immediately available to all existing\n and future Vether holders that allows them to swap their Vether for Vader by burning the\n former\n The latter two of the allocations are minted at a later date given that the addresses of\n the converter and vesting contract are not known on deployment."
            },
            "id": 22420,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "5661646572",
                    "id": 22407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3096:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_fcdb688bb892dd821a6249da4f2c393ee933b84fbc4c0f72131d4c967d91f85c",
                      "typeString": "literal_string \"Vader\""
                    },
                    "value": "Vader"
                  },
                  {
                    "hexValue": "5641444552",
                    "id": 22408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "3105:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_406c1d63817598714a1c0b436e086ae20e884c02145be0b298ce77870558df6b",
                      "typeString": "literal_string \"VADER\""
                    },
                    "value": "VADER"
                  }
                ],
                "id": 22409,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 22406,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 891,
                  "src": "3090:5:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "3090:23:105"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22405,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3087:2:105"
            },
            "returnParameters": {
              "id": 22410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3114:0:105"
            },
            "scope": 22804,
            "src": "3076:96:105",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20411
            ],
            "body": {
              "id": 22437,
              "nodeType": "Block",
              "src": "3569:84:105",
              "statements": [
                {
                  "expression": {
                    "id": 22435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22427,
                      "name": "basisPoints",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22425,
                      "src": "3580:11:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 22434,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 22431,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 22428,
                              "name": "_MAX_FEE_BASIS_POINTS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21410,
                              "src": "3595:21:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 22429,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 389,
                                "src": "3619:11:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 22430,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3619:13:105",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3595:37:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 22432,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "3594:39:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 22433,
                        "name": "maxSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22399,
                        "src": "3636:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3594:51:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3580:65:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22436,
                  "nodeType": "ExpressionStatement",
                  "src": "3580:65:105"
                }
              ]
            },
            "documentation": {
              "id": 22421,
              "nodeType": "StructuredDocumentation",
              "src": "3221:267:105",
              "text": " @dev Returns the current fee that the protocol applies to transactions. The fee\n organically adjusts itself as the actual total supply of the token fluctuates and\n will always hold a value between [0%, 1%] expressed in basis points."
            },
            "functionSelector": "e6af35f0",
            "id": 22438,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateFee",
            "nameLocation": "3503:12:105",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22423,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3530:8:105"
            },
            "parameters": {
              "id": 22422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3515:2:105"
            },
            "returnParameters": {
              "id": 22426,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22425,
                  "mutability": "mutable",
                  "name": "basisPoints",
                  "nameLocation": "3556:11:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22438,
                  "src": "3548:19:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22424,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3547:21:105"
            },
            "scope": 22804,
            "src": "3494:159:105",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20416
            ],
            "body": {
              "id": 22450,
              "nodeType": "Block",
              "src": "3994:55:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 22446,
                          "name": "totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 389,
                          "src": "4027:11:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 22447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4027:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22445,
                      "name": "getEraEmission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22474,
                      "src": "4012:14:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) view returns (uint256)"
                      }
                    },
                    "id": 22448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4012:29:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22444,
                  "id": 22449,
                  "nodeType": "Return",
                  "src": "4005:36:105"
                }
              ]
            },
            "documentation": {
              "id": 22439,
              "nodeType": "StructuredDocumentation",
              "src": "3661:253:105",
              "text": " @dev Returns the current era's emission based on the existing total supply of the\n token. The era emissions diminish as the total supply of the token increases, inching\n closer to 0 as the total supply reaches its cap."
            },
            "functionSelector": "9921786c",
            "id": 22451,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getCurrentEraEmission",
            "nameLocation": "3929:21:105",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22441,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3967:8:105"
            },
            "parameters": {
              "id": 22440,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3950:2:105"
            },
            "returnParameters": {
              "id": 22444,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22443,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22451,
                  "src": "3985:7:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22442,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3985:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3984:9:105"
            },
            "scope": 22804,
            "src": "3920:129:105",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20423
            ],
            "body": {
              "id": 22473,
              "nodeType": "Block",
              "src": "4413:127:105",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22471,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 22462,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 22460,
                                  "name": "maxSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22399,
                                  "src": "4446:9:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 22461,
                                  "name": "currentSupply",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 22454,
                                  "src": "4458:13:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "4446:25:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 22463,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4445:27:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 22464,
                            "name": "emissionCurve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22392,
                            "src": "4475:13:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4445:43:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 22466,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4444:45:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22467,
                            "name": "_ONE_YEAR",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21378,
                            "src": "4506:9:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 22468,
                            "name": "_EMISSION_ERA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21404,
                            "src": "4518:13:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4506:25:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 22470,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4505:27:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4444:88:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 22459,
                  "id": 22472,
                  "nodeType": "Return",
                  "src": "4424:108:105"
                }
              ]
            },
            "documentation": {
              "id": 22452,
              "nodeType": "StructuredDocumentation",
              "src": "4057:223:105",
              "text": " @dev Calculates and returns the constantly diminishing era emission based on the difference between\n the current and maximum supply spread over a one year based in on the emission's era duration."
            },
            "functionSelector": "7e76e2c5",
            "id": 22474,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getEraEmission",
            "nameLocation": "4295:14:105",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22456,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4372:8:105"
            },
            "parameters": {
              "id": 22455,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22454,
                  "mutability": "mutable",
                  "name": "currentSupply",
                  "nameLocation": "4318:13:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22474,
                  "src": "4310:21:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4310:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4309:23:105"
            },
            "returnParameters": {
              "id": 22459,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22458,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22474,
                  "src": "4399:7:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22457,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4399:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4398:9:105"
            },
            "scope": 22804,
            "src": "4286:254:105",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20406
            ],
            "body": {
              "id": 22495,
              "nodeType": "Block",
              "src": "4907:76:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22486,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22477,
                        "src": "4924:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22487,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22479,
                        "src": "4930:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22485,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "4918:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4918:19:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22489,
                  "nodeType": "ExpressionStatement",
                  "src": "4918:19:105"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22491,
                        "name": "user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22477,
                        "src": "4962:4:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22492,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22479,
                        "src": "4968:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22490,
                      "name": "Emission",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20429,
                      "src": "4953:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4953:22:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22494,
                  "nodeType": "EmitStatement",
                  "src": "4948:27:105"
                }
              ]
            },
            "documentation": {
              "id": 22475,
              "nodeType": "StructuredDocumentation",
              "src": "4602:185:105",
              "text": " @dev Creates a manual emission event\n Emits an {Emission} event indicating the amount emitted as well as what the current\n era's timestamp is."
            },
            "functionSelector": "7373aa9f",
            "id": 22496,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22482,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "4892:9:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "4892:9:105"
              }
            ],
            "name": "createEmission",
            "nameLocation": "4802:14:105",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22481,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4874:8:105"
            },
            "parameters": {
              "id": 22480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22477,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4825:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22496,
                  "src": "4817:12:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4817:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22479,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4839:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22496,
                  "src": "4831:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4831:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4816:30:105"
            },
            "returnParameters": {
              "id": 22484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4907:0:105"
            },
            "scope": 22804,
            "src": "4793:190:105",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22627,
              "nodeType": "Block",
              "src": "5773:966:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 22534,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 22530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 22524,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IConverter_$20479",
                                "typeString": "contract IConverter"
                              },
                              "id": 22518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 22514,
                                "name": "_converter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22500,
                                "src": "5806:10:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConverter_$20479",
                                  "typeString": "contract IConverter"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 22516,
                                    "name": "_ZERO_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21375,
                                    "src": "5831:13:105",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 22515,
                                  "name": "IConverter",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20479,
                                  "src": "5820:10:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IConverter_$20479_$",
                                    "typeString": "type(contract IConverter)"
                                  }
                                },
                                "id": 22517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5820:25:105",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IConverter_$20479",
                                  "typeString": "contract IConverter"
                                }
                              },
                              "src": "5806:39:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "commonType": {
                                "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                                "typeString": "contract ILinearVesting"
                              },
                              "id": 22523,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 22519,
                                "name": "_vest",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 22503,
                                "src": "5866:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                                  "typeString": "contract ILinearVesting"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 22521,
                                    "name": "_ZERO_ADDRESS",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21375,
                                    "src": "5890:13:105",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 22520,
                                  "name": "ILinearVesting",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 20526,
                                  "src": "5875:14:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILinearVesting_$20526_$",
                                    "typeString": "type(contract ILinearVesting)"
                                  }
                                },
                                "id": 22522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5875:29:105",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                                  "typeString": "contract ILinearVesting"
                                }
                              },
                              "src": "5866:38:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "5806:98:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_contract$_IUSDV_$20397",
                              "typeString": "contract IUSDV"
                            },
                            "id": 22529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 22525,
                              "name": "_usdv",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22506,
                              "src": "5925:5:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUSDV_$20397",
                                "typeString": "contract IUSDV"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "id": 22527,
                                  "name": "_ZERO_ADDRESS",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 21375,
                                  "src": "5940:13:105",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 22526,
                                "name": "IUSDV",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 20397,
                                "src": "5934:5:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IUSDV_$20397_$",
                                  "typeString": "type(contract IUSDV)"
                                }
                              },
                              "id": 22528,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5934:20:105",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IUSDV_$20397",
                                "typeString": "contract IUSDV"
                              }
                            },
                            "src": "5925:29:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5806:148:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 22533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22531,
                            "name": "dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22508,
                            "src": "5975:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 22532,
                            "name": "_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21375,
                            "src": "5982:13:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5975:20:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5806:189:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616465723a3a736574436f6d706f6e656e74733a20496e636f727265637420417267756d656e7473",
                        "id": 22535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6010:43:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_abeb5880c43adcc85e30612fc4a0e975aee6b0eb8a54a17acd026f6ea67e572f",
                          "typeString": "literal_string \"Vader::setComponents: Incorrect Arguments\""
                        },
                        "value": "Vader::setComponents: Incorrect Arguments"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_abeb5880c43adcc85e30612fc4a0e975aee6b0eb8a54a17acd026f6ea67e572f",
                          "typeString": "literal_string \"Vader::setComponents: Incorrect Arguments\""
                        }
                      ],
                      "id": 22513,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5784:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22536,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5784:280:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22537,
                  "nodeType": "ExpressionStatement",
                  "src": "5784:280:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IConverter_$20479",
                          "typeString": "contract IConverter"
                        },
                        "id": 22543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22539,
                          "name": "converter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22383,
                          "src": "6097:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConverter_$20479",
                            "typeString": "contract IConverter"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 22541,
                              "name": "_ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21375,
                              "src": "6121:13:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22540,
                            "name": "IConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20479,
                            "src": "6110:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IConverter_$20479_$",
                              "typeString": "type(contract IConverter)"
                            }
                          },
                          "id": 22542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6110:25:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConverter_$20479",
                            "typeString": "contract IConverter"
                          }
                        },
                        "src": "6097:38:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616465723a3a736574436f6d706f6e656e74733a20416c726561647920536574",
                        "id": 22544,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6150:35:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_41bd8471d50e800425741a7e2bc90a0b49531e06b708bdf320239199d6fde200",
                          "typeString": "literal_string \"Vader::setComponents: Already Set\""
                        },
                        "value": "Vader::setComponents: Already Set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_41bd8471d50e800425741a7e2bc90a0b49531e06b708bdf320239199d6fde200",
                          "typeString": "literal_string \"Vader::setComponents: Already Set\""
                        }
                      ],
                      "id": 22538,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6075:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6075:121:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22546,
                  "nodeType": "ExpressionStatement",
                  "src": "6075:121:105"
                },
                {
                  "expression": {
                    "id": 22549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22547,
                      "name": "converter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22383,
                      "src": "6209:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConverter_$20479",
                        "typeString": "contract IConverter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22548,
                      "name": "_converter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22500,
                      "src": "6221:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IConverter_$20479",
                        "typeString": "contract IConverter"
                      }
                    },
                    "src": "6209:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConverter_$20479",
                      "typeString": "contract IConverter"
                    }
                  },
                  "id": 22550,
                  "nodeType": "ExpressionStatement",
                  "src": "6209:22:105"
                },
                {
                  "expression": {
                    "id": 22553,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22551,
                      "name": "vest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22386,
                      "src": "6242:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                        "typeString": "contract ILinearVesting"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22552,
                      "name": "_vest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22503,
                      "src": "6249:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                        "typeString": "contract ILinearVesting"
                      }
                    },
                    "src": "6242:12:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                      "typeString": "contract ILinearVesting"
                    }
                  },
                  "id": 22554,
                  "nodeType": "ExpressionStatement",
                  "src": "6242:12:105"
                },
                {
                  "expression": {
                    "id": 22557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22555,
                      "name": "usdv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22389,
                      "src": "6265:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUSDV_$20397",
                        "typeString": "contract IUSDV"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22556,
                      "name": "_usdv",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22506,
                      "src": "6272:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IUSDV_$20397",
                        "typeString": "contract IUSDV"
                      }
                    },
                    "src": "6265:12:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUSDV_$20397",
                      "typeString": "contract IUSDV"
                    }
                  },
                  "id": 22558,
                  "nodeType": "ExpressionStatement",
                  "src": "6265:12:105"
                },
                {
                  "expression": {
                    "id": 22566,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22559,
                        "name": "untaxed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22403,
                        "src": "6290:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 22564,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 22562,
                            "name": "_converter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22500,
                            "src": "6306:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConverter_$20479",
                              "typeString": "contract IConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConverter_$20479",
                              "typeString": "contract IConverter"
                            }
                          ],
                          "id": 22561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6298:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6298:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6298:19:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6290:28:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 22565,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6321:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6290:35:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22567,
                  "nodeType": "ExpressionStatement",
                  "src": "6290:35:105"
                },
                {
                  "expression": {
                    "id": 22575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22568,
                        "name": "untaxed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22403,
                        "src": "6336:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 22573,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 22571,
                            "name": "_vest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22503,
                            "src": "6352:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                              "typeString": "contract ILinearVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                              "typeString": "contract ILinearVesting"
                            }
                          ],
                          "id": 22570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6344:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22569,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6344:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6344:14:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6336:23:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 22574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6362:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6336:30:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22576,
                  "nodeType": "ExpressionStatement",
                  "src": "6336:30:105"
                },
                {
                  "expression": {
                    "id": 22584,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 22577,
                        "name": "untaxed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22403,
                        "src": "6377:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 22582,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 22580,
                            "name": "_usdv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22506,
                            "src": "6393:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUSDV_$20397",
                              "typeString": "contract IUSDV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUSDV_$20397",
                              "typeString": "contract IUSDV"
                            }
                          ],
                          "id": 22579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6385:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22578,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6385:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6385:14:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6377:23:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 22583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6403:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "6377:30:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22585,
                  "nodeType": "ExpressionStatement",
                  "src": "6377:30:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22589,
                            "name": "_converter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22500,
                            "src": "6434:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConverter_$20479",
                              "typeString": "contract IConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConverter_$20479",
                              "typeString": "contract IConverter"
                            }
                          ],
                          "id": 22588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6426:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22587,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6426:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6426:19:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22591,
                        "name": "_VETH_ALLOCATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21391,
                        "src": "6447:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22586,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "6420:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6420:44:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22593,
                  "nodeType": "ExpressionStatement",
                  "src": "6420:44:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22597,
                            "name": "_vest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22503,
                            "src": "6489:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                              "typeString": "contract ILinearVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                              "typeString": "contract ILinearVesting"
                            }
                          ],
                          "id": 22596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6481:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22595,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6481:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22598,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6481:14:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22599,
                        "name": "_TEAM_ALLOCATION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21396,
                        "src": "6497:16:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22594,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 708,
                      "src": "6475:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6475:39:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22601,
                  "nodeType": "ExpressionStatement",
                  "src": "6475:39:105"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 22602,
                        "name": "_vest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22503,
                        "src": "6527:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                          "typeString": "contract ILinearVesting"
                        }
                      },
                      "id": 22604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "begin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20508,
                      "src": "6527:11:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 22605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6527:13:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22606,
                  "nodeType": "ExpressionStatement",
                  "src": "6527:13:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22608,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22508,
                        "src": "6569:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22607,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "6551:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6551:22:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22610,
                  "nodeType": "ExpressionStatement",
                  "src": "6551:22:105"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22614,
                            "name": "_converter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22500,
                            "src": "6633:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IConverter_$20479",
                              "typeString": "contract IConverter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IConverter_$20479",
                              "typeString": "contract IConverter"
                            }
                          ],
                          "id": 22613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6625:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22612,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6625:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6625:19:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 22618,
                            "name": "_vest",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22503,
                            "src": "6667:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                              "typeString": "contract ILinearVesting"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                              "typeString": "contract ILinearVesting"
                            }
                          ],
                          "id": 22617,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6659:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22616,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6659:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6659:14:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 22622,
                            "name": "_usdv",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22506,
                            "src": "6696:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IUSDV_$20397",
                              "typeString": "contract IUSDV"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IUSDV_$20397",
                              "typeString": "contract IUSDV"
                            }
                          ],
                          "id": 22621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6688:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22620,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6688:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6688:14:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22624,
                        "name": "dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22508,
                        "src": "6717:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22611,
                      "name": "ProtocolInitialized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20457,
                      "src": "6591:19:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address,address,address)"
                      }
                    },
                    "id": 22625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6591:140:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22626,
                  "nodeType": "EmitStatement",
                  "src": "6586:145:105"
                }
              ]
            },
            "documentation": {
              "id": 22497,
              "nodeType": "StructuredDocumentation",
              "src": "5047:564:105",
              "text": " @dev Sets the initial {converter}, {vest}, and {usdv} contract addresses prior to transferring\n ownership to the DAO. Additionally, mints the Vader amount available for conversion as well\n as the team allocation that is meant to be vested to each respective contract.\n Emits a {ProtocolInitialized} event indicating all the supplied values of the function.\n Requirements:\n - the caller must be the deployer of the contract\n - the contract must not have already been initialized"
            },
            "functionSelector": "45afdc8d",
            "id": 22628,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22511,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22510,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "5763:9:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "5763:9:105"
              }
            ],
            "name": "setComponents",
            "nameLocation": "5626:13:105",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22509,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22500,
                  "mutability": "mutable",
                  "name": "_converter",
                  "nameLocation": "5661:10:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22628,
                  "src": "5650:21:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IConverter_$20479",
                    "typeString": "contract IConverter"
                  },
                  "typeName": {
                    "id": 22499,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22498,
                      "name": "IConverter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20479,
                      "src": "5650:10:105"
                    },
                    "referencedDeclaration": 20479,
                    "src": "5650:10:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IConverter_$20479",
                      "typeString": "contract IConverter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22503,
                  "mutability": "mutable",
                  "name": "_vest",
                  "nameLocation": "5697:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22628,
                  "src": "5682:20:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                    "typeString": "contract ILinearVesting"
                  },
                  "typeName": {
                    "id": 22502,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22501,
                      "name": "ILinearVesting",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20526,
                      "src": "5682:14:105"
                    },
                    "referencedDeclaration": 20526,
                    "src": "5682:14:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ILinearVesting_$20526",
                      "typeString": "contract ILinearVesting"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22506,
                  "mutability": "mutable",
                  "name": "_usdv",
                  "nameLocation": "5719:5:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22628,
                  "src": "5713:11:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IUSDV_$20397",
                    "typeString": "contract IUSDV"
                  },
                  "typeName": {
                    "id": 22505,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22504,
                      "name": "IUSDV",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20397,
                      "src": "5713:5:105"
                    },
                    "referencedDeclaration": 20397,
                    "src": "5713:5:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IUSDV_$20397",
                      "typeString": "contract IUSDV"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22508,
                  "mutability": "mutable",
                  "name": "dao",
                  "nameLocation": "5743:3:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22628,
                  "src": "5735:11:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22507,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5735:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:114:105"
            },
            "returnParameters": {
              "id": 22512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5773:0:105"
            },
            "scope": 22804,
            "src": "5617:1122:105",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22661,
              "nodeType": "Block",
              "src": "7222:197:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22639,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22633,
                          "src": "7241:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 22640,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7251:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "7241:11:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616465723a3a636c61696d4772616e743a204e6f6e2d5a65726f20416d6f756e74205265717569726564",
                        "id": 22642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7254:45:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f6eae03fa4f61e32f9833ddc9f9113f5ae90001b90414d53189e3a0078551073",
                          "typeString": "literal_string \"Vader::claimGrant: Non-Zero Amount Required\""
                        },
                        "value": "Vader::claimGrant: Non-Zero Amount Required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f6eae03fa4f61e32f9833ddc9f9113f5ae90001b90414d53189e3a0078551073",
                          "typeString": "literal_string \"Vader::claimGrant: Non-Zero Amount Required\""
                        }
                      ],
                      "id": 22638,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7233:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7233:67:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22644,
                  "nodeType": "ExpressionStatement",
                  "src": "7233:67:105"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22646,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22631,
                        "src": "7329:11:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22647,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22633,
                        "src": "7342:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22645,
                      "name": "GrantClaimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20447,
                      "src": "7316:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7316:33:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22649,
                  "nodeType": "EmitStatement",
                  "src": "7311:38:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 22655,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "7384:4:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vader_$22804",
                              "typeString": "contract Vader"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Vader_$22804",
                              "typeString": "contract Vader"
                            }
                          ],
                          "id": 22654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7376:7:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 22653,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7376:7:105",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 22656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7376:13:105",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22657,
                        "name": "beneficiary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22631,
                        "src": "7391:11:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22658,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22633,
                        "src": "7404:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 22650,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "7360:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$891_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 22652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "7360:15:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 22659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7360:51:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22660,
                  "nodeType": "ExpressionStatement",
                  "src": "7360:51:105"
                }
              ]
            },
            "documentation": {
              "id": 22629,
              "nodeType": "StructuredDocumentation",
              "src": "6747:395:105",
              "text": " @dev Allows a strategic partnership grant to be claimed.\n Emits a {GrantClaimed} event indicating the beneficiary of the grant as\n well as the grant amount.\n Requirements:\n - the caller must be the DAO\n - the token must hold sufficient Vader allocation for the grant\n - the grant must be of a non-zero amount"
            },
            "functionSelector": "e9ba3184",
            "id": 22662,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22636,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22635,
                  "name": "onlyDAO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22803,
                  "src": "7214:7:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "7214:7:105"
              }
            ],
            "name": "claimGrant",
            "nameLocation": "7157:10:105",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22631,
                  "mutability": "mutable",
                  "name": "beneficiary",
                  "nameLocation": "7176:11:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22662,
                  "src": "7168:19:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7168:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22633,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7197:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22662,
                  "src": "7189:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22632,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7189:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7167:37:105"
            },
            "returnParameters": {
              "id": 22637,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7222:0:105"
            },
            "scope": 22804,
            "src": "7148:271:105",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 22687,
              "nodeType": "Block",
              "src": "7835:248:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 22674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22671,
                          "name": "_maxSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22665,
                          "src": "7868:10:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 22672,
                            "name": "totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 389,
                            "src": "7882:11:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 22673,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7882:13:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7868:27:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616465723a3a61646a7573744d6178537570706c793a204d617820737570706c792063616e6e6f7420737562636564652063757272656e7420737570706c79",
                        "id": 22675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7910:66:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f452244e7ca71a78790a52b49a0b50606cf046daedbd4e111efa411cc31bddf7",
                          "typeString": "literal_string \"Vader::adjustMaxSupply: Max supply cannot subcede current supply\""
                        },
                        "value": "Vader::adjustMaxSupply: Max supply cannot subcede current supply"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f452244e7ca71a78790a52b49a0b50606cf046daedbd4e111efa411cc31bddf7",
                          "typeString": "literal_string \"Vader::adjustMaxSupply: Max supply cannot subcede current supply\""
                        }
                      ],
                      "id": 22670,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7846:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7846:141:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22677,
                  "nodeType": "ExpressionStatement",
                  "src": "7846:141:105"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22679,
                        "name": "maxSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22399,
                        "src": "8020:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 22680,
                        "name": "_maxSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22665,
                        "src": "8031:10:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22678,
                      "name": "MaxSupplyChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20441,
                      "src": "8003:16:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8003:39:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22682,
                  "nodeType": "EmitStatement",
                  "src": "7998:44:105"
                },
                {
                  "expression": {
                    "id": 22685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22683,
                      "name": "maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22399,
                      "src": "8053:9:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 22684,
                      "name": "_maxSupply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22665,
                      "src": "8065:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8053:22:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22686,
                  "nodeType": "ExpressionStatement",
                  "src": "8053:22:105"
                }
              ]
            },
            "documentation": {
              "id": 22663,
              "nodeType": "StructuredDocumentation",
              "src": "7427:340:105",
              "text": " @dev Allows the maximum supply of the token to be adjusted.\n Emits an {MaxSupplyChanged} event indicating the previous and next maximum\n total supplies.\n Requirements:\n - the caller must be the DAO\n - the new maximum supply must be greater than the current one"
            },
            "functionSelector": "e30de15e",
            "id": 22688,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22668,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22667,
                  "name": "onlyDAO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22803,
                  "src": "7827:7:105"
                },
                "nodeType": "ModifierInvocation",
                "src": "7827:7:105"
              }
            ],
            "name": "adjustMaxSupply",
            "nameLocation": "7782:15:105",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22665,
                  "mutability": "mutable",
                  "name": "_maxSupply",
                  "nameLocation": "7806:10:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22688,
                  "src": "7798:18:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7798:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7797:20:105"
            },
            "returnParameters": {
              "id": 22669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7835:0:105"
            },
            "scope": 22804,
            "src": "7773:310:105",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              879
            ],
            "body": {
              "id": 22716,
              "nodeType": "Block",
              "src": "8464:230:105",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 22704,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 22699,
                      "name": "from",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22691,
                      "src": "8479:4:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 22702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8495:1:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 22701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "8487:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 22700,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8487:7:105",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 22703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8487:10:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8479:18:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22715,
                  "nodeType": "IfStatement",
                  "src": "8475:179:105",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 22709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 22706,
                                "name": "totalSupply",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 389,
                                "src": "8538:11:105",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                  "typeString": "function () view returns (uint256)"
                                }
                              },
                              "id": 22707,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8538:13:105",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 22708,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 22695,
                              "src": "8554:6:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "8538:22:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 22710,
                            "name": "maxSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22399,
                            "src": "8564:9:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8538:35:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "hexValue": "56616465723a3a5f6265666f7265546f6b656e5472616e736665723a204d696e74206578636565647320636170",
                          "id": 22712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8592:47:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_066044bd5a57dd8ad819eb714a077bde0fcc1888ec413966c979878d10946e03",
                            "typeString": "literal_string \"Vader::_beforeTokenTransfer: Mint exceeds cap\""
                          },
                          "value": "Vader::_beforeTokenTransfer: Mint exceeds cap"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_066044bd5a57dd8ad819eb714a077bde0fcc1888ec413966c979878d10946e03",
                            "typeString": "literal_string \"Vader::_beforeTokenTransfer: Mint exceeds cap\""
                          }
                        ],
                        "id": 22705,
                        "name": "require",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          4294967278,
                          4294967278
                        ],
                        "referencedDeclaration": 4294967278,
                        "src": "8512:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                          "typeString": "function (bool,string memory) pure"
                        }
                      },
                      "id": 22713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8512:142:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 22714,
                    "nodeType": "ExpressionStatement",
                    "src": "8512:142:105"
                  }
                }
              ]
            },
            "documentation": {
              "id": 22689,
              "nodeType": "StructuredDocumentation",
              "src": "8145:187:105",
              "text": " @dev Ensures that the daily emission of the token gets automatically executed\n when the time is right and enforces the maximum supply limit on mint operations."
            },
            "id": 22717,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nameLocation": "8347:20:105",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22697,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8455:8:105"
            },
            "parameters": {
              "id": 22696,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22691,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "8386:4:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22717,
                  "src": "8378:12:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8378:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22693,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 22717,
                  "src": "8401:7:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22692,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8401:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22695,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8427:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22717,
                  "src": "8419:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22694,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8419:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8367:73:105"
            },
            "returnParameters": {
              "id": 22698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8464:0:105"
            },
            "scope": 22804,
            "src": "8338:356:105",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              651
            ],
            "body": {
              "id": 22771,
              "nodeType": "Block",
              "src": "8952:320:105",
              "statements": [
                {
                  "condition": {
                    "baseExpression": {
                      "id": 22728,
                      "name": "untaxed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22403,
                      "src": "8967:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                        "typeString": "mapping(address => bool)"
                      }
                    },
                    "id": 22731,
                    "indexExpression": {
                      "expression": {
                        "id": 22729,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "8975:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 22730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "8975:10:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8967:19:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22739,
                  "nodeType": "IfStatement",
                  "src": "8963:87:105",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 22734,
                          "name": "sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22720,
                          "src": "9024:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 22735,
                          "name": "recipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22722,
                          "src": "9032:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 22736,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22724,
                          "src": "9043:6:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 22732,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 891,
                          "src": "9008:5:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$891_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 22733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "_transfer",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 651,
                        "src": "9008:15:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function (address,address,uint256)"
                        }
                      },
                      "id": 22737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9008:42:105",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "functionReturnParameters": 22727,
                    "id": 22738,
                    "nodeType": "Return",
                    "src": "9001:49:105"
                  }
                },
                {
                  "assignments": [
                    22741
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22741,
                      "mutability": "mutable",
                      "name": "fee",
                      "nameLocation": "9071:3:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 22771,
                      "src": "9063:11:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22740,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9063:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22744,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22742,
                      "name": "calculateFee",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22438,
                      "src": "9077:12:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 22743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9077:14:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9063:28:105"
                },
                {
                  "assignments": [
                    22746
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 22746,
                      "mutability": "mutable",
                      "name": "tax",
                      "nameLocation": "9112:3:105",
                      "nodeType": "VariableDeclaration",
                      "scope": 22771,
                      "src": "9104:11:105",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 22745,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9104:7:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 22753,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 22752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 22749,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 22747,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22724,
                            "src": "9119:6:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 22748,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22741,
                            "src": "9128:3:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9119:12:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 22750,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "9118:14:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 22751,
                      "name": "_MAX_BASIS_POINTS",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21381,
                      "src": "9135:17:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9118:34:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9104:48:105"
                },
                {
                  "expression": {
                    "id": 22756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22754,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22724,
                      "src": "9165:6:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 22755,
                      "name": "tax",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22746,
                      "src": "9175:3:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9165:13:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 22757,
                  "nodeType": "ExpressionStatement",
                  "src": "9165:13:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22759,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22720,
                        "src": "9197:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22760,
                        "name": "tax",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22746,
                        "src": "9205:3:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 22758,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 780,
                      "src": "9191:5:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 22761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9191:18:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22762,
                  "nodeType": "ExpressionStatement",
                  "src": "9191:18:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22766,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22720,
                        "src": "9238:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22767,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22722,
                        "src": "9246:9:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22768,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22724,
                        "src": "9257:6:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 22763,
                        "name": "ERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 891,
                        "src": "9222:5:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC20_$891_$",
                          "typeString": "type(contract ERC20)"
                        }
                      },
                      "id": 22765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 651,
                      "src": "9222:15:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 22769,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9222:42:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22770,
                  "nodeType": "ExpressionStatement",
                  "src": "9222:42:105"
                }
              ]
            },
            "documentation": {
              "id": 22718,
              "nodeType": "StructuredDocumentation",
              "src": "8702:122:105",
              "text": " @dev Overrides the existing ERC-20 {_transfer} functionality to apply a fee on each\n transfer."
            },
            "id": 22772,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_transfer",
            "nameLocation": "8839:9:105",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 22726,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8943:8:105"
            },
            "parameters": {
              "id": 22725,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22720,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "8867:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22772,
                  "src": "8859:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22719,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8859:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22722,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "8892:9:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22772,
                  "src": "8884:17:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22721,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8884:7:105",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22724,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8920:6:105",
                  "nodeType": "VariableDeclaration",
                  "scope": 22772,
                  "src": "8912:14:105",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22723,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8912:7:105",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8848:85:105"
            },
            "returnParameters": {
              "id": 22727,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8952:0:105"
            },
            "scope": 22804,
            "src": "8830:442:105",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22794,
              "nodeType": "Block",
              "src": "9551:263:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IConverter_$20479",
                          "typeString": "contract IConverter"
                        },
                        "id": 22781,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 22777,
                          "name": "converter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 22383,
                          "src": "9584:9:105",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConverter_$20479",
                            "typeString": "contract IConverter"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 22779,
                              "name": "_ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21375,
                              "src": "9608:13:105",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 22778,
                            "name": "IConverter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20479,
                            "src": "9597:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IConverter_$20479_$",
                              "typeString": "type(contract IConverter)"
                            }
                          },
                          "id": 22780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9597:25:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IConverter_$20479",
                            "typeString": "contract IConverter"
                          }
                        },
                        "src": "9584:38:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616465723a3a5f6f6e6c7944414f3a2044414f206e6f742073657420796574",
                        "id": 22782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9637:34:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5cbb420b73fb7815ca07ca7847f438fda8756d037b4e603a987552cac37ca497",
                          "typeString": "literal_string \"Vader::_onlyDAO: DAO not set yet\""
                        },
                        "value": "Vader::_onlyDAO: DAO not set yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5cbb420b73fb7815ca07ca7847f438fda8756d037b4e603a987552cac37ca497",
                          "typeString": "literal_string \"Vader::_onlyDAO: DAO not set yet\""
                        }
                      ],
                      "id": 22776,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9562:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22783,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9562:120:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22784,
                  "nodeType": "ExpressionStatement",
                  "src": "9562:120:105"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 22790,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 22786,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40,
                            "src": "9715:5:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 22787,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9715:7:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 22788,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3742,
                            "src": "9726:10:105",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 22789,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9726:12:105",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "9715:23:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "56616465723a3a5f6f6e6c7944414f3a20496e73756666696369656e742050726976696c65676573",
                        "id": 22791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9753:42:105",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cc420bdf89f5adb7de07fd9b682743e054b1b39c966bdf819fdad20d553f5dc8",
                          "typeString": "literal_string \"Vader::_onlyDAO: Insufficient Privileges\""
                        },
                        "value": "Vader::_onlyDAO: Insufficient Privileges"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cc420bdf89f5adb7de07fd9b682743e054b1b39c966bdf819fdad20d553f5dc8",
                          "typeString": "literal_string \"Vader::_onlyDAO: Insufficient Privileges\""
                        }
                      ],
                      "id": 22785,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9693:7:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22792,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9693:113:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22793,
                  "nodeType": "ExpressionStatement",
                  "src": "9693:113:105"
                }
              ]
            },
            "documentation": {
              "id": 22773,
              "nodeType": "StructuredDocumentation",
              "src": "9333:179:105",
              "text": " @dev Ensures only the DAO is able to invoke a particular function by validating that the\n contract has been set up and that the owner is the msg.sender"
            },
            "id": 22795,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyDAO",
            "nameLocation": "9527:8:105",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22774,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9535:2:105"
            },
            "returnParameters": {
              "id": 22775,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9551:0:105"
            },
            "scope": 22804,
            "src": "9518:296:105",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 22802,
              "nodeType": "Block",
              "src": "9969:41:105",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22798,
                      "name": "_onlyDAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22795,
                      "src": "9980:8:105",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 22799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9980:10:105",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22800,
                  "nodeType": "ExpressionStatement",
                  "src": "9980:10:105"
                },
                {
                  "id": 22801,
                  "nodeType": "PlaceholderStatement",
                  "src": "10001:1:105"
                }
              ]
            },
            "documentation": {
              "id": 22796,
              "nodeType": "StructuredDocumentation",
              "src": "9867:77:105",
              "text": " @dev Throws if invoked by anyone else other than the DAO"
            },
            "id": 22803,
            "name": "onlyDAO",
            "nameLocation": "9959:7:105",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 22797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9966:2:105"
            },
            "src": "9950:60:105",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 22805,
        "src": "1099:10792:105",
        "usedErrors": []
      }
    ],
    "src": "41:11852:105"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.093Z",
  "devdoc": {
    "details": "Implementation of the {IVader} interface. The Vader token that acts as the backbone of the Vader protocol, burned and minted to mint and burn USDV tokens respectively. The token contains a dynamically adjusting fee that fluctuates between 0% and 1% depending on the total supply of the token in comparison to the maximum supply possible, which is initially equal to 2.5 billion units. A daily emission schedule is built in the contract as well, meant to supply the Vader USDV treasury at a diminishing rate that inches closer to 0 as the total supply of the token nears the maximum supply possible.",
    "kind": "dev",
    "methods": {
      "adjustMaxSupply(uint256)": {
        "details": "Allows the maximum supply of the token to be adjusted. Emits an {MaxSupplyChanged} event indicating the previous and next maximum total supplies. Requirements: - the caller must be the DAO - the new maximum supply must be greater than the current one"
      },
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "calculateFee()": {
        "details": "Returns the current fee that the protocol applies to transactions. The fee organically adjusts itself as the actual total supply of the token fluctuates and will always hold a value between [0%, 1%] expressed in basis points."
      },
      "claimGrant(address,uint256)": {
        "details": "Allows a strategic partnership grant to be claimed. Emits a {GrantClaimed} event indicating the beneficiary of the grant as well as the grant amount. Requirements: - the caller must be the DAO - the token must hold sufficient Vader allocation for the grant - the grant must be of a non-zero amount"
      },
      "constructor": {
        "details": "Mints the ecosystem growth fund described in the whitepaper to the token contract itself. As the token is meant to be minted and burned freely between USDV and itself, there is no real initialization taking place apart from the initially minted supply for the following components: - Ecosystem Growth: An allocation that is released to strategic partners for the protocol's expansion - Team Allocation: An allocation that is gradually vested over a 2 year duration to the Vader team to incentivize maintainance of the protocol - Vether Holder Allocation: An allocation that is immediately available to all existing and future Vether holders that allows them to swap their Vether for Vader by burning the former The latter two of the allocations are minted at a later date given that the addresses of the converter and vesting contract are not known on deployment."
      },
      "createEmission(address,uint256)": {
        "details": "Creates a manual emission event Emits an {Emission} event indicating the amount emitted as well as what the current era's timestamp is."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "getCurrentEraEmission()": {
        "details": "Returns the current era's emission based on the existing total supply of the token. The era emissions diminish as the total supply of the token increases, inching closer to 0 as the total supply reaches its cap."
      },
      "getEraEmission(uint256)": {
        "details": "Calculates and returns the constantly diminishing era emission based on the difference between the current and maximum supply spread over a one year based in on the emission's era duration."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "setComponents(address,address,address,address)": {
        "details": "Sets the initial {converter}, {vest}, and {usdv} contract addresses prior to transferring ownership to the DAO. Additionally, mints the Vader amount available for conversion as well as the team allocation that is meant to be vested to each respective contract. Emits a {ProtocolInitialized} event indicating all the supplied values of the function. Requirements: - the caller must be the deployer of the contract - the contract must not have already been initialized"
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}