{
  "contractName": "VaderPoolFactory",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IVaderPool",
          "name": "pool",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "PoolCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPools",
      "outputs": [
        {
          "internalType": "contract IVaderPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPool",
      "outputs": [
        {
          "internalType": "contract IVaderPool",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeAsset",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "queueActive",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPool",
      "outputs": [
        {
          "internalType": "contract IVaderPool",
          "name": "pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeAsset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_dao",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "token1",
          "type": "address"
        }
      ],
      "name": "toggleQueue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IVaderPool\",\"name\":\"pool\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPools\",\"outputs\":[{\"internalType\":\"contract IVaderPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"contract IVaderPool\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"contract IVaderPool\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeAsset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_dao\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeAsset\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"queueActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"}],\"name\":\"toggleQueue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dex/pool/VaderPoolFactory.sol\":\"VaderPoolFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x2c309e7df9e05e6ce15bedfe74f3c61b467fc37e0fae9eab496acf5ea0bbd7ff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7063b5c98711a98018ba4635ac74cee1c1cfa2ea01099498e062699ed9530005\",\"dweb:/ipfs/QmeJ8rGXkcv7RrqLdAW8PCXPAykxVsddfYY6g5NaTwmRFE\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"project:/contracts/dex/math/VaderMath.sol\":{\"keccak256\":\"0x141db9bcc1f89349bcf2460433f8253651d157296d3e8c83b4b1fba3fbd7e725\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4373e101389ab6a9f814539713c6e43599063878853f59d71f7592ef98bffbf4\",\"dweb:/ipfs/Qmdy6FNzMnXCUqz9pBcuDkgKtoUVb1yJtppmce9ng3ZfBR\"]},\"project:/contracts/dex/pool/BasePool.sol\":{\"keccak256\":\"0x642d597fa35f0046a3dc0fabd74e9f85c95aa30fde8489e4941f3ed8df3436fa\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://881b9f85130263ed1e1a62942a9d915a94cfff65504a65ec1eee600540142f3b\",\"dweb:/ipfs/QmYofVeSzosv8sSReVNKxRUnRxfYoqMuMMpiH5jK6TDFPD\"]},\"project:/contracts/dex/pool/VaderPool.sol\":{\"keccak256\":\"0x801f16f1c653680a6839a0a5c556443fba5dfd22946526a01a9fdb0159a0795e\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://7c39f489d3a6956a35e28353a43a4fe67ed6c4092cd2e694ecf8ac51e5b9b1e7\",\"dweb:/ipfs/QmQK1mB34Up2cWju8vnbjeo7VdN81dsUhubC6fpXRb2mEX\"]},\"project:/contracts/dex/pool/VaderPoolFactory.sol\":{\"keccak256\":\"0x545938b5f24ac49f057ba1e5660ddf3e6f0d190a6bc3ee44f8345b72d0da5839\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b0f5c1197daf04c07a14348aaa3a17aca9e1489672077a1b97cf8dea071fc40b\",\"dweb:/ipfs/QmUQJ1wzHUetkjVQjHeXGRKp9ioW6qNUov3eCNsS5jeVtt\"]},\"project:/contracts/dex/utils/GasThrottle.sol\":{\"keccak256\":\"0xdebd28e2534c7bdb7602443079a5c8d3801afabcac1486d33a7f4b91fdbfcadf\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://b296a338c07645f78313a7173437f9b3961b2d34475350531074b88744cc8d73\",\"dweb:/ipfs/Qma1d7fkSmKVirM62oNaduCmaZoXeVdNtVbJ4cPa7YWBk2\"]},\"project:/contracts/external/libraries/UQ112x112.sol\":{\"keccak256\":\"0x2d1e4dfe962bfa294d27191203493f4c207e1959e9f7dbdb8a6840baa07c5f18\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://dbf3a441e749dbc36952d55b336509c1ac8e2eeaea55213132859acb965e68eb\",\"dweb:/ipfs/QmbcUzSY9kNdhuLHXnWFhFHs8EXBpv4koGCGhfKL1buzdq\"]},\"project:/contracts/interfaces/dex/pool/IBasePool.sol\":{\"keccak256\":\"0x48bab02d4aea01a3727293267c24c10fcd04a49e1ae965f6db8826e81159f67a\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://89968872f8213d7cbb18c8a5addcc0bea6d07be3debafdaafbe379cc05b2fb05\",\"dweb:/ipfs/QmctQn3dgpuXSLJ87KCLGf28r12vSEEzjGVYTmRqiZuCtn\"]},\"project:/contracts/interfaces/dex/pool/IVaderPool.sol\":{\"keccak256\":\"0xef7bff28d0cfbf99f826da940a7440b1a200327a0033e55645c33962f0724bba\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://ec393f33c9a439514643438a465e30614e8bb1e702b29e82341413b106038ecd\",\"dweb:/ipfs/QmQCwBfwiuLuYHUjrGzwbdDg7bvpoP1BAqpkKUhKqXmv69\"]},\"project:/contracts/interfaces/dex/pool/IVaderPoolFactory.sol\":{\"keccak256\":\"0xa2c2fb7e86b470dbc1c92d7a5ad655216330c3f8ee6b2abd1871165c2eed5160\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://a60433d1defe464381e2a851d2005986b121c25f1ff8e33cb23476ccd462476b\",\"dweb:/ipfs/QmZvCcueaNwbm2cEtSuEye6fxzryZp72ReSHJyYxAzwNHd\"]},\"project:/contracts/interfaces/external/chainlink/IAggregator.sol\":{\"keccak256\":\"0x5205d4a8a69a045249e1ce537f923508d6a225ce90d0cacfcbf719aa5257f536\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8cdc5058eb22c1c3520f5b458ae29291cd5c49d9b5b2044f094472347c051569\",\"dweb:/ipfs/QmfHhW1ZEeCm65HeYPCTdvKEJThd6LEDQ3SkbYYSNoePhg\"]},\"project:/contracts/interfaces/shared/IERC20Extended.sol\":{\"keccak256\":\"0xe4820549025e254ec014e46e4f10f61a02b98876b54c71aa004cfb714900b88b\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://29e0e0802dff7e8d91fee3e0e50e740b406240fbea3288778bffb91818e8bc4c\",\"dweb:/ipfs/QmNniaobupcZZCiooSiD9qSjwDvhHNqXQjGhL35w3DLcjj\"]},\"project:/contracts/shared/ProtocolConstants.sol\":{\"keccak256\":\"0x845b3cdb262b4cc3a2ce4fd0c094c6e6b5e818988cd7c21d4b7b3295b80b7b22\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://763268835823e795ce64059ff8bb147224fb548a4f33b90be4b80b35c59598e2\",\"dweb:/ipfs/QmPbyyps31R4f2PVMpqCbkhWDw8UtG5vfikcNxL6Mg51e5\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b613cb58061007e6000396000f3fe60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c806374d32ad4116200006e57806374d32ad414620001645780638da5cb5b1462000178578063c7a3414b146200018a578063e343361514620001a1578063f2fde38b14620001b857600080fd5b806341d1de9714620000b0578063485cc95514620000e457806352f69f2014620000fd578063531aa03e1462000123578063715018a6146200015a575b600080fd5b620000c7620000c136600462000814565b620001cf565b6040516001600160a01b0390911681526020015b60405180910390f35b620000fb620000f53660046200084b565b620001fa565b005b6000546200011290600160a01b900460ff1681565b6040519015158152602001620000db565b620000c7620001343660046200084b565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b620000fb620002bb565b600154620000c7906001600160a01b031681565b6000546001600160a01b0316620000c7565b620000fb6200019b3660046200084b565b620002d3565b620000c7620001b23660046200084b565b62000358565b620000fb620001c936600462000883565b62000654565b60038181548110620001e057600080fd5b6000918252602090912001546001600160a01b0316905081565b62000204620006d3565b6001600160a01b038216158015906200022557506001600160a01b03811615155b620002915760405162461bcd60e51b815260206004820152603160248201527f5661646572506f6f6c466163746f72793a3a696e697469616c697a653a20496e604482015270636f727265637420417267756d656e747360781b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b038416179055620002b78162000654565b5050565b620002c5620006d3565b620002d160006200072f565b565b620002dd6200077f565b6001600160a01b0380831660009081526002602090815260408083208585168452909152808220548151632684aa0960e21b81529151931692639a12a8249260048084019391929182900301818387803b1580156200033b57600080fd5b505af115801562000350573d6000803e3d6000fd5b505050505050565b600154600090819081906001600160a01b038681169116146200039c576001546001600160a01b0385811691161462000394576000806200039f565b83856200039f565b84845b91509150806001600160a01b0316826001600160a01b031614156200041e5760405162461bcd60e51b815260206004820152602e60248201527f5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20496460448201526d656e746963616c20546f6b656e7360901b606482015260840162000288565b6001600160a01b0381166200048d5760405162461bcd60e51b815260206004820152602e60248201527f5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20496e60448201526d32bc34b9ba32b73a102a37b5b2b760911b606482015260840162000288565b6001600160a01b03828116600090815260026020908152604080832085851684529091529020541615620005165760405162461bcd60e51b815260206004820152602960248201527f5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20506160448201526869722045786973747360b81b606482015260840162000288565b600060149054906101000a900460ff168282604051620005369062000806565b92151583526001600160a01b039182166020840152166040820152606001604051809103906000f08015801562000571573d6000803e3d6000fd5b506001600160a01b03838116600081815260026020818152604080842088871680865290835281852080549789166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351948552908401949094529082015260608101919091529093507febbbe9dc3a19d2f959ac76ac0372b4983cdfb945f5d6aef4873c36fabb2ba8aa9060800160405180910390a1505092915050565b6200065e620006d3565b6001600160a01b038116620006c55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000288565b620006d0816200072f565b50565b6000546001600160a01b03163314620002d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000288565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b031615801590620007a457506000546001600160a01b031633145b620002d15760405162461bcd60e51b815260206004820152602b60248201527f42617365506f6f6c3a3a5f6f6e6c7944414f3a20496e73756666696369656e7460448201526a2050726976696c6567657360a81b606482015260840162000288565b6133d780620008a983390190565b6000602082840312156200082757600080fd5b5035919050565b80356001600160a01b03811681146200084657600080fd5b919050565b600080604083850312156200085f57600080fd5b6200086a836200082e565b91506200087a602084016200082e565b90509250929050565b6000602082840312156200089657600080fd5b620008a1826200082e565b939250505056fe60c06040523480156200001157600080fd5b50604051620033d7380380620033d78339810160408190526200003491620002ba565b604080518082018252600881526705661646572204c560c41b6020808301918252835180850190945260038452620564c560ec1b908401528151859385939290916200008391600091620001f7565b50805162000099906001906020840190620001f7565b505050620000b6620000b0620001a160201b60201c565b620001a5565b60016007556001600160a01b03808316608052811660a0819052604080516395d89b4160e01b81529051600092916395d89b419160048083019286929190829003018186803b1580156200010957600080fd5b505afa1580156200011e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000148919081019062000353565b6040516020016200015a91906200040b565b60408051601f1981840301815291905280519091506200018290600d906020840190620001f7565b5050600f805460ff191695151595909517909455506200048b92505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000205906200044e565b90600052602060002090601f01602090048101928262000229576000855562000274565b82601f106200024457805160ff191683800117855562000274565b8280016001018555821562000274579182015b828111156200027457825182559160200191906001019062000257565b506200028292915062000286565b5090565b5b8082111562000282576000815560010162000287565b80516001600160a01b0381168114620002b557600080fd5b919050565b600080600060608486031215620002d057600080fd5b83518015158114620002e157600080fd5b9250620002f1602085016200029d565b915062000301604085016200029d565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200033d57818101518382015260200162000323565b838111156200034d576000848401525b50505050565b6000602082840312156200036657600080fd5b81516001600160401b03808211156200037e57600080fd5b818401915084601f8301126200039357600080fd5b815181811115620003a857620003a86200030a565b604051601f8201601f19908116603f01168101908382118183101715620003d357620003d36200030a565b81604052828152876020848701011115620003ed57600080fd5b6200040083602083016020880162000320565b979650505050505050565b6b56616465722055534456202f60a01b8152600082516200043481600c85016020870162000320565b620204c560ec1b600c939091019283015250600f01919050565b600181811c908216806200046357607f821691505b602082108114156200048557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051612efc620004db600039600081816103ff015281816108c101528181610c940152611f7a01526000818161034f0152818161082401528181610c720152611f580152612efc6000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806371640de311610104578063a3462b14116100a2578063e985e9c511610071578063e985e9c514610450578063f2fde38b1461048c578063faa777c11461049f578063fcd3533c146104a857600080fd5b8063a3462b14146103fa578063a806437d14610421578063b88d4fde1461042a578063c87b56dd1461043d57600080fd5b806395d89b41116100de57806395d89b411461038257806399fbab881461038a5780639a12a824146103df578063a22cb465146103e757600080fd5b806371640de31461034157806374d32ad41461034a5780638da5cb5b1461037157600080fd5b806323b872dd1161017c5780636a6278421161014b5780636a627842146103005780636d9a640a1461031357806370a0823114610326578063715018a61461033957600080fd5b806323b872dd146102ba57806342842e0e146102cd57806352f69f20146102e05780636352211e146102ed57600080fd5b8063081812fc116101b8578063081812fc1461023d5780630902f1ac14610268578063095ea7b31461029c57806318160ddd146102b157600080fd5b806301ffc9a7146101df578063022c0d9f1461020757806306fdde0314610228575b600080fd5b6101f26101ed3660046127a7565b6104d6565b60405190151581526020015b60405180910390f35b61021a6102153660046127db565b610528565b6040519081526020016101fe565b61023061053f565b6040516101fe91906128c7565b61025061024b3660046128da565b6105d1565b6040516001600160a01b0390911681526020016101fe565b6102706105f8565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101fe565b6102af6102aa3660046128f3565b610622565b005b61021a600c5481565b6102af6102c836600461291d565b61073d565b6102af6102db36600461291d565b61076e565b600f546101f29060ff1681565b6102506102fb3660046128da565b610789565b61021a61030e366004612959565b6107e9565b61021a610321366004612974565b610bb4565b61021a610334366004612959565b61127e565b6102af611304565b61021a600b5481565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b6006546001600160a01b0316610250565b610230611318565b6103bf6103983660046128da565b600a6020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101fe565b6102af611327565b6102af6103f53660046129b7565b611379565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b61021a60085481565b6102af610438366004612a04565b611388565b61023061044b3660046128da565b6113c0565b6101f261045e366004612ae0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102af61049a366004612959565b611433565b61021a60095481565b6104bb6104b6366004612b13565b6114ac565b604080519384526020840192909252908201526060016101fe565b60006001600160e01b031982166380ac58cd60e01b148061050757506001600160e01b03198216635b5e139f60e01b145b8061052257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610535868686610bb4565b9695505050505050565b6060600d805461054e90612b36565b80601f016020809104026020016040519081016040528092919081815260200182805461057a90612b36565b80156105c75780601f1061059c576101008083540402835291602001916105c7565b820191906000526020600020905b8154815290600101906020018083116105aa57829003601f168201915b5050505050905090565b60006105dc826115cd565b506000908152600460205260409020546001600160a01b031690565b600e546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b600061062d82610789565b9050806001600160a01b0316836001600160a01b031614156106a05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106bc57506106bc813361045e565b61072e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610697565b610738838361162c565b505050565b610747338261169a565b6107635760405162461bcd60e51b815260040161069790612b71565b610738838383611719565b61073883838360405180602001604052806000815250611388565b6000818152600260205260408120546001600160a01b0316806105225760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610697565b60006107f361187d565b6000806107fe6105f8565b506040516370a0823160e01b815230600482015291935091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561086657600080fd5b505afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190612bbe565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561090357600080fd5b505afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190612bbe565b905060006109526001600160701b03861684612bed565b905060006109696001600160701b03861684612bed565b600c549091508061097c57829750610a27565b604051630bd92c2560e01b8152600481018490526001600160701b03808916602483015260448201849052871660648201526084810182905273__VaderMath_____________________________90630bd92c259060a40160206040518083038186803b1580156109ec57600080fd5b505af4158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a249190612bbe565b97505b60008811610a8f5760405162461bcd60e51b815260206004820152602f60248201527f42617365506f6f6c3a3a6d696e743a20496e73756666696369656e74204c697160448201526e1d5a591a5d1e48141c9bdd9a591959608a1b6064820152608401610697565b600b805460009182610aa083612c04565b91905055905088600c6000828254610ab89190612c1f565b90915550610ac890508a826118d7565b6040805160808101825242815260208082018c8152828401888152606084018881526000878152600a90945294909220925183555160018301555160028201559051600390910155610b1c86868a8a611a62565b60408051858152602081018590526001600160a01b038c169133917f2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee910160405180910390a360408051828152602081018b905233917fc491b8e6940cb48fcf9cf813c35e2d45fad221af7d5f4ce18d77dc576e5bf220910160405180910390a25050505050505050610baf6001600755565b919050565b6000610bbe61187d565b600084118015610bcc575082155b80610be0575083158015610be05750600083115b610c435760405162461bcd60e51b815260206004820152602e60248201527f42617365506f6f6c3a3a737761703a204f6e6c79204f6e652d5369646564205360448201526d1dd85c1cc814dd5c1c1bdc9d195960921b6064820152608401610697565b600080610c4e6105f8565b506040516370a0823160e01b815230600482015291935091506000908190819081907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a082319060240160206040518083038186803b158015610ce057600080fd5b505afa158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d189190612bbe565b6040516370a0823160e01b81523060048201529096506001600160a01b038216906370a082319060240160206040518083038186803b158015610d5a57600080fd5b505afa158015610d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d929190612bbe565b9450816001600160a01b03168a6001600160a01b031614158015610dc85750806001600160a01b03168a6001600160a01b031614155b610e145760405162461bcd60e51b815260206004820181905260248201527f42617365506f6f6c3a3a737761703a20496e76616c69642052656365697665726044820152606401610697565b8a15610f8f57610e2d6001600160701b03881686612bed565b8b1115610e4c5760405162461bcd60e51b815260040161069790612c37565b866001600160701b03168b1115610e755760405162461bcd60e51b815260040161069790612c83565b60405163ec6341b360e01b8152600481018c90526001600160701b0380891660248301528916604482015273__VaderMath_____________________________9063ec6341b39060640160206040518083038186803b158015610ed757600080fd5b505af4158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f9190612bbe565b9350600084118015610f2a5750876001600160701b03168411155b610f765760405162461bcd60e51b815260206004820152601f60248201527f42617365506f6f6c3a3a737761703a205377617020496d706f737369626c65006044820152606401610697565b610f8a6001600160a01b0383168b86611c1e565b6110ff565b610fa26001600160701b03891687612bed565b8c1115610fc15760405162461bcd60e51b815260040161069790612c37565b876001600160701b03168c1115610fea5760405162461bcd60e51b815260040161069790612c83565b60405163ec6341b360e01b8152600481018d90526001600160701b03808a1660248301528816604482015273__VaderMath_____________________________9063ec6341b39060640160206040518083038186803b15801561104c57600080fd5b505af4158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190612bbe565b925060008311801561109f5750866001600160701b03168311155b6110eb5760405162461bcd60e51b815260206004820152601f60248201527f42617365506f6f6c3a3a737761703a205377617020496d706f737369626c65006044820152606401610697565b6110ff6001600160a01b0382168b85611c1e565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b15801561113e57600080fd5b505afa158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190612bbe565b6040516370a0823160e01b81523060048201529096506001600160a01b038216906370a082319060240160206040518083038186803b1580156111b857600080fd5b505afa1580156111cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f09190612bbe565b9450505061120084848888611a62565b604080518b8152602081018b9052908101839052606081018290526001600160a01b0389169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a3600082116112635780611265565b815b96505050505050506112776001600755565b9392505050565b60006001600160a01b0382166112e85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610697565b506001600160a01b031660009081526003602052604090205490565b61130c611c70565b6113166000611cca565b565b60606001805461054e90612b36565b61132f611c70565b600f805460ff81161560ff1990911681179091556040518181527fa065e278b99c58eb9e10d9a5104cc18270dbc59636c1e29c5ecf496fb507f8219060200160405180910390a150565b611384338383611d1c565b5050565b611392338361169a565b6113ae5760405162461bcd60e51b815260040161069790612b71565b6113ba84848484611deb565b50505050565b60606113cb826115cd565b60006113e260408051602081019091526000815290565b905060008151116114025760405180602001604052806000815250611277565b8061140c84611e1e565b60405160200161141d929190612cc5565b6040516020818303038152906040529392505050565b61143b611c70565b6001600160a01b0381166114a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610697565b6114a981611cca565b50565b60008060006114bb8585611ebb565b6000878152600a602052604080822080546002820180546003840180548786556001860188905592879055869055935163bfc40edd60e01b8152600481018590526024810182905260448101889052606481018790529699509497509094909391929073__VaderMath_____________________________9063bfc40edd9060840160206040518083038186803b15801561155557600080fd5b505af4158015611569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158d9190612bbe565b90506301e133806115ab6115a18642612bed565b6301e133806122de565b6115b59083612cf4565b6115bf9190612d29565b955050505050509250925092565b6000818152600260205260409020546001600160a01b03166114a95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610697565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061166182610789565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806116a683610789565b9050806001600160a01b0316846001600160a01b031614806116ed57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806117115750836001600160a01b0316611706846105d1565b6001600160a01b0316145b949350505050565b826001600160a01b031661172c82610789565b6001600160a01b0316146117525760405162461bcd60e51b815260040161069790612d3d565b6001600160a01b0382166117b45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610697565b826001600160a01b03166117c782610789565b6001600160a01b0316146117ed5760405162461bcd60e51b815260040161069790612d3d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600260075414156118d05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610697565b6002600755565b6001600160a01b03821661192d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610697565b6000818152600260205260409020546001600160a01b0316156119925760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610697565b6000818152600260205260409020546001600160a01b0316156119f75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610697565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160701b038411801590611a8057506001600160701b038311155b611ad85760405162461bcd60e51b815260206004820152602360248201527f42617365506f6f6c3a3a5f7570646174653a2042616c616e6365204f766572666044820152626c6f7760e81b6064820152608401610697565b6000611ae964010000000042612d82565b600e5490915063ffffffff600160e01b9091048116820390811615801590611b1957506001600160701b03841615155b8015611b2d57506001600160701b03831615155b15611b98578063ffffffff16611b5585611b46866122f4565b6001600160e01b03169061230d565b600880546001600160e01b03929092169290920201905563ffffffff8116611b8084611b46876122f4565b600980546001600160e01b0392909216929092020190555b50600e80546001600160701b038781166001600160e01b031990921691909117600160701b91871691909102176001600160e01b0316600160e01b63ffffffff84160217905560408051868152602081018690527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610738908490612322565b6006546001600160a01b031633146113165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610697565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415611d7e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610697565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611df6848484611719565b611e02848484846123f7565b6113ba5760405162461bcd60e51b815260040161069790612d96565b60606000611e2b83612504565b600101905060008167ffffffffffffffff811115611e4b57611e4b6129ee565b6040519080825280601f01601f191660200182016040528015611e75576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611eae57611eb3565b611e7f565b509392505050565b600080611ec661187d565b30611ed085610789565b6001600160a01b031614611f325760405162461bcd60e51b815260206004820152602360248201527f42617365506f6f6c3a3a6275726e3a20496e636f7272656374204f776e65727360448201526206869760ec1b6064820152608401610697565b600080611f3d6105f8565b506040516370a0823160e01b815230600482015291935091507f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038416906370a082319060240160206040518083038186803b158015611fc957600080fd5b505afa158015611fdd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120019190612bbe565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b15801561204657600080fd5b505afa15801561205a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207e9190612bbe565b60008b8152600a6020526040902060010154600c5491925090806120a28584612cf4565b6120ac9190612d29565b9950806120b98484612cf4565b6120c39190612d29565b985060008a1180156120d55750600089115b6121375760405162461bcd60e51b815260206004820152602d60248201527f42617365506f6f6c3a3a6275726e3a20496e73756666696369656e74204c697160448201526c1d5a591a5d1e48109d5c9b9959609a1b6064820152608401610697565b81600c60008282546121499190612bed565b9091555061215890508c6125dc565b61216c6001600160a01b0387168c8c611c1e565b6121806001600160a01b0386168c8b611c1e565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a082319060240160206040518083038186803b1580156121bf57600080fd5b505afa1580156121d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f79190612bbe565b6040516370a0823160e01b81523060048201529094506001600160a01b038616906370a082319060240160206040518083038186803b15801561223957600080fd5b505afa15801561224d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122719190612bbe565b925061227f84848a8a611a62565b604080518b8152602081018b90526001600160a01b038d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506122d76001600755565b9250929050565b60008183106122ed5781611277565b5090919050565b6000610522600160701b6001600160701b038416612de8565b60006112776001600160701b03831684612e17565b6000612377826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126719092919063ffffffff16565b90508051600014806123985750808060200190518101906123989190612e3d565b6107385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610697565b60006001600160a01b0384163b156124f957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061243b903390899088908890600401612e5a565b602060405180830381600087803b15801561245557600080fd5b505af1925050508015612485575060408051601f3d908101601f1916820190925261248291810190612e8d565b60015b6124df573d8080156124b3576040519150601f19603f3d011682016040523d82523d6000602084013e6124b8565b606091505b5080516124d75760405162461bcd60e51b815260040161069790612d96565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611711565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106125435772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061256f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061258d57662386f26fc10000830492506010015b6305f5e10083106125a5576305f5e100830492506008015b61271083106125b957612710830492506004015b606483106125cb576064830492506002015b600a83106105225760010192915050565b60006125e782610789565b90506125f282610789565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060611711848460008585600080866001600160a01b031685876040516126989190612eaa565b60006040518083038185875af1925050503d80600081146126d5576040519150601f19603f3d011682016040523d82523d6000602084013e6126da565b606091505b50915091506126eb878383876126f6565b979650505050505050565b6060831561276257825161275b576001600160a01b0385163b61275b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610697565b5081611711565b61171183838151156127775781518083602001fd5b8060405162461bcd60e51b815260040161069791906128c7565b6001600160e01b0319811681146114a957600080fd5b6000602082840312156127b957600080fd5b813561127781612791565b80356001600160a01b0381168114610baf57600080fd5b6000806000806000608086880312156127f357600080fd5b853594506020860135935061280a604087016127c4565b9250606086013567ffffffffffffffff8082111561282757600080fd5b818801915088601f83011261283b57600080fd5b81358181111561284a57600080fd5b89602082850101111561285c57600080fd5b9699959850939650602001949392505050565b60005b8381101561288a578181015183820152602001612872565b838111156113ba5750506000910152565b600081518084526128b381602086016020860161286f565b601f01601f19169290920160200192915050565b602081526000611277602083018461289b565b6000602082840312156128ec57600080fd5b5035919050565b6000806040838503121561290657600080fd5b61290f836127c4565b946020939093013593505050565b60008060006060848603121561293257600080fd5b61293b846127c4565b9250612949602085016127c4565b9150604084013590509250925092565b60006020828403121561296b57600080fd5b611277826127c4565b60008060006060848603121561298957600080fd5b83359250602084013591506129a0604085016127c4565b90509250925092565b80151581146114a957600080fd5b600080604083850312156129ca57600080fd5b6129d3836127c4565b915060208301356129e3816129a9565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612a1a57600080fd5b612a23856127c4565b9350612a31602086016127c4565b925060408501359150606085013567ffffffffffffffff80821115612a5557600080fd5b818701915087601f830112612a6957600080fd5b813581811115612a7b57612a7b6129ee565b604051601f8201601f19908116603f01168101908382118183101715612aa357612aa36129ee565b816040528281528a6020848701011115612abc57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215612af357600080fd5b612afc836127c4565b9150612b0a602084016127c4565b90509250929050565b60008060408385031215612b2657600080fd5b82359150612b0a602084016127c4565b600181811c90821680612b4a57607f821691505b60208210811415612b6b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600060208284031215612bd057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612bff57612bff612bd7565b500390565b6000600019821415612c1857612c18612bd7565b5060010190565b60008219821115612c3257612c32612bd7565b500190565b6020808252602c908201527f42617365506f6f6c3a3a737761703a20496e73756666696369656e7420546f6b60408201526b195b9cc8141c9bdd9a59195960a21b606082015260800190565b60208082526022908201527f42617365506f6f6c3a3a737761703a20556e6661766f757261626c6520547261604082015261646560f01b606082015260800190565b60008351612cd781846020880161286f565b835190830190612ceb81836020880161286f565b01949350505050565b6000816000190483118215151615612d0e57612d0e612bd7565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612d3857612d38612d13565b500490565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b600082612d9157612d91612d13565b500690565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001600160e01b0382811684821681151582840482111615612e0e57612e0e612bd7565b02949350505050565b60006001600160e01b0383811680612e3157612e31612d13565b92169190910492915050565b600060208284031215612e4f57600080fd5b8151611277816129a9565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906105359083018461289b565b600060208284031215612e9f57600080fd5b815161127781612791565b60008251612ebc81846020870161286f565b919091019291505056fea2646970667358221220880fd663ca88c68ae632b8b50bfaf6a7dc70b6f005e348a7c356bf56f739dfd664736f6c63430008090033a2646970667358221220c4b2574f83eb06608ba1dd92dc8de9af0615330d104acb14b28710d7b79f196e64736f6c63430008090033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b5060043610620000ab5760003560e01c806374d32ad4116200006e57806374d32ad414620001645780638da5cb5b1462000178578063c7a3414b146200018a578063e343361514620001a1578063f2fde38b14620001b857600080fd5b806341d1de9714620000b0578063485cc95514620000e457806352f69f2014620000fd578063531aa03e1462000123578063715018a6146200015a575b600080fd5b620000c7620000c136600462000814565b620001cf565b6040516001600160a01b0390911681526020015b60405180910390f35b620000fb620000f53660046200084b565b620001fa565b005b6000546200011290600160a01b900460ff1681565b6040519015158152602001620000db565b620000c7620001343660046200084b565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b620000fb620002bb565b600154620000c7906001600160a01b031681565b6000546001600160a01b0316620000c7565b620000fb6200019b3660046200084b565b620002d3565b620000c7620001b23660046200084b565b62000358565b620000fb620001c936600462000883565b62000654565b60038181548110620001e057600080fd5b6000918252602090912001546001600160a01b0316905081565b62000204620006d3565b6001600160a01b038216158015906200022557506001600160a01b03811615155b620002915760405162461bcd60e51b815260206004820152603160248201527f5661646572506f6f6c466163746f72793a3a696e697469616c697a653a20496e604482015270636f727265637420417267756d656e747360781b60648201526084015b60405180910390fd5b600180546001600160a01b0319166001600160a01b038416179055620002b78162000654565b5050565b620002c5620006d3565b620002d160006200072f565b565b620002dd6200077f565b6001600160a01b0380831660009081526002602090815260408083208585168452909152808220548151632684aa0960e21b81529151931692639a12a8249260048084019391929182900301818387803b1580156200033b57600080fd5b505af115801562000350573d6000803e3d6000fd5b505050505050565b600154600090819081906001600160a01b038681169116146200039c576001546001600160a01b0385811691161462000394576000806200039f565b83856200039f565b84845b91509150806001600160a01b0316826001600160a01b031614156200041e5760405162461bcd60e51b815260206004820152602e60248201527f5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20496460448201526d656e746963616c20546f6b656e7360901b606482015260840162000288565b6001600160a01b0381166200048d5760405162461bcd60e51b815260206004820152602e60248201527f5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20496e60448201526d32bc34b9ba32b73a102a37b5b2b760911b606482015260840162000288565b6001600160a01b03828116600090815260026020908152604080832085851684529091529020541615620005165760405162461bcd60e51b815260206004820152602960248201527f5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20506160448201526869722045786973747360b81b606482015260840162000288565b600060149054906101000a900460ff168282604051620005369062000806565b92151583526001600160a01b039182166020840152166040820152606001604051809103906000f08015801562000571573d6000803e3d6000fd5b506001600160a01b03838116600081815260026020818152604080842088871680865290835281852080549789166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351948552908401949094529082015260608101919091529093507febbbe9dc3a19d2f959ac76ac0372b4983cdfb945f5d6aef4873c36fabb2ba8aa9060800160405180910390a1505092915050565b6200065e620006d3565b6001600160a01b038116620006c55760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840162000288565b620006d0816200072f565b50565b6000546001600160a01b03163314620002d15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640162000288565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001546001600160a01b031615801590620007a457506000546001600160a01b031633145b620002d15760405162461bcd60e51b815260206004820152602b60248201527f42617365506f6f6c3a3a5f6f6e6c7944414f3a20496e73756666696369656e7460448201526a2050726976696c6567657360a81b606482015260840162000288565b6133d780620008a983390190565b6000602082840312156200082757600080fd5b5035919050565b80356001600160a01b03811681146200084657600080fd5b919050565b600080604083850312156200085f57600080fd5b6200086a836200082e565b91506200087a602084016200082e565b90509250929050565b6000602082840312156200089657600080fd5b620008a1826200082e565b939250505056fe60c06040523480156200001157600080fd5b50604051620033d7380380620033d78339810160408190526200003491620002ba565b604080518082018252600881526705661646572204c560c41b6020808301918252835180850190945260038452620564c560ec1b908401528151859385939290916200008391600091620001f7565b50805162000099906001906020840190620001f7565b505050620000b6620000b0620001a160201b60201c565b620001a5565b60016007556001600160a01b03808316608052811660a0819052604080516395d89b4160e01b81529051600092916395d89b419160048083019286929190829003018186803b1580156200010957600080fd5b505afa1580156200011e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000148919081019062000353565b6040516020016200015a91906200040b565b60408051601f1981840301815291905280519091506200018290600d906020840190620001f7565b5050600f805460ff191695151595909517909455506200048b92505050565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b82805462000205906200044e565b90600052602060002090601f01602090048101928262000229576000855562000274565b82601f106200024457805160ff191683800117855562000274565b8280016001018555821562000274579182015b828111156200027457825182559160200191906001019062000257565b506200028292915062000286565b5090565b5b8082111562000282576000815560010162000287565b80516001600160a01b0381168114620002b557600080fd5b919050565b600080600060608486031215620002d057600080fd5b83518015158114620002e157600080fd5b9250620002f1602085016200029d565b915062000301604085016200029d565b90509250925092565b634e487b7160e01b600052604160045260246000fd5b60005b838110156200033d57818101518382015260200162000323565b838111156200034d576000848401525b50505050565b6000602082840312156200036657600080fd5b81516001600160401b03808211156200037e57600080fd5b818401915084601f8301126200039357600080fd5b815181811115620003a857620003a86200030a565b604051601f8201601f19908116603f01168101908382118183101715620003d357620003d36200030a565b81604052828152876020848701011115620003ed57600080fd5b6200040083602083016020880162000320565b979650505050505050565b6b56616465722055534456202f60a01b8152600082516200043481600c85016020870162000320565b620204c560ec1b600c939091019283015250600f01919050565b600181811c908216806200046357607f821691505b602082108114156200048557634e487b7160e01b600052602260045260246000fd5b50919050565b60805160a051612efc620004db600039600081816103ff015281816108c101528181610c940152611f7a01526000818161034f0152818161082401528181610c720152611f580152612efc6000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806371640de311610104578063a3462b14116100a2578063e985e9c511610071578063e985e9c514610450578063f2fde38b1461048c578063faa777c11461049f578063fcd3533c146104a857600080fd5b8063a3462b14146103fa578063a806437d14610421578063b88d4fde1461042a578063c87b56dd1461043d57600080fd5b806395d89b41116100de57806395d89b411461038257806399fbab881461038a5780639a12a824146103df578063a22cb465146103e757600080fd5b806371640de31461034157806374d32ad41461034a5780638da5cb5b1461037157600080fd5b806323b872dd1161017c5780636a6278421161014b5780636a627842146103005780636d9a640a1461031357806370a0823114610326578063715018a61461033957600080fd5b806323b872dd146102ba57806342842e0e146102cd57806352f69f20146102e05780636352211e146102ed57600080fd5b8063081812fc116101b8578063081812fc1461023d5780630902f1ac14610268578063095ea7b31461029c57806318160ddd146102b157600080fd5b806301ffc9a7146101df578063022c0d9f1461020757806306fdde0314610228575b600080fd5b6101f26101ed3660046127a7565b6104d6565b60405190151581526020015b60405180910390f35b61021a6102153660046127db565b610528565b6040519081526020016101fe565b61023061053f565b6040516101fe91906128c7565b61025061024b3660046128da565b6105d1565b6040516001600160a01b0390911681526020016101fe565b6102706105f8565b604080516001600160701b03948516815293909216602084015263ffffffff16908201526060016101fe565b6102af6102aa3660046128f3565b610622565b005b61021a600c5481565b6102af6102c836600461291d565b61073d565b6102af6102db36600461291d565b61076e565b600f546101f29060ff1681565b6102506102fb3660046128da565b610789565b61021a61030e366004612959565b6107e9565b61021a610321366004612974565b610bb4565b61021a610334366004612959565b61127e565b6102af611304565b61021a600b5481565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b6006546001600160a01b0316610250565b610230611318565b6103bf6103983660046128da565b600a6020526000908152604090208054600182015460028301546003909301549192909184565b6040805194855260208501939093529183015260608201526080016101fe565b6102af611327565b6102af6103f53660046129b7565b611379565b6102507f000000000000000000000000000000000000000000000000000000000000000081565b61021a60085481565b6102af610438366004612a04565b611388565b61023061044b3660046128da565b6113c0565b6101f261045e366004612ae0565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6102af61049a366004612959565b611433565b61021a60095481565b6104bb6104b6366004612b13565b6114ac565b604080519384526020840192909252908201526060016101fe565b60006001600160e01b031982166380ac58cd60e01b148061050757506001600160e01b03198216635b5e139f60e01b145b8061052257506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000610535868686610bb4565b9695505050505050565b6060600d805461054e90612b36565b80601f016020809104026020016040519081016040528092919081815260200182805461057a90612b36565b80156105c75780601f1061059c576101008083540402835291602001916105c7565b820191906000526020600020905b8154815290600101906020018083116105aa57829003601f168201915b5050505050905090565b60006105dc826115cd565b506000908152600460205260409020546001600160a01b031690565b600e546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b600061062d82610789565b9050806001600160a01b0316836001600160a01b031614156106a05760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b03821614806106bc57506106bc813361045e565b61072e5760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c0000006064820152608401610697565b610738838361162c565b505050565b610747338261169a565b6107635760405162461bcd60e51b815260040161069790612b71565b610738838383611719565b61073883838360405180602001604052806000815250611388565b6000818152600260205260408120546001600160a01b0316806105225760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610697565b60006107f361187d565b6000806107fe6105f8565b506040516370a0823160e01b815230600482015291935091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561086657600080fd5b505afa15801561087a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061089e9190612bbe565b6040516370a0823160e01b81523060048201529091506000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561090357600080fd5b505afa158015610917573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061093b9190612bbe565b905060006109526001600160701b03861684612bed565b905060006109696001600160701b03861684612bed565b600c549091508061097c57829750610a27565b604051630bd92c2560e01b8152600481018490526001600160701b03808916602483015260448201849052871660648201526084810182905273__VaderMath_____________________________90630bd92c259060a40160206040518083038186803b1580156109ec57600080fd5b505af4158015610a00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a249190612bbe565b97505b60008811610a8f5760405162461bcd60e51b815260206004820152602f60248201527f42617365506f6f6c3a3a6d696e743a20496e73756666696369656e74204c697160448201526e1d5a591a5d1e48141c9bdd9a591959608a1b6064820152608401610697565b600b805460009182610aa083612c04565b91905055905088600c6000828254610ab89190612c1f565b90915550610ac890508a826118d7565b6040805160808101825242815260208082018c8152828401888152606084018881526000878152600a90945294909220925183555160018301555160028201559051600390910155610b1c86868a8a611a62565b60408051858152602081018590526001600160a01b038c169133917f2f00e3cdd69a77be7ed215ec7b2a36784dd158f921fca79ac29deffa353fe6ee910160405180910390a360408051828152602081018b905233917fc491b8e6940cb48fcf9cf813c35e2d45fad221af7d5f4ce18d77dc576e5bf220910160405180910390a25050505050505050610baf6001600755565b919050565b6000610bbe61187d565b600084118015610bcc575082155b80610be0575083158015610be05750600083115b610c435760405162461bcd60e51b815260206004820152602e60248201527f42617365506f6f6c3a3a737761703a204f6e6c79204f6e652d5369646564205360448201526d1dd85c1cc814dd5c1c1bdc9d195960921b6064820152608401610697565b600080610c4e6105f8565b506040516370a0823160e01b815230600482015291935091506000908190819081907f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906001600160a01b038316906370a082319060240160206040518083038186803b158015610ce057600080fd5b505afa158015610cf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d189190612bbe565b6040516370a0823160e01b81523060048201529096506001600160a01b038216906370a082319060240160206040518083038186803b158015610d5a57600080fd5b505afa158015610d6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d929190612bbe565b9450816001600160a01b03168a6001600160a01b031614158015610dc85750806001600160a01b03168a6001600160a01b031614155b610e145760405162461bcd60e51b815260206004820181905260248201527f42617365506f6f6c3a3a737761703a20496e76616c69642052656365697665726044820152606401610697565b8a15610f8f57610e2d6001600160701b03881686612bed565b8b1115610e4c5760405162461bcd60e51b815260040161069790612c37565b866001600160701b03168b1115610e755760405162461bcd60e51b815260040161069790612c83565b60405163ec6341b360e01b8152600481018c90526001600160701b0380891660248301528916604482015273__VaderMath_____________________________9063ec6341b39060640160206040518083038186803b158015610ed757600080fd5b505af4158015610eeb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f0f9190612bbe565b9350600084118015610f2a5750876001600160701b03168411155b610f765760405162461bcd60e51b815260206004820152601f60248201527f42617365506f6f6c3a3a737761703a205377617020496d706f737369626c65006044820152606401610697565b610f8a6001600160a01b0383168b86611c1e565b6110ff565b610fa26001600160701b03891687612bed565b8c1115610fc15760405162461bcd60e51b815260040161069790612c37565b876001600160701b03168c1115610fea5760405162461bcd60e51b815260040161069790612c83565b60405163ec6341b360e01b8152600481018d90526001600160701b03808a1660248301528816604482015273__VaderMath_____________________________9063ec6341b39060640160206040518083038186803b15801561104c57600080fd5b505af4158015611060573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110849190612bbe565b925060008311801561109f5750866001600160701b03168311155b6110eb5760405162461bcd60e51b815260206004820152601f60248201527f42617365506f6f6c3a3a737761703a205377617020496d706f737369626c65006044820152606401610697565b6110ff6001600160a01b0382168b85611c1e565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b15801561113e57600080fd5b505afa158015611152573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111769190612bbe565b6040516370a0823160e01b81523060048201529096506001600160a01b038216906370a082319060240160206040518083038186803b1580156111b857600080fd5b505afa1580156111cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111f09190612bbe565b9450505061120084848888611a62565b604080518b8152602081018b9052908101839052606081018290526001600160a01b0389169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a3600082116112635780611265565b815b96505050505050506112776001600755565b9392505050565b60006001600160a01b0382166112e85760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b6064820152608401610697565b506001600160a01b031660009081526003602052604090205490565b61130c611c70565b6113166000611cca565b565b60606001805461054e90612b36565b61132f611c70565b600f805460ff81161560ff1990911681179091556040518181527fa065e278b99c58eb9e10d9a5104cc18270dbc59636c1e29c5ecf496fb507f8219060200160405180910390a150565b611384338383611d1c565b5050565b611392338361169a565b6113ae5760405162461bcd60e51b815260040161069790612b71565b6113ba84848484611deb565b50505050565b60606113cb826115cd565b60006113e260408051602081019091526000815290565b905060008151116114025760405180602001604052806000815250611277565b8061140c84611e1e565b60405160200161141d929190612cc5565b6040516020818303038152906040529392505050565b61143b611c70565b6001600160a01b0381166114a05760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610697565b6114a981611cca565b50565b60008060006114bb8585611ebb565b6000878152600a602052604080822080546002820180546003840180548786556001860188905592879055869055935163bfc40edd60e01b8152600481018590526024810182905260448101889052606481018790529699509497509094909391929073__VaderMath_____________________________9063bfc40edd9060840160206040518083038186803b15801561155557600080fd5b505af4158015611569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158d9190612bbe565b90506301e133806115ab6115a18642612bed565b6301e133806122de565b6115b59083612cf4565b6115bf9190612d29565b955050505050509250925092565b6000818152600260205260409020546001600160a01b03166114a95760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b6044820152606401610697565b600081815260046020526040902080546001600160a01b0319166001600160a01b038416908117909155819061166182610789565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806116a683610789565b9050806001600160a01b0316846001600160a01b031614806116ed57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806117115750836001600160a01b0316611706846105d1565b6001600160a01b0316145b949350505050565b826001600160a01b031661172c82610789565b6001600160a01b0316146117525760405162461bcd60e51b815260040161069790612d3d565b6001600160a01b0382166117b45760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610697565b826001600160a01b03166117c782610789565b6001600160a01b0316146117ed5760405162461bcd60e51b815260040161069790612d3d565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b600260075414156118d05760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610697565b6002600755565b6001600160a01b03821661192d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610697565b6000818152600260205260409020546001600160a01b0316156119925760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610697565b6000818152600260205260409020546001600160a01b0316156119f75760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610697565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6001600160701b038411801590611a8057506001600160701b038311155b611ad85760405162461bcd60e51b815260206004820152602360248201527f42617365506f6f6c3a3a5f7570646174653a2042616c616e6365204f766572666044820152626c6f7760e81b6064820152608401610697565b6000611ae964010000000042612d82565b600e5490915063ffffffff600160e01b9091048116820390811615801590611b1957506001600160701b03841615155b8015611b2d57506001600160701b03831615155b15611b98578063ffffffff16611b5585611b46866122f4565b6001600160e01b03169061230d565b600880546001600160e01b03929092169290920201905563ffffffff8116611b8084611b46876122f4565b600980546001600160e01b0392909216929092020190555b50600e80546001600160701b038781166001600160e01b031990921691909117600160701b91871691909102176001600160e01b0316600160e01b63ffffffff84160217905560408051868152602081018690527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610738908490612322565b6006546001600160a01b031633146113165760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610697565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b03161415611d7e5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610697565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611df6848484611719565b611e02848484846123f7565b6113ba5760405162461bcd60e51b815260040161069790612d96565b60606000611e2b83612504565b600101905060008167ffffffffffffffff811115611e4b57611e4b6129ee565b6040519080825280601f01601f191660200182016040528015611e75576020820181803683370190505b5090508181016020015b600019016f181899199a1a9b1b9c1cb0b131b232b360811b600a86061a8153600a8504945084611eae57611eb3565b611e7f565b509392505050565b600080611ec661187d565b30611ed085610789565b6001600160a01b031614611f325760405162461bcd60e51b815260206004820152602360248201527f42617365506f6f6c3a3a6275726e3a20496e636f7272656374204f776e65727360448201526206869760ec1b6064820152608401610697565b600080611f3d6105f8565b506040516370a0823160e01b815230600482015291935091507f0000000000000000000000000000000000000000000000000000000000000000907f0000000000000000000000000000000000000000000000000000000000000000906000906001600160a01b038416906370a082319060240160206040518083038186803b158015611fc957600080fd5b505afa158015611fdd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906120019190612bbe565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b15801561204657600080fd5b505afa15801561205a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061207e9190612bbe565b60008b8152600a6020526040902060010154600c5491925090806120a28584612cf4565b6120ac9190612d29565b9950806120b98484612cf4565b6120c39190612d29565b985060008a1180156120d55750600089115b6121375760405162461bcd60e51b815260206004820152602d60248201527f42617365506f6f6c3a3a6275726e3a20496e73756666696369656e74204c697160448201526c1d5a591a5d1e48109d5c9b9959609a1b6064820152608401610697565b81600c60008282546121499190612bed565b9091555061215890508c6125dc565b61216c6001600160a01b0387168c8c611c1e565b6121806001600160a01b0386168c8b611c1e565b6040516370a0823160e01b81523060048201526001600160a01b038716906370a082319060240160206040518083038186803b1580156121bf57600080fd5b505afa1580156121d3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f79190612bbe565b6040516370a0823160e01b81523060048201529094506001600160a01b038616906370a082319060240160206040518083038186803b15801561223957600080fd5b505afa15801561224d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122719190612bbe565b925061227f84848a8a611a62565b604080518b8152602081018b90526001600160a01b038d169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a350505050505050506122d76001600755565b9250929050565b60008183106122ed5781611277565b5090919050565b6000610522600160701b6001600160701b038416612de8565b60006112776001600160701b03831684612e17565b6000612377826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166126719092919063ffffffff16565b90508051600014806123985750808060200190518101906123989190612e3d565b6107385760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610697565b60006001600160a01b0384163b156124f957604051630a85bd0160e11b81526001600160a01b0385169063150b7a029061243b903390899088908890600401612e5a565b602060405180830381600087803b15801561245557600080fd5b505af1925050508015612485575060408051601f3d908101601f1916820190925261248291810190612e8d565b60015b6124df573d8080156124b3576040519150601f19603f3d011682016040523d82523d6000602084013e6124b8565b606091505b5080516124d75760405162461bcd60e51b815260040161069790612d96565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050611711565b506001949350505050565b60008072184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b83106125435772184f03e93ff9f4daa797ed6e38ed64bf6a1f0160401b830492506040015b6d04ee2d6d415b85acef8100000000831061256f576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061258d57662386f26fc10000830492506010015b6305f5e10083106125a5576305f5e100830492506008015b61271083106125b957612710830492506004015b606483106125cb576064830492506002015b600a83106105225760010192915050565b60006125e782610789565b90506125f282610789565b600083815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b6060611711848460008585600080866001600160a01b031685876040516126989190612eaa565b60006040518083038185875af1925050503d80600081146126d5576040519150601f19603f3d011682016040523d82523d6000602084013e6126da565b606091505b50915091506126eb878383876126f6565b979650505050505050565b6060831561276257825161275b576001600160a01b0385163b61275b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610697565b5081611711565b61171183838151156127775781518083602001fd5b8060405162461bcd60e51b815260040161069791906128c7565b6001600160e01b0319811681146114a957600080fd5b6000602082840312156127b957600080fd5b813561127781612791565b80356001600160a01b0381168114610baf57600080fd5b6000806000806000608086880312156127f357600080fd5b853594506020860135935061280a604087016127c4565b9250606086013567ffffffffffffffff8082111561282757600080fd5b818801915088601f83011261283b57600080fd5b81358181111561284a57600080fd5b89602082850101111561285c57600080fd5b9699959850939650602001949392505050565b60005b8381101561288a578181015183820152602001612872565b838111156113ba5750506000910152565b600081518084526128b381602086016020860161286f565b601f01601f19169290920160200192915050565b602081526000611277602083018461289b565b6000602082840312156128ec57600080fd5b5035919050565b6000806040838503121561290657600080fd5b61290f836127c4565b946020939093013593505050565b60008060006060848603121561293257600080fd5b61293b846127c4565b9250612949602085016127c4565b9150604084013590509250925092565b60006020828403121561296b57600080fd5b611277826127c4565b60008060006060848603121561298957600080fd5b83359250602084013591506129a0604085016127c4565b90509250925092565b80151581146114a957600080fd5b600080604083850312156129ca57600080fd5b6129d3836127c4565b915060208301356129e3816129a9565b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215612a1a57600080fd5b612a23856127c4565b9350612a31602086016127c4565b925060408501359150606085013567ffffffffffffffff80821115612a5557600080fd5b818701915087601f830112612a6957600080fd5b813581811115612a7b57612a7b6129ee565b604051601f8201601f19908116603f01168101908382118183101715612aa357612aa36129ee565b816040528281528a6020848701011115612abc57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215612af357600080fd5b612afc836127c4565b9150612b0a602084016127c4565b90509250929050565b60008060408385031215612b2657600080fd5b82359150612b0a602084016127c4565b600181811c90821680612b4a57607f821691505b60208210811415612b6b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b600060208284031215612bd057600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600082821015612bff57612bff612bd7565b500390565b6000600019821415612c1857612c18612bd7565b5060010190565b60008219821115612c3257612c32612bd7565b500190565b6020808252602c908201527f42617365506f6f6c3a3a737761703a20496e73756666696369656e7420546f6b60408201526b195b9cc8141c9bdd9a59195960a21b606082015260800190565b60208082526022908201527f42617365506f6f6c3a3a737761703a20556e6661766f757261626c6520547261604082015261646560f01b606082015260800190565b60008351612cd781846020880161286f565b835190830190612ceb81836020880161286f565b01949350505050565b6000816000190483118215151615612d0e57612d0e612bd7565b500290565b634e487b7160e01b600052601260045260246000fd5b600082612d3857612d38612d13565b500490565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b600082612d9157612d91612d13565b500690565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b60006001600160e01b0382811684821681151582840482111615612e0e57612e0e612bd7565b02949350505050565b60006001600160e01b0383811680612e3157612e31612d13565b92169190910492915050565b600060208284031215612e4f57600080fd5b8151611277816129a9565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906105359083018461289b565b600060208284031215612e9f57600080fd5b815161127781612791565b60008251612ebc81846020870161286f565b919091019291505056fea2646970667358221220880fd663ca88c68ae632b8b50bfaf6a7dc70b6f005e348a7c356bf56f739dfd664736f6c63430008090033a2646970667358221220c4b2574f83eb06608ba1dd92dc8de9af0615330d104acb14b28710d7b79f196e64736f6c63430008090033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5215:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:110",
                "type": ""
              }
            ],
            "src": "14:180:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "320:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "330:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "342:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "353:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "338:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "338:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "330:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "372:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "387:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "403:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "408:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "399:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "399:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "412:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "395:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "395:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "383:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "383:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "365:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "365:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IVaderPool_$20097__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "289:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "300:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "311:4:110",
                "type": ""
              }
            ],
            "src": "199:223:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "476:124:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "486:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "508:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "495:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:20:110"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "486:5:110"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "578:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "587:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "590:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "580:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "580:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "580:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "537:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "548:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "563:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "568:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "559:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "559:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "572:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "555:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "555:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "544:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "544:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "534:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "534:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "527:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "524:70:110"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "455:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "466:5:110",
                "type": ""
              }
            ],
            "src": "427:173:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "692:173:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "738:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "747:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "750:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "740:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "740:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "740:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "713:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "722:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "709:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "709:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "734:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "705:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "705:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "702:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "763:39:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "792:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "773:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "773:29:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "763:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "811:48:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "844:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "855:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "840:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "840:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "821:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "821:38:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "811:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "650:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "661:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "673:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "681:6:110",
                "type": ""
              }
            ],
            "src": "605:260:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "965:92:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "975:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "987:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "998:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "983:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "983:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "975:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1017:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1042:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1035:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1035:14:110"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1028:6:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1028:22:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1010:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1010:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1010:41:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "934:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "945:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "956:4:110",
                "type": ""
              }
            ],
            "src": "870:187:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1163:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1173:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1185:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1196:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1181:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1181:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1173:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1215:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1230:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1246:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1251:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1242:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1242:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1255:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1238:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1238:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1226:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1226:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1208:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1208:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1132:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1143:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1154:4:110",
                "type": ""
              }
            ],
            "src": "1062:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1340:116:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1386:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1395:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1398:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1388:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1388:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1388:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1361:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1370:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1357:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1357:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1382:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1353:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1353:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1350:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1411:39:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1440:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1421:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1421:29:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1411:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1306:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1317:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1329:6:110",
                "type": ""
              }
            ],
            "src": "1270:186:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1635:239:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1652:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1663:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1645:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1645:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1686:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1697:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1682:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1682:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1702:2:110",
                        "type": "",
                        "value": "49"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1675:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1675:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1675:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1725:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1736:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1721:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1721:18:110"
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a696e697469616c697a653a20496e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1741:34:110",
                        "type": "",
                        "value": "VaderPoolFactory::initialize: In"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1714:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1714:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1714:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1796:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1807:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1792:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1792:18:110"
                      },
                      {
                        "hexValue": "636f727265637420417267756d656e7473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1812:19:110",
                        "type": "",
                        "value": "correct Arguments"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1785:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1785:47:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1785:47:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1841:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1853:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1864:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1849:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1849:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1841:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3c7721282d73c46801fa73b8084bb91d267e0b392550a80ac86d563ce38e0c00__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1612:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1626:4:110",
                "type": ""
              }
            ],
            "src": "1461:413:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2053:236:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2070:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2081:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2063:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2063:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2063:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2104:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2115:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2100:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2100:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2120:2:110",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2093:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2093:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2093:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2143:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2154:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2139:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2139:18:110"
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a204964",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2159:34:110",
                        "type": "",
                        "value": "VaderPoolFactory::createPool: Id"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2132:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2132:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2132:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2214:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2225:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2210:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2210:18:110"
                      },
                      {
                        "hexValue": "656e746963616c20546f6b656e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2230:16:110",
                        "type": "",
                        "value": "entical Tokens"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2203:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2203:44:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2203:44:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2256:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2268:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2279:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2264:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2264:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2256:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_be7adb95eb5b4829faa402eb0ec7357ca66732296a71bee05d39785895ffd07b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2030:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2044:4:110",
                "type": ""
              }
            ],
            "src": "1879:410:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2468:236:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2485:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2496:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2478:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2478:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2519:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2530:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2515:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2515:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2535:2:110",
                        "type": "",
                        "value": "46"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2508:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2508:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2508:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2558:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2569:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2554:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2554:18:110"
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20496e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2574:34:110",
                        "type": "",
                        "value": "VaderPoolFactory::createPool: In"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2547:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2547:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2547:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2629:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2640:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2625:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2625:18:110"
                      },
                      {
                        "hexValue": "6578697374656e7420546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2645:16:110",
                        "type": "",
                        "value": "existent Token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2618:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2618:44:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2618:44:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2671:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2683:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2694:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2679:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2679:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2671:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8b06995e83003867daffeec8e246a54d906abbbae6ed1a36e1c23d01188a3063__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2445:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2459:4:110",
                "type": ""
              }
            ],
            "src": "2294:410:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2883:231:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2900:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2911:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2893:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2893:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2893:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2934:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2945:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2930:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2930:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2950:2:110",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2923:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2923:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2973:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2984:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2969:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2969:18:110"
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a205061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2989:34:110",
                        "type": "",
                        "value": "VaderPoolFactory::createPool: Pa"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2962:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2962:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2962:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3044:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3055:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3040:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3040:18:110"
                      },
                      {
                        "hexValue": "697220457869737473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3060:11:110",
                        "type": "",
                        "value": "ir Exists"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3033:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3033:39:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3033:39:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3081:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3093:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3104:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3089:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3089:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3081:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3ec98d34cd826aefcf3b189eb2924c25ea2cccd895f20ea39b790a84305114db__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2860:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2874:4:110",
                "type": ""
              }
            ],
            "src": "2709:405:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3318:234:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3328:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3340:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3351:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3336:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3336:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3328:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3370:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "3395:6:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3388:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3388:14:110"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3381:6:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3381:22:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3363:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3363:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3363:41:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3413:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3431:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3436:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3427:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3427:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3440:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3423:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3423:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3417:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3462:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3473:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3458:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3458:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3482:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3490:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3478:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3478:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3451:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3451:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3451:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3514:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3525:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3510:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3510:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3534:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3542:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3530:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3530:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3503:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3503:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3503:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_contract$_IERC20Extended_$20391_t_contract$_IERC20Extended_$20391__to_t_bool_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3271:9:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3282:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3290:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3298:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3309:4:110",
                "type": ""
              }
            ],
            "src": "3119:433:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3762:271:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3772:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3784:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3795:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3780:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3780:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3772:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3808:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3826:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3831:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3822:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3822:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3835:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3818:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3818:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3812:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3853:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3868:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3876:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3864:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3864:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3846:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3846:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3846:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3900:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3911:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3896:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3896:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3920:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3928:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3916:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3916:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3889:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3889:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3889:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3952:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3963:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3948:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3948:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "3972:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3980:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3968:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3968:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3941:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3941:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3941:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4004:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4015:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4000:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4000:18:110"
                      },
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "4020:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3993:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3993:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3993:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_contract$_IVaderPool_$20097_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3707:9:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "3718:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3726:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3734:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3742:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3753:4:110",
                "type": ""
              }
            ],
            "src": "3557:476:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4212:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4229:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4240:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4222:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4222:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4222:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4263:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4274:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4259:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4259:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4279:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4252:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4252:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4252:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4302:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4313:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4298:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4298:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4318:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4291:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4291:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4291:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4373:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4384:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4369:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4369:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4389:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4362:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4362:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4362:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4407:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4419:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4430:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4415:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4415:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4407:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4189:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4203:4:110",
                "type": ""
              }
            ],
            "src": "4038:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4619:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4636:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4647:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4629:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4629:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4629:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4670:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4681:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4666:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4666:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4686:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4659:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4659:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4659:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4709:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4720:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4705:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4705:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4725:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4698:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4698:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4698:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4769:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4781:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4792:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4777:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4777:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4769:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4596:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4610:4:110",
                "type": ""
              }
            ],
            "src": "4445:356:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4980:233:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4997:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5008:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4990:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4990:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4990:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5031:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5042:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5027:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5027:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5047:2:110",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5020:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5020:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5020:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5070:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5081:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5066:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5066:18:110"
                      },
                      {
                        "hexValue": "42617365506f6f6c3a3a5f6f6e6c7944414f3a20496e73756666696369656e74",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5086:34:110",
                        "type": "",
                        "value": "BasePool::_onlyDAO: Insufficient"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5059:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5059:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5059:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5141:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5152:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5137:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5137:18:110"
                      },
                      {
                        "hexValue": "2050726976696c65676573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5157:13:110",
                        "type": "",
                        "value": " Privileges"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5130:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5130:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5130:41:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5180:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5192:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5203:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5188:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5188:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5180:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a17ffa72cb3d61af6e0ddcaf23e9bf954e880f245d85928b3dd6afed0a4318d4__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4957:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4971:4:110",
                "type": ""
              }
            ],
            "src": "4806:407:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_IVaderPool_$20097__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_3c7721282d73c46801fa73b8084bb91d267e0b392550a80ac86d563ce38e0c00__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"VaderPoolFactory::initialize: In\")\n        mstore(add(headStart, 96), \"correct Arguments\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_be7adb95eb5b4829faa402eb0ec7357ca66732296a71bee05d39785895ffd07b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"VaderPoolFactory::createPool: Id\")\n        mstore(add(headStart, 96), \"entical Tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8b06995e83003867daffeec8e246a54d906abbbae6ed1a36e1c23d01188a3063__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"VaderPoolFactory::createPool: In\")\n        mstore(add(headStart, 96), \"existent Token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3ec98d34cd826aefcf3b189eb2924c25ea2cccd895f20ea39b790a84305114db__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"VaderPoolFactory::createPool: Pa\")\n        mstore(add(headStart, 96), \"ir Exists\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bool_t_contract$_IERC20Extended_$20391_t_contract$_IERC20Extended_$20391__to_t_bool_t_address_t_address__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        let _1 := sub(shl(160, 1), 1)\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_contract$_IVaderPool_$20097_t_uint256__to_t_address_t_address_t_address_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, _1))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a17ffa72cb3d61af6e0ddcaf23e9bf954e880f245d85928b3dd6afed0a4318d4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"BasePool::_onlyDAO: Insufficient\")\n        mstore(add(headStart, 96), \" Privileges\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "687:4021:43:-:0;;;;;;;;;;;;-1:-1:-1;936:32:0;734:10:18;936:18:0;:32::i;:::-;687:4021:43;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;687:4021:43:-;;;;;;;",
  "deployedSourceMap": "687:4021:43:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1170:28;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;383:32:110;;;365:51;;353:2;338:18;1170:28:43;;;;;;;;3347:320;;;;;;:::i;:::-;;:::i;:::-;;905:23;;;;;-1:-1:-1;;;905:23:43;;;;;;;;;1035:14:110;;1028:22;1010:41;;998:2;983:18;905:23:43;870:187:110;1059:74:43;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1059:74:43;;;1824:101:0;;;:::i;972:35:43:-;;;;;-1:-1:-1;;;;;972:35:43;;;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;3842:126:43;;;;;;:::i;:::-;;:::i;1828:1160::-;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;1170:28:43:-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1170:28:43;;-1:-1:-1;1170:28:43;:::o;3347:320::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;3455:29:43;::::1;::::0;;::::1;::::0;:54:::1;;-1:-1:-1::0;;;;;;3488:21:43;::::1;::::0;::::1;3455:54;3433:153;;;::::0;-1:-1:-1;;;3433:153:43;;1663:2:110;3433:153:43::1;::::0;::::1;1645:21:110::0;1702:2;1682:18;;;1675:30;1741:34;1721:18;;;1714:62;-1:-1:-1;;;1792:18:110;;;1785:47;1849:19;;3433:153:43::1;;;;;;;;;3599:11;:26:::0;;-1:-1:-1;;;;;;3599:26:43::1;-1:-1:-1::0;;;;;3599:26:43;::::1;;::::0;;3636:23:::1;3654:4:::0;3636:17:::1;:23::i;:::-;3347:320:::0;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;3842:126:43:-;4675:10;:8;:10::i;:::-;-1:-1:-1;;;;;3923:15:43;;::::1;;::::0;;;:7:::1;:15;::::0;;;;;;;:23;;::::1;::::0;;;;;;;;;:37;;-1:-1:-1;;;3923:37:43;;;;:23;::::1;::::0;:35:::1;::::0;:37:::1;::::0;;::::1;::::0;:15;;:37;;;;;;:15;:23;:37;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3842:126:::0;;:::o;1828:1160::-;2012:11;;1934:15;;;;;;-1:-1:-1;;;;;2002:21:43;;;2012:11;;2002:21;:168;;2081:11;;-1:-1:-1;;;;;2071:21:43;;;2081:11;;2071:21;:99;;238:1:98;;2002:168:43;;2071:99;2109:6;2117;2002:168;;;2040:6;2048;2002:168;1967:203;;;;2215:6;-1:-1:-1;;;;;2205:16:43;:6;-1:-1:-1;;;;;2205:16:43;;;2183:112;;;;-1:-1:-1;;;2183:112:43;;2081:2:110;2183:112:43;;;2063:21:110;2120:2;2100:18;;;2093:30;2159:34;2139:18;;;2132:62;-1:-1:-1;;;2210:18:110;;;2203:44;2264:19;;2183:112:43;1879:410:110;2183:112:43;-1:-1:-1;;;;;2330:23:43;;2308:119;;;;-1:-1:-1;;;2308:119:43;;2496:2:110;2308:119:43;;;2478:21:110;2535:2;2515:18;;;2508:30;2574:34;2554:18;;;2547:62;-1:-1:-1;;;2625:18:110;;;2618:44;2679:19;;2308:119:43;2294:410:110;2308:119:43;-1:-1:-1;;;;;2462:15:43;;;238:1:98;2462:15:43;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:52;2440:143;;;;-1:-1:-1;;;2440:143:43;;2911:2:110;2440:143:43;;;2893:21:110;2950:2;2930:18;;;2923:30;2989:34;2969:18;;;2962:62;-1:-1:-1;;;3040:18:110;;;3033:39;3089:19;;2440:143:43;2709:405:110;2440:143:43;2661:11;;;;;;;;;;;2702:6;2739;2633:124;;;;;:::i;:::-;3388:14:110;;3381:22;3363:41;;-1:-1:-1;;;;;3478:15:110;;;3473:2;3458:18;;3451:43;3530:15;3525:2;3510:18;;3503:43;3351:2;3336:18;2633:124:43;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2768:15:43;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;2768:30:43;;;;;;;;2809:15;;;;;;:23;;;;;;;;:30;;;;;;;;2895:8;:19;;-1:-1:-1;2895:19:43;;;;;;;;;;;;;;;;;;;;;;2964:15;;2930:50;;3846:34:110;;;3896:18;;;3889:43;;;;3948:18;;;3941:43;4015:2;4000:18;;3993:34;;;;2768:30:43;;-1:-1:-1;2930:50:43;;3795:3:110;3780:19;2930:50:43;;;;;;;1956:1032;;1828:1160;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;4240:2:110;2154:73:0::1;::::0;::::1;4222:21:110::0;4279:2;4259:18;;;4252:30;4318:34;4298:18;;;4291:62;-1:-1:-1;;;4369:18:110;;;4362:36;4415:19;;2154:73:0::1;4038:402:110::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;4647:2:110;1414:68:0;;;4629:21:110;;;4666:18;;;4659:30;4725:34;4705:18;;;4698:62;4777:18;;1414:68:0;4445:356:110;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;4309:200:43:-;4375:11;;-1:-1:-1;;;;;4375:11:43;:28;;;;:55;;-1:-1:-1;1247:7:0;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;4407:23:43;4375:55;4353:148;;;;-1:-1:-1;;;4353:148:43;;5008:2:110;4353:148:43;;;4990:21:110;5047:2;5027:18;;;5020:30;5086:34;5066:18;;;5059:62;-1:-1:-1;;;5137:18:110;;;5130:41;5188:19;;4353:148:43;4806:407:110;-1:-1:-1;;;;;;;;:::o;14:180:110:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:110;;14:180;-1:-1:-1;14:180:110:o;427:173::-;495:20;;-1:-1:-1;;;;;544:31:110;;534:42;;524:70;;590:1;587;580:12;524:70;427:173;;;:::o;605:260::-;673:6;681;734:2;722:9;713:7;709:23;705:32;702:52;;;750:1;747;740:12;702:52;773:29;792:9;773:29;:::i;:::-;763:39;;821:38;855:2;844:9;840:18;821:38;:::i;:::-;811:48;;605:260;;;;;:::o;1270:186::-;1329:6;1382:2;1370:9;1361:7;1357:23;1353:32;1350:52;;;1398:1;1395;1388:12;1350:52;1421:29;1440:9;1421:29;:::i;:::-;1411:39;1270:186;-1:-1:-1;;;1270:186:110:o",
  "source": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity =0.8.9;\r\n\r\nimport \"./VaderPool.sol\";\r\n\r\nimport \"../../shared/ProtocolConstants.sol\";\r\n\r\nimport \"../../interfaces/shared/IERC20Extended.sol\";\r\nimport \"../../interfaces/dex/pool/IVaderPoolFactory.sol\";\r\n\r\n/*\r\n * @dev Implementation of {VaderPoolFactory} contract.\r\n *\r\n * The VaderPoolFactory contract inherits from {Ownable} and {ProtocolConstants} contracts.\r\n *\r\n * Keeps track of all the created Vader pools through {getPool} mapping and\r\n * {allPools} array. Also stores the address of asset used as native asset\r\n * across all of the Vader pools created through the factory.\r\n *\r\n * Allows creation of new Vader pools.\r\n **/\r\ncontract VaderPoolFactory is IVaderPoolFactory, ProtocolConstants, Ownable {\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    // Denotes whether the queue system is active on new pairs, disabled by default\r\n    bool public queueActive;\r\n\r\n    // Native Asset of the system\r\n    address public override nativeAsset;\r\n\r\n    // Token A -> Token B -> Pool mapping\r\n    mapping(address => mapping(address => IVaderPool)) public override getPool;\r\n\r\n    // A list of all pools\r\n    IVaderPool[] public allPools;\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    /*\r\n     * @dev Allows creation of a Vader pool of native and foreign assets.\r\n     *\r\n     * Populates the {getPool} mapping with the newly created Vader pool and\r\n     * pushes this pool to {allPools} array.\r\n     *\r\n     * Requirements:\r\n     * - Native and foreign assets cannot be the same.\r\n     * - Foreign asset cannot be the zero address.\r\n     * - The pool against the specified foreign asset does not already exist.\r\n     **/\r\n    // NOTE: Between deployment & initialization may be corrupted but chance small\r\n    function createPool(address tokenA, address tokenB)\r\n        external\r\n        override\r\n        returns (IVaderPool pool)\r\n    {\r\n        (address token0, address token1) = tokenA == nativeAsset\r\n            ? (tokenA, tokenB)\r\n            : tokenB == nativeAsset\r\n            ? (tokenB, tokenA)\r\n            : (_ZERO_ADDRESS, _ZERO_ADDRESS);\r\n\r\n        require(\r\n            token0 != token1,\r\n            \"VaderPoolFactory::createPool: Identical Tokens\"\r\n        );\r\n\r\n        require(\r\n            token1 != _ZERO_ADDRESS,\r\n            \"VaderPoolFactory::createPool: Inexistent Token\"\r\n        );\r\n\r\n        require(\r\n            getPool[token0][token1] == IVaderPool(_ZERO_ADDRESS),\r\n            \"VaderPoolFactory::createPool: Pair Exists\"\r\n        ); // single check is sufficient\r\n\r\n        pool = new VaderPool(\r\n            queueActive,\r\n            IERC20Extended(token0),\r\n            IERC20Extended(token1)\r\n        );\r\n        getPool[token0][token1] = pool;\r\n        getPool[token1][token0] = pool; // populate mapping in the reverse direction\r\n        allPools.push(pool);\r\n        emit PoolCreated(token0, token1, pool, allPools.length);\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    /*\r\n     * @dev Allows initializing of the factory contract by owner by setting the\r\n     * address of native asset for all the Vader pool and also transferring the\r\n     * contract's ownership to {_dao}.\r\n     *\r\n     * Requirements:\r\n     * - Only onwer can call this function.\r\n     **/\r\n    function initialize(address _nativeAsset, address _dao) external onlyOwner {\r\n        require(\r\n            _nativeAsset != _ZERO_ADDRESS && _dao != _ZERO_ADDRESS,\r\n            \"VaderPoolFactory::initialize: Incorrect Arguments\"\r\n        );\r\n\r\n        nativeAsset = _nativeAsset;\r\n        transferOwnership(_dao);\r\n    }\r\n\r\n    /*\r\n     * @dev Allows toggling of queue system of a pool.\r\n     *\r\n     * Requirements:\r\n     * - This function can only be called when DAO is active.\r\n     **/\r\n    function toggleQueue(address token0, address token1) external onlyDAO {\r\n        getPool[token0][token1].toggleQueue();\r\n    }\r\n\r\n    /* ========== INTERNAL FUNCTIONS ========== */\r\n\r\n    /* ========== PRIVATE FUNCTIONS ========== */\r\n\r\n    /**\r\n     * @dev Ensures only the DAO is able to invoke a particular function by validating that\r\n     * the owner is the msg.sender, equivalent to the DAO address, and that the native asset\r\n     * has been set\r\n     */\r\n    function _onlyDAO() private view {\r\n        require(\r\n            nativeAsset != _ZERO_ADDRESS && owner() == _msgSender(),\r\n            \"BasePool::_onlyDAO: Insufficient Privileges\"\r\n        );\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    /**\r\n     * @dev Throws if invoked by anyone else other than the DAO\r\n     */\r\n    modifier onlyDAO() {\r\n        _onlyDAO();\r\n        _;\r\n    }\r\n}\r\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/dex/pool/VaderPoolFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/dex/pool/VaderPoolFactory.sol",
    "exportedSymbols": {
      "Address": [
        3730
      ],
      "BasePool": [
        12320
      ],
      "Context": [
        3760
      ],
      "ERC165": [
        5511
      ],
      "ERC721": [
        3239
      ],
      "GasThrottle": [
        13613
      ],
      "IAggregator": [
        20261
      ],
      "IBasePool": [
        20046
      ],
      "IERC165": [
        5523
      ],
      "IERC20": [
        969
      ],
      "IERC20Extended": [
        20391
      ],
      "IERC20Permit": [
        1936
      ],
      "IERC721": [
        3355
      ],
      "IERC721Metadata": [
        3400
      ],
      "IERC721Receiver": [
        3373
      ],
      "IVaderPool": [
        20097
      ],
      "IVaderPoolFactory": [
        20137
      ],
      "Math": [
        6389
      ],
      "Ownable": [
        112
      ],
      "ProtocolConstants": [
        21440
      ],
      "ReentrancyGuard": [
        304
      ],
      "SafeERC20": [
        2312
      ],
      "SignedMath": [
        8347
      ],
      "Strings": [
        4389
      ],
      "UQ112x112": [
        16845
      ],
      "VaderMath": [
        11519
      ],
      "VaderPool": [
        12487
      ],
      "VaderPoolFactory": [
        12695
      ]
    },
    "id": 12696,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12489,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:43"
      },
      {
        "absolutePath": "project:/contracts/dex/pool/VaderPool.sol",
        "file": "./VaderPool.sol",
        "id": 12490,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12696,
        "sourceUnit": 12488,
        "src": "68:25:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/shared/ProtocolConstants.sol",
        "file": "../../shared/ProtocolConstants.sol",
        "id": 12491,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12696,
        "sourceUnit": 21441,
        "src": "97:44:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/shared/IERC20Extended.sol",
        "file": "../../interfaces/shared/IERC20Extended.sol",
        "id": 12492,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12696,
        "sourceUnit": 20392,
        "src": "145:52:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/dex/pool/IVaderPoolFactory.sol",
        "file": "../../interfaces/dex/pool/IVaderPoolFactory.sol",
        "id": 12493,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 12696,
        "sourceUnit": 20138,
        "src": "199:57:43",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 12494,
              "name": "IVaderPoolFactory",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20137,
              "src": "716:17:43"
            },
            "id": 12495,
            "nodeType": "InheritanceSpecifier",
            "src": "716:17:43"
          },
          {
            "baseName": {
              "id": 12496,
              "name": "ProtocolConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21440,
              "src": "735:17:43"
            },
            "id": 12497,
            "nodeType": "InheritanceSpecifier",
            "src": "735:17:43"
          },
          {
            "baseName": {
              "id": 12498,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "754:7:43"
            },
            "id": 12499,
            "nodeType": "InheritanceSpecifier",
            "src": "754:7:43"
          }
        ],
        "canonicalName": "VaderPoolFactory",
        "contractDependencies": [
          12487
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 12695,
        "linearizedBaseContracts": [
          12695,
          112,
          3760,
          21440,
          20137
        ],
        "name": "VaderPoolFactory",
        "nameLocation": "696:16:43",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "52f69f20",
            "id": 12501,
            "mutability": "mutable",
            "name": "queueActive",
            "nameLocation": "917:11:43",
            "nodeType": "VariableDeclaration",
            "scope": 12695,
            "src": "905:23:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12500,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "905:4:43",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20125
            ],
            "constant": false,
            "functionSelector": "74d32ad4",
            "id": 12504,
            "mutability": "mutable",
            "name": "nativeAsset",
            "nameLocation": "996:11:43",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 12503,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "987:8:43"
            },
            "scope": 12695,
            "src": "972:35:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 12502,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "972:7:43",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20120
            ],
            "constant": false,
            "functionSelector": "531aa03e",
            "id": 12512,
            "mutability": "mutable",
            "name": "getPool",
            "nameLocation": "1126:7:43",
            "nodeType": "VariableDeclaration",
            "overrides": {
              "id": 12511,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1117:8:43"
            },
            "scope": 12695,
            "src": "1059:74:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$_$",
              "typeString": "mapping(address => mapping(address => contract IVaderPool))"
            },
            "typeName": {
              "id": 12510,
              "keyType": {
                "id": 12505,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1067:7:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1059:50:43",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$_$",
                "typeString": "mapping(address => mapping(address => contract IVaderPool))"
              },
              "valueType": {
                "id": 12509,
                "keyType": {
                  "id": 12506,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1086:7:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1078:30:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$",
                  "typeString": "mapping(address => contract IVaderPool)"
                },
                "valueType": {
                  "id": 12508,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 12507,
                    "name": "IVaderPool",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 20097,
                    "src": "1097:10:43"
                  },
                  "referencedDeclaration": 20097,
                  "src": "1097:10:43",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVaderPool_$20097",
                    "typeString": "contract IVaderPool"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "41d1de97",
            "id": 12516,
            "mutability": "mutable",
            "name": "allPools",
            "nameLocation": "1190:8:43",
            "nodeType": "VariableDeclaration",
            "scope": 12695,
            "src": "1170:28:43",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_contract$_IVaderPool_$20097_$dyn_storage",
              "typeString": "contract IVaderPool[]"
            },
            "typeName": {
              "baseType": {
                "id": 12514,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 12513,
                  "name": "IVaderPool",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 20097,
                  "src": "1170:10:43"
                },
                "referencedDeclaration": 20097,
                "src": "1170:10:43",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IVaderPool_$20097",
                  "typeString": "contract IVaderPool"
                }
              },
              "id": 12515,
              "nodeType": "ArrayTypeName",
              "src": "1170:12:43",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_contract$_IVaderPool_$20097_$dyn_storage_ptr",
                "typeString": "contract IVaderPool[]"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20110
            ],
            "body": {
              "id": 12620,
              "nodeType": "Block",
              "src": "1956:1032:43",
              "statements": [
                {
                  "assignments": [
                    12528,
                    12530
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 12528,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "1976:6:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 12620,
                      "src": "1968:14:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12527,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1968:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 12530,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "1992:6:43",
                      "nodeType": "VariableDeclaration",
                      "scope": 12620,
                      "src": "1984:14:43",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 12529,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1984:7:43",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 12548,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 12533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 12531,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12518,
                        "src": "2002:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 12532,
                        "name": "nativeAsset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12504,
                        "src": "2012:11:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "2002:21:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12539,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12537,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12520,
                          "src": "2071:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 12538,
                          "name": "nativeAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12504,
                          "src": "2081:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2071:21:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 12543,
                            "name": "_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21375,
                            "src": "2141:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 12544,
                            "name": "_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21375,
                            "src": "2156:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 12545,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2140:30:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "id": 12546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "2071:99:43",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 12540,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12520,
                            "src": "2109:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 12541,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12518,
                            "src": "2117:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "id": 12542,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2108:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                          "typeString": "tuple(address,address)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 12547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2002:168:43",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 12534,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12518,
                          "src": "2040:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 12535,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12520,
                          "src": "2048:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 12536,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "2039:16:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1967:203:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12552,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12550,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12528,
                          "src": "2205:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 12551,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12530,
                          "src": "2215:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2205:16:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a204964656e746963616c20546f6b656e73",
                        "id": 12553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2236:48:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be7adb95eb5b4829faa402eb0ec7357ca66732296a71bee05d39785895ffd07b",
                          "typeString": "literal_string \"VaderPoolFactory::createPool: Identical Tokens\""
                        },
                        "value": "VaderPoolFactory::createPool: Identical Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be7adb95eb5b4829faa402eb0ec7357ca66732296a71bee05d39785895ffd07b",
                          "typeString": "literal_string \"VaderPoolFactory::createPool: Identical Tokens\""
                        }
                      ],
                      "id": 12549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2183:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2183:112:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12555,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:112:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 12559,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 12557,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12530,
                          "src": "2330:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 12558,
                          "name": "_ZERO_ADDRESS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21375,
                          "src": "2340:13:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2330:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a20496e6578697374656e7420546f6b656e",
                        "id": 12560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2368:48:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8b06995e83003867daffeec8e246a54d906abbbae6ed1a36e1c23d01188a3063",
                          "typeString": "literal_string \"VaderPoolFactory::createPool: Inexistent Token\""
                        },
                        "value": "VaderPoolFactory::createPool: Inexistent Token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8b06995e83003867daffeec8e246a54d906abbbae6ed1a36e1c23d01188a3063",
                          "typeString": "literal_string \"VaderPoolFactory::createPool: Inexistent Token\""
                        }
                      ],
                      "id": 12556,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2308:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12561,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2308:119:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12562,
                  "nodeType": "ExpressionStatement",
                  "src": "2308:119:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IVaderPool_$20097",
                          "typeString": "contract IVaderPool"
                        },
                        "id": 12572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 12564,
                              "name": "getPool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12512,
                              "src": "2462:7:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$_$",
                                "typeString": "mapping(address => mapping(address => contract IVaderPool))"
                              }
                            },
                            "id": 12566,
                            "indexExpression": {
                              "id": 12565,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12528,
                              "src": "2470:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2462:15:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$",
                              "typeString": "mapping(address => contract IVaderPool)"
                            }
                          },
                          "id": 12568,
                          "indexExpression": {
                            "id": 12567,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12530,
                            "src": "2478:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2462:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderPool_$20097",
                            "typeString": "contract IVaderPool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 12570,
                              "name": "_ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21375,
                              "src": "2500:13:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12569,
                            "name": "IVaderPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20097,
                            "src": "2489:10:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVaderPool_$20097_$",
                              "typeString": "type(contract IVaderPool)"
                            }
                          },
                          "id": 12571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2489:25:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderPool_$20097",
                            "typeString": "contract IVaderPool"
                          }
                        },
                        "src": "2462:52:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a637265617465506f6f6c3a205061697220457869737473",
                        "id": 12573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2529:43:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3ec98d34cd826aefcf3b189eb2924c25ea2cccd895f20ea39b790a84305114db",
                          "typeString": "literal_string \"VaderPoolFactory::createPool: Pair Exists\""
                        },
                        "value": "VaderPoolFactory::createPool: Pair Exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3ec98d34cd826aefcf3b189eb2924c25ea2cccd895f20ea39b790a84305114db",
                          "typeString": "literal_string \"VaderPoolFactory::createPool: Pair Exists\""
                        }
                      ],
                      "id": 12563,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2440:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2440:143:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12575,
                  "nodeType": "ExpressionStatement",
                  "src": "2440:143:43"
                },
                {
                  "expression": {
                    "id": 12588,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12576,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12525,
                      "src": "2626:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPool_$20097",
                        "typeString": "contract IVaderPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 12580,
                          "name": "queueActive",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12501,
                          "src": "2661:11:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 12582,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12528,
                              "src": "2702:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12581,
                            "name": "IERC20Extended",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20391,
                            "src": "2687:14:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$20391_$",
                              "typeString": "type(contract IERC20Extended)"
                            }
                          },
                          "id": 12583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2687:22:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                            "typeString": "contract IERC20Extended"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 12585,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12530,
                              "src": "2739:6:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 12584,
                            "name": "IERC20Extended",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20391,
                            "src": "2724:14:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IERC20Extended_$20391_$",
                              "typeString": "type(contract IERC20Extended)"
                            }
                          },
                          "id": 12586,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2724:22:43",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                            "typeString": "contract IERC20Extended"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                            "typeString": "contract IERC20Extended"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20Extended_$20391",
                            "typeString": "contract IERC20Extended"
                          }
                        ],
                        "id": 12579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "2633:13:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_bool_$_t_contract$_IERC20Extended_$20391_$_t_contract$_IERC20Extended_$20391_$returns$_t_contract$_VaderPool_$12487_$",
                          "typeString": "function (bool,contract IERC20Extended,contract IERC20Extended) returns (contract VaderPool)"
                        },
                        "typeName": {
                          "id": 12578,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 12577,
                            "name": "VaderPool",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 12487,
                            "src": "2637:9:43"
                          },
                          "referencedDeclaration": 12487,
                          "src": "2637:9:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_VaderPool_$12487",
                            "typeString": "contract VaderPool"
                          }
                        }
                      },
                      "id": 12587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2633:124:43",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VaderPool_$12487",
                        "typeString": "contract VaderPool"
                      }
                    },
                    "src": "2626:131:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderPool_$20097",
                      "typeString": "contract IVaderPool"
                    }
                  },
                  "id": 12589,
                  "nodeType": "ExpressionStatement",
                  "src": "2626:131:43"
                },
                {
                  "expression": {
                    "id": 12596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 12590,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12512,
                          "src": "2768:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$_$",
                            "typeString": "mapping(address => mapping(address => contract IVaderPool))"
                          }
                        },
                        "id": 12593,
                        "indexExpression": {
                          "id": 12591,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12528,
                          "src": "2776:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2768:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$",
                          "typeString": "mapping(address => contract IVaderPool)"
                        }
                      },
                      "id": 12594,
                      "indexExpression": {
                        "id": 12592,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12530,
                        "src": "2784:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2768:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPool_$20097",
                        "typeString": "contract IVaderPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12595,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12525,
                      "src": "2794:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPool_$20097",
                        "typeString": "contract IVaderPool"
                      }
                    },
                    "src": "2768:30:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderPool_$20097",
                      "typeString": "contract IVaderPool"
                    }
                  },
                  "id": 12597,
                  "nodeType": "ExpressionStatement",
                  "src": "2768:30:43"
                },
                {
                  "expression": {
                    "id": 12604,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 12598,
                          "name": "getPool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12512,
                          "src": "2809:7:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$_$",
                            "typeString": "mapping(address => mapping(address => contract IVaderPool))"
                          }
                        },
                        "id": 12601,
                        "indexExpression": {
                          "id": 12599,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12530,
                          "src": "2817:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2809:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$",
                          "typeString": "mapping(address => contract IVaderPool)"
                        }
                      },
                      "id": 12602,
                      "indexExpression": {
                        "id": 12600,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12528,
                        "src": "2825:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2809:23:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPool_$20097",
                        "typeString": "contract IVaderPool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12603,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12525,
                      "src": "2835:4:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPool_$20097",
                        "typeString": "contract IVaderPool"
                      }
                    },
                    "src": "2809:30:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderPool_$20097",
                      "typeString": "contract IVaderPool"
                    }
                  },
                  "id": 12605,
                  "nodeType": "ExpressionStatement",
                  "src": "2809:30:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12609,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12525,
                        "src": "2909:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaderPool_$20097",
                          "typeString": "contract IVaderPool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IVaderPool_$20097",
                          "typeString": "contract IVaderPool"
                        }
                      ],
                      "expression": {
                        "id": 12606,
                        "name": "allPools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12516,
                        "src": "2895:8:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IVaderPool_$20097_$dyn_storage",
                          "typeString": "contract IVaderPool[] storage ref"
                        }
                      },
                      "id": 12608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2895:13:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IVaderPool_$20097_$dyn_storage_ptr_$_t_contract$_IVaderPool_$20097_$returns$__$bound_to$_t_array$_t_contract$_IVaderPool_$20097_$dyn_storage_ptr_$",
                        "typeString": "function (contract IVaderPool[] storage pointer,contract IVaderPool)"
                      }
                    },
                    "id": 12610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2895:19:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12611,
                  "nodeType": "ExpressionStatement",
                  "src": "2895:19:43"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12613,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12528,
                        "src": "2942:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12614,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12530,
                        "src": "2950:6:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 12615,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12525,
                        "src": "2958:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaderPool_$20097",
                          "typeString": "contract IVaderPool"
                        }
                      },
                      {
                        "expression": {
                          "id": 12616,
                          "name": "allPools",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12516,
                          "src": "2964:8:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IVaderPool_$20097_$dyn_storage",
                            "typeString": "contract IVaderPool[] storage ref"
                          }
                        },
                        "id": 12617,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2964:15:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IVaderPool_$20097",
                          "typeString": "contract IVaderPool"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 12612,
                      "name": "PoolCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20136,
                      "src": "2930:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_contract$_IVaderPool_$20097_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,contract IVaderPool,uint256)"
                      }
                    },
                    "id": 12618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2930:50:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12619,
                  "nodeType": "EmitStatement",
                  "src": "2925:55:43"
                }
              ]
            },
            "functionSelector": "e3433615",
            "id": 12621,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPool",
            "nameLocation": "1837:10:43",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 12522,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1907:8:43"
            },
            "parameters": {
              "id": 12521,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12518,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "1856:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 12621,
                  "src": "1848:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1848:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12520,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "1872:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 12621,
                  "src": "1864:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1864:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1847:32:43"
            },
            "returnParameters": {
              "id": 12526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12525,
                  "mutability": "mutable",
                  "name": "pool",
                  "nameLocation": "1945:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 12621,
                  "src": "1934:15:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVaderPool_$20097",
                    "typeString": "contract IVaderPool"
                  },
                  "typeName": {
                    "id": 12524,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 12523,
                      "name": "IVaderPool",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20097,
                      "src": "1934:10:43"
                    },
                    "referencedDeclaration": 20097,
                    "src": "1934:10:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderPool_$20097",
                      "typeString": "contract IVaderPool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1933:17:43"
            },
            "scope": 12695,
            "src": "1828:1160:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12649,
              "nodeType": "Block",
              "src": "3422:245:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12633,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12631,
                            "name": "_nativeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12623,
                            "src": "3455:12:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 12632,
                            "name": "_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21375,
                            "src": "3471:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3455:29:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12634,
                            "name": "_dao",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12625,
                            "src": "3488:4:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 12635,
                            "name": "_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21375,
                            "src": "3496:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3488:21:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3455:54:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572506f6f6c466163746f72793a3a696e697469616c697a653a20496e636f727265637420417267756d656e7473",
                        "id": 12638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3524:51:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3c7721282d73c46801fa73b8084bb91d267e0b392550a80ac86d563ce38e0c00",
                          "typeString": "literal_string \"VaderPoolFactory::initialize: Incorrect Arguments\""
                        },
                        "value": "VaderPoolFactory::initialize: Incorrect Arguments"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3c7721282d73c46801fa73b8084bb91d267e0b392550a80ac86d563ce38e0c00",
                          "typeString": "literal_string \"VaderPoolFactory::initialize: Incorrect Arguments\""
                        }
                      ],
                      "id": 12630,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3433:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3433:153:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12640,
                  "nodeType": "ExpressionStatement",
                  "src": "3433:153:43"
                },
                {
                  "expression": {
                    "id": 12643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12641,
                      "name": "nativeAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12504,
                      "src": "3599:11:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 12642,
                      "name": "_nativeAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12623,
                      "src": "3613:12:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3599:26:43",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 12644,
                  "nodeType": "ExpressionStatement",
                  "src": "3599:26:43"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12646,
                        "name": "_dao",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12625,
                        "src": "3654:4:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12645,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 91,
                      "src": "3636:17:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3636:23:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12648,
                  "nodeType": "ExpressionStatement",
                  "src": "3636:23:43"
                }
              ]
            },
            "functionSelector": "485cc955",
            "id": 12650,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12628,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12627,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "3412:9:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "3412:9:43"
              }
            ],
            "name": "initialize",
            "nameLocation": "3356:10:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12626,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12623,
                  "mutability": "mutable",
                  "name": "_nativeAsset",
                  "nameLocation": "3375:12:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 12650,
                  "src": "3367:20:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3367:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12625,
                  "mutability": "mutable",
                  "name": "_dao",
                  "nameLocation": "3397:4:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 12650,
                  "src": "3389:12:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12624,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3389:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3366:36:43"
            },
            "returnParameters": {
              "id": 12629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3422:0:43"
            },
            "scope": 12695,
            "src": "3347:320:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12667,
              "nodeType": "Block",
              "src": "3912:56:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 12659,
                            "name": "getPool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12512,
                            "src": "3923:7:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$_$",
                              "typeString": "mapping(address => mapping(address => contract IVaderPool))"
                            }
                          },
                          "id": 12662,
                          "indexExpression": {
                            "id": 12660,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12652,
                            "src": "3931:6:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3923:15:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_IVaderPool_$20097_$",
                            "typeString": "mapping(address => contract IVaderPool)"
                          }
                        },
                        "id": 12663,
                        "indexExpression": {
                          "id": 12661,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12654,
                          "src": "3939:6:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3923:23:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaderPool_$20097",
                          "typeString": "contract IVaderPool"
                        }
                      },
                      "id": 12664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toggleQueue",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20092,
                      "src": "3923:35:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 12665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3923:37:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12666,
                  "nodeType": "ExpressionStatement",
                  "src": "3923:37:43"
                }
              ]
            },
            "functionSelector": "c7a3414b",
            "id": 12668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12657,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12656,
                  "name": "onlyDAO",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12694,
                  "src": "3904:7:43"
                },
                "nodeType": "ModifierInvocation",
                "src": "3904:7:43"
              }
            ],
            "name": "toggleQueue",
            "nameLocation": "3851:11:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12652,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "3871:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 12668,
                  "src": "3863:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12651,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3863:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 12654,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "3887:6:43",
                  "nodeType": "VariableDeclaration",
                  "scope": 12668,
                  "src": "3879:14:43",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3879:7:43",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3862:32:43"
            },
            "returnParameters": {
              "id": 12658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3912:0:43"
            },
            "scope": 12695,
            "src": "3842:126:43",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 12685,
              "nodeType": "Block",
              "src": "4342:167:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 12681,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 12673,
                            "name": "nativeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 12504,
                            "src": "4375:11:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 12674,
                            "name": "_ZERO_ADDRESS",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21375,
                            "src": "4390:13:43",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4375:28:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 12680,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 12676,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4407:5:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 12677,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4407:7:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 12678,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3742,
                              "src": "4418:10:43",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 12679,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4418:12:43",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4407:23:43",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4375:55:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "42617365506f6f6c3a3a5f6f6e6c7944414f3a20496e73756666696369656e742050726976696c65676573",
                        "id": 12682,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4445:45:43",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a17ffa72cb3d61af6e0ddcaf23e9bf954e880f245d85928b3dd6afed0a4318d4",
                          "typeString": "literal_string \"BasePool::_onlyDAO: Insufficient Privileges\""
                        },
                        "value": "BasePool::_onlyDAO: Insufficient Privileges"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a17ffa72cb3d61af6e0ddcaf23e9bf954e880f245d85928b3dd6afed0a4318d4",
                          "typeString": "literal_string \"BasePool::_onlyDAO: Insufficient Privileges\""
                        }
                      ],
                      "id": 12672,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4353:7:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12683,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4353:148:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12684,
                  "nodeType": "ExpressionStatement",
                  "src": "4353:148:43"
                }
              ]
            },
            "documentation": {
              "id": 12669,
              "nodeType": "StructuredDocumentation",
              "src": "4083:220:43",
              "text": " @dev Ensures only the DAO is able to invoke a particular function by validating that\n the owner is the msg.sender, equivalent to the DAO address, and that the native asset\n has been set"
            },
            "id": 12686,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyDAO",
            "nameLocation": "4318:8:43",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12670,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4326:2:43"
            },
            "returnParameters": {
              "id": 12671,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4342:0:43"
            },
            "scope": 12695,
            "src": "4309:200:43",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 12693,
              "nodeType": "Block",
              "src": "4664:41:43",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12689,
                      "name": "_onlyDAO",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12686,
                      "src": "4675:8:43",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 12690,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4675:10:43",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12691,
                  "nodeType": "ExpressionStatement",
                  "src": "4675:10:43"
                },
                {
                  "id": 12692,
                  "nodeType": "PlaceholderStatement",
                  "src": "4696:1:43"
                }
              ]
            },
            "documentation": {
              "id": 12687,
              "nodeType": "StructuredDocumentation",
              "src": "4562:77:43",
              "text": " @dev Throws if invoked by anyone else other than the DAO"
            },
            "id": 12694,
            "name": "onlyDAO",
            "nameLocation": "4654:7:43",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12688,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4661:2:43"
            },
            "src": "4645:60:43",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 12696,
        "src": "687:4021:43",
        "usedErrors": []
      }
    ],
    "src": "41:4669:43"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.044Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}