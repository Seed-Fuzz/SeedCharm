{
  "contractName": "VaderRouterV2",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IVaderPoolV2",
          "name": "_pool",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nativeAsset",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pool",
      "outputs": [
        {
          "internalType": "contract IVaderPoolV2",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "reserve",
      "outputs": [
        {
          "internalType": "contract IVaderReserve",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountADesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBDesired",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "addLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "liquidity",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountAMin",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountBMin",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "removeLiquidity",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountA",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountB",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountIn",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amountOutMin",
          "type": "uint256"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "path",
          "type": "address[]"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "deadline",
          "type": "uint256"
        }
      ],
      "name": "swapExactTokensForTokens",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "amountOut",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IVaderReserve",
          "name": "_reserve",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IVaderPoolV2\",\"name\":\"_pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountADesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBDesired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IVaderReserve\",\"name\":\"_reserve\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeAsset\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pool\",\"outputs\":[{\"internalType\":\"contract IVaderPoolV2\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountAMin\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountBMin\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountA\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountB\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reserve\",\"outputs\":[{\"internalType\":\"contract IVaderReserve\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMin\",\"type\":\"uint256\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"path\",\"type\":\"address[]\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapExactTokensForTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/dex-v2/router/VaderRouterV2.sol\":\"VaderRouterV2\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0xb264c03a3442eb37a68ad620cefd1182766b58bee6cec40343480392d6b14d69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://28879d01fd22c07b44f006612775f8577defbe459cb01685c5e25cd518c91a71\",\"dweb:/ipfs/QmVgfkwv2Fxw6hhTcDUZhE7NkoSKjab3ipM7UaRbt6uXb5\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0xabefac93435967b4d36a4fabcbdbb918d1f0b7ae3c3d85bc30923b326c927ed1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d213d3befca47da33f6db0310826bcdb148299805c10d77175ecfe1d06a9a68\",\"dweb:/ipfs/QmRgCn6SP1hbBkExUADFuDo8xkT4UU47yjNF5FhCeRbQmS\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5bce51e11f7d194b79ea59fe00c9e8de9fa2c5530124960f29a24d4c740a3266\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7e66dfde185df46104c11bc89d08fa0760737aa59a2b8546a656473d810a8ea4\",\"dweb:/ipfs/QmXvyqtXPaPss2PD7eqPoSao5Szm2n6UMoiG8TZZDjmChR\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x006dd67219697fe68d7fbfdea512e7c4cb64a43565ed86171d67e844982da6fa\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2455248c8ddd9cc6a7af76a13973cddf222072427e7b0e2a7d1aff345145e931\",\"dweb:/ipfs/QmfYjnjRbWqYpuxurqveE6HtzsY1Xx323J428AKQgtBJZm\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/dex-v2/router/VaderRouterV2.sol\":{\"keccak256\":\"0x43c987e1381a9a087734c57e1df31878eec141e6252309c350addca236c85410\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://926e3ebd511272d4168edbc80448b9132d1d54be995a8eb068793f4b74b69bf0\",\"dweb:/ipfs/QmNWqqBEoZHM8Mx32Px1RGL8hxDjbXw87VbMe98nCYVCJs\"]},\"project:/contracts/dex/math/VaderMath.sol\":{\"keccak256\":\"0x141db9bcc1f89349bcf2460433f8253651d157296d3e8c83b4b1fba3fbd7e725\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4373e101389ab6a9f814539713c6e43599063878853f59d71f7592ef98bffbf4\",\"dweb:/ipfs/Qmdy6FNzMnXCUqz9pBcuDkgKtoUVb1yJtppmce9ng3ZfBR\"]},\"project:/contracts/interfaces/dex-v2/pool/IBasePoolV2.sol\":{\"keccak256\":\"0xaf563d0e1d9be9e944f704fc466b0c2b695c1f2c51d1749fba58cd5b62447be9\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://8e72d4c8ddefabe5011871258ce550d86d63aac705c60f96d0f2503ee7128839\",\"dweb:/ipfs/QmbPyhb2xahGkzCh7PWWtgDNo85RwjUYJaiTbNNQzP3nfH\"]},\"project:/contracts/interfaces/dex-v2/pool/IVaderPoolV2.sol\":{\"keccak256\":\"0xbcf9ce93c5d47084e35e5bfec9c6322b65ca3f5f308c63dda834e4679565ecda\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://4758bbbf5307517d029b4025939066f77966240f44ac2482274cb32397341b44\",\"dweb:/ipfs/QmNWLeZYSqvzgsHRMG1XYZKHdMrpXgof5KDLQzKnXrwNng\"]},\"project:/contracts/interfaces/dex-v2/router/IVaderRouterV2.sol\":{\"keccak256\":\"0x5535b1d188dc7b99bfe02296736651f7e10366eea66345591c4bac1603dad9bb\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://d8229b69c6e7944bda5f26f65642f24afcda19e94ba37a0ec701d6db6cb4b016\",\"dweb:/ipfs/QmWN8P9t7nL29UzAasy7RpNp5Fd3tZwGMqZJr9hXtFZvW9\"]},\"project:/contracts/interfaces/reserve/IVaderReserve.sol\":{\"keccak256\":\"0x22e87625930d4ada2ccbd85e6b71d53432cb12d90087f400c24086fdc46ab2ee\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://3b26e702df016430df2084a36b3f975e51958bfae285e368903c02b6f3547c0d\",\"dweb:/ipfs/QmcZh1CVTjC2pGwnApoFHyTgamwkztFAM8DLFe5v4pe6q6\"]},\"project:/contracts/shared/ProtocolConstants.sol\":{\"keccak256\":\"0x845b3cdb262b4cc3a2ce4fd0c094c6e6b5e818988cd7c21d4b7b3295b80b7b22\",\"license\":\"Unlicense\",\"urls\":[\"bzz-raw://763268835823e795ce64059ff8bb147224fb548a4f33b90be4b80b35c59598e2\",\"dweb:/ipfs/QmPbyyps31R4f2PVMpqCbkhWDw8UtG5vfikcNxL6Mg51e5\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {
    "10156": [
      {
        "length": 32,
        "start": 179
      },
      {
        "length": 32,
        "start": 803
      },
      {
        "length": 32,
        "start": 1057
      },
      {
        "length": 32,
        "start": 1275
      },
      {
        "length": 32,
        "start": 1498
      },
      {
        "length": 32,
        "start": 1845
      },
      {
        "length": 32,
        "start": 1958
      },
      {
        "length": 32,
        "start": 2893
      },
      {
        "length": 32,
        "start": 3238
      },
      {
        "length": 32,
        "start": 3329
      },
      {
        "length": 32,
        "start": 3872
      },
      {
        "length": 32,
        "start": 3990
      },
      {
        "length": 32,
        "start": 4317
      }
    ],
    "10159": [
      {
        "length": 32,
        "start": 309
      },
      {
        "length": 32,
        "start": 716
      },
      {
        "length": 32,
        "start": 968
      },
      {
        "length": 32,
        "start": 1632
      },
      {
        "length": 32,
        "start": 3707
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1153:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "73:86:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "137:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "146:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "149:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "139:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "139:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "139:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "96:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "107:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "122:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "127:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "118:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "118:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "131:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "103:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "103:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "93:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "93:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "86:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "86:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "83:70:110"
                }
              ]
            },
            "name": "validator_revert_contract_IVaderPoolV2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "62:5:110",
                "type": ""
              }
            ],
            "src": "14:145:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "267:184:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "313:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "322:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "325:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "315:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "315:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "315:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "288:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "297:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "284:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "284:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "309:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "280:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "280:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "277:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "338:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "357:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "351:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "351:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "342:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "415:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IVaderPoolV2",
                      "nodeType": "YulIdentifier",
                      "src": "376:38:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "376:45:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "376:45:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "430:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "440:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "430:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IVaderPoolV2_$19775_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "233:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "244:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "256:6:110",
                "type": ""
              }
            ],
            "src": "164:287:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "630:237:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "647:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "658:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "640:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "640:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "640:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "681:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "692:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "677:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "677:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "697:2:110",
                        "type": "",
                        "value": "47"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "670:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "670:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "670:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "720:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "731:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "716:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "716:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a636f6e7374727563746f723a20496e636f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "736:34:110",
                        "type": "",
                        "value": "VaderRouterV2::constructor: Inco"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "709:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "709:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "709:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "791:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "802:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "787:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "787:18:110"
                      },
                      {
                        "hexValue": "727265637420417267756d656e7473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "807:17:110",
                        "type": "",
                        "value": "rrect Arguments"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "780:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "780:45:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "780:45:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "834:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "846:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "857:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "842:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "842:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "834:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e45457b54ebd1f8ec41b55b7f5a2990670773ef97c7c3824cf0f08916bbd0e07__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "607:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "621:4:110",
                "type": ""
              }
            ],
            "src": "456:411:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "967:184:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1013:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1022:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1025:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1015:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1015:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1015:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "988:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "997:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "984:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "984:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1009:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "980:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "980:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "977:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1038:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1057:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1051:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1051:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1042:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1115:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_contract_IVaderPoolV2",
                      "nodeType": "YulIdentifier",
                      "src": "1076:38:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1076:45:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1076:45:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1130:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1140:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "933:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "944:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "956:6:110",
                "type": ""
              }
            ],
            "src": "872:279:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_contract_IVaderPoolV2(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_contract$_IVaderPoolV2_$19775_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IVaderPoolV2(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_e45457b54ebd1f8ec41b55b7f5a2990670773ef97c7c3824cf0f08916bbd0e07__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"VaderRouterV2::constructor: Inco\")\n        mstore(add(headStart, 96), \"rrect Arguments\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_contract_IVaderPoolV2(value)\n        value0 := value\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:16525:110",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:110",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "137:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "147:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "159:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "170:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "155:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "155:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "147:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "189:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "204:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "220:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "225:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "216:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "216:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "229:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "212:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "212:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "200:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "200:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "182:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "182:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "182:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IVaderPoolV2_$19775__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "106:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "117:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "128:4:110",
                "type": ""
              }
            ],
            "src": "14:225:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "289:86:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "353:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "362:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "365:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "355:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "355:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "355:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "312:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "323:5:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "338:3:110",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "343:1:110",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "334:3:110"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "334:11:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "347:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "330:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "330:19:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "319:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "319:31:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "309:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "309:42:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "302:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "302:50:110"
                  },
                  "nodeType": "YulIf",
                  "src": "299:70:110"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "278:5:110",
                "type": ""
              }
            ],
            "src": "244:131:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "429:85:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "439:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "461:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "448:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "448:20:110"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "439:5:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "502:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "477:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "477:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "477:31:110"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "408:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "419:5:110",
                "type": ""
              }
            ],
            "src": "380:134:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "706:722:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "753:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "762:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "765:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "755:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "755:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "755:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "727:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "736:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "723:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "723:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "748:3:110",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "719:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "719:33:110"
                  },
                  "nodeType": "YulIf",
                  "src": "716:53:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "778:33:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "801:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "788:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "788:23:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "778:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "820:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "847:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "858:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "843:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "843:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "830:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "830:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "820:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "871:46:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "902:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "913:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "898:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "898:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "885:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "885:32:110"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "875:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "926:28:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "936:18:110",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "930:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "981:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "990:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "993:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "983:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "983:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "983:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "969:6:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "977:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "966:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "966:14:110"
                  },
                  "nodeType": "YulIf",
                  "src": "963:34:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1006:32:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1020:9:110"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1031:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1016:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:22:110"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "1010:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1086:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1095:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1098:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1088:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1088:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1088:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1065:2:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1069:4:110",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1061:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1061:13:110"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1076:7:110"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1057:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:27:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1050:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1050:35:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1047:55:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1111:30:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1138:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1125:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1125:16:110"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1115:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1168:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1177:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1180:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1170:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1170:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1170:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1156:6:110"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1164:2:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1153:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1153:14:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1150:34:110"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1242:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1251:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1254:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1244:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1244:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1244:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1207:2:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1215:1:110",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1218:6:110"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1211:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1211:14:110"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1203:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1203:23:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1228:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1199:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1199:32:110"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1233:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1196:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1196:45:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1193:65:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1267:21:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1281:2:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1285:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1277:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1277:11:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1267:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1297:16:110",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1307:6:110"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1297:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1322:48:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1355:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1366:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1351:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1351:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1332:18:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:38:110"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1322:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1379:43:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1406:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1417:3:110",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1402:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1402:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1389:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1389:33:110"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "1379:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptrt_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "632:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "643:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "655:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "663:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "671:6:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "679:6:110",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "687:6:110",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "695:6:110",
                "type": ""
              }
            ],
            "src": "519:909:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1534:76:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1544:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1556:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1567:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1552:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1552:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1544:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1586:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1597:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1579:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1579:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1579:25:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1503:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1514:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1525:4:110",
                "type": ""
              }
            ],
            "src": "1433:177:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1798:581:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1845:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1854:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1857:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1847:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1847:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1847:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1819:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1828:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1815:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1815:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1840:3:110",
                        "type": "",
                        "value": "192"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1811:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1811:33:110"
                  },
                  "nodeType": "YulIf",
                  "src": "1808:53:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1870:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1896:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1883:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1883:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1874:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1940:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1915:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1915:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1915:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1955:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1965:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1955:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1979:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2011:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2022:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2007:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2007:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1994:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "1983:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2060:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2035:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2035:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2035:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2077:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2087:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2077:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2103:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2130:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2141:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2126:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2126:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2113:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2113:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2103:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2154:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2181:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2192:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2177:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2177:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2164:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2164:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2154:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2205:48:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2237:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2248:3:110",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2233:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2233:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2220:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2220:33:110"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "2209:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "2287:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2262:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2262:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2262:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2304:17:110",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "2314:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "2304:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2330:43:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2357:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2368:3:110",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2353:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2353:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2340:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2340:33:110"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "2330:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969t_contract$_IERC20_$969t_uint256t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1724:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1735:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1747:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1755:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1763:6:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "1771:6:110",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "1779:6:110",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "1787:6:110",
                "type": ""
              }
            ],
            "src": "1615:764:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2499:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2509:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2521:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2532:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2517:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2509:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2551:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2566:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2582:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2587:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2578:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2578:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2591:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2574:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2574:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2562:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2562:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2544:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2544:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$969__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2468:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2479:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2490:4:110",
                "type": ""
              }
            ],
            "src": "2384:217:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2707:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2717:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2729:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2740:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2725:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2717:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2759:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2774:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2790:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2795:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2786:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2786:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2799:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2782:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2782:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2770:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2770:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2752:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2752:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2752:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2676:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2687:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2698:4:110",
                "type": ""
              }
            ],
            "src": "2606:203:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2986:633:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3033:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3042:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3045:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3035:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3035:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3035:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3007:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3016:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3003:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3003:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3028:3:110",
                        "type": "",
                        "value": "224"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2999:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2999:33:110"
                  },
                  "nodeType": "YulIf",
                  "src": "2996:53:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3058:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3084:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3071:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3071:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3062:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3128:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3103:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3103:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3103:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3143:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3153:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3143:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3167:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3199:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3210:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3195:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3195:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3182:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3182:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3171:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3248:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3223:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3223:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3223:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3265:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3275:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3265:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3291:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3318:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3329:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3314:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3314:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3301:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3301:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3291:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3342:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3369:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3380:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3365:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3365:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3352:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3352:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "3342:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3393:43:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3420:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3431:3:110",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3416:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3416:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3403:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3403:33:110"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "3393:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3445:48:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3477:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3488:3:110",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3473:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3473:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3460:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3460:33:110"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "3449:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "3527:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3502:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3502:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3544:17:110",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "3554:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "3544:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3570:43:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3597:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3608:3:110",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3593:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3593:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3580:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3580:33:110"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "3570:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2904:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2915:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2927:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2935:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2943:6:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2951:6:110",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "2959:6:110",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "2967:6:110",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "2975:6:110",
                "type": ""
              }
            ],
            "src": "2814:805:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3753:119:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3763:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3775:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3786:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3771:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3771:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3763:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3805:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3816:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3798:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3798:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3798:25:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3843:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3854:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3839:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3839:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3859:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3832:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3832:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3832:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3714:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3725:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3733:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3744:4:110",
                "type": ""
              }
            ],
            "src": "3624:248:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3970:177:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4016:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4025:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4028:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4018:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4018:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4018:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3991:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4000:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3987:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3987:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4012:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3983:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3983:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "3980:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4041:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4067:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4054:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4054:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4045:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4111:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4086:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4086:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4086:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4126:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4136:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4126:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IVaderReserve_$20363",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3936:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3947:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3959:6:110",
                "type": ""
              }
            ],
            "src": "3877:270:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4276:102:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4286:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4298:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4309:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4294:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4294:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4286:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4328:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4343:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4359:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4364:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4355:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4355:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4368:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4351:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4351:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4339:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4339:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4321:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4321:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4321:51:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IVaderReserve_$20363__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4245:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4256:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4267:4:110",
                "type": ""
              }
            ],
            "src": "4152:226:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4600:685:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4647:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4656:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4659:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4649:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4649:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4649:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4621:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4630:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4617:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4617:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4642:3:110",
                        "type": "",
                        "value": "256"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4613:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4613:33:110"
                  },
                  "nodeType": "YulIf",
                  "src": "4610:53:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4672:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4698:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4685:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4685:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4676:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4742:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4717:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4717:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4717:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4757:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4767:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4757:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4781:47:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4813:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4824:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4809:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4809:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4796:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4796:32:110"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4785:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4862:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4837:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4837:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4837:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4879:17:110",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4889:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4879:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4905:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4932:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4943:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4928:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4928:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4915:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4915:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "4905:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4956:42:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4983:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4994:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4979:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4979:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4966:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4966:32:110"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "4956:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5007:43:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5034:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5045:3:110",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5030:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5030:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5017:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5017:33:110"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "5007:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5059:43:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5086:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5097:3:110",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5082:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5082:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5069:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5069:33:110"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "5059:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5111:48:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5143:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5154:3:110",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5139:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5139:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5126:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5126:33:110"
                  },
                  "variables": [
                    {
                      "name": "value_2",
                      "nodeType": "YulTypedName",
                      "src": "5115:7:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_2",
                        "nodeType": "YulIdentifier",
                        "src": "5193:7:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5168:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5168:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5168:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5210:17:110",
                  "value": {
                    "name": "value_2",
                    "nodeType": "YulIdentifier",
                    "src": "5220:7:110"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "5210:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5236:43:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5263:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5274:3:110",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5259:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5259:19:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5246:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5246:33:110"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "5236:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969t_contract$_IERC20_$969t_uint256t_uint256t_uint256t_uint256t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4510:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4521:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4533:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4541:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4549:6:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "4557:6:110",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "4565:6:110",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "4573:6:110",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "4581:6:110",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "4589:6:110",
                "type": ""
              }
            ],
            "src": "4383:902:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5360:177:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5406:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5415:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5418:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5408:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5408:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5408:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5381:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5390:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5377:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5377:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5402:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5373:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5373:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "5370:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5431:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5457:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "5444:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5444:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5435:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5501:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5476:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5476:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5476:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5516:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5526:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5516:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5326:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5337:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5349:6:110",
                "type": ""
              }
            ],
            "src": "5290:247:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5716:180:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5733:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5744:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5726:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5726:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5726:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5767:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5778:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5763:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5763:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5783:2:110",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5756:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5756:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5756:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5806:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5817:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5802:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5802:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a656e737572653a2045787069726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5822:32:110",
                        "type": "",
                        "value": "VaderRouterV2::ensure: Expired"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5795:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5795:60:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5795:60:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5864:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5876:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5887:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5872:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5872:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5864:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_411d4f167846a4c286a1c0fd9171ae8544f501cab0ede0a51d5efdd0fd97a847__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5693:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5707:4:110",
                "type": ""
              }
            ],
            "src": "5542:354:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6075:296:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6092:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6103:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6085:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6085:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6085:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6126:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6137:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6122:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6122:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6142:2:110",
                        "type": "",
                        "value": "66"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6115:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6115:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6115:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6165:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6176:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6161:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6161:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a737761704578616374546f6b656e73466f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6181:34:110",
                        "type": "",
                        "value": "VaderRouterV2::swapExactTokensFo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6154:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6154:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6154:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6236:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6247:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6232:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6232:18:110"
                      },
                      {
                        "hexValue": "72546f6b656e733a20496e73756666696369656e74205472616465204f757470",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6252:34:110",
                        "type": "",
                        "value": "rTokens: Insufficient Trade Outp"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6225:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6225:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6225:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6307:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6318:3:110",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6303:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6303:19:110"
                      },
                      {
                        "hexValue": "7574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6324:4:110",
                        "type": "",
                        "value": "ut"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6296:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6296:33:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6296:33:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6338:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6350:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6361:3:110",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6346:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6346:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6338:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d90086015a0b378cd85c9e33b45912bbb6780a47c9dbc5862371c24a45e76d3a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6052:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6066:4:110",
                "type": ""
              }
            ],
            "src": "5901:470:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6454:199:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6500:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6509:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6512:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6502:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6502:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6502:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6475:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6484:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6471:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6471:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6496:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6467:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6467:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "6464:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6525:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6544:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6538:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6538:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6529:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6607:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6616:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6619:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6609:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6609:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6609:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6576:5:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6597:5:110"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6590:6:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6590:13:110"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6583:6:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6583:21:110"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6573:2:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6573:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6566:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6566:40:110"
                  },
                  "nodeType": "YulIf",
                  "src": "6563:60:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6632:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6642:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6632:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6420:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6431:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6443:6:110",
                "type": ""
              }
            ],
            "src": "6376:277:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6832:247:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6849:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6860:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6842:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6842:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6842:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6883:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6894:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6879:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6879:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6899:2:110",
                        "type": "",
                        "value": "57"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6872:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6872:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6872:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6922:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6933:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6918:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6918:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a6164644c69717569646974793a20556e73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6938:34:110",
                        "type": "",
                        "value": "VaderRouterV2::addLiquidity: Uns"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6911:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6911:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6911:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6993:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7004:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6989:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6989:18:110"
                      },
                      {
                        "hexValue": "7570706f727465642041737365747320537065636966696564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7009:27:110",
                        "type": "",
                        "value": "upported Assets Specified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6982:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6982:55:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6982:55:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7046:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7058:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7069:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7054:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7054:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7046:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1f9108aafeabe769759ded61ef5c1a37be47a5ac334f600c575fa47b0ff149b6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6809:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6823:4:110",
                "type": ""
              }
            ],
            "src": "6658:421:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7311:315:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7321:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7333:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7344:3:110",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7329:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7329:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7321:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7357:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7375:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7380:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "7371:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7371:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7384:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "7367:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7367:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "7361:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7402:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "7417:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7425:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7413:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7413:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7395:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7395:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7395:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7449:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7460:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7445:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7445:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7465:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7438:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7438:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7438:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7492:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7503:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7488:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7488:18:110"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "7508:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7481:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7481:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7481:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7535:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7546:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7531:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7531:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "7555:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7563:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7551:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7551:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7524:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7524:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7524:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7587:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7598:3:110",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7583:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7583:19:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value4",
                            "nodeType": "YulIdentifier",
                            "src": "7608:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "7616:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "7604:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7604:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7576:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7576:44:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7576:44:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$969_t_uint256_t_uint256_t_address_t_address__to_t_address_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7248:9:110",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "7259:6:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "7267:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "7275:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7283:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7291:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7302:4:110",
                "type": ""
              }
            ],
            "src": "7084:542:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7712:103:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7758:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7767:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7770:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7760:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7760:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7760:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7733:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7742:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7729:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7729:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7754:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7725:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7725:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "7722:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7783:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7799:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7793:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7793:16:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7783:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7678:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7689:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7701:6:110",
                "type": ""
              }
            ],
            "src": "7631:184:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7915:170:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7961:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7970:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7973:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7963:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7963:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7963:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7936:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7945:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7932:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7932:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7957:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7928:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7928:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "7925:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7986:29:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8005:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7999:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7999:16:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7990:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8049:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8024:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8024:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8024:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8064:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8074:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8064:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7881:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7892:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7904:6:110",
                "type": ""
              }
            ],
            "src": "7820:265:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8264:251:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8281:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8292:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8274:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8274:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8274:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8315:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8326:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8311:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8311:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8331:2:110",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8304:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8304:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8304:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8354:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8365:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8350:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8350:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a72656d6f76654c69717569646974793a20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8370:34:110",
                        "type": "",
                        "value": "VaderRouterV2::removeLiquidity: "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8343:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8343:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8343:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8425:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8436:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8421:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8421:18:110"
                      },
                      {
                        "hexValue": "496e636f72726563742041646472657373657320537065636966696564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8441:31:110",
                        "type": "",
                        "value": "Incorrect Addresses Specified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8414:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8414:59:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8414:59:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8482:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8494:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8505:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8490:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8490:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8482:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cfc546bdff5131ebb080bc10b178123d2cb9dc57e69f0c52bbdfb190d046abad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8241:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8255:4:110",
                "type": ""
              }
            ],
            "src": "8090:425:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8677:218:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8687:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8699:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8710:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8695:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8695:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8687:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8722:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8740:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8745:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "8736:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8736:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8749:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "8732:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8732:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "8726:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8767:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "8782:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8790:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8778:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8778:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8760:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8760:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8760:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8814:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8825:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8810:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8810:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "8834:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "8842:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "8830:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8830:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8803:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8803:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8803:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8866:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8877:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8862:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8862:18:110"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "8882:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8855:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8855:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8855:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8630:9:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "8641:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "8649:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8657:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8668:4:110",
                "type": ""
              }
            ],
            "src": "8520:375:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9029:145:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9039:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9051:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9062:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9047:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9047:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9039:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9081:9:110"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "9092:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9074:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9074:25:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9074:25:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9119:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9130:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9115:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9115:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "9139:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9155:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9160:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9151:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9151:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9164:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9147:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9147:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9135:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9135:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9108:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9108:60:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9108:60:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8990:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9001:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9009:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9020:4:110",
                "type": ""
              }
            ],
            "src": "8900:274:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9294:191:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9340:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9349:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9352:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9342:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9342:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9342:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "9315:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9324:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9311:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9311:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9336:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "9307:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9307:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "9304:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9365:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9381:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9375:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9375:16:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9365:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9400:35:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9420:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9431:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9416:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9416:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9410:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9410:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "9400:6:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9444:35:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9464:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9475:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9460:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9460:18:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "9454:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9454:25:110"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "9444:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9244:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "9255:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9267:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9275:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9283:6:110",
                "type": ""
              }
            ],
            "src": "9179:306:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9664:226:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9681:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9692:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9674:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9674:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9674:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9715:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9726:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9711:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9711:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9731:2:110",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9704:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9704:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9704:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9754:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9765:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9750:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9750:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a20494e53554646494349454e545f415f414d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9770:34:110",
                        "type": "",
                        "value": "VaderRouterV2: INSUFFICIENT_A_AM"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9743:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9743:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9743:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9825:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9836:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9821:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9821:18:110"
                      },
                      {
                        "hexValue": "4f554e54",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9841:6:110",
                        "type": "",
                        "value": "OUNT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9814:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9814:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9814:34:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9857:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9869:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9880:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9865:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9865:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9857:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e679d7ce27e609c6a4cc438dfcc0bf65e4a4bde9766e90327b13d695c71deff5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9641:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9655:4:110",
                "type": ""
              }
            ],
            "src": "9490:400:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10069:226:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10086:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10097:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10079:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10079:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10079:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10120:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10131:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10116:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10116:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10136:2:110",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10109:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10109:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10109:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10159:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10170:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10155:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10155:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a20494e53554646494349454e545f425f414d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10175:34:110",
                        "type": "",
                        "value": "VaderRouterV2: INSUFFICIENT_B_AM"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10148:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10148:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10148:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10230:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10241:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10226:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10226:18:110"
                      },
                      {
                        "hexValue": "4f554e54",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10246:6:110",
                        "type": "",
                        "value": "OUNT"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10219:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10219:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10219:34:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10262:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10274:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10285:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10270:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10270:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10262:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7d3f1c0277c79a80966ff85541534623194a599817109ba594d0f1c25d0c34f1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10046:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10060:4:110",
                "type": ""
              }
            ],
            "src": "9895:400:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10429:145:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10439:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10451:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10462:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10447:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10447:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10439:4:110"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10481:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10496:6:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10512:3:110",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10517:1:110",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10508:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10508:11:110"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10521:1:110",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10504:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10504:19:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10492:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10492:32:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10474:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10474:51:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10474:51:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10545:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10556:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10541:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10541:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "10561:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10534:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10534:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10534:34:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10390:9:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "10401:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10409:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10420:4:110",
                "type": ""
              }
            ],
            "src": "10300:274:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10753:244:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10770:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10781:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10763:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10763:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10763:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10804:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10815:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10800:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10800:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10820:2:110",
                        "type": "",
                        "value": "54"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10793:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10793:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10793:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10843:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10854:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10839:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10839:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a696e697469616c697a653a20496e636f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10859:34:110",
                        "type": "",
                        "value": "VaderRouterV2::initialize: Incor"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10832:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10832:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10832:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10914:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10925:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10910:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10910:18:110"
                      },
                      {
                        "hexValue": "72656374205265736572766520537065636966696564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10930:24:110",
                        "type": "",
                        "value": "rect Reserve Specified"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10903:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10903:52:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10903:52:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10964:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10976:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10987:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10972:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10972:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10964:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8caa7c91773efd29ac2d458ab3ef46f0ea5c68e75911d0f58e8cfee4c05d7657__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10730:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10744:4:110",
                "type": ""
              }
            ],
            "src": "10579:418:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11176:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11193:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11204:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11186:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11186:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11186:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11227:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11238:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11223:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11223:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11243:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11216:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11216:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11216:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11266:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11277:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11262:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11262:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11282:34:110",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11255:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11255:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11255:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11337:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11348:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11333:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11333:18:110"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11353:8:110",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11326:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11326:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11326:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11371:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11383:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11394:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11379:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11379:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11371:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11153:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11167:4:110",
                "type": ""
              }
            ],
            "src": "11002:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11441:95:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11458:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11465:3:110",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11470:10:110",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "11461:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11461:20:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11451:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11451:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11451:31:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11498:1:110",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11501:4:110",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11491:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11491:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11491:15:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11522:1:110",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11525:4:110",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11515:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11515:15:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11515:15:110"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "11409:127:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11625:177:110",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11671:16:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11680:1:110",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "11683:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "11673:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11673:12:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11673:12:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "11646:7:110"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11655:9:110"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11642:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11642:23:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11667:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "11638:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11638:32:110"
                  },
                  "nodeType": "YulIf",
                  "src": "11635:52:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "11696:36:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11722:9:110"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "11709:12:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11709:23:110"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "11700:5:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "11766:5:110"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "11741:24:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11741:31:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11741:31:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11781:15:110",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "11791:5:110"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "11781:6:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IERC20_$969",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11591:9:110",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "11602:7:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "11614:6:110",
                "type": ""
              }
            ],
            "src": "11541:261:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11981:226:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11998:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12009:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11991:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11991:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11991:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12032:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12043:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12028:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12028:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12048:2:110",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12021:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12021:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12021:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12071:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12082:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12067:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12067:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a5f737761703a20496e636f727265637420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12087:34:110",
                        "type": "",
                        "value": "VaderRouterV2::_swap: Incorrect "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12060:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12060:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12060:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12142:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12153:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12138:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12138:18:110"
                      },
                      {
                        "hexValue": "50617468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12158:6:110",
                        "type": "",
                        "value": "Path"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12131:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12131:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12131:34:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12174:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12186:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12197:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12182:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12182:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12174:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11958:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11972:4:110",
                "type": ""
              }
            ],
            "src": "11807:400:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12425:271:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12435:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12447:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12458:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12443:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12443:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12435:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "12471:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12489:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12494:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "12485:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12485:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12498:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "12481:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12481:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "12475:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12516:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "12531:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12539:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12527:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12527:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12509:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12509:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12509:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12563:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12574:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12559:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12559:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "12583:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12591:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12579:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12579:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12552:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12552:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12552:43:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12615:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12626:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12611:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12611:18:110"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "12631:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12604:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12604:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12604:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12658:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12669:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12654:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12654:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "12678:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "12686:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "12674:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12674:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12647:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12647:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12647:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$969_t_contract$_IERC20_$969_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12370:9:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "12381:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "12389:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "12397:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "12405:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12416:4:110",
                "type": ""
              }
            ],
            "src": "12212:484:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12875:233:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12892:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12903:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12885:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12885:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12885:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12926:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12937:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12922:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12922:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12942:2:110",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12915:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12915:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12915:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12965:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12976:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12961:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12961:18:110"
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a5f737761703a20496e636f727265637420",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12981:34:110",
                        "type": "",
                        "value": "VaderRouterV2::_swap: Incorrect "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12954:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12954:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12954:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13036:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13047:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13032:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13032:18:110"
                      },
                      {
                        "hexValue": "50617468204c656e677468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13052:13:110",
                        "type": "",
                        "value": "Path Length"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13025:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13025:41:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13025:41:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13075:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13087:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13098:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13083:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13083:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13075:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5b20ce84a770f0929b8ad9dcb1634fd0cbad749a2015c04f624ccab1003e3f74__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12852:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12866:4:110",
                "type": ""
              }
            ],
            "src": "12701:407:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13320:262:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13330:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13342:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13353:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13338:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13338:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13330:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13366:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13384:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13389:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13380:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13380:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13393:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13376:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13376:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13370:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13411:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13426:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13434:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13422:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13422:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13404:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13404:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13404:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13458:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13469:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13454:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13454:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13474:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13447:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13447:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13447:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13501:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13512:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13497:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13497:18:110"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13517:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13490:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13490:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13490:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13544:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13555:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13540:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13540:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "13564:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13572:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13560:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13560:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13533:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13533:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13533:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$969_t_uint256_t_rational_0_by_1_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13265:9:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13276:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13284:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13292:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13300:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13311:4:110",
                "type": ""
              }
            ],
            "src": "13113:469:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13794:262:110",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13804:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13816:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13827:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13812:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13812:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13804:4:110"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "13840:29:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13858:3:110",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13863:1:110",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "13854:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13854:11:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13867:1:110",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "13850:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13850:19:110"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "13844:2:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13885:9:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "13900:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "13908:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "13896:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13896:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13878:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13878:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13878:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13932:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13943:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13928:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13928:18:110"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "13948:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13921:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13921:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13921:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13975:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13986:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13971:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13971:18:110"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "13991:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13964:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13964:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13964:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14018:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14029:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14014:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14014:18:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "14038:6:110"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "14046:2:110"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "14034:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14034:15:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14007:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14007:43:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14007:43:110"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IERC20_$969_t_rational_0_by_1_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13739:9:110",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "13750:6:110",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "13758:6:110",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "13766:6:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "13774:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13785:4:110",
                "type": ""
              }
            ],
            "src": "13587:469:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14235:182:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14252:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14263:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14245:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14245:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14245:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14286:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14297:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14282:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14282:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14302:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14275:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14275:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14275:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14325:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14336:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14321:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14321:18:110"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14341:34:110",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14314:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14314:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14314:62:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14385:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14397:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14408:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14393:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14393:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14385:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14212:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14226:4:110",
                "type": ""
              }
            ],
            "src": "14061:356:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14596:232:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14613:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14624:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14606:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14606:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14606:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14647:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14658:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14643:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14643:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14663:2:110",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14636:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14636:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14636:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14686:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14697:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14682:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14682:18:110"
                      },
                      {
                        "hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14702:34:110",
                        "type": "",
                        "value": "SafeERC20: ERC20 operation did n"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14675:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14675:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14675:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14757:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14768:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14753:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14753:18:110"
                      },
                      {
                        "hexValue": "6f742073756363656564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "14773:12:110",
                        "type": "",
                        "value": "ot succeed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14746:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14746:40:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14746:40:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14795:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14807:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14818:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14803:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14803:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14795:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14573:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14587:4:110",
                "type": ""
              }
            ],
            "src": "14422:406:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15007:228:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15024:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15035:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15017:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15017:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15017:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15058:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15069:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15054:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15054:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15074:2:110",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15047:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15047:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15047:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15097:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15108:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15093:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15093:18:110"
                      },
                      {
                        "hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15113:34:110",
                        "type": "",
                        "value": "Address: insufficient balance fo"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15086:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15086:62:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15086:62:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "15168:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15179:2:110",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15164:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15164:18:110"
                      },
                      {
                        "hexValue": "722063616c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15184:8:110",
                        "type": "",
                        "value": "r call"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15157:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15157:36:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15157:36:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15202:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15214:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15225:3:110",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15210:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15210:19:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "15202:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14984:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14998:4:110",
                "type": ""
              }
            ],
            "src": "14833:402:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15293:205:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15303:10:110",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "15312:1:110",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "15307:1:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15372:63:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15397:3:110"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "15402:1:110"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15393:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15393:11:110"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "15416:3:110"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "15421:1:110"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "15412:3:110"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15412:11:110"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "15406:5:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15406:18:110"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15386:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15386:39:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15386:39:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15333:1:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15336:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "15330:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15330:13:110"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "15344:19:110",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15346:15:110",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "15355:1:110"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15358:2:110",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "15351:3:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15351:10:110"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "15346:1:110"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "15326:3:110",
                    "statements": []
                  },
                  "src": "15322:113:110"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15461:31:110",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "15474:3:110"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "15479:6:110"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "15470:3:110"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15470:16:110"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15488:1:110",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "15463:6:110"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15463:27:110"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15463:27:110"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "15450:1:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15453:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "15447:2:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15447:13:110"
                  },
                  "nodeType": "YulIf",
                  "src": "15444:48:110"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "15271:3:110",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "15276:3:110",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "15281:6:110",
                "type": ""
              }
            ],
            "src": "15240:258:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15640:137:110",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "15650:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "15670:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "15664:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15664:13:110"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "15654:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "15712:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15720:4:110",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15708:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15708:17:110"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15727:3:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15732:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "15686:21:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15686:53:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15686:53:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15748:23:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15759:3:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "15764:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15755:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15755:16:110"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15748:3:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15616:3:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "15621:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15632:3:110",
                "type": ""
              }
            ],
            "src": "15503:274:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15956:179:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "15973:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15984:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15966:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15966:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15966:21:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16007:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16018:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16003:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16003:18:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16023:2:110",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15996:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15996:30:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15996:30:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16046:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16057:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16042:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16042:18:110"
                      },
                      {
                        "hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16062:31:110",
                        "type": "",
                        "value": "Address: call to non-contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16035:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16035:59:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16035:59:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16103:26:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16115:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16126:2:110",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16111:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16111:18:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16103:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15933:9:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "15947:4:110",
                "type": ""
              }
            ],
            "src": "15782:353:110"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16261:262:110",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16278:9:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16289:2:110",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16271:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16271:21:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16271:21:110"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "16301:27:110",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "16321:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "16315:5:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16315:13:110"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "16305:6:110",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16348:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16359:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16344:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16344:18:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16364:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16337:6:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16337:34:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16337:34:110"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "16406:6:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16414:2:110",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16402:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16402:15:110"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16423:9:110"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16434:2:110",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16419:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16419:18:110"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "16439:6:110"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "16380:21:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16380:66:110"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16380:66:110"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16455:62:110",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16471:9:110"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "16490:6:110"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16498:2:110",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16486:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16486:15:110"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16507:2:110",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "16503:3:110"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16503:7:110"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "16482:3:110"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16482:29:110"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16467:3:110"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16467:45:110"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16514:2:110",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16463:3:110"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16463:54:110"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16455:4:110"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "16230:9:110",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "16241:6:110",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16252:4:110",
                "type": ""
              }
            ],
            "src": "16140:383:110"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_contract$_IVaderPoolV2_$19775__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        validator_revert_address(value)\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptrt_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value2 := add(_2, 32)\n        value3 := length\n        value4 := abi_decode_address(add(headStart, 96))\n        value5 := calldataload(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969t_contract$_IERC20_$969t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let value_2 := calldataload(add(headStart, 128))\n        validator_revert_address(value_2)\n        value4 := value_2\n        value5 := calldataload(add(headStart, 160))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$969__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        let value_2 := calldataload(add(headStart, 160))\n        validator_revert_address(value_2)\n        value5 := value_2\n        value6 := calldataload(add(headStart, 192))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_contract$_IVaderReserve_$20363(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IVaderReserve_$20363__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969t_contract$_IERC20_$969t_uint256t_uint256t_uint256t_uint256t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n        value5 := calldataload(add(headStart, 160))\n        let value_2 := calldataload(add(headStart, 192))\n        validator_revert_address(value_2)\n        value6 := value_2\n        value7 := calldataload(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_411d4f167846a4c286a1c0fd9171ae8544f501cab0ede0a51d5efdd0fd97a847__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"VaderRouterV2::ensure: Expired\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d90086015a0b378cd85c9e33b45912bbb6780a47c9dbc5862371c24a45e76d3a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 66)\n        mstore(add(headStart, 64), \"VaderRouterV2::swapExactTokensFo\")\n        mstore(add(headStart, 96), \"rTokens: Insufficient Trade Outp\")\n        mstore(add(headStart, 128), \"ut\")\n        tail := add(headStart, 160)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_1f9108aafeabe769759ded61ef5c1a37be47a5ac334f600c575fa47b0ff149b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 57)\n        mstore(add(headStart, 64), \"VaderRouterV2::addLiquidity: Uns\")\n        mstore(add(headStart, 96), \"upported Assets Specified\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$969_t_uint256_t_uint256_t_address_t_address__to_t_address_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n        mstore(add(headStart, 128), and(value4, _1))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_cfc546bdff5131ebb080bc10b178123d2cb9dc57e69f0c52bbdfb190d046abad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 61)\n        mstore(add(headStart, 64), \"VaderRouterV2::removeLiquidity: \")\n        mstore(add(headStart, 96), \"Incorrect Addresses Specified\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_e679d7ce27e609c6a4cc438dfcc0bf65e4a4bde9766e90327b13d695c71deff5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"VaderRouterV2: INSUFFICIENT_A_AM\")\n        mstore(add(headStart, 96), \"OUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7d3f1c0277c79a80966ff85541534623194a599817109ba594d0f1c25d0c34f1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"VaderRouterV2: INSUFFICIENT_B_AM\")\n        mstore(add(headStart, 96), \"OUNT\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_8caa7c91773efd29ac2d458ab3ef46f0ea5c68e75911d0f58e8cfee4c05d7657__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 54)\n        mstore(add(headStart, 64), \"VaderRouterV2::initialize: Incor\")\n        mstore(add(headStart, 96), \"rect Reserve Specified\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_contract$_IERC20_$969(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"VaderRouterV2::_swap: Incorrect \")\n        mstore(add(headStart, 96), \"Path\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$969_t_contract$_IERC20_$969_t_uint256_t_address__to_t_address_t_address_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_5b20ce84a770f0929b8ad9dcb1634fd0cbad749a2015c04f624ccab1003e3f74__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"VaderRouterV2::_swap: Incorrect \")\n        mstore(add(headStart, 96), \"Path Length\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$969_t_uint256_t_rational_0_by_1_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$969_t_rational_0_by_1_t_uint256_t_address__to_t_address_t_uint256_t_uint256_t_address__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), and(value3, _1))\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"SafeERC20: ERC20 operation did n\")\n        mstore(add(headStart, 96), \"ot succeed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Address: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r call\")\n        tail := add(headStart, 128)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Address: call to non-contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        copy_memory_to_memory(add(value0, 32), add(headStart, 64), length)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n}",
      "id": 110,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "941:10463:35:-:0;;;1726:252;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:0;734:10:18;936:18:0;:32::i;:::-;-1:-1:-1;;;;;1791:36:35;;1769:133;;;;-1:-1:-1;;;1769:133:35;;658:2:110;1769:133:35;;;640:21:110;697:2;677:18;;;670:30;736:34;716:18;;;709:62;-1:-1:-1;;;787:18:110;;;780:45;842:19;;1769:133:35;;;;;;;;-1:-1:-1;;;;;1915:12:35;;;;;;1952:18;;;-1:-1:-1;;;1952:18:35;;;;:16;;:18;;;;;;;;;;;;;;;1915:12;1952:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1938:32:35;;;-1:-1:-1;941:10463:35;;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;14:145:110:-;-1:-1:-1;;;;;103:31:110;;93:42;;83:70;;149:1;146;139:12;83:70;14:145;:::o;164:287::-;256:6;309:2;297:9;288:7;284:23;280:32;277:52;;;325:1;322;315:12;277:52;357:9;351:16;376:45;415:5;376:45;:::i;:::-;440:5;164:287;-1:-1:-1;;;164:287:110:o;872:279::-;941:10463:35;;;;;;;;;;;;;;",
  "deployedSourceMap": "941:10463:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1230:34;;;;;;;;-1:-1:-1;;;;;200:32:110;;;182:51;;170:2;155:18;1230:34:35;;;;;;;;7780:461;;;;;;:::i;:::-;;:::i;:::-;;;1579:25:110;;;1567:2;1552:18;7780:461:35;1433:177:110;3592:1186:35;;;;;;:::i;:::-;;:::i;1824:101:0:-;;;:::i;:::-;;1322:35:35;;;;;1201:85:0;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;1201:85;;5808:1602:35;;;;;;:::i;:::-;;:::i;:::-;;;;3798:25:110;;;3854:2;3839:18;;3832:34;;;;3771:18;5808:1602:35;3624:248:110;8533:289:35;;;;;;:::i;:::-;;:::i;1403:28::-;;;;;-1:-1:-1;;;;;1403:28:35;;;2345:549;;;;;;:::i;:::-;;:::i;2074:198:0:-;;;;;;:::i;:::-;;:::i;7780:461:35:-;8012:17;7993:8;11331:15;11319:8;:27;;11311:70;;;;-1:-1:-1;;;11311:70:35;;;;;;;:::i;:::-;;;;;;;;;8054:25:::1;8060:8;8070:4;;8076:2;8054:5;:25::i;:::-;8042:37;;8127:12;8114:9;:25;;8092:141;;;::::0;-1:-1:-1;;;8092:141:35;;6103:2:110;8092:141:35::1;::::0;::::1;6085:21:110::0;6142:2;6122:18;;;6115:30;6181:34;6161:18;;;6154:62;6252:34;6232:18;;;6225:62;-1:-1:-1;;;6303:19:110;;;6296:33;6346:19;;8092:141:35::1;5901:470:110::0;8092:141:35::1;7780:461:::0;;;;;;;;;:::o;3592:1186::-;3825:17;3806:8;11331:15;11319:8;:27;;11311:70;;;;-1:-1:-1;;;11311:70:35;;;;;;;:::i;:::-;3855:19:::1;3885:21:::0;3917:22:::1;3966:11;-1:-1:-1::0;;;;;3956:21:35::1;:6;-1:-1:-1::0;;;;;3956:21:35::1;;3952:648;;;4020:22;::::0;-1:-1:-1;;;4020:22:35;;-1:-1:-1;;;;;200:32:110;;;4020:22:35::1;::::0;::::1;182:51:110::0;4020:4:35::1;:14;::::0;::::1;::::0;155:18:110;;4020:22:35::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3994:141;;;;-1:-1:-1::0;;;3994:141:35::1;;;;;;;:::i;:::-;-1:-1:-1::0;4165:6:35;;-1:-1:-1;4248:14:35;;-1:-1:-1;4203:14:35;3952:648:::1;;;4331:11;-1:-1:-1::0;;;;;4321:21:35::1;:6;-1:-1:-1::0;;;;;4321:21:35::1;;:47;;;;-1:-1:-1::0;4346:22:35::1;::::0;-1:-1:-1;;;4346:22:35;;-1:-1:-1;;;;;200:32:110;;;4346:22:35::1;::::0;::::1;182:51:110::0;4346:4:35::1;:14;::::0;::::1;::::0;155:18:110;;4346:22:35::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4295:166;;;;-1:-1:-1::0;;;4295:166:35::1;;;;;;;:::i;:::-;-1:-1:-1::0;4491:6:35;;-1:-1:-1;4574:14:35;;-1:-1:-1;4529:14:35;3952:648:::1;4624:146;::::0;-1:-1:-1;;;4624:146:35;;-1:-1:-1;;;;;7413:15:110;;;4624:146:35::1;::::0;::::1;7395:34:110::0;7445:18;;;7438:34;;;7488:18;;;7481:34;;;4732:10:35::1;7531:18:110::0;;;7524:43;7604:15;;;7583:19;;;7576:44;4624:4:35::1;:9;::::0;::::1;::::0;7329:19:110;;4624:146:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4612:158:::0;3592:1186;-1:-1:-1;;;;;;;;;;;3592:1186:35:o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;5808:1602:35:-;6095:15;6112;6067:8;11331:15;11319:8;:27;;11311:70;;;;-1:-1:-1;;;11311:70:35;;;;;;;:::i;:::-;6168:29:::1;::::0;-1:-1:-1;;;;;;6168:29:35;;::::1;::::0;::::1;1579:25:110::0;;;6145:20:35::1;::::0;6168:4:::1;-1:-1:-1::0;;;;;6168:25:35::1;::::0;::::1;::::0;1552:18:110;;6168:29:35::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6145:52:::0;-1:-1:-1;6230:11:35::1;-1:-1:-1::0;;;;;6271:30:35;;::::1;::::0;;::::1;;6314:438:::0;::::1;;;6388:13;-1:-1:-1::0;;;;;6370:31:35::1;6377:6;-1:-1:-1::0;;;;;6370:31:35::1;;6344:154;;;;-1:-1:-1::0;;;6344:154:35::1;;;;;;;:::i;:::-;6314:438;;;6575:13;-1:-1:-1::0;;;;;6557:31:35::1;6564:6;-1:-1:-1::0;;;;;6557:31:35::1;;:86;;;;;6631:12;-1:-1:-1::0;;;;;6613:30:35::1;6620:6;-1:-1:-1::0;;;;;6613:30:35::1;;6557:86;6531:209;;;;-1:-1:-1::0;;;6531:209:35::1;;;;;;;:::i;:::-;6764:48;::::0;-1:-1:-1;;;6764:48:35;;6782:10:::1;6764:48;::::0;::::1;8760:34:110::0;-1:-1:-1;;;;;6764:4:35::1;:17;8810:18:110::0;;;8803:43;;;8862:18;;;8855:34;;;6764:17:35;::::1;::::0;8695:18:110;;6764:48:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6840:20;6875:21:::0;6911:19:::1;6944:4;-1:-1:-1::0;;;;;6944:9:35::1;;6954:2;6958;6944:17;;;;;;;;;;;;;;;9074:25:110::0;;;-1:-1:-1;;;;;9135:32:110;9130:2;9115:18;;9108:60;9062:2;9047:18;;8900:274;6944:17:35::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6825:136;;;;;;6995:9;:99;;7066:13;7081:12;6995:99;;;7021:12;7035:13;6995:99;6974:120:::0;;-1:-1:-1;6974:120:35;-1:-1:-1;7129:21:35;;::::1;;7107:107;;;::::0;-1:-1:-1;;;7107:107:35;;9692:2:110;7107:107:35::1;::::0;::::1;9674:21:110::0;9731:2;9711:18;;;9704:30;9770:34;9750:18;;;9743:62;-1:-1:-1;;;9821:18:110;;;9814:34;9865:19;;7107:107:35::1;9490:400:110::0;7107:107:35::1;7258:10;7247:7;:21;;7225:107;;;::::0;-1:-1:-1;;;7225:107:35;;10097:2:110;7225:107:35::1;::::0;::::1;10079:21:110::0;10136:2;10116:18;;;10109:30;10175:34;10155:18;;;10148:62;-1:-1:-1;;;10226:18:110;;;10219:34;10270:19;;7225:107:35::1;9895:400:110::0;7225:107:35::1;7345:7;::::0;:57:::1;::::0;-1:-1:-1;;;7345:57:35;;7378:10:::1;7345:57;::::0;::::1;10474:51:110::0;10541:18;;;10534:34;;;-1:-1:-1;;;;;7345:7:35;;::::1;::::0;:32:::1;::::0;10447:18:110;;7345:57:35::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;6134:1276;;;;;;5808:1602:::0;;;;;;;;;;;:::o;8533:289::-;1094:13:0;:11;:13::i;:::-;-1:-1:-1;;;;;8629:40:35;::::1;8607:144;;;::::0;-1:-1:-1;;;8607:144:35;;10781:2:110;8607:144:35::1;::::0;::::1;10763:21:110::0;10820:2;10800:18;;;10793:30;10859:34;10839:18;;;10832:62;-1:-1:-1;;;10910:18:110;;;10903:52;10972:19;;8607:144:35::1;10579:418:110::0;8607:144:35::1;8764:7;:18:::0;;-1:-1:-1;;;;;;8764:18:35::1;-1:-1:-1::0;;;;;8764:18:35;::::1;;::::0;;8795:19:::1;:17;:19::i;:::-;8533:289:::0;:::o;2345:549::-;2645:17;2695:191;2726:6;2751;2776:14;2809;2842:2;2863:8;2695:12;:191::i;:::-;2675:211;2345:549;-1:-1:-1;;;;;;;;;2345:549:35:o;2074:198:0:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2162:22:0;::::1;2154:73;;;::::0;-1:-1:-1;;;2154:73:0;;11204:2:110;2154:73:0::1;::::0;::::1;11186:21:110::0;11243:2;11223:18;;;11216:30;11282:34;11262:18;;;11255:62;-1:-1:-1;;;11333:18:110;;;11326:36;11379:19;;2154:73:0::1;11002:402:110::0;2154:73:0::1;2237:28;2256:8;2237:18;:28::i;9839:1285:35:-:0;9959:17;10008:1;9993:16;;9989:1128;;;10063:4;;10068:1;10063:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10052:18:35;:4;;10057:1;10052:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10052:18:35;;;:72;;;;;10106:4;-1:-1:-1;;;;;10106:16:35;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10095:29:35;:4;;10100:1;10095:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10095:29:35;;10052:72;:115;;;;;10160:4;;10165:1;10160:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10149:18:35;:4;;10154:1;10149:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10149:18:35;;;10052:115;10026:213;;;;-1:-1:-1;;;10026:213:35;;;;;;;:::i;:::-;10256:61;10281:10;10301:4;10308:8;10256:4;;10261:1;10256:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10256:24:35;;:61;;:24;:61::i;:::-;10341:4;-1:-1:-1;;;;;10341:15:35;;10357:4;;10362:1;10357:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10366:4;;10371:1;10366:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10341:47;;-1:-1:-1;;;;;;10341:47:35;;;;;;;-1:-1:-1;;;;;12527:15:110;;;10341:47:35;;;12509:34:110;12579:15;;;12559:18;;;12552:43;12611:18;;;12604:34;;;12674:15;;;12654:18;;;12647:43;12443:19;;10341:47:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10334:54;;;;9989:1128;10462:1;10447:16;;10421:121;;;;-1:-1:-1;;;10421:121:35;;12903:2:110;10421:121:35;;;12885:21:110;12942:2;12922:18;;;12915:30;12981:34;12961:18;;;12954:62;-1:-1:-1;;;13032:18:110;;;13025:41;13083:19;;10421:121:35;12701:407:110;10421:121:35;10579:11;10624:4;;10629:1;10624:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10613:18:35;:4;;10618:1;10613:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10613:18:35;;;10605:67;;;;-1:-1:-1;;;10605:67:35;;;;;;;:::i;:::-;10689:61;10714:10;10734:4;10741:8;10689:4;;10694:1;10689:7;;;;;;;:::i;:61::-;10780:12;-1:-1:-1;;;;;10769:23:35;:4;;10774:1;10769:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10769:23:35;;10765:341;;;10820:4;-1:-1:-1;;;;;10820:9:35;;10830:4;;10835:1;10830:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;10820:35;;-1:-1:-1;;;;;;10820:35:35;;;;;;;-1:-1:-1;;;;;13422:15:110;;;10820:35:35;;;13404:34:110;13454:18;;;13447:34;;;10849:1:35;13497:18:110;;;13490:34;13560:15;;;13540:18;;;13533:43;13338:19;;10820:35:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10813:42;;;;;10765:341;10937:12;-1:-1:-1;;;;;10926:23:35;:4;;10931:1;10926:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;10926:23:35;;10896:133;;;;-1:-1:-1;;;10896:133:35;;;;;;;:::i;:::-;11055:4;-1:-1:-1;;;;;11055:9:35;;11065:4;;11070:1;11065:7;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;11055:35;;-1:-1:-1;;;;;;11055:35:35;;;;;;;-1:-1:-1;;;;;13422:15:110;;;11055:35:35;;;13404:34:110;11074:1:35;13454:18:110;;;13447:34;13497:18;;;13490:34;;;13560:15;;;13540:18;;;13533:43;13338:19;;11055:35:35;13113:469:110;9989:1128:35;9839:1285;;;;;;:::o;1359:130:0:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:0;734:10:18;1422:23:0;1414:68;;;;-1:-1:-1;;;1414:68:0;;14263:2:110;1414:68:0;;;14245:21:110;;;14282:18;;;14275:30;14341:34;14321:18;;;14314:62;14393:18;;1414:68:0;14061:356:110;2426:187:0;2499:16;2518:6;;-1:-1:-1;;;;;2534:17:0;;;-1:-1:-1;;;;;;2534:17:0;;;;;;2566:40;;2518:6;;;;;;;2566:40;;2499:16;2566:40;2489:124;2426:187;:::o;1355:203:12:-;1482:68;;;-1:-1:-1;;;;;8778:15:110;;;1482:68:12;;;8760:34:110;8830:15;;8810:18;;;8803:43;8862:18;;;;8855:34;;;1482:68:12;;;;;;;;;;8695:18:110;;;;1482:68:12;;;;;;;;-1:-1:-1;;;;;1482:68:12;-1:-1:-1;;;1482:68:12;;;1455:96;;1475:5;;1455:19;:96::i;:::-;1355:203;;;;:::o;5196:642::-;5615:23;5641:69;5669:4;5641:69;;;;;;;;;;;;;;;;;5649:5;-1:-1:-1;;;;;5641:27:12;;;:69;;;;;:::i;:::-;5615:95;;5728:10;:17;5749:1;5728:22;:56;;;;5765:10;5754:30;;;;;;;;;;;;:::i;:::-;5720:111;;;;-1:-1:-1;;;5720:111:12;;14624:2:110;5720:111:12;;;14606:21:110;14663:2;14643:18;;;14636:30;14702:34;14682:18;;;14675:62;-1:-1:-1;;;14753:18:110;;;14746:40;14803:19;;5720:111:12;14422:406:110;5720:111:12;5266:572;5196:642;;:::o;4108:223:17:-;4241:12;4272:52;4294:6;4302:4;4308:1;4311:12;4241;5446;5460:23;5487:6;-1:-1:-1;;;;;5487:11:17;5506:5;5513:4;5487:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5445:73;;;;5535:69;5562:6;5570:7;5579:10;5591:12;5535:26;:69::i;:::-;5528:76;5165:446;-1:-1:-1;;;;;;;5165:446:17:o;7671:628::-;7851:12;7879:7;7875:418;;;7906:17;;7902:286;;-1:-1:-1;;;;;1702:19:17;;;8113:60;;;;-1:-1:-1;;;8113:60:17;;15984:2:110;8113:60:17;;;15966:21:110;16023:2;16003:18;;;15996:30;16062:31;16042:18;;;16035:59;16111:18;;8113:60:17;15782:353:110;8113:60:17;-1:-1:-1;8208:10:17;8201:17;;7875:418;8249:33;8257:10;8269:12;8980:17;;:21;8976:379;;9208:10;9202:17;9264:15;9251:10;9247:2;9243:19;9236:44;8976:379;9331:12;9324:20;;-1:-1:-1;;;9324:20:17;;;;;;;;:::i;244:131:110:-;-1:-1:-1;;;;;319:31:110;;309:42;;299:70;;365:1;362;355:12;380:134;448:20;;477:31;448:20;477:31;:::i;:::-;380:134;;;:::o;519:909::-;655:6;663;671;679;687;695;748:3;736:9;727:7;723:23;719:33;716:53;;;765:1;762;755:12;716:53;801:9;788:23;778:33;;858:2;847:9;843:18;830:32;820:42;;913:2;902:9;898:18;885:32;936:18;977:2;969:6;966:14;963:34;;;993:1;990;983:12;963:34;1031:6;1020:9;1016:22;1006:32;;1076:7;1069:4;1065:2;1061:13;1057:27;1047:55;;1098:1;1095;1088:12;1047:55;1138:2;1125:16;1164:2;1156:6;1153:14;1150:34;;;1180:1;1177;1170:12;1150:34;1233:7;1228:2;1218:6;1215:1;1211:14;1207:2;1203:23;1199:32;1196:45;1193:65;;;1254:1;1251;1244:12;1193:65;1285:2;1281;1277:11;1267:21;;1307:6;1297:16;;;;;1332:38;1366:2;1355:9;1351:18;1332:38;:::i;:::-;1322:48;;1417:3;1406:9;1402:19;1389:33;1379:43;;519:909;;;;;;;;:::o;1615:764::-;1747:6;1755;1763;1771;1779;1787;1840:3;1828:9;1819:7;1815:23;1811:33;1808:53;;;1857:1;1854;1847:12;1808:53;1896:9;1883:23;1915:31;1940:5;1915:31;:::i;:::-;1965:5;-1:-1:-1;2022:2:110;2007:18;;1994:32;2035:33;1994:32;2035:33;:::i;:::-;2087:7;-1:-1:-1;2141:2:110;2126:18;;2113:32;;-1:-1:-1;2192:2:110;2177:18;;2164:32;;-1:-1:-1;2248:3:110;2233:19;;2220:33;2262;2220;2262;:::i;:::-;2314:7;2304:17;;;2368:3;2357:9;2353:19;2340:33;2330:43;;1615:764;;;;;;;;:::o;2814:805::-;2927:6;2935;2943;2951;2959;2967;2975;3028:3;3016:9;3007:7;3003:23;2999:33;2996:53;;;3045:1;3042;3035:12;2996:53;3084:9;3071:23;3103:31;3128:5;3103:31;:::i;:::-;3153:5;-1:-1:-1;3210:2:110;3195:18;;3182:32;3223:33;3182:32;3223:33;:::i;:::-;3275:7;-1:-1:-1;3329:2:110;3314:18;;3301:32;;-1:-1:-1;3380:2:110;3365:18;;3352:32;;-1:-1:-1;3431:3:110;3416:19;;3403:33;;-1:-1:-1;3488:3:110;3473:19;;3460:33;3502;3460;3502;:::i;:::-;3554:7;3544:17;;;3608:3;3597:9;3593:19;3580:33;3570:43;;2814:805;;;;;;;;;;:::o;3877:270::-;3959:6;4012:2;4000:9;3991:7;3987:23;3983:32;3980:52;;;4028:1;4025;4018:12;3980:52;4067:9;4054:23;4086:31;4111:5;4086:31;:::i;:::-;4136:5;3877:270;-1:-1:-1;;;3877:270:110:o;4383:902::-;4533:6;4541;4549;4557;4565;4573;4581;4589;4642:3;4630:9;4621:7;4617:23;4613:33;4610:53;;;4659:1;4656;4649:12;4610:53;4698:9;4685:23;4717:31;4742:5;4717:31;:::i;:::-;4767:5;-1:-1:-1;4824:2:110;4809:18;;4796:32;4837:33;4796:32;4837:33;:::i;:::-;4889:7;-1:-1:-1;4943:2:110;4928:18;;4915:32;;-1:-1:-1;4994:2:110;4979:18;;4966:32;;-1:-1:-1;5045:3:110;5030:19;;5017:33;;-1:-1:-1;5097:3:110;5082:19;;5069:33;;-1:-1:-1;5154:3:110;5139:19;;5126:33;5168;5126;5168;:::i;:::-;5220:7;5210:17;;;5274:3;5263:9;5259:19;5246:33;5236:43;;4383:902;;;;;;;;;;;:::o;5542:354::-;5744:2;5726:21;;;5783:2;5763:18;;;5756:30;5822:32;5817:2;5802:18;;5795:60;5887:2;5872:18;;5542:354::o;6376:277::-;6443:6;6496:2;6484:9;6475:7;6471:23;6467:32;6464:52;;;6512:1;6509;6502:12;6464:52;6544:9;6538:16;6597:5;6590:13;6583:21;6576:5;6573:32;6563:60;;6619:1;6616;6609:12;6658:421;6860:2;6842:21;;;6899:2;6879:18;;;6872:30;6938:34;6933:2;6918:18;;6911:62;7009:27;7004:2;6989:18;;6982:55;7069:3;7054:19;;6658:421::o;7631:184::-;7701:6;7754:2;7742:9;7733:7;7729:23;7725:32;7722:52;;;7770:1;7767;7760:12;7722:52;-1:-1:-1;7793:16:110;;7631:184;-1:-1:-1;7631:184:110:o;7820:265::-;7904:6;7957:2;7945:9;7936:7;7932:23;7928:32;7925:52;;;7973:1;7970;7963:12;7925:52;8005:9;7999:16;8024:31;8049:5;8024:31;:::i;8090:425::-;8292:2;8274:21;;;8331:2;8311:18;;;8304:30;8370:34;8365:2;8350:18;;8343:62;8441:31;8436:2;8421:18;;8414:59;8505:3;8490:19;;8090:425::o;9179:306::-;9267:6;9275;9283;9336:2;9324:9;9315:7;9311:23;9307:32;9304:52;;;9352:1;9349;9342:12;9304:52;9381:9;9375:16;9365:26;;9431:2;9420:9;9416:18;9410:25;9400:35;;9475:2;9464:9;9460:18;9454:25;9444:35;;9179:306;;;;;:::o;11409:127::-;11470:10;11465:3;11461:20;11458:1;11451:31;11501:4;11498:1;11491:15;11525:4;11522:1;11515:15;11807:400;12009:2;11991:21;;;12048:2;12028:18;;;12021:30;12087:34;12082:2;12067:18;;12060:62;-1:-1:-1;;;12153:2:110;12138:18;;12131:34;12197:3;12182:19;;11807:400::o;15240:258::-;15312:1;15322:113;15336:6;15333:1;15330:13;15322:113;;;15412:11;;;15406:18;15393:11;;;15386:39;15358:2;15351:10;15322:113;;;15453:6;15450:1;15447:13;15444:48;;;-1:-1:-1;;15488:1:110;15470:16;;15463:27;15240:258::o;15503:274::-;15632:3;15670:6;15664:13;15686:53;15732:6;15727:3;15720:4;15712:6;15708:17;15686:53;:::i;:::-;15755:16;;;;;15503:274;-1:-1:-1;;15503:274:110:o;16140:383::-;16289:2;16278:9;16271:21;16252:4;16321:6;16315:13;16364:6;16359:2;16348:9;16344:18;16337:34;16380:66;16439:6;16434:2;16423:9;16419:18;16414:2;16406:6;16402:15;16380:66;:::i;:::-;16507:2;16486:15;-1:-1:-1;;16482:29:110;16467:45;;;;16514:2;16463:54;;16140:383;-1:-1:-1;;16140:383:110:o",
  "source": "// SPDX-License-Identifier: Unlicense\r\n\r\npragma solidity =0.8.9;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\r\n\r\nimport \"../../shared/ProtocolConstants.sol\";\r\n\r\nimport \"../../dex/math/VaderMath.sol\";\r\n\r\nimport \"../../interfaces/reserve/IVaderReserve.sol\";\r\nimport \"../../interfaces/dex-v2/router/IVaderRouterV2.sol\";\r\nimport \"../../interfaces/dex-v2/pool/IVaderPoolV2.sol\";\r\n\r\n/*\r\n @dev Implementation of {VaderRouterV2} contract.\r\n *\r\n * The contract VaderRouter inherits from {Ownable} and {ProtocolConstants} contracts.\r\n *\r\n * It allows adding of liquidity to Vader pairs.\r\n *\r\n * Allows removing of liquidity by the users and claiming the underlying assets from\r\n * the Vader pairs/pools.\r\n *\r\n * Allows swapping between native and foreign assets within a single Vader pair.\r\n *\r\n * Allows swapping of foreign assets across two different Vader pairs.\r\n **/\r\ncontract VaderRouterV2 is IVaderRouterV2, ProtocolConstants, Ownable {\r\n    /* ========== LIBRARIES ========== */\r\n\r\n    // Used for safe token transfers\r\n    using SafeERC20 for IERC20;\r\n\r\n    /* ========== STATE VARIABLES ========== */\r\n\r\n    // Address of the Vader pool contract.\r\n    IVaderPoolV2 public immutable pool;\r\n\r\n    // Address of native asset (USDV or Vader).\r\n    IERC20 public immutable nativeAsset;\r\n\r\n    // Address of reserve contract.\r\n    IVaderReserve public reserve;\r\n\r\n    /* ========== CONSTRUCTOR ========== */\r\n\r\n    /*\r\n     * @dev Initialises contract by setting pool and native asset addresses.\r\n     *\r\n     * Native assets address is taken from param {_pool} and native asset's address\r\n     * is retrieved from {VaderPoolV2} contract.\r\n     **/\r\n    constructor(IVaderPoolV2 _pool) {\r\n        require(\r\n            _pool != IVaderPoolV2(_ZERO_ADDRESS),\r\n            \"VaderRouterV2::constructor: Incorrect Arguments\"\r\n        );\r\n\r\n        pool = _pool;\r\n        nativeAsset = pool.nativeAsset();\r\n    }\r\n\r\n    /* ========== VIEWS ========== */\r\n\r\n    /* ========== MUTATIVE FUNCTIONS ========== */\r\n\r\n    /*\r\n     * @dev Allows adding of liquidity to the Vader pool.\r\n     *\r\n     * Internally calls {addLiquidity} function.\r\n     *\r\n     * Returns the amount of liquidity minted.\r\n     **/\r\n    // NOTE: For Uniswap V2 compliancy, necessary due to stack too deep\r\n    function addLiquidity(\r\n        IERC20 tokenA,\r\n        IERC20 tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        uint256, // amountAMin = unused\r\n        uint256, // amountBMin = unused\r\n        address to,\r\n        uint256 deadline\r\n    ) external override returns (uint256 liquidity) {\r\n        return\r\n            addLiquidity(\r\n                tokenA,\r\n                tokenB,\r\n                amountADesired,\r\n                amountBDesired,\r\n                to,\r\n                deadline\r\n            );\r\n    }\r\n\r\n    /*\r\n     * @dev Allows adding of liquidity to the Vader pool.\r\n     *\r\n     * Calls `mint` function on the {BasePoolV2} contract.\r\n     *\r\n     * Pair is determined based {tokenA} and {tokenB} where one of them represents\r\n     * native asset and the other one represents foreign asset.\r\n     *\r\n     * Returns the amount of liquidity units minted against a pair.\r\n     *\r\n     * Requirements:\r\n     * - The current timestamp has not exceeded the param {deadline}.\r\n     * - Amongst {tokenA} and {tokenB}, one should be the native asset and the other\r\n     *   one must be the foreign asset.\r\n     * - The foreign asset among {tokenA} and {tokenB} must be a supported token.\r\n     **/\r\n    function addLiquidity(\r\n        IERC20 tokenA,\r\n        IERC20 tokenB,\r\n        uint256 amountADesired,\r\n        uint256 amountBDesired,\r\n        address to,\r\n        uint256 deadline\r\n    ) public override ensure(deadline) returns (uint256 liquidity) {\r\n        IERC20 foreignAsset;\r\n        uint256 nativeDeposit;\r\n        uint256 foreignDeposit;\r\n\r\n        if (tokenA == nativeAsset) {\r\n            require(\r\n                pool.supported(tokenB),\r\n                \"VaderRouterV2::addLiquidity: Unsupported Assets Specified\"\r\n            );\r\n            foreignAsset = tokenB;\r\n            foreignDeposit = amountBDesired;\r\n            nativeDeposit = amountADesired;\r\n        } else {\r\n            require(\r\n                tokenB == nativeAsset && pool.supported(tokenA),\r\n                \"VaderRouterV2::addLiquidity: Unsupported Assets Specified\"\r\n            );\r\n            foreignAsset = tokenA;\r\n            foreignDeposit = amountADesired;\r\n            nativeDeposit = amountBDesired;\r\n        }\r\n\r\n        liquidity = pool.mint(\r\n            foreignAsset,\r\n            nativeDeposit,\r\n            foreignDeposit,\r\n            msg.sender,\r\n            to\r\n        );\r\n    }\r\n\r\n    /*\r\n     * @dev Allows removing of liquidity by {msg.sender} and transfers the\r\n     * underlying assets to {to} address.\r\n     *\r\n     * The liquidity is removed from a pair represented by {tokenA} and {tokenB}.\r\n     *\r\n     * Transfers the NFT with Id {id} representing user's position, to the pool address,\r\n     * so the pool is able to burn it in the `burn` function call.\r\n     *\r\n     * Calls the `burn` function on the pool contract.\r\n     *\r\n     * Calls the `reimburseImpermanentLoss` on reserve contract to cover impermanent loss\r\n     * for the liquidity being removed.\r\n     *\r\n     * Requirements:\r\n     * - The underlying assets amounts of {amountA} and {amountB} must\r\n     *   be greater than or equal to {amountAMin} and {amountBMin}, respectively.\r\n     * - The current timestamp has not exceeded the param {deadline}.\r\n     * - Either of {tokenA} or {tokenB} should be a native asset and the other one\r\n     *   must be the foreign asset associated with the NFT representing liquidity.\r\n     **/\r\n    function removeLiquidity(\r\n        address tokenA,\r\n        address tokenB,\r\n        uint256 id,\r\n        uint256 amountAMin,\r\n        uint256 amountBMin,\r\n        address to,\r\n        uint256 deadline\r\n    )\r\n        public\r\n        override\r\n        ensure(deadline)\r\n        returns (uint256 amountA, uint256 amountB)\r\n    {\r\n        IERC20 _foreignAsset = pool.positionForeignAsset(id);\r\n        IERC20 _nativeAsset = nativeAsset;\r\n\r\n        bool isNativeA = _nativeAsset == IERC20(tokenA);\r\n\r\n        if (isNativeA) {\r\n            require(\r\n                IERC20(tokenB) == _foreignAsset,\r\n                \"VaderRouterV2::removeLiquidity: Incorrect Addresses Specified\"\r\n            );\r\n        } else {\r\n            require(\r\n                IERC20(tokenA) == _foreignAsset &&\r\n                    IERC20(tokenB) == _nativeAsset,\r\n                \"VaderRouterV2::removeLiquidity: Incorrect Addresses Specified\"\r\n            );\r\n        }\r\n\r\n        pool.transferFrom(msg.sender, address(pool), id);\r\n\r\n        (\r\n            uint256 amountNative,\r\n            uint256 amountForeign,\r\n            uint256 coveredLoss\r\n        ) = pool.burn(id, to);\r\n\r\n        (amountA, amountB) = isNativeA\r\n            ? (amountNative, amountForeign)\r\n            : (amountForeign, amountNative);\r\n\r\n        require(\r\n            amountA >= amountAMin,\r\n            \"VaderRouterV2: INSUFFICIENT_A_AMOUNT\"\r\n        );\r\n        require(\r\n            amountB >= amountBMin,\r\n            \"VaderRouterV2: INSUFFICIENT_B_AMOUNT\"\r\n        );\r\n\r\n        reserve.reimburseImpermanentLoss(msg.sender, coveredLoss);\r\n    }\r\n\r\n    /*\r\n     * @dev Allows swapping of exact source token amount to destination\r\n     * token amount.\r\n     *\r\n     * Internally calls {_swap} function.\r\n     *\r\n     * Requirements:\r\n     * - The destination amount {amountOut} must greater than or equal to param {amountOutMin}.\r\n     * - The current timestamp has not exceeded the param {deadline}.\r\n     **/\r\n    function swapExactTokensForTokens(\r\n        uint256 amountIn,\r\n        uint256 amountOutMin,\r\n        IERC20[] calldata path,\r\n        address to,\r\n        uint256 deadline\r\n    ) external virtual override ensure(deadline) returns (uint256 amountOut) {\r\n        amountOut = _swap(amountIn, path, to);\r\n\r\n        require(\r\n            amountOut >= amountOutMin,\r\n            \"VaderRouterV2::swapExactTokensForTokens: Insufficient Trade Output\"\r\n        );\r\n    }\r\n\r\n    /* ========== RESTRICTED FUNCTIONS ========== */\r\n\r\n    /*\r\n    * @dev Sets the reserve address and renounces contract's ownership.\r\n     *\r\n     * Requirements:\r\n     * - Only existing owner can call this function.\r\n     * - Param {_reserve} cannot be a zero address.\r\n     **/\r\n    function initialize(IVaderReserve _reserve) external onlyOwner {\r\n        require(\r\n            _reserve != IVaderReserve(_ZERO_ADDRESS),\r\n            \"VaderRouterV2::initialize: Incorrect Reserve Specified\"\r\n        );\r\n\r\n        reserve = _reserve;\r\n\r\n        renounceOwnership();\r\n    }\r\n\r\n    /* ========== INTERNAL FUNCTIONS ========== */\r\n\r\n    /* ========== PRIVATE FUNCTIONS ========== */\r\n\r\n    /*\r\n     * @dev Allows swapping of assets from within a single Vader pool pair or\r\n     * across two different Vader pairs.\r\n     *\r\n     * In case of a single Vader pair, the native asset can be swapped for foreign\r\n     * asset and vice versa.\r\n     *\r\n     * In case of two Vader pairs, the foreign asset is swapped for native asset from\r\n     * the first Vader pool and the native asset retrieved from the first Vader pair is swapped\r\n     * for foreign asset from the second Vader pair.\r\n     *\r\n     * Requirements:\r\n     * - Param {path} length can be either 2 or 3.\r\n     * - If the {path} length is 3 the index 0 and 1 must contain foreign assets' addresses\r\n     *   and index 1 must contain native asset's address.\r\n     * - If the {path} length is 2 then either of indexes must contain foreign asset's address\r\n     *   and the other one must contain native asset's address.\r\n     **/\r\n    function _swap(\r\n        uint256 amountIn,\r\n        IERC20[] calldata path,\r\n        address to\r\n    ) private returns (uint256 amountOut) {\r\n        if (path.length == 3) {\r\n            require(\r\n                path[0] != path[1] &&\r\n                    path[1] == pool.nativeAsset() &&\r\n                    path[2] != path[1],\r\n                \"VaderRouterV2::_swap: Incorrect Path\"\r\n            );\r\n\r\n            path[0].safeTransferFrom(msg.sender, address(pool), amountIn);\r\n\r\n            return pool.doubleSwap(path[0], path[2], amountIn, to);\r\n        } else {\r\n            require(\r\n                path.length == 2,\r\n                \"VaderRouterV2::_swap: Incorrect Path Length\"\r\n            );\r\n            IERC20 _nativeAsset = nativeAsset;\r\n            require(path[0] != path[1], \"VaderRouterV2::_swap: Incorrect Path\");\r\n\r\n            path[0].safeTransferFrom(msg.sender, address(pool), amountIn);\r\n            if (path[0] == _nativeAsset) {\r\n                return pool.swap(path[1], amountIn, 0, to);\r\n            } else {\r\n                require(\r\n                    path[1] == _nativeAsset,\r\n                    \"VaderRouterV2::_swap: Incorrect Path\"\r\n                );\r\n                return pool.swap(path[0], 0, amountIn, to);\r\n            }\r\n        }\r\n    }\r\n\r\n    /* ========== MODIFIERS ========== */\r\n\r\n    // Guard ensuring that the current timestamp has not exceeded the param {deadline}.\r\n    modifier ensure(uint256 deadline) {\r\n        require(deadline >= block.timestamp, \"VaderRouterV2::ensure: Expired\");\r\n        _;\r\n    }\r\n}\r\n",
  "sourcePath": "/home/mingyue/sub_contract_content/Web3Bugs/contracts/52/contracts/dex-v2/router/VaderRouterV2.sol",
  "ast": {
    "absolutePath": "project:/contracts/dex-v2/router/VaderRouterV2.sol",
    "exportedSymbols": {
      "Address": [
        3730
      ],
      "Context": [
        3760
      ],
      "IBasePoolV2": [
        19623
      ],
      "IERC165": [
        5523
      ],
      "IERC20": [
        969
      ],
      "IERC20Permit": [
        1936
      ],
      "IERC721": [
        3355
      ],
      "IVaderPoolV2": [
        19775
      ],
      "IVaderReserve": [
        20363
      ],
      "IVaderRouterV2": [
        19859
      ],
      "Ownable": [
        112
      ],
      "ProtocolConstants": [
        21440
      ],
      "SafeERC20": [
        2312
      ],
      "VaderMath": [
        11519
      ],
      "VaderRouterV2": [
        10676
      ]
    },
    "id": 10677,
    "license": "Unlicense",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10136,
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "41:23:35"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 10137,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10677,
        "sourceUnit": 113,
        "src": "68:52:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "id": 10138,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10677,
        "sourceUnit": 2313,
        "src": "122:65:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/shared/ProtocolConstants.sol",
        "file": "../../shared/ProtocolConstants.sol",
        "id": 10139,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10677,
        "sourceUnit": 21441,
        "src": "191:44:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/dex/math/VaderMath.sol",
        "file": "../../dex/math/VaderMath.sol",
        "id": 10140,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10677,
        "sourceUnit": 11520,
        "src": "239:38:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/reserve/IVaderReserve.sol",
        "file": "../../interfaces/reserve/IVaderReserve.sol",
        "id": 10141,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10677,
        "sourceUnit": 20364,
        "src": "281:52:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/dex-v2/router/IVaderRouterV2.sol",
        "file": "../../interfaces/dex-v2/router/IVaderRouterV2.sol",
        "id": 10142,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10677,
        "sourceUnit": 19860,
        "src": "335:59:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/interfaces/dex-v2/pool/IVaderPoolV2.sol",
        "file": "../../interfaces/dex-v2/pool/IVaderPoolV2.sol",
        "id": 10143,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10677,
        "sourceUnit": 19776,
        "src": "396:55:35",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10144,
              "name": "IVaderRouterV2",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 19859,
              "src": "967:14:35"
            },
            "id": 10145,
            "nodeType": "InheritanceSpecifier",
            "src": "967:14:35"
          },
          {
            "baseName": {
              "id": 10146,
              "name": "ProtocolConstants",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21440,
              "src": "983:17:35"
            },
            "id": 10147,
            "nodeType": "InheritanceSpecifier",
            "src": "983:17:35"
          },
          {
            "baseName": {
              "id": 10148,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 112,
              "src": "1002:7:35"
            },
            "id": 10149,
            "nodeType": "InheritanceSpecifier",
            "src": "1002:7:35"
          }
        ],
        "canonicalName": "VaderRouterV2",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 10676,
        "linearizedBaseContracts": [
          10676,
          112,
          3760,
          21440,
          19859
        ],
        "name": "VaderRouterV2",
        "nameLocation": "950:13:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 10153,
            "libraryName": {
              "id": 10150,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2312,
              "src": "1106:9:35"
            },
            "nodeType": "UsingForDirective",
            "src": "1100:27:35",
            "typeName": {
              "id": 10152,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10151,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 969,
                "src": "1120:6:35"
              },
              "referencedDeclaration": 969,
              "src": "1120:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$969",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "16f0115b",
            "id": 10156,
            "mutability": "immutable",
            "name": "pool",
            "nameLocation": "1260:4:35",
            "nodeType": "VariableDeclaration",
            "scope": 10676,
            "src": "1230:34:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
              "typeString": "contract IVaderPoolV2"
            },
            "typeName": {
              "id": 10155,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10154,
                "name": "IVaderPoolV2",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 19775,
                "src": "1230:12:35"
              },
              "referencedDeclaration": 19775,
              "src": "1230:12:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                "typeString": "contract IVaderPoolV2"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "74d32ad4",
            "id": 10159,
            "mutability": "immutable",
            "name": "nativeAsset",
            "nameLocation": "1346:11:35",
            "nodeType": "VariableDeclaration",
            "scope": 10676,
            "src": "1322:35:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$969",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 10158,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10157,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 969,
                "src": "1322:6:35"
              },
              "referencedDeclaration": 969,
              "src": "1322:6:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$969",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cd3293de",
            "id": 10162,
            "mutability": "mutable",
            "name": "reserve",
            "nameLocation": "1424:7:35",
            "nodeType": "VariableDeclaration",
            "scope": 10676,
            "src": "1403:28:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IVaderReserve_$20363",
              "typeString": "contract IVaderReserve"
            },
            "typeName": {
              "id": 10161,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10160,
                "name": "IVaderReserve",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 20363,
                "src": "1403:13:35"
              },
              "referencedDeclaration": 20363,
              "src": "1403:13:35",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                "typeString": "contract IVaderReserve"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10187,
              "nodeType": "Block",
              "src": "1758:220:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                          "typeString": "contract IVaderPoolV2"
                        },
                        "id": 10173,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10169,
                          "name": "_pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10165,
                          "src": "1791:5:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                            "typeString": "contract IVaderPoolV2"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10171,
                              "name": "_ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21375,
                              "src": "1813:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10170,
                            "name": "IVaderPoolV2",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19775,
                            "src": "1800:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVaderPoolV2_$19775_$",
                              "typeString": "type(contract IVaderPoolV2)"
                            }
                          },
                          "id": 10172,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1800:27:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                            "typeString": "contract IVaderPoolV2"
                          }
                        },
                        "src": "1791:36:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a636f6e7374727563746f723a20496e636f727265637420417267756d656e7473",
                        "id": 10174,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1842:49:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e45457b54ebd1f8ec41b55b7f5a2990670773ef97c7c3824cf0f08916bbd0e07",
                          "typeString": "literal_string \"VaderRouterV2::constructor: Incorrect Arguments\""
                        },
                        "value": "VaderRouterV2::constructor: Incorrect Arguments"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e45457b54ebd1f8ec41b55b7f5a2990670773ef97c7c3824cf0f08916bbd0e07",
                          "typeString": "literal_string \"VaderRouterV2::constructor: Incorrect Arguments\""
                        }
                      ],
                      "id": 10168,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1769:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1769:133:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10176,
                  "nodeType": "ExpressionStatement",
                  "src": "1769:133:35"
                },
                {
                  "expression": {
                    "id": 10179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10177,
                      "name": "pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10156,
                      "src": "1915:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                        "typeString": "contract IVaderPoolV2"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10178,
                      "name": "_pool",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10165,
                      "src": "1922:5:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                        "typeString": "contract IVaderPoolV2"
                      }
                    },
                    "src": "1915:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                      "typeString": "contract IVaderPoolV2"
                    }
                  },
                  "id": 10180,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:12:35"
                },
                {
                  "expression": {
                    "id": 10185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10181,
                      "name": "nativeAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10159,
                      "src": "1938:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "id": 10182,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10156,
                          "src": "1952:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                            "typeString": "contract IVaderPoolV2"
                          }
                        },
                        "id": 10183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nativeAsset",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19487,
                        "src": "1952:16:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$969_$",
                          "typeString": "function () view external returns (contract IERC20)"
                        }
                      },
                      "id": 10184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1952:18:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1938:32:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 10186,
                  "nodeType": "ExpressionStatement",
                  "src": "1938:32:35"
                }
              ]
            },
            "id": 10188,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10165,
                  "mutability": "mutable",
                  "name": "_pool",
                  "nameLocation": "1751:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10188,
                  "src": "1738:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                    "typeString": "contract IVaderPoolV2"
                  },
                  "typeName": {
                    "id": 10164,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10163,
                      "name": "IVaderPoolV2",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 19775,
                      "src": "1738:12:35"
                    },
                    "referencedDeclaration": 19775,
                    "src": "1738:12:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                      "typeString": "contract IVaderPoolV2"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1737:20:35"
            },
            "returnParameters": {
              "id": 10167,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1758:0:35"
            },
            "scope": 10676,
            "src": "1726:252:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19801
            ],
            "body": {
              "id": 10221,
              "nodeType": "Block",
              "src": "2664:230:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10213,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10191,
                        "src": "2726:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 10214,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10194,
                        "src": "2751:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 10215,
                        "name": "amountADesired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10196,
                        "src": "2776:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10216,
                        "name": "amountBDesired",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10198,
                        "src": "2809:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10217,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10204,
                        "src": "2842:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10218,
                        "name": "deadline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10206,
                        "src": "2863:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 10212,
                      "name": "addLiquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10318,
                      "src": "2695:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$969_$_t_contract$_IERC20_$969_$_t_uint256_$_t_uint256_$_t_address_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (contract IERC20,contract IERC20,uint256,uint256,address,uint256) returns (uint256)"
                      }
                    },
                    "id": 10219,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2695:191:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 10211,
                  "id": 10220,
                  "nodeType": "Return",
                  "src": "2675:211:35"
                }
              ]
            },
            "functionSelector": "e8e33700",
            "id": 10222,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addLiquidity",
            "nameLocation": "2354:12:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10208,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2627:8:35"
            },
            "parameters": {
              "id": 10207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10191,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "2384:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2377:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10190,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10189,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 969,
                      "src": "2377:6:35"
                    },
                    "referencedDeclaration": 969,
                    "src": "2377:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10194,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "2408:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2401:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10193,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10192,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 969,
                      "src": "2401:6:35"
                    },
                    "referencedDeclaration": 969,
                    "src": "2401:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10196,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "2433:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2425:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10195,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2425:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10198,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "2466:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2458:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10197,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2458:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10200,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2491:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10199,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2491:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2532:7:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10201,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10204,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2581:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2573:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10206,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "2602:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2594:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10205,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2594:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2366:251:35"
            },
            "returnParameters": {
              "id": 10211,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10210,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "2653:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10222,
                  "src": "2645:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10209,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2645:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2644:19:35"
            },
            "scope": 10676,
            "src": "2345:549:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              19820
            ],
            "body": {
              "id": 10317,
              "nodeType": "Block",
              "src": "3844:934:35",
              "statements": [
                {
                  "assignments": [
                    10247
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10247,
                      "mutability": "mutable",
                      "name": "foreignAsset",
                      "nameLocation": "3862:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "3855:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10246,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10245,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 969,
                          "src": "3855:6:35"
                        },
                        "referencedDeclaration": 969,
                        "src": "3855:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10248,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3855:19:35"
                },
                {
                  "assignments": [
                    10250
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10250,
                      "mutability": "mutable",
                      "name": "nativeDeposit",
                      "nameLocation": "3893:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "3885:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10249,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3885:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10251,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3885:21:35"
                },
                {
                  "assignments": [
                    10253
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10253,
                      "mutability": "mutable",
                      "name": "foreignDeposit",
                      "nameLocation": "3925:14:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10317,
                      "src": "3917:22:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10252,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3917:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10254,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3917:22:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    },
                    "id": 10257,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10255,
                      "name": "tokenA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10225,
                      "src": "3956:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 10256,
                      "name": "nativeAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10159,
                      "src": "3966:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "3956:21:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10303,
                    "nodeType": "Block",
                    "src": "4280:320:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10287,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                },
                                "id": 10282,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 10280,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10228,
                                  "src": "4321:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 10281,
                                  "name": "nativeAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10159,
                                  "src": "4331:11:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "4321:21:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "id": 10285,
                                    "name": "tokenA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10225,
                                    "src": "4361:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10283,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10156,
                                    "src": "4346:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                      "typeString": "contract IVaderPoolV2"
                                    }
                                  },
                                  "id": 10284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "supported",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19495,
                                  "src": "4346:14:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$969_$returns$_t_bool_$",
                                    "typeString": "function (contract IERC20) view external returns (bool)"
                                  }
                                },
                                "id": 10286,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4346:22:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "4321:47:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661646572526f7574657256323a3a6164644c69717569646974793a20556e737570706f727465642041737365747320537065636966696564",
                              "id": 10288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4387:59:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1f9108aafeabe769759ded61ef5c1a37be47a5ac334f600c575fa47b0ff149b6",
                                "typeString": "literal_string \"VaderRouterV2::addLiquidity: Unsupported Assets Specified\""
                              },
                              "value": "VaderRouterV2::addLiquidity: Unsupported Assets Specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1f9108aafeabe769759ded61ef5c1a37be47a5ac334f600c575fa47b0ff149b6",
                                "typeString": "literal_string \"VaderRouterV2::addLiquidity: Unsupported Assets Specified\""
                              }
                            ],
                            "id": 10279,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "4295:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4295:166:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10290,
                        "nodeType": "ExpressionStatement",
                        "src": "4295:166:35"
                      },
                      {
                        "expression": {
                          "id": 10293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10291,
                            "name": "foreignAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10247,
                            "src": "4476:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10292,
                            "name": "tokenA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10225,
                            "src": "4491:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4476:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$969",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 10294,
                        "nodeType": "ExpressionStatement",
                        "src": "4476:21:35"
                      },
                      {
                        "expression": {
                          "id": 10297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10295,
                            "name": "foreignDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10253,
                            "src": "4512:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10296,
                            "name": "amountADesired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10230,
                            "src": "4529:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4512:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10298,
                        "nodeType": "ExpressionStatement",
                        "src": "4512:31:35"
                      },
                      {
                        "expression": {
                          "id": 10301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10299,
                            "name": "nativeDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10250,
                            "src": "4558:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10300,
                            "name": "amountBDesired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10232,
                            "src": "4574:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4558:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10302,
                        "nodeType": "ExpressionStatement",
                        "src": "4558:30:35"
                      }
                    ]
                  },
                  "id": 10304,
                  "nodeType": "IfStatement",
                  "src": "3952:648:35",
                  "trueBody": {
                    "id": 10278,
                    "nodeType": "Block",
                    "src": "3979:295:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 10261,
                                  "name": "tokenB",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10228,
                                  "src": "4035:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                ],
                                "expression": {
                                  "id": 10259,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10156,
                                  "src": "4020:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                    "typeString": "contract IVaderPoolV2"
                                  }
                                },
                                "id": 10260,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "supported",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 19495,
                                "src": "4020:14:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_contract$_IERC20_$969_$returns$_t_bool_$",
                                  "typeString": "function (contract IERC20) view external returns (bool)"
                                }
                              },
                              "id": 10262,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4020:22:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661646572526f7574657256323a3a6164644c69717569646974793a20556e737570706f727465642041737365747320537065636966696564",
                              "id": 10263,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4061:59:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1f9108aafeabe769759ded61ef5c1a37be47a5ac334f600c575fa47b0ff149b6",
                                "typeString": "literal_string \"VaderRouterV2::addLiquidity: Unsupported Assets Specified\""
                              },
                              "value": "VaderRouterV2::addLiquidity: Unsupported Assets Specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1f9108aafeabe769759ded61ef5c1a37be47a5ac334f600c575fa47b0ff149b6",
                                "typeString": "literal_string \"VaderRouterV2::addLiquidity: Unsupported Assets Specified\""
                              }
                            ],
                            "id": 10258,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "3994:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3994:141:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10265,
                        "nodeType": "ExpressionStatement",
                        "src": "3994:141:35"
                      },
                      {
                        "expression": {
                          "id": 10268,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10266,
                            "name": "foreignAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10247,
                            "src": "4150:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10267,
                            "name": "tokenB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10228,
                            "src": "4165:6:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "4150:21:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$969",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 10269,
                        "nodeType": "ExpressionStatement",
                        "src": "4150:21:35"
                      },
                      {
                        "expression": {
                          "id": 10272,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10270,
                            "name": "foreignDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10253,
                            "src": "4186:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10271,
                            "name": "amountBDesired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10232,
                            "src": "4203:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4186:31:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10273,
                        "nodeType": "ExpressionStatement",
                        "src": "4186:31:35"
                      },
                      {
                        "expression": {
                          "id": 10276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 10274,
                            "name": "nativeDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10250,
                            "src": "4232:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 10275,
                            "name": "amountADesired",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10230,
                            "src": "4248:14:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4232:30:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 10277,
                        "nodeType": "ExpressionStatement",
                        "src": "4232:30:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 10315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10305,
                      "name": "liquidity",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10243,
                      "src": "4612:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10308,
                          "name": "foreignAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10247,
                          "src": "4648:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$969",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 10309,
                          "name": "nativeDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10250,
                          "src": "4675:13:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10310,
                          "name": "foreignDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10253,
                          "src": "4703:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 10311,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4732:3:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10312,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4732:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 10313,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10234,
                          "src": "4757:2:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$969",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 10306,
                          "name": "pool",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10156,
                          "src": "4624:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                            "typeString": "contract IVaderPoolV2"
                          }
                        },
                        "id": 10307,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "mint",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 19556,
                        "src": "4624:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$969_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20,uint256,uint256,address,address) external returns (uint256)"
                        }
                      },
                      "id": 10314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4624:146:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4612:158:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10316,
                  "nodeType": "ExpressionStatement",
                  "src": "4612:158:35"
                }
              ]
            },
            "functionSelector": "6ed36f88",
            "id": 10318,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10240,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10236,
                    "src": "3806:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10241,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10239,
                  "name": "ensure",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10675,
                  "src": "3799:6:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "3799:16:35"
              }
            ],
            "name": "addLiquidity",
            "nameLocation": "3601:12:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10238,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3790:8:35"
            },
            "parameters": {
              "id": 10237,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10225,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "3631:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "3624:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10224,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10223,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 969,
                      "src": "3624:6:35"
                    },
                    "referencedDeclaration": 969,
                    "src": "3624:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10228,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "3655:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "3648:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$969",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 10227,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10226,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 969,
                      "src": "3648:6:35"
                    },
                    "referencedDeclaration": 969,
                    "src": "3648:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10230,
                  "mutability": "mutable",
                  "name": "amountADesired",
                  "nameLocation": "3680:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "3672:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10229,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3672:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10232,
                  "mutability": "mutable",
                  "name": "amountBDesired",
                  "nameLocation": "3713:14:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "3705:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10231,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3705:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10234,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3746:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "3738:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10233,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3738:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10236,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "3767:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "3759:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10235,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3613:169:35"
            },
            "returnParameters": {
              "id": 10244,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10243,
                  "mutability": "mutable",
                  "name": "liquidity",
                  "nameLocation": "3833:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10318,
                  "src": "3825:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10242,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3825:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3824:19:35"
            },
            "scope": 10676,
            "src": "3592:1186:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19841
            ],
            "body": {
              "id": 10451,
              "nodeType": "Block",
              "src": "6134:1276:35",
              "statements": [
                {
                  "assignments": [
                    10345
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10345,
                      "mutability": "mutable",
                      "name": "_foreignAsset",
                      "nameLocation": "6152:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10451,
                      "src": "6145:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10344,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10343,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 969,
                          "src": "6145:6:35"
                        },
                        "referencedDeclaration": 969,
                        "src": "6145:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10350,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10348,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10324,
                        "src": "6194:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10346,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10156,
                        "src": "6168:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                          "typeString": "contract IVaderPoolV2"
                        }
                      },
                      "id": 10347,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "positionForeignAsset",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19503,
                      "src": "6168:25:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_contract$_IERC20_$969_$",
                        "typeString": "function (uint256) view external returns (contract IERC20)"
                      }
                    },
                    "id": 10349,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6168:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6145:52:35"
                },
                {
                  "assignments": [
                    10353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10353,
                      "mutability": "mutable",
                      "name": "_nativeAsset",
                      "nameLocation": "6215:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10451,
                      "src": "6208:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "id": 10352,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 10351,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 969,
                          "src": "6208:6:35"
                        },
                        "referencedDeclaration": 969,
                        "src": "6208:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$969",
                          "typeString": "contract IERC20"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10355,
                  "initialValue": {
                    "id": 10354,
                    "name": "nativeAsset",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10159,
                    "src": "6230:11:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6208:33:35"
                },
                {
                  "assignments": [
                    10357
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10357,
                      "mutability": "mutable",
                      "name": "isNativeA",
                      "nameLocation": "6259:9:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10451,
                      "src": "6254:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 10356,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6254:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10363,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IERC20_$969",
                      "typeString": "contract IERC20"
                    },
                    "id": 10362,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 10358,
                      "name": "_nativeAsset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10353,
                      "src": "6271:12:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 10360,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10320,
                          "src": "6294:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10359,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 969,
                        "src": "6287:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 10361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6287:14:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "6271:30:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6254:47:35"
                },
                {
                  "condition": {
                    "id": 10364,
                    "name": "isNativeA",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10357,
                    "src": "6318:9:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10390,
                    "nodeType": "Block",
                    "src": "6516:236:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10386,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                },
                                "id": 10380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 10377,
                                      "name": "tokenA",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10320,
                                      "src": "6564:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 10376,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 969,
                                    "src": "6557:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 10378,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6557:14:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 10379,
                                  "name": "_foreignAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10345,
                                  "src": "6575:13:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "6557:31:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                },
                                "id": 10385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "id": 10382,
                                      "name": "tokenB",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10322,
                                      "src": "6620:6:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 10381,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 969,
                                    "src": "6613:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 10383,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6613:14:35",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 10384,
                                  "name": "_nativeAsset",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10353,
                                  "src": "6631:12:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "6613:30:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "6557:86:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661646572526f7574657256323a3a72656d6f76654c69717569646974793a20496e636f72726563742041646472657373657320537065636966696564",
                              "id": 10387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6662:63:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cfc546bdff5131ebb080bc10b178123d2cb9dc57e69f0c52bbdfb190d046abad",
                                "typeString": "literal_string \"VaderRouterV2::removeLiquidity: Incorrect Addresses Specified\""
                              },
                              "value": "VaderRouterV2::removeLiquidity: Incorrect Addresses Specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cfc546bdff5131ebb080bc10b178123d2cb9dc57e69f0c52bbdfb190d046abad",
                                "typeString": "literal_string \"VaderRouterV2::removeLiquidity: Incorrect Addresses Specified\""
                              }
                            ],
                            "id": 10375,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6531:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6531:209:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10389,
                        "nodeType": "ExpressionStatement",
                        "src": "6531:209:35"
                      }
                    ]
                  },
                  "id": 10391,
                  "nodeType": "IfStatement",
                  "src": "6314:438:35",
                  "trueBody": {
                    "id": 10374,
                    "nodeType": "Block",
                    "src": "6329:181:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              },
                              "id": 10370,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 10367,
                                    "name": "tokenB",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10322,
                                    "src": "6377:6:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 10366,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "6370:6:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$969_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 10368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6370:14:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 10369,
                                "name": "_foreignAsset",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10345,
                                "src": "6388:13:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "6370:31:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661646572526f7574657256323a3a72656d6f76654c69717569646974793a20496e636f72726563742041646472657373657320537065636966696564",
                              "id": 10371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6420:63:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cfc546bdff5131ebb080bc10b178123d2cb9dc57e69f0c52bbdfb190d046abad",
                                "typeString": "literal_string \"VaderRouterV2::removeLiquidity: Incorrect Addresses Specified\""
                              },
                              "value": "VaderRouterV2::removeLiquidity: Incorrect Addresses Specified"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cfc546bdff5131ebb080bc10b178123d2cb9dc57e69f0c52bbdfb190d046abad",
                                "typeString": "literal_string \"VaderRouterV2::removeLiquidity: Incorrect Addresses Specified\""
                              }
                            ],
                            "id": 10365,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "6344:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6344:154:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10373,
                        "nodeType": "ExpressionStatement",
                        "src": "6344:154:35"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10395,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "6782:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6782:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 10399,
                            "name": "pool",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10156,
                            "src": "6802:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                              "typeString": "contract IVaderPoolV2"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                              "typeString": "contract IVaderPoolV2"
                            }
                          ],
                          "id": 10398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6794:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 10397,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6794:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 10400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6794:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10401,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10324,
                        "src": "6809:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10392,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10156,
                        "src": "6764:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                          "typeString": "contract IVaderPoolV2"
                        }
                      },
                      "id": 10394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3320,
                      "src": "6764:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 10402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6764:48:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10403,
                  "nodeType": "ExpressionStatement",
                  "src": "6764:48:35"
                },
                {
                  "assignments": [
                    10405,
                    10407,
                    10409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 10405,
                      "mutability": "mutable",
                      "name": "amountNative",
                      "nameLocation": "6848:12:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10451,
                      "src": "6840:20:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6840:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10407,
                      "mutability": "mutable",
                      "name": "amountForeign",
                      "nameLocation": "6883:13:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10451,
                      "src": "6875:21:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10406,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6875:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 10409,
                      "mutability": "mutable",
                      "name": "coveredLoss",
                      "nameLocation": "6919:11:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 10451,
                      "src": "6911:19:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 10408,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6911:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 10415,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 10412,
                        "name": "id",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10324,
                        "src": "6954:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 10413,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10330,
                        "src": "6958:2:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 10410,
                        "name": "pool",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10156,
                        "src": "6944:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                          "typeString": "contract IVaderPoolV2"
                        }
                      },
                      "id": 10411,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 19753,
                      "src": "6944:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                        "typeString": "function (uint256,address) external returns (uint256,uint256,uint256)"
                      }
                    },
                    "id": 10414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6944:17:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6825:136:35"
                },
                {
                  "expression": {
                    "id": 10427,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 10416,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10339,
                          "src": "6975:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10417,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10341,
                          "src": "6984:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 10418,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "6974:18:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "condition": {
                        "id": 10419,
                        "name": "isNativeA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10357,
                        "src": "6995:9:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseExpression": {
                        "components": [
                          {
                            "id": 10423,
                            "name": "amountForeign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10407,
                            "src": "7066:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10424,
                            "name": "amountNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10405,
                            "src": "7081:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 10425,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7065:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "id": 10426,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "Conditional",
                      "src": "6995:99:35",
                      "trueExpression": {
                        "components": [
                          {
                            "id": 10420,
                            "name": "amountNative",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10405,
                            "src": "7021:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 10421,
                            "name": "amountForeign",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10407,
                            "src": "7035:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "id": 10422,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "7020:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "6974:120:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10428,
                  "nodeType": "ExpressionStatement",
                  "src": "6974:120:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10430,
                          "name": "amountA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10339,
                          "src": "7129:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10431,
                          "name": "amountAMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10326,
                          "src": "7140:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7129:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a20494e53554646494349454e545f415f414d4f554e54",
                        "id": 10433,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7165:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e679d7ce27e609c6a4cc438dfcc0bf65e4a4bde9766e90327b13d695c71deff5",
                          "typeString": "literal_string \"VaderRouterV2: INSUFFICIENT_A_AMOUNT\""
                        },
                        "value": "VaderRouterV2: INSUFFICIENT_A_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e679d7ce27e609c6a4cc438dfcc0bf65e4a4bde9766e90327b13d695c71deff5",
                          "typeString": "literal_string \"VaderRouterV2: INSUFFICIENT_A_AMOUNT\""
                        }
                      ],
                      "id": 10429,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7107:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7107:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10435,
                  "nodeType": "ExpressionStatement",
                  "src": "7107:107:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10437,
                          "name": "amountB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10341,
                          "src": "7247:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10438,
                          "name": "amountBMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10328,
                          "src": "7258:10:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "7247:21:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a20494e53554646494349454e545f425f414d4f554e54",
                        "id": 10440,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7283:38:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d3f1c0277c79a80966ff85541534623194a599817109ba594d0f1c25d0c34f1",
                          "typeString": "literal_string \"VaderRouterV2: INSUFFICIENT_B_AMOUNT\""
                        },
                        "value": "VaderRouterV2: INSUFFICIENT_B_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d3f1c0277c79a80966ff85541534623194a599817109ba594d0f1c25d0c34f1",
                          "typeString": "literal_string \"VaderRouterV2: INSUFFICIENT_B_AMOUNT\""
                        }
                      ],
                      "id": 10436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7225:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10441,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7225:107:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10442,
                  "nodeType": "ExpressionStatement",
                  "src": "7225:107:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 10446,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "7378:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 10447,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7378:10:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 10448,
                        "name": "coveredLoss",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10409,
                        "src": "7390:11:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 10443,
                        "name": "reserve",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10162,
                        "src": "7345:7:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                          "typeString": "contract IVaderReserve"
                        }
                      },
                      "id": 10445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reimburseImpermanentLoss",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20336,
                      "src": "7345:32:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 10449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7345:57:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10450,
                  "nodeType": "ExpressionStatement",
                  "src": "7345:57:35"
                }
              ]
            },
            "functionSelector": "baa2abde",
            "id": 10452,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10336,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10332,
                    "src": "6067:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10337,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10335,
                  "name": "ensure",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10675,
                  "src": "6060:6:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "6060:16:35"
              }
            ],
            "name": "removeLiquidity",
            "nameLocation": "5817:15:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10334,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6042:8:35"
            },
            "parameters": {
              "id": 10333,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10320,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "5851:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "5843:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10319,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5843:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10322,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "5876:6:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "5868:14:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10321,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5868:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10324,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5901:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "5893:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10323,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5893:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10326,
                  "mutability": "mutable",
                  "name": "amountAMin",
                  "nameLocation": "5922:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "5914:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10325,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5914:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10328,
                  "mutability": "mutable",
                  "name": "amountBMin",
                  "nameLocation": "5951:10:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "5943:18:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10327,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5943:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10330,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "5980:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "5972:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5972:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10332,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "6001:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "5993:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5993:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5832:184:35"
            },
            "returnParameters": {
              "id": 10342,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10339,
                  "mutability": "mutable",
                  "name": "amountA",
                  "nameLocation": "6103:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "6095:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10338,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6095:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10341,
                  "mutability": "mutable",
                  "name": "amountB",
                  "nameLocation": "6120:7:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10452,
                  "src": "6112:15:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10340,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6112:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6094:34:35"
            },
            "scope": 10676,
            "src": "5808:1602:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              19858
            ],
            "body": {
              "id": 10488,
              "nodeType": "Block",
              "src": "8031:210:35",
              "statements": [
                {
                  "expression": {
                    "id": 10479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10473,
                      "name": "amountOut",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10471,
                      "src": "8042:9:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 10475,
                          "name": "amountIn",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10454,
                          "src": "8060:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 10476,
                          "name": "path",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10460,
                          "src": "8070:4:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                            "typeString": "contract IERC20[] calldata"
                          }
                        },
                        {
                          "id": 10477,
                          "name": "to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10462,
                          "src": "8076:2:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                            "typeString": "contract IERC20[] calldata"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 10474,
                        "name": "_swap",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10661,
                        "src": "8054:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr_$_t_address_$returns$_t_uint256_$",
                          "typeString": "function (uint256,contract IERC20[] calldata,address) returns (uint256)"
                        }
                      },
                      "id": 10478,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "8054:25:35",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8042:37:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 10480,
                  "nodeType": "ExpressionStatement",
                  "src": "8042:37:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10482,
                          "name": "amountOut",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10471,
                          "src": "8114:9:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 10483,
                          "name": "amountOutMin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10456,
                          "src": "8127:12:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8114:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a737761704578616374546f6b656e73466f72546f6b656e733a20496e73756666696369656e74205472616465204f7574707574",
                        "id": 10485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8154:68:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d90086015a0b378cd85c9e33b45912bbb6780a47c9dbc5862371c24a45e76d3a",
                          "typeString": "literal_string \"VaderRouterV2::swapExactTokensForTokens: Insufficient Trade Output\""
                        },
                        "value": "VaderRouterV2::swapExactTokensForTokens: Insufficient Trade Output"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d90086015a0b378cd85c9e33b45912bbb6780a47c9dbc5862371c24a45e76d3a",
                          "typeString": "literal_string \"VaderRouterV2::swapExactTokensForTokens: Insufficient Trade Output\""
                        }
                      ],
                      "id": 10481,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8092:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10486,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8092:141:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10487,
                  "nodeType": "ExpressionStatement",
                  "src": "8092:141:35"
                }
              ]
            },
            "functionSelector": "38ed1739",
            "id": 10489,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 10468,
                    "name": "deadline",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 10464,
                    "src": "7993:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 10469,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10467,
                  "name": "ensure",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10675,
                  "src": "7986:6:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "7986:16:35"
              }
            ],
            "name": "swapExactTokensForTokens",
            "nameLocation": "7789:24:35",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10466,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7977:8:35"
            },
            "parameters": {
              "id": 10465,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10454,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "7832:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "7824:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10453,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7824:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10456,
                  "mutability": "mutable",
                  "name": "amountOutMin",
                  "nameLocation": "7859:12:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "7851:20:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10455,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7851:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10460,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "7900:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "7882:22:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10458,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10457,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 969,
                        "src": "7882:6:35"
                      },
                      "referencedDeclaration": 969,
                      "src": "7882:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 10459,
                    "nodeType": "ArrayTypeName",
                    "src": "7882:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10462,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "7923:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "7915:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10461,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7915:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10464,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "7944:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "7936:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10463,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7936:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7813:146:35"
            },
            "returnParameters": {
              "id": 10472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10471,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "8020:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10489,
                  "src": "8012:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10470,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8012:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8011:19:35"
            },
            "scope": 10676,
            "src": "7780:461:35",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10513,
              "nodeType": "Block",
              "src": "8596:226:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                          "typeString": "contract IVaderReserve"
                        },
                        "id": 10502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10498,
                          "name": "_reserve",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10492,
                          "src": "8629:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                            "typeString": "contract IVaderReserve"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 10500,
                              "name": "_ZERO_ADDRESS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21375,
                              "src": "8655:13:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 10499,
                            "name": "IVaderReserve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20363,
                            "src": "8641:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IVaderReserve_$20363_$",
                              "typeString": "type(contract IVaderReserve)"
                            }
                          },
                          "id": 10501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8641:28:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                            "typeString": "contract IVaderReserve"
                          }
                        },
                        "src": "8629:40:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a696e697469616c697a653a20496e636f7272656374205265736572766520537065636966696564",
                        "id": 10503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8684:56:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8caa7c91773efd29ac2d458ab3ef46f0ea5c68e75911d0f58e8cfee4c05d7657",
                          "typeString": "literal_string \"VaderRouterV2::initialize: Incorrect Reserve Specified\""
                        },
                        "value": "VaderRouterV2::initialize: Incorrect Reserve Specified"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8caa7c91773efd29ac2d458ab3ef46f0ea5c68e75911d0f58e8cfee4c05d7657",
                          "typeString": "literal_string \"VaderRouterV2::initialize: Incorrect Reserve Specified\""
                        }
                      ],
                      "id": 10497,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8607:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8607:144:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10505,
                  "nodeType": "ExpressionStatement",
                  "src": "8607:144:35"
                },
                {
                  "expression": {
                    "id": 10508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10506,
                      "name": "reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10162,
                      "src": "8764:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                        "typeString": "contract IVaderReserve"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10507,
                      "name": "_reserve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10492,
                      "src": "8774:8:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                        "typeString": "contract IVaderReserve"
                      }
                    },
                    "src": "8764:18:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                      "typeString": "contract IVaderReserve"
                    }
                  },
                  "id": 10509,
                  "nodeType": "ExpressionStatement",
                  "src": "8764:18:35"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10510,
                      "name": "renounceOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68,
                      "src": "8795:17:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 10511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8795:19:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10512,
                  "nodeType": "ExpressionStatement",
                  "src": "8795:19:35"
                }
              ]
            },
            "functionSelector": "c4d66de8",
            "id": 10514,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10495,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10494,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31,
                  "src": "8586:9:35"
                },
                "nodeType": "ModifierInvocation",
                "src": "8586:9:35"
              }
            ],
            "name": "initialize",
            "nameLocation": "8542:10:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10493,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10492,
                  "mutability": "mutable",
                  "name": "_reserve",
                  "nameLocation": "8567:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10514,
                  "src": "8553:22:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                    "typeString": "contract IVaderReserve"
                  },
                  "typeName": {
                    "id": 10491,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 10490,
                      "name": "IVaderReserve",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 20363,
                      "src": "8553:13:35"
                    },
                    "referencedDeclaration": 20363,
                    "src": "8553:13:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVaderReserve_$20363",
                      "typeString": "contract IVaderReserve"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8552:24:35"
            },
            "returnParameters": {
              "id": 10496,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8596:0:35"
            },
            "scope": 10676,
            "src": "8533:289:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10660,
              "nodeType": "Block",
              "src": "9978:1146:35",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 10530,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 10527,
                        "name": "path",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10520,
                        "src": "9993:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      },
                      "id": 10528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "9993:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "33",
                      "id": 10529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10008:1:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_3_by_1",
                        "typeString": "int_const 3"
                      },
                      "value": "3"
                    },
                    "src": "9993:16:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 10658,
                    "nodeType": "Block",
                    "src": "10406:711:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 10588,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 10585,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10520,
                                  "src": "10447:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                    "typeString": "contract IERC20[] calldata"
                                  }
                                },
                                "id": 10586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "10447:11:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "32",
                                "id": 10587,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10462:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "src": "10447:16:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661646572526f7574657256323a3a5f737761703a20496e636f72726563742050617468204c656e677468",
                              "id": 10589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10482:45:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_5b20ce84a770f0929b8ad9dcb1634fd0cbad749a2015c04f624ccab1003e3f74",
                                "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path Length\""
                              },
                              "value": "VaderRouterV2::_swap: Incorrect Path Length"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_5b20ce84a770f0929b8ad9dcb1634fd0cbad749a2015c04f624ccab1003e3f74",
                                "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path Length\""
                              }
                            ],
                            "id": 10584,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "10421:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10421:121:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10591,
                        "nodeType": "ExpressionStatement",
                        "src": "10421:121:35"
                      },
                      {
                        "assignments": [
                          10594
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 10594,
                            "mutability": "mutable",
                            "name": "_nativeAsset",
                            "nameLocation": "10564:12:35",
                            "nodeType": "VariableDeclaration",
                            "scope": 10658,
                            "src": "10557:19:35",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            },
                            "typeName": {
                              "id": 10593,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 10592,
                                "name": "IERC20",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 969,
                                "src": "10557:6:35"
                              },
                              "referencedDeclaration": 969,
                              "src": "10557:6:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 10596,
                        "initialValue": {
                          "id": 10595,
                          "name": "nativeAsset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10159,
                          "src": "10579:11:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$969",
                            "typeString": "contract IERC20"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10557:33:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              },
                              "id": 10604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 10598,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10520,
                                  "src": "10613:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                    "typeString": "contract IERC20[] calldata"
                                  }
                                },
                                "id": 10600,
                                "indexExpression": {
                                  "hexValue": "30",
                                  "id": 10599,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10618:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10613:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "baseExpression": {
                                  "id": 10601,
                                  "name": "path",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10520,
                                  "src": "10624:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                    "typeString": "contract IERC20[] calldata"
                                  }
                                },
                                "id": 10603,
                                "indexExpression": {
                                  "hexValue": "31",
                                  "id": 10602,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "10629:1:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1_by_1",
                                    "typeString": "int_const 1"
                                  },
                                  "value": "1"
                                },
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10624:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "src": "10613:18:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661646572526f7574657256323a3a5f737761703a20496e636f72726563742050617468",
                              "id": 10605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10633:38:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83",
                                "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path\""
                              },
                              "value": "VaderRouterV2::_swap: Incorrect Path"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83",
                                "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path\""
                              }
                            ],
                            "id": 10597,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "10605:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10605:67:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10607,
                        "nodeType": "ExpressionStatement",
                        "src": "10605:67:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10612,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10714:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10714:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 10616,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10156,
                                  "src": "10734:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                    "typeString": "contract IVaderPoolV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                    "typeString": "contract IVaderPoolV2"
                                  }
                                ],
                                "id": 10615,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10726:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10614,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10726:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10617,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10726:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10618,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10516,
                              "src": "10741:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 10608,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10520,
                                "src": "10689:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 10610,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10694:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10689:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10611,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1996,
                            "src": "10689:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$969_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$969_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 10619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10689:61:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10620,
                        "nodeType": "ExpressionStatement",
                        "src": "10689:61:35"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IERC20_$969",
                            "typeString": "contract IERC20"
                          },
                          "id": 10625,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 10621,
                              "name": "path",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10520,
                              "src": "10769:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                "typeString": "contract IERC20[] calldata"
                              }
                            },
                            "id": 10623,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 10622,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10774:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "10769:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 10624,
                            "name": "_nativeAsset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 10594,
                            "src": "10780:12:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$969",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "10769:23:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 10656,
                          "nodeType": "Block",
                          "src": "10877:229:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    },
                                    "id": 10642,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "baseExpression": {
                                        "id": 10638,
                                        "name": "path",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10520,
                                        "src": "10926:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                          "typeString": "contract IERC20[] calldata"
                                        }
                                      },
                                      "id": 10640,
                                      "indexExpression": {
                                        "hexValue": "31",
                                        "id": 10639,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "10931:1:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_1_by_1",
                                          "typeString": "int_const 1"
                                        },
                                        "value": "1"
                                      },
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "10926:7:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$969",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "id": 10641,
                                      "name": "_nativeAsset",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10594,
                                      "src": "10937:12:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IERC20_$969",
                                        "typeString": "contract IERC20"
                                      }
                                    },
                                    "src": "10926:23:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5661646572526f7574657256323a3a5f737761703a20496e636f72726563742050617468",
                                    "id": 10643,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10972:38:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83",
                                      "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path\""
                                    },
                                    "value": "VaderRouterV2::_swap: Incorrect Path"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83",
                                      "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path\""
                                    }
                                  ],
                                  "id": 10637,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    4294967278,
                                    4294967278
                                  ],
                                  "referencedDeclaration": 4294967278,
                                  "src": "10896:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 10644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10896:133:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 10645,
                              "nodeType": "ExpressionStatement",
                              "src": "10896:133:35"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 10648,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10520,
                                      "src": "11065:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                        "typeString": "contract IERC20[] calldata"
                                      }
                                    },
                                    "id": 10650,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 10649,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "11070:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "11065:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 10651,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11074:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 10652,
                                    "name": "amountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10516,
                                    "src": "11077:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 10653,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10522,
                                    "src": "11087:2:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10646,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10156,
                                    "src": "11055:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                      "typeString": "contract IVaderPoolV2"
                                    }
                                  },
                                  "id": 10647,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "swap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19540,
                                  "src": "11055:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$969_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,uint256,uint256,address) external returns (uint256)"
                                  }
                                },
                                "id": 10654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11055:35:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 10526,
                              "id": 10655,
                              "nodeType": "Return",
                              "src": "11048:42:35"
                            }
                          ]
                        },
                        "id": 10657,
                        "nodeType": "IfStatement",
                        "src": "10765:341:35",
                        "trueBody": {
                          "id": 10636,
                          "nodeType": "Block",
                          "src": "10794:77:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 10628,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10520,
                                      "src": "10830:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                        "typeString": "contract IERC20[] calldata"
                                      }
                                    },
                                    "id": 10630,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 10629,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10835:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10830:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "id": 10631,
                                    "name": "amountIn",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10516,
                                    "src": "10839:8:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "30",
                                    "id": 10632,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10849:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  },
                                  {
                                    "id": 10633,
                                    "name": "to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10522,
                                    "src": "10852:2:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 10626,
                                    "name": "pool",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10156,
                                    "src": "10820:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                      "typeString": "contract IVaderPoolV2"
                                    }
                                  },
                                  "id": 10627,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "swap",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 19540,
                                  "src": "10820:9:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$969_$_t_uint256_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (contract IERC20,uint256,uint256,address) external returns (uint256)"
                                  }
                                },
                                "id": 10634,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10820:35:35",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "functionReturnParameters": 10526,
                              "id": 10635,
                              "nodeType": "Return",
                              "src": "10813:42:35"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 10659,
                  "nodeType": "IfStatement",
                  "src": "9989:1128:35",
                  "trueBody": {
                    "id": 10583,
                    "nodeType": "Block",
                    "src": "10011:389:35",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 10554,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 10546,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  },
                                  "id": 10538,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 10532,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10520,
                                      "src": "10052:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                        "typeString": "contract IERC20[] calldata"
                                      }
                                    },
                                    "id": 10534,
                                    "indexExpression": {
                                      "hexValue": "30",
                                      "id": 10533,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10057:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10052:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "!=",
                                  "rightExpression": {
                                    "baseExpression": {
                                      "id": 10535,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10520,
                                      "src": "10063:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                        "typeString": "contract IERC20[] calldata"
                                      }
                                    },
                                    "id": 10537,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 10536,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10068:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10063:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "src": "10052:18:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  },
                                  "id": 10545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 10539,
                                      "name": "path",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 10520,
                                      "src": "10095:4:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                        "typeString": "contract IERC20[] calldata"
                                      }
                                    },
                                    "id": 10541,
                                    "indexExpression": {
                                      "hexValue": "31",
                                      "id": 10540,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "10100:1:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10095:7:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "==",
                                  "rightExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "expression": {
                                        "id": 10542,
                                        "name": "pool",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 10156,
                                        "src": "10106:4:35",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                          "typeString": "contract IVaderPoolV2"
                                        }
                                      },
                                      "id": 10543,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nativeAsset",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 19487,
                                      "src": "10106:16:35",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IERC20_$969_$",
                                        "typeString": "function () view external returns (contract IERC20)"
                                      }
                                    },
                                    "id": 10544,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10106:18:35",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$969",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "src": "10095:29:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "10052:72:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IERC20_$969",
                                  "typeString": "contract IERC20"
                                },
                                "id": 10553,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "id": 10547,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10520,
                                    "src": "10149:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                      "typeString": "contract IERC20[] calldata"
                                    }
                                  },
                                  "id": 10549,
                                  "indexExpression": {
                                    "hexValue": "32",
                                    "id": 10548,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10154:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_2_by_1",
                                      "typeString": "int_const 2"
                                    },
                                    "value": "2"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10149:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "baseExpression": {
                                    "id": 10550,
                                    "name": "path",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 10520,
                                    "src": "10160:4:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                      "typeString": "contract IERC20[] calldata"
                                    }
                                  },
                                  "id": 10552,
                                  "indexExpression": {
                                    "hexValue": "31",
                                    "id": 10551,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10165:1:35",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "10160:7:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$969",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "src": "10149:18:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "10052:115:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5661646572526f7574657256323a3a5f737761703a20496e636f72726563742050617468",
                              "id": 10555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10186:38:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83",
                                "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path\""
                              },
                              "value": "VaderRouterV2::_swap: Incorrect Path"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_ff885d5df539ea70d1540af1fe41141d6eda826ca208c0a1868dee2600d50f83",
                                "typeString": "literal_string \"VaderRouterV2::_swap: Incorrect Path\""
                              }
                            ],
                            "id": 10531,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              4294967278,
                              4294967278
                            ],
                            "referencedDeclaration": 4294967278,
                            "src": "10026:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 10556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10026:213:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10557,
                        "nodeType": "ExpressionStatement",
                        "src": "10026:213:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 10562,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "10281:3:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 10563,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "10281:10:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 10566,
                                  "name": "pool",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 10156,
                                  "src": "10301:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                    "typeString": "contract IVaderPoolV2"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                    "typeString": "contract IVaderPoolV2"
                                  }
                                ],
                                "id": 10565,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10293:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 10564,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10293:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 10567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10293:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 10568,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10516,
                              "src": "10308:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 10558,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10520,
                                "src": "10256:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 10560,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10261:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10256:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 10561,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1996,
                            "src": "10256:24:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$969_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$969_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 10569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10256:61:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 10570,
                        "nodeType": "ExpressionStatement",
                        "src": "10256:61:35"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 10573,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10520,
                                "src": "10357:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 10575,
                              "indexExpression": {
                                "hexValue": "30",
                                "id": 10574,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10362:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10357:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 10576,
                                "name": "path",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 10520,
                                "src": "10366:4:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata"
                                }
                              },
                              "id": 10578,
                              "indexExpression": {
                                "hexValue": "32",
                                "id": 10577,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10371:1:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10366:7:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              }
                            },
                            {
                              "id": 10579,
                              "name": "amountIn",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10516,
                              "src": "10375:8:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 10580,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10522,
                              "src": "10385:2:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_contract$_IERC20_$969",
                                "typeString": "contract IERC20"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 10571,
                              "name": "pool",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 10156,
                              "src": "10341:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IVaderPoolV2_$19775",
                                "typeString": "contract IVaderPoolV2"
                              }
                            },
                            "id": 10572,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "doubleSwap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 19526,
                            "src": "10341:15:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$969_$_t_contract$_IERC20_$969_$_t_uint256_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (contract IERC20,contract IERC20,uint256,address) external returns (uint256)"
                            }
                          },
                          "id": 10581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10341:47:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 10526,
                        "id": 10582,
                        "nodeType": "Return",
                        "src": "10334:54:35"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 10661,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_swap",
            "nameLocation": "9848:5:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10523,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10516,
                  "mutability": "mutable",
                  "name": "amountIn",
                  "nameLocation": "9872:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10661,
                  "src": "9864:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10515,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9864:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10520,
                  "mutability": "mutable",
                  "name": "path",
                  "nameLocation": "9909:4:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10661,
                  "src": "9891:22:35",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 10518,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 10517,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 969,
                        "src": "9891:6:35"
                      },
                      "referencedDeclaration": 969,
                      "src": "9891:6:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$969",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 10519,
                    "nodeType": "ArrayTypeName",
                    "src": "9891:8:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$969_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10522,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "9932:2:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10661,
                  "src": "9924:10:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9924:7:35",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9853:88:35"
            },
            "returnParameters": {
              "id": 10526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10525,
                  "mutability": "mutable",
                  "name": "amountOut",
                  "nameLocation": "9967:9:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10661,
                  "src": "9959:17:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9959:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9958:19:35"
            },
            "scope": 10676,
            "src": "9839:1285:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 10674,
              "nodeType": "Block",
              "src": "11300:101:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 10669,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 10666,
                          "name": "deadline",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10663,
                          "src": "11319:8:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 10667,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "11331:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 10668,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11331:15:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11319:27:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5661646572526f7574657256323a3a656e737572653a2045787069726564",
                        "id": 10670,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11348:32:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_411d4f167846a4c286a1c0fd9171ae8544f501cab0ede0a51d5efdd0fd97a847",
                          "typeString": "literal_string \"VaderRouterV2::ensure: Expired\""
                        },
                        "value": "VaderRouterV2::ensure: Expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_411d4f167846a4c286a1c0fd9171ae8544f501cab0ede0a51d5efdd0fd97a847",
                          "typeString": "literal_string \"VaderRouterV2::ensure: Expired\""
                        }
                      ],
                      "id": 10665,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11311:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10671,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11311:70:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10672,
                  "nodeType": "ExpressionStatement",
                  "src": "11311:70:35"
                },
                {
                  "id": 10673,
                  "nodeType": "PlaceholderStatement",
                  "src": "11392:1:35"
                }
              ]
            },
            "id": 10675,
            "name": "ensure",
            "nameLocation": "11275:6:35",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10664,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10663,
                  "mutability": "mutable",
                  "name": "deadline",
                  "nameLocation": "11290:8:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 10675,
                  "src": "11282:16:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 10662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11282:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11281:18:35"
            },
            "src": "11266:135:35",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 10677,
        "src": "941:10463:35",
        "usedErrors": []
      }
    ],
    "src": "41:11365:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.16",
  "updatedAt": "2025-03-06T07:23:55.027Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}