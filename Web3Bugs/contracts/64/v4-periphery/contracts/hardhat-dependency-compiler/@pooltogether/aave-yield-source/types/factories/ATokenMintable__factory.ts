/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ATokenMintable,
  ATokenMintableInterface,
} from "../ATokenMintable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_underlyingAssetAddress",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "decimals_",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "UNDERLYING_ASSET_ADDRESS",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlyingAssetAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a06040523480156200001157600080fd5b5060405162000f1538038062000f158339810160408190526200003491620001fa565b82828282828160039080519060200190620000519291906200009d565b508051620000679060049060208401906200009d565b50506005805460ff191660ff9390931692909217909155505050505060609190911b6001600160601b03191660805250620002f1565b828054620000ab906200029e565b90600052602060002090601f016020900481019282620000cf57600085556200011a565b82601f10620000ea57805160ff19168380011785556200011a565b828001600101855582156200011a579182015b828111156200011a578251825591602001919060010190620000fd565b50620001289291506200012c565b5090565b5b808211156200012857600081556001016200012d565b600082601f8301126200015557600080fd5b81516001600160401b0380821115620001725762000172620002db565b604051601f8301601f19908116603f011681019082821181831017156200019d576200019d620002db565b81604052838152602092508683858801011115620001ba57600080fd5b600091505b83821015620001de5785820183015181830184015290820190620001bf565b83821115620001f05760008385830101525b9695505050505050565b600080600080608085870312156200021157600080fd5b84516001600160a01b03811681146200022957600080fd5b60208601519094506001600160401b03808211156200024757600080fd5b620002558883890162000143565b945060408701519150808211156200026c57600080fd5b506200027b8782880162000143565b925050606085015160ff811681146200029357600080fd5b939692955090935050565b600181811c90821680620002b357607f821691505b60208210811415620002d557634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b60805160601c610bfe62000317600039600081816101c901526102460152610bfe6000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d71461021e578063a9059cbb14610231578063b16a19de14610244578063dd62ed3e1461026a57600080fd5b806370a082311461019b57806389d1a0fc146101c457806395d89b41146102035780639dc29fac1461020b57600080fd5b806323b872dd116100d357806323b872dd1461014d578063313ce56714610160578063395093511461017557806340c10f191461018857600080fd5b806306fdde03146100fa578063095ea7b31461011857806318160ddd1461013b575b600080fd5b6101026102a3565b60405161010f9190610af3565b60405180910390f35b61012b610126366004610ac9565b610335565b604051901515815260200161010f565b6002545b60405190815260200161010f565b61012b61015b366004610a8d565b61034b565b60055460405160ff909116815260200161010f565b61012b610183366004610ac9565b6103fa565b61012b610196366004610ac9565b610436565b61013f6101a9366004610a38565b6001600160a01b031660009081526020819052604090205490565b6101eb7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161010f565b610102610442565b61012b610219366004610ac9565b610451565b61012b61022c366004610ac9565b61045d565b61012b61023f366004610ac9565b6104f6565b7f00000000000000000000000000000000000000000000000000000000000000006101eb565b61013f610278366004610a5a565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102b290610b77565b80601f01602080910402602001604051908101604052809291908181526020018280546102de90610b77565b801561032b5780601f106103005761010080835404028352916020019161032b565b820191906000526020600020905b81548152906001019060200180831161030e57829003601f168201915b5050505050905090565b6000610342338484610503565b50600192915050565b6000610358848484610628565b6001600160a01b0384166000908152600160209081526040808320338452909152902054828110156103e25760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103ef8533858403610503565b506001949350505050565b3360008181526001602090815260408083206001600160a01b03871684529091528120549091610342918590610431908690610b48565b610503565b600061034283836107f7565b6060600480546102b290610b77565b600061034283836108d6565b3360009081526001602090815260408083206001600160a01b0386168452909152812054828110156104df5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103d9565b6104ec3385858403610503565b5060019392505050565b6000610342338484610628565b6001600160a01b0383166105655760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103d9565b6001600160a01b0382166105c65760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103d9565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831661068c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103d9565b6001600160a01b0382166106ee5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103d9565b6001600160a01b038316600090815260208190526040902054818110156107665760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103d9565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061079d908490610b48565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516107e991815260200190565b60405180910390a350505050565b6001600160a01b03821661084d5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103d9565b806002600082825461085f9190610b48565b90915550506001600160a01b0382166000908152602081905260408120805483929061088c908490610b48565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109365760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103d9565b6001600160a01b038216600090815260208190526040902054818110156109aa5760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103d9565b6001600160a01b03831660009081526020819052604081208383039055600280548492906109d9908490610b60565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200161061b565b80356001600160a01b0381168114610a3357600080fd5b919050565b600060208284031215610a4a57600080fd5b610a5382610a1c565b9392505050565b60008060408385031215610a6d57600080fd5b610a7683610a1c565b9150610a8460208401610a1c565b90509250929050565b600080600060608486031215610aa257600080fd5b610aab84610a1c565b9250610ab960208501610a1c565b9150604084013590509250925092565b60008060408385031215610adc57600080fd5b610ae583610a1c565b946020939093013593505050565b600060208083528351808285015260005b81811015610b2057858101830151858201604001528201610b04565b81811115610b32576000604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610b5b57610b5b610bb2565b500190565b600082821015610b7257610b72610bb2565b500390565b600181811c90821680610b8b57607f821691505b60208210811415610bac57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212209fce8480e16dca8baafba85591e9ff678992b3d4778717b80581217f149d84e764736f6c63430008060033";

export class ATokenMintable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _underlyingAssetAddress: string,
    _name: string,
    _symbol: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ATokenMintable> {
    return super.deploy(
      _underlyingAssetAddress,
      _name,
      _symbol,
      decimals_,
      overrides || {}
    ) as Promise<ATokenMintable>;
  }
  getDeployTransaction(
    _underlyingAssetAddress: string,
    _name: string,
    _symbol: string,
    decimals_: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _underlyingAssetAddress,
      _name,
      _symbol,
      decimals_,
      overrides || {}
    );
  }
  attach(address: string): ATokenMintable {
    return super.attach(address) as ATokenMintable;
  }
  connect(signer: Signer): ATokenMintable__factory {
    return super.connect(signer) as ATokenMintable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ATokenMintableInterface {
    return new utils.Interface(_abi) as ATokenMintableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ATokenMintable {
    return new Contract(address, _abi, signerOrProvider) as ATokenMintable;
  }
}
