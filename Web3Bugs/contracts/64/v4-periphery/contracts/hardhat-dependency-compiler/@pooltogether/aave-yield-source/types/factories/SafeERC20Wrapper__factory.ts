/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeERC20Wrapper,
  SafeERC20WrapperInterface,
} from "../SafeERC20Wrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "allowance_",
        type: "uint256",
      },
    ],
    name: "setAllowance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50604051610bc5380380610bc583398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610b32806100936000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80633ba93f261161005b5780633ba93f26146100f057806370a0823114610103578063a9059cbb14610124578063dd62ed3e1461013757600080fd5b8063095ea7b31461008d57806310bad4cf146100b557806311e330b2146100ca57806323b872dd146100dd575b600080fd5b6100a061009b3660046109dd565b61014a565b60405190151581526020015b60405180910390f35b6100c86100c3366004610a29565b610168565b005b6100c86100d8366004610a29565b610185565b6100a06100eb3660046109a1565b61019f565b6100c86100fe366004610a29565b6101bf565b610116610111366004610953565b610220565b6040519081526020016100ac565b6100a06101323660046109dd565b6102a4565b61011661014536600461096e565b6102bc565b60008054610162906001600160a01b03168484610342565b92915050565b60008054610182916001600160a01b0390911690836104a3565b50565b60008054610182916001600160a01b0390911690836105be565b600080546101b8906001600160a01b0316858585610685565b9392505050565b600054604051631dd49f9360e11b8152600481018390526001600160a01b0390911690633ba93f2690602401600060405180830381600087803b15801561020557600080fd5b505af1158015610219573d6000803e3d6000fd5b5050505050565b600080546040516370a0823160e01b81526001600160a01b038481166004830152909116906370a082319060240160206040518083038186803b15801561026657600080fd5b505afa15801561027a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061029e9190610a42565b50919050565b60008054610162906001600160a01b031684846106bd565b60008054604051636eb1769f60e11b81526001600160a01b03858116600483015284811660248301529091169063dd62ed3e9060440160206040518083038186803b15801561030a57600080fd5b505afa15801561031e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b89190610a42565b8015806103cb5750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561039157600080fd5b505afa1580156103a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c99190610a42565b155b61043b5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b6040516001600160a01b03831660248201526044810182905261049e90849063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106ed565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b0383811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156104ee57600080fd5b505afa158015610502573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105269190610a42565b90508181101561058a5760405162461bcd60e51b815260206004820152602960248201527f5361666545524332303a2064656372656173656420616c6c6f77616e63652062604482015268656c6f77207a65726f60b81b6064820152608401610432565b6040516001600160a01b0384166024820152828203604482018190529061021990869063095ea7b360e01b90606401610467565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b15801561060a57600080fd5b505afa15801561061e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106429190610a42565b61064c9190610aaa565b6040516001600160a01b03851660248201526044810182905290915061067f90859063095ea7b360e01b90606401610467565b50505050565b6040516001600160a01b038085166024830152831660448201526064810182905261067f9085906323b872dd60e01b90608401610467565b6040516001600160a01b03831660248201526044810182905261049e90849063a9059cbb60e01b90606401610467565b6000610742826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166107bf9092919063ffffffff16565b80519091501561049e57808060200190518101906107609190610a07565b61049e5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610432565b60606107ce84846000856107d6565b949350505050565b6060824710156108375760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610432565b843b6108855760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610432565b600080866001600160a01b031685876040516108a19190610a5b565b60006040518083038185875af1925050503d80600081146108de576040519150601f19603f3d011682016040523d82523d6000602084013e6108e3565b606091505b50915091506108f38282866108fe565b979650505050505050565b6060831561090d5750816101b8565b82511561091d5782518084602001fd5b8160405162461bcd60e51b81526004016104329190610a77565b80356001600160a01b038116811461094e57600080fd5b919050565b60006020828403121561096557600080fd5b6101b882610937565b6000806040838503121561098157600080fd5b61098a83610937565b915061099860208401610937565b90509250929050565b6000806000606084860312156109b657600080fd5b6109bf84610937565b92506109cd60208501610937565b9150604084013590509250925092565b600080604083850312156109f057600080fd5b6109f983610937565b946020939093013593505050565b600060208284031215610a1957600080fd5b815180151581146101b857600080fd5b600060208284031215610a3b57600080fd5b5035919050565b600060208284031215610a5457600080fd5b5051919050565b60008251610a6d818460208701610ad0565b9190910192915050565b6020815260008251806020840152610a96816040850160208701610ad0565b601f01601f19169190910160400192915050565b60008219821115610acb57634e487b7160e01b600052601160045260246000fd5b500190565b60005b83811015610aeb578181015183820152602001610ad3565b8381111561067f575050600091015256fea2646970667358221220dd3dbc76c29cca258f23124af1f5108759abcb87c9cb4842ed7c2d582b998d0a64736f6c63430008060033";

export class SafeERC20Wrapper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<SafeERC20Wrapper> {
    return super.deploy(token, overrides || {}) as Promise<SafeERC20Wrapper>;
  }
  getDeployTransaction(
    token: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(token, overrides || {});
  }
  attach(address: string): SafeERC20Wrapper {
    return super.attach(address) as SafeERC20Wrapper;
  }
  connect(signer: Signer): SafeERC20Wrapper__factory {
    return super.connect(signer) as SafeERC20Wrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeERC20WrapperInterface {
    return new utils.Interface(_abi) as SafeERC20WrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeERC20Wrapper {
    return new Contract(address, _abi, signerOrProvider) as SafeERC20Wrapper;
  }
}
