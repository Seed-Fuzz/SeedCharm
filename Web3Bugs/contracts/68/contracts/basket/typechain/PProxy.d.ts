/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  Contract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface PProxyInterface extends ethers.utils.Interface {
  functions: {
    "addressToBytes32(address)": FunctionFragment;
    "bytes32ToAddress(bytes32)": FunctionFragment;
    "getImplementation()": FunctionFragment;
    "getProxyOwner()": FunctionFragment;
    "readAddress(bytes32)": FunctionFragment;
    "readBool(bytes32)": FunctionFragment;
    "setImplementation(address)": FunctionFragment;
    "setProxyOwner(address)": FunctionFragment;
    "storageRead(bytes32)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "addressToBytes32",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "bytes32ToAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "getImplementation",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "getProxyOwner",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "readAddress",
    values: [BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "readBool", values: [BytesLike]): string;
  encodeFunctionData(
    functionFragment: "setImplementation",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "setProxyOwner",
    values: [string]
  ): string;
  encodeFunctionData(
    functionFragment: "storageRead",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "addressToBytes32",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "bytes32ToAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getProxyOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "readAddress",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "readBool", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setImplementation",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "setProxyOwner",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "storageRead",
    data: BytesLike
  ): Result;

  events: {};
}

export class PProxy extends Contract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: PProxyInterface;

  functions: {
    addressToBytes32(
      _value: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "addressToBytes32(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<[string]>;

    bytes32ToAddress(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    "bytes32ToAddress(bytes32)"(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    getImplementation(overrides?: CallOverrides): Promise<[string]>;

    "getImplementation()"(overrides?: CallOverrides): Promise<[string]>;

    getProxyOwner(overrides?: CallOverrides): Promise<[string]>;

    "getProxyOwner()"(overrides?: CallOverrides): Promise<[string]>;

    readAddress(_key: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    "readAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;

    readBool(_key: BytesLike, overrides?: CallOverrides): Promise<[boolean]>;

    "readBool(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[boolean]>;

    setImplementation(
      _newImplementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setImplementation(address)"(
      _newImplementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setProxyOwner(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "setProxyOwner(address)"(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    storageRead(_key: BytesLike, overrides?: CallOverrides): Promise<[string]>;

    "storageRead(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<[string]>;
  };

  addressToBytes32(_value: string, overrides?: CallOverrides): Promise<string>;

  "addressToBytes32(address)"(
    _value: string,
    overrides?: CallOverrides
  ): Promise<string>;

  bytes32ToAddress(
    _value: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  "bytes32ToAddress(bytes32)"(
    _value: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  getImplementation(overrides?: CallOverrides): Promise<string>;

  "getImplementation()"(overrides?: CallOverrides): Promise<string>;

  getProxyOwner(overrides?: CallOverrides): Promise<string>;

  "getProxyOwner()"(overrides?: CallOverrides): Promise<string>;

  readAddress(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

  "readAddress(bytes32)"(
    _key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  readBool(_key: BytesLike, overrides?: CallOverrides): Promise<boolean>;

  "readBool(bytes32)"(
    _key: BytesLike,
    overrides?: CallOverrides
  ): Promise<boolean>;

  setImplementation(
    _newImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setImplementation(address)"(
    _newImplementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setProxyOwner(
    _newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "setProxyOwner(address)"(
    _newOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  storageRead(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

  "storageRead(bytes32)"(
    _key: BytesLike,
    overrides?: CallOverrides
  ): Promise<string>;

  callStatic: {
    addressToBytes32(
      _value: string,
      overrides?: CallOverrides
    ): Promise<string>;

    "addressToBytes32(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<string>;

    bytes32ToAddress(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    "bytes32ToAddress(bytes32)"(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    getImplementation(overrides?: CallOverrides): Promise<string>;

    "getImplementation()"(overrides?: CallOverrides): Promise<string>;

    getProxyOwner(overrides?: CallOverrides): Promise<string>;

    "getProxyOwner()"(overrides?: CallOverrides): Promise<string>;

    readAddress(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "readAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;

    readBool(_key: BytesLike, overrides?: CallOverrides): Promise<boolean>;

    "readBool(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<boolean>;

    setImplementation(
      _newImplementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    "setImplementation(address)"(
      _newImplementation: string,
      overrides?: CallOverrides
    ): Promise<void>;

    setProxyOwner(_newOwner: string, overrides?: CallOverrides): Promise<void>;

    "setProxyOwner(address)"(
      _newOwner: string,
      overrides?: CallOverrides
    ): Promise<void>;

    storageRead(_key: BytesLike, overrides?: CallOverrides): Promise<string>;

    "storageRead(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<string>;
  };

  filters: {};

  estimateGas: {
    addressToBytes32(
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "addressToBytes32(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    bytes32ToAddress(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "bytes32ToAddress(bytes32)"(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getImplementation(overrides?: CallOverrides): Promise<BigNumber>;

    "getImplementation()"(overrides?: CallOverrides): Promise<BigNumber>;

    getProxyOwner(overrides?: CallOverrides): Promise<BigNumber>;

    "getProxyOwner()"(overrides?: CallOverrides): Promise<BigNumber>;

    readAddress(_key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "readAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    readBool(_key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "readBool(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    setImplementation(
      _newImplementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setImplementation(address)"(
      _newImplementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setProxyOwner(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "setProxyOwner(address)"(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    storageRead(_key: BytesLike, overrides?: CallOverrides): Promise<BigNumber>;

    "storageRead(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    addressToBytes32(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "addressToBytes32(address)"(
      _value: string,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    bytes32ToAddress(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "bytes32ToAddress(bytes32)"(
      _value: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getImplementation(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getImplementation()"(
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getProxyOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    "getProxyOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    readAddress(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "readAddress(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    readBool(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "readBool(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    setImplementation(
      _newImplementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setImplementation(address)"(
      _newImplementation: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setProxyOwner(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "setProxyOwner(address)"(
      _newOwner: string,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    storageRead(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "storageRead(bytes32)"(
      _key: BytesLike,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
