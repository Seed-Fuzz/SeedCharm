/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { LibERC20 } from "../LibERC20";

export class LibERC20__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<LibERC20> {
    return super.deploy(overrides || {}) as Promise<LibERC20>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): LibERC20 {
    return super.attach(address) as LibERC20;
  }
  connect(signer: Signer): LibERC20__factory {
    return super.connect(signer) as LibERC20__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibERC20 {
    return new Contract(address, _abi, signerOrProvider) as LibERC20;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
];

const _bytecode =
  "0x60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122041f82f4b0cab3bb72b9d32a8c80ff238b83c435147bc4b80a878eaac1112385964736f6c63430007050033";
