/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { MockToken } from "../MockToken";

export class MockToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockToken> {
    return super.deploy(_name, _symbol, overrides || {}) as Promise<MockToken>;
  }
  getDeployTransaction(
    _name: string,
    _symbol: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_name, _symbol, overrides || {});
  }
  attach(address: string): MockToken {
    return super.attach(address) as MockToken;
  }
  connect(signer: Signer): MockToken__factory {
    return super.connect(signer) as MockToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockToken {
    return new Contract(address, _abi, signerOrProvider) as MockToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_issuer",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162000f5f38038062000f5f8339810160408190526200003491620001cb565b8151829082906200004d9060039060208501906200007c565b508051620000639060049060208401906200007c565b50506005805460ff191660121790555062000232915050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282620000b45760008555620000ff565b82601f10620000cf57805160ff1916838001178555620000ff565b82800160010185558215620000ff579182015b82811115620000ff578251825591602001919060010190620000e2565b506200010d92915062000111565b5090565b5b808211156200010d576000815560010162000112565b600082601f83011262000139578081fd5b81516001600160401b03808211156200014e57fe5b6040516020601f8401601f19168201810183811183821017156200016e57fe5b806040525081945083825286818588010111156200018b57600080fd5b600092505b83831015620001af578583018101518284018201529182019162000190565b83831115620001c15760008185840101525b5050505092915050565b60008060408385031215620001de578182fd5b82516001600160401b0380821115620001f5578384fd5b620002038683870162000128565b9350602085015191508082111562000219578283fd5b50620002288582860162000128565b9150509250929050565b610d1d80620002426000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c578063a457c2d711610066578063a457c2d714610192578063a9059cbb146101a5578063dd62ed3e146101b8578063fcd3533c146101cb576100cf565b806370a082311461016257806394bf804d1461017557806395d89b411461018a576100cf565b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011257806323b872dd14610127578063313ce5671461013a578063395093511461014f575b600080fd5b6100dc6101de565b6040516100e99190610b39565b60405180910390f35b610105610100366004610ae3565b610274565b6040516100e99190610b2e565b61011a610291565b6040516100e99190610b8c565b610105610135366004610aa8565b610297565b61014261031e565b6040516100e99190610b95565b61010561015d366004610ae3565b610327565b61011a610170366004610a5c565b610375565b610188610183366004610b0c565b610394565b005b6100dc6103a2565b6101056101a0366004610ae3565b610403565b6101056101b3366004610ae3565b61046b565b61011a6101c6366004610a76565b61047f565b6101886101d9366004610b0c565b6104aa565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561026a5780601f1061023f5761010080835404028352916020019161026a565b820191906000526020600020905b81548152906001019060200180831161024d57829003601f168201915b5050505050905090565b60006102886102816104b4565b84846104b8565b50600192915050565b60025490565b60006102a48484846105a4565b610314846102b06104b4565b61030f85604051806060016040528060288152602001610c31602891396001600160a01b038a166000908152600160205260408120906102ee6104b4565b6001600160a01b0316815260208101919091526040016000205491906106ff565b6104b8565b5060019392505050565b60055460ff1690565b60006102886103346104b4565b8461030f85600160006103456104b4565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610796565b6001600160a01b0381166000908152602081905260409020545b919050565b61039e81836107f7565b5050565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561026a5780601f1061023f5761010080835404028352916020019161026a565b60006102886104106104b4565b8461030f85604051806060016040528060258152602001610cc3602591396001600061043a6104b4565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906106ff565b60006102886104786104b4565b84846105a4565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61039e81836108e7565b3390565b6001600160a01b0383166104fd5760405162461bcd60e51b8152600401808060200182810382526024815260200180610c9f6024913960400191505060405180910390fd5b6001600160a01b0382166105425760405162461bcd60e51b8152600401808060200182810382526022815260200180610be96022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166105e95760405162461bcd60e51b8152600401808060200182810382526025815260200180610c7a6025913960400191505060405180910390fd5b6001600160a01b03821661062e5760405162461bcd60e51b8152600401808060200182810382526023815260200180610ba46023913960400191505060405180910390fd5b6106398383836109e3565b61067681604051806060016040528060268152602001610c0b602691396001600160a01b03861660009081526020819052604090205491906106ff565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546106a59082610796565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561078e5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561075357818101518382015260200161073b565b50505050905090810190601f1680156107805780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156107f0576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610852576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b61085e600083836109e3565b60025461086b9082610796565b6002556001600160a01b0382166000908152602081905260409020546108919082610796565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b6001600160a01b03821661092c5760405162461bcd60e51b8152600401808060200182810382526021815260200180610c596021913960400191505060405180910390fd5b610938826000836109e3565b61097581604051806060016040528060228152602001610bc7602291396001600160a01b03851660009081526020819052604090205491906106ff565b6001600160a01b03831660009081526020819052604090205560025461099b90826109e8565b6002556040805182815290516000916001600160a01b038516917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9181900360200190a35050565b505050565b600082821115610a3f576040805162461bcd60e51b815260206004820152601e60248201527f536166654d6174683a207375627472616374696f6e206f766572666c6f770000604482015290519081900360640190fd5b50900390565b80356001600160a01b038116811461038f57600080fd5b600060208284031215610a6d578081fd5b6107f082610a45565b60008060408385031215610a88578081fd5b610a9183610a45565b9150610a9f60208401610a45565b90509250929050565b600080600060608486031215610abc578081fd5b610ac584610a45565b9250610ad360208501610a45565b9150604084013590509250925092565b60008060408385031215610af5578182fd5b610afe83610a45565b946020939093013593505050565b60008060408385031215610b1e578182fd5b82359150610a9f60208401610a45565b901515815260200190565b6000602080835283518082850152825b81811015610b6557858101830151858201604001528201610b49565b81811115610b765783604083870101525b50601f01601f1916929092016040019392505050565b90815260200190565b60ff9190911681526020019056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a206275726e2066726f6d20746865207a65726f206164647265737345524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa26469706673582212208f4c71e4c805281553b6243b266a24c4fbd15c5f81f408f756d0a4f54d14730264736f6c63430007050033";
