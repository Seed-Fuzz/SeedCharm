/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { PProxyStorage } from "../PProxyStorage";

export class PProxyStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PProxyStorage> {
    return super.deploy(overrides || {}) as Promise<PProxyStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): PProxyStorage {
    return super.attach(address) as PProxyStorage;
  }
  connect(signer: Signer): PProxyStorage__factory {
    return super.connect(signer) as PProxyStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PProxyStorage {
    return new Contract(address, _abi, signerOrProvider) as PProxyStorage;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_value",
        type: "address",
      },
    ],
    name: "addressToBytes32",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_value",
        type: "bytes32",
      },
    ],
    name: "bytes32ToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "readAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "readBool",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
    ],
    name: "storageRead",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506101ae806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806337a440e61461005c5780635ced058e1461008b57806382c947b7146100c45780639d84ae69146100ea578063bb15ac8e14610107575b600080fd5b6100796004803603602081101561007257600080fd5b5035610138565b60408051918252519081900360200190f35b6100a8600480360360208110156100a157600080fd5b503561013c565b604080516001600160a01b039092168252519081900360200190f35b610079600480360360208110156100da57600080fd5b50356001600160a01b031661013f565b6100a86004803603602081101561010057600080fd5b503561014b565b6101246004803603602081101561011d57600080fd5b5035610164565b604080519115158252519081900360200190f35b5490565b90565b6001600160a01b031690565b600061015e61015983610138565b61013c565b92915050565b6000600161017183610138565b149291505056fea264697066735822122054daa104f163dbcd27d8f8a9ee9dd8a29dbd0d8791f37dbdfd56b8fc0d2743fc64736f6c63430007050033";
