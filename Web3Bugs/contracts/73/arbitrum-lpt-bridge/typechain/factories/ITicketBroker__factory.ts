/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type { ITicketBroker, ITicketBrokerInterface } from "../ITicketBroker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_addr",
        type: "address",
      },
    ],
    name: "getSenderInfo",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "deposit",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "withdrawRound",
            type: "uint256",
          },
        ],
        internalType: "struct ITicketBroker.Sender",
        name: "sender",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "fundsRemaining",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "claimedInCurrentRound",
            type: "uint256",
          },
        ],
        internalType: "struct ITicketBroker.ReserveInfo",
        name: "reserve",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class ITicketBroker__factory {
  static readonly abi = _abi;
  static createInterface(): ITicketBrokerInterface {
    return new utils.Interface(_abi) as ITicketBrokerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ITicketBroker {
    return new Contract(address, _abi, signerOrProvider) as ITicketBroker;
  }
}
