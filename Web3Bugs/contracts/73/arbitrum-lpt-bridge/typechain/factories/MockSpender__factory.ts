/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MockSpender, MockSpenderInterface } from "../MockSpender";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "address",
        name: "_token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "transferTokens",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102b0806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063a64b6e5f14610030575b600080fd5b61004a60048036038101906100459190610120565b61004c565b005b8173ffffffffffffffffffffffffffffffffffffffff166323b872dd8430846040518463ffffffff1660e01b8152600401610089939291906101b6565b602060405180830381600087803b1580156100a357600080fd5b505af11580156100b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100db919061016f565b50505050565b6000813590506100f081610235565b92915050565b6000815190506101058161024c565b92915050565b60008135905061011a81610263565b92915050565b60008060006060848603121561013557600080fd5b6000610143868287016100e1565b9350506020610154868287016100e1565b92505060406101658682870161010b565b9150509250925092565b60006020828403121561018157600080fd5b600061018f848285016100f6565b91505092915050565b6101a1816101ed565b82525050565b6101b08161022b565b82525050565b60006060820190506101cb6000830186610198565b6101d86020830185610198565b6101e560408301846101a7565b949350505050565b60006101f88261020b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b61023e816101ed565b811461024957600080fd5b50565b610255816101ff565b811461026057600080fd5b50565b61026c8161022b565b811461027757600080fd5b5056fea2646970667358221220ca261878a95039fad32e2ed401b07147596c48b40030b9527b52f70723fec29d64736f6c63430008040033";

export class MockSpender__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MockSpender> {
    return super.deploy(overrides || {}) as Promise<MockSpender>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MockSpender {
    return super.attach(address) as MockSpender;
  }
  connect(signer: Signer): MockSpender__factory {
    return super.connect(signer) as MockSpender__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MockSpenderInterface {
    return new utils.Interface(_abi) as MockSpenderInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MockSpender {
    return new Contract(address, _abi, signerOrProvider) as MockSpender;
  }
}
