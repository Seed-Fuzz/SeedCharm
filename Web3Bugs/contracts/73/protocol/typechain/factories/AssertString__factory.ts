/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { AssertString, AssertStringInterface } from "../AssertString";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bool",
        name: "result",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "string",
        name: "message",
        type: "string",
      },
    ],
    name: "TestEvent",
    type: "event",
  },
];

const _bytecode =
  "0x610e84610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100565760003560e01c806349f979391461005b5780638aeb8f981461022a57806391872a9114610360578063e8c2cb1614610496575b600080fd5b81801561006757600080fd5b506102166004803603606081101561007e57600080fd5b810190602081018135600160201b81111561009857600080fd5b8201836020820111156100aa57600080fd5b803590602001918460018302840111600160201b831117156100cb57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561011d57600080fd5b82018360208201111561012f57600080fd5b803590602001918460018302840111600160201b8311171561015057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156101a257600080fd5b8201836020820111156101b457600080fd5b803590602001918460018302840111600160201b831117156101d557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610651945050505050565b604080519115158252519081900360200190f35b81801561023657600080fd5b506102166004803603604081101561024d57600080fd5b810190602081018135600160201b81111561026757600080fd5b82018360208201111561027957600080fd5b803590602001918460018302840111600160201b8311171561029a57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156102ec57600080fd5b8201836020820111156102fe57600080fd5b803590602001918460018302840111600160201b8311171561031f57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295506106df945050505050565b81801561036c57600080fd5b506102166004803603604081101561038357600080fd5b810190602081018135600160201b81111561039d57600080fd5b8201836020820111156103af57600080fd5b803590602001918460018302840111600160201b831117156103d057600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561042257600080fd5b82018360208201111561043457600080fd5b803590602001918460018302840111600160201b8311171561045557600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061074d945050505050565b8180156104a257600080fd5b50610216600480360360608110156104b957600080fd5b810190602081018135600160201b8111156104d357600080fd5b8201836020820111156104e557600080fd5b803590602001918460018302840111600160201b8311171561050657600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b81111561055857600080fd5b82018360208201111561056a57600080fd5b803590602001918460018302840111600160201b8311171561058b57600080fd5b91908080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509295949360208101935035915050600160201b8111156105dd57600080fd5b8201836020820111156105ef57600080fd5b803590602001918460018302840111600160201b8311171561061057600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955061077a945050505050565b600061065d8484610798565b1590508015610675576106708183610820565b6106d8565b6106d8816106d36106a4876040518060400160405280600681526020016515195cdd195960d21b815250610908565b6106cd87604051806040016040528060078152602001661059d85a5b9cdd60ca1b815250610908565b86610a6d565b610820565b9392505050565b60006106fa8360405180602001604052806000815250610798565b15905080156107125761070d8183610820565b610747565b610747816106d3610741866040518060400160405280600681526020016515195cdd195960d21b815250610908565b85610cbc565b92915050565b60006107688360405180602001604052806000815250610798565b905080156107125761070d8183610820565b60006107868484610798565b90508015610675576106708183610820565b8051825160009184918491146107b357600092505050610747565b60005b8251811015610814578181815181106107cb57fe5b602001015160f81c60f81b6001600160f81b0319168382815181106107ec57fe5b01602001516001600160f81b0319161461080c5760009350505050610747565b6001016107b6565b50600195945050505050565b811561086a5760408051602080825260009082015290516001917fd204e27263771793b3472e4c07118500eb1ab892c2b2f0a4b90b33c33d4df42f919081900360600190a2610904565b60408051602080825283518183015283516000937fd204e27263771793b3472e4c07118500eb1ab892c2b2f0a4b90b33c33d4df42f938693909283928301918501908083838a5b838110156108c95781810151838201526020016108b1565b50505050905090810190601f1680156108f65780820380516001836020036101000a031916815260200191505b509250505060405180910390a25b5050565b606080839050606083905060008251905060008251905060608183016002016040519080825280601f01601f191660200182016040528015610951576020820181803883390190505b5090506000805b838210156109ab5785828151811061096c57fe5b602001015160f81c60f81b83828060010193508151811061098957fe5b60200101906001600160f81b031916908160001a905350600190910190610958565b601d60f91b8382806001019350815181106109c257fe5b60200101906001600160f81b031916908160001a905350600160fd1b8382806001019350815181106109f057fe5b60200101906001600160f81b031916908160001a905350600091505b84821015610a5f57868281518110610a2057fe5b602001015160f81c60f81b838280600101935081518110610a3d57fe5b60200101906001600160f81b031916908160001a905350600190910190610a0c565b509098975050505050505050565b8051835183516040805183850183016005810180835260206024909201601f191683019190910190925260609488948894889492939192909188918015610abb576020820181803883390190505b5090506000805b85821015610b1557868281518110610ad657fe5b602001015160f81c60f81b838280600101935081518110610af357fe5b60200101906001600160f81b031916908160001a905350600190910190610ac2565b600160fd1b838280600101935081518110610b2c57fe5b60200101906001600160f81b031916908160001a905350600560fb1b838280600101935081518110610b5a57fe5b60200101906001600160f81b031916908160001a905350600091505b84821015610bc957888281518110610b8a57fe5b602001015160f81c60f81b838280600101935081518110610ba757fe5b60200101906001600160f81b031916908160001a905350600190910190610b76565b600b60fa1b838280600101935081518110610be057fe5b60200101906001600160f81b031916908160001a905350600160fd1b838280600101935081518110610c0e57fe5b60200101906001600160f81b031916908160001a905350600091505b83821015610c7d57878281518110610c3e57fe5b602001015160f81c60f81b838280600101935081518110610c5b57fe5b60200101906001600160f81b031916908160001a905350600190910190610c2a565b602960f81b838280600101935081518110610c9457fe5b60200101906001600160f81b031916908160001a905350919c9b505050505050505050505050565b606080839050606083905060008151905060008351905060608183016003016040519080825280601f01601f191660200182016040528015610d05576020820181803883390190505b5090506000805b84821015610d5f57858281518110610d2057fe5b602001015160f81c60f81b838280600101935081518110610d3d57fe5b60200101906001600160f81b031916908160001a905350600190910190610d0c565b600160fd1b838280600101935081518110610d7657fe5b60200101906001600160f81b031916908160001a905350600560fb1b838280600101935081518110610da457fe5b60200101906001600160f81b031916908160001a905350600091505b83821015610e1357868281518110610dd457fe5b602001015160f81c60f81b838280600101935081518110610df157fe5b60200101906001600160f81b031916908160001a905350600190910190610dc0565b602960f81b838280600101935081518110610e2a57fe5b60200101906001600160f81b031916908160001a90535091999850505050505050505056fea265627a7a723158202a77cd7bf079cc0f5845d9b2aefda008bafcf7a8aaad803091df1861c8e363e464736f6c634300050b0032";

export class AssertString__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AssertString> {
    return super.deploy(overrides || {}) as Promise<AssertString>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AssertString {
    return super.attach(address) as AssertString;
  }
  connect(signer: Signer): AssertString__factory {
    return super.connect(signer) as AssertString__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AssertStringInterface {
    return new utils.Interface(_abi) as AssertStringInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AssertString {
    return new Contract(address, _abi, signerOrProvider) as AssertString;
  }
}
