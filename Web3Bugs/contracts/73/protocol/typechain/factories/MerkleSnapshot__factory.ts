/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  MerkleSnapshot,
  MerkleSnapshotInterface,
} from "../MerkleSnapshot";

const _abi = [
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        internalType: "bytes32[]",
        name: "_proof",
        type: "bytes32[]",
      },
      {
        internalType: "bytes32",
        name: "_leaf",
        type: "bytes32",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "snapshot",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "_root",
        type: "bytes32",
      },
    ],
    name: "setSnapshot",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: false,
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    name: "setController",
    outputs: [],
    payable: false,
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "controller",
    outputs: [
      {
        internalType: "contract IController",
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_controller",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "controller",
        type: "address",
      },
    ],
    name: "SetController",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "param",
        type: "string",
      },
    ],
    name: "ParameterUpdate",
    type: "event",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104eb3803806104eb8339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b0319909216919091179055610486806100656000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80630a02831c1461005c5780631ac79c41146100e75780635824adf41461011657806392eefe9b1461013b578063f77c479114610161575b600080fd5b6100d36004803603606081101561007257600080fd5b8135919081019060408101602082013564010000000081111561009457600080fd5b8201836020820111156100a657600080fd5b803590602001918460208302840111640100000000831117156100c857600080fd5b919350915035610185565b604080519115158252519081900360200190f35b610104600480360360208110156100fd57600080fd5b50356101db565b60408051918252519081900360200190f35b6101396004803603604081101561012c57600080fd5b50803590602001356101ed565b005b6101396004803603602081101561015157600080fd5b50356001600160a01b0316610207565b610169610263565b604080516001600160a01b039092168252519081900360200190f35b60006101d284848080602002602001604051908101604052809392919081815260200183836020028082843760009201829052508a81526001602052604090205492508691506102729050565b95945050505050565b60016020526000908152604090205481565b6101f561031b565b60009182526001602052604090912055565b61020f6103f2565b600080546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f4ff638452bbf33c012645d18ae6f05515ff5f2d1dfb0cece8cbf018c60903f709181900360200190a150565b6000546001600160a01b031681565b600081815b855181101561031057600086828151811061028e57fe5b602002602001015190508083116102d55782816040516020018083815260200182815260200192505050604051602081830303815290604052805190602001209250610307565b808360405160200180838152602001828152602001925050506040516020818303038152906040528051906020012092505b50600101610277565b509092149392505050565b6000809054906101000a90046001600160a01b03166001600160a01b0316638da5cb5b6040518163ffffffff1660e01b815260040160206040518083038186803b15801561036857600080fd5b505afa15801561037c573d6000803e3d6000fd5b505050506040513d602081101561039257600080fd5b50516001600160a01b031633146103f0576040805162461bcd60e51b815260206004820152601f60248201527f63616c6c6572206d75737420626520436f6e74726f6c6c6572206f776e657200604482015290519081900360640190fd5b565b6000546001600160a01b031633146103f0576040805162461bcd60e51b815260206004820152601960248201527f63616c6c6572206d75737420626520436f6e74726f6c6c657200000000000000604482015290519081900360640190fdfea265627a7a72315820339735e0db2781da3a2a49529556bea84d15f329cf65ede92d30045a3ca3da3064736f6c634300050b0032";

export class MerkleSnapshot__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _controller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MerkleSnapshot> {
    return super.deploy(
      _controller,
      overrides || {}
    ) as Promise<MerkleSnapshot>;
  }
  getDeployTransaction(
    _controller: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_controller, overrides || {});
  }
  attach(address: string): MerkleSnapshot {
    return super.attach(address) as MerkleSnapshot;
  }
  connect(signer: Signer): MerkleSnapshot__factory {
    return super.connect(signer) as MerkleSnapshot__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MerkleSnapshotInterface {
    return new utils.Interface(_abi) as MerkleSnapshotInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleSnapshot {
    return new Contract(address, _abi, signerOrProvider) as MerkleSnapshot;
  }
}
