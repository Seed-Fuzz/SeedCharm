/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface TimeswapMathInterface extends ethers.utils.Interface {
  functions: {
    "borrow(uint256,tuple,uint112,uint112,uint112,uint16,uint16)": FunctionFragment;
    "burn(tuple,uint256)": FunctionFragment;
    "lend(uint256,tuple,uint112,uint112,uint112,uint16,uint16)": FunctionFragment;
    "mint(uint256,tuple,uint112,uint112,uint112)": FunctionFragment;
    "withdraw(tuple,tuple)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "borrow",
    values: [
      BigNumberish,
      {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "burn",
    values: [
      {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "lend",
    values: [
      BigNumberish,
      {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "mint",
    values: [
      BigNumberish,
      {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      BigNumberish,
      BigNumberish,
      BigNumberish
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "withdraw",
    values: [
      {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      }
    ]
  ): string;

  decodeFunctionResult(functionFragment: "borrow", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "lend", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "withdraw", data: BytesLike): Result;

  events: {};
}

export class TimeswapMath extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: TimeswapMathInterface;

  functions: {
    borrow(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber,
        BigNumber
      ] & {
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    "borrow(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber,
        BigNumber
      ] & {
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    burn(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        assetOut: BigNumber;
        collateralOut: BigNumber;
        feeOut: BigNumber;
      }
    >;

    "burn(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint256)"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        assetOut: BigNumber;
        collateralOut: BigNumber;
        feeOut: BigNumber;
      }
    >;

    lend(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        },
        BigNumber,
        BigNumber
      ] & {
        claimsOut: [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    "lend(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        },
        BigNumber,
        BigNumber
      ] & {
        claimsOut: [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    mint(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber
      ] & {
        liquidityOut: BigNumber;
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
      }
    >;

    "mint(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber
      ] & {
        liquidityOut: BigNumber;
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
      }
    >;

    withdraw(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<
      [[BigNumber, BigNumber] & { asset: BigNumber; collateral: BigNumber }] & {
        tokensOut: [BigNumber, BigNumber] & {
          asset: BigNumber;
          collateral: BigNumber;
        };
      }
    >;

    "withdraw(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),(uint112,uint112,uint112,uint112))"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<
      [[BigNumber, BigNumber] & { asset: BigNumber; collateral: BigNumber }] & {
        tokensOut: [BigNumber, BigNumber] & {
          asset: BigNumber;
          collateral: BigNumber;
        };
      }
    >;
  };

  borrow(
    maturity: BigNumberish,
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    xDecrease: BigNumberish,
    yIncrease: BigNumberish,
    zIncrease: BigNumberish,
    fee: BigNumberish,
    protocolFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      },
      BigNumber,
      BigNumber
    ] & {
      dueOut: [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      };
      feeStoredIncrease: BigNumber;
      protocolFeeStoredIncrease: BigNumber;
    }
  >;

  "borrow(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
    maturity: BigNumberish,
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    xDecrease: BigNumberish,
    yIncrease: BigNumberish,
    zIncrease: BigNumberish,
    fee: BigNumberish,
    protocolFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      },
      BigNumber,
      BigNumber
    ] & {
      dueOut: [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      };
      feeStoredIncrease: BigNumber;
      protocolFeeStoredIncrease: BigNumber;
    }
  >;

  burn(
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    liquidityIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      assetOut: BigNumber;
      collateralOut: BigNumber;
      feeOut: BigNumber;
    }
  >;

  "burn(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint256)"(
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    liquidityIn: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber, BigNumber] & {
      assetOut: BigNumber;
      collateralOut: BigNumber;
      feeOut: BigNumber;
    }
  >;

  lend(
    maturity: BigNumberish,
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    xIncrease: BigNumberish,
    yDecrease: BigNumberish,
    zDecrease: BigNumberish,
    fee: BigNumberish,
    protocolFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        bondPrincipal: BigNumber;
        bondInterest: BigNumber;
        insurancePrincipal: BigNumber;
        insuranceInterest: BigNumber;
      },
      BigNumber,
      BigNumber
    ] & {
      claimsOut: [BigNumber, BigNumber, BigNumber, BigNumber] & {
        bondPrincipal: BigNumber;
        bondInterest: BigNumber;
        insurancePrincipal: BigNumber;
        insuranceInterest: BigNumber;
      };
      feeStoredIncrease: BigNumber;
      protocolFeeStoredIncrease: BigNumber;
    }
  >;

  "lend(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
    maturity: BigNumberish,
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    xIncrease: BigNumberish,
    yDecrease: BigNumberish,
    zDecrease: BigNumberish,
    fee: BigNumberish,
    protocolFee: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      [BigNumber, BigNumber, BigNumber, BigNumber] & {
        bondPrincipal: BigNumber;
        bondInterest: BigNumber;
        insurancePrincipal: BigNumber;
        insuranceInterest: BigNumber;
      },
      BigNumber,
      BigNumber
    ] & {
      claimsOut: [BigNumber, BigNumber, BigNumber, BigNumber] & {
        bondPrincipal: BigNumber;
        bondInterest: BigNumber;
        insurancePrincipal: BigNumber;
        insuranceInterest: BigNumber;
      };
      feeStoredIncrease: BigNumber;
      protocolFeeStoredIncrease: BigNumber;
    }
  >;

  mint(
    maturity: BigNumberish,
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    xIncrease: BigNumberish,
    yIncrease: BigNumberish,
    zIncrease: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      },
      BigNumber
    ] & {
      liquidityOut: BigNumber;
      dueOut: [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      };
      feeStoredIncrease: BigNumber;
    }
  >;

  "mint(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112)"(
    maturity: BigNumberish,
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    xIncrease: BigNumberish,
    yIncrease: BigNumberish,
    zIncrease: BigNumberish,
    overrides?: CallOverrides
  ): Promise<
    [
      BigNumber,
      [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      },
      BigNumber
    ] & {
      liquidityOut: BigNumber;
      dueOut: [BigNumber, BigNumber, number] & {
        debt: BigNumber;
        collateral: BigNumber;
        startBlock: number;
      };
      feeStoredIncrease: BigNumber;
    }
  >;

  withdraw(
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    claimsIn: {
      bondPrincipal: BigNumberish;
      bondInterest: BigNumberish;
      insurancePrincipal: BigNumberish;
      insuranceInterest: BigNumberish;
    },
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { asset: BigNumber; collateral: BigNumber }
  >;

  "withdraw(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),(uint112,uint112,uint112,uint112))"(
    state: {
      reserves: { asset: BigNumberish; collateral: BigNumberish };
      feeStored: BigNumberish;
      totalLiquidity: BigNumberish;
      totalClaims: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      };
      totalDebtCreated: BigNumberish;
      x: BigNumberish;
      y: BigNumberish;
      z: BigNumberish;
    },
    claimsIn: {
      bondPrincipal: BigNumberish;
      bondInterest: BigNumberish;
      insurancePrincipal: BigNumberish;
      insuranceInterest: BigNumberish;
    },
    overrides?: CallOverrides
  ): Promise<
    [BigNumber, BigNumber] & { asset: BigNumber; collateral: BigNumber }
  >;

  callStatic: {
    borrow(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber,
        BigNumber
      ] & {
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    "borrow(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber,
        BigNumber
      ] & {
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    burn(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        assetOut: BigNumber;
        collateralOut: BigNumber;
        feeOut: BigNumber;
      }
    >;

    "burn(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint256)"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        assetOut: BigNumber;
        collateralOut: BigNumber;
        feeOut: BigNumber;
      }
    >;

    lend(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        },
        BigNumber,
        BigNumber
      ] & {
        claimsOut: [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    "lend(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        },
        BigNumber,
        BigNumber
      ] & {
        claimsOut: [BigNumber, BigNumber, BigNumber, BigNumber] & {
          bondPrincipal: BigNumber;
          bondInterest: BigNumber;
          insurancePrincipal: BigNumber;
          insuranceInterest: BigNumber;
        };
        feeStoredIncrease: BigNumber;
        protocolFeeStoredIncrease: BigNumber;
      }
    >;

    mint(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber
      ] & {
        liquidityOut: BigNumber;
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
      }
    >;

    "mint(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<
      [
        BigNumber,
        [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        },
        BigNumber
      ] & {
        liquidityOut: BigNumber;
        dueOut: [BigNumber, BigNumber, number] & {
          debt: BigNumber;
          collateral: BigNumber;
          startBlock: number;
        };
        feeStoredIncrease: BigNumber;
      }
    >;

    withdraw(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { asset: BigNumber; collateral: BigNumber }
    >;

    "withdraw(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),(uint112,uint112,uint112,uint112))"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { asset: BigNumber; collateral: BigNumber }
    >;
  };

  filters: {};

  estimateGas: {
    borrow(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "borrow(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    burn(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "burn(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint256)"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    lend(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "lend(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    mint(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "mint(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    withdraw(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    "withdraw(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),(uint112,uint112,uint112,uint112))"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    borrow(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "borrow(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xDecrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    burn(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "burn(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint256)"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      liquidityIn: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    lend(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "lend(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112,uint16,uint16)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yDecrease: BigNumberish,
      zDecrease: BigNumberish,
      fee: BigNumberish,
      protocolFee: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    mint(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "mint(uint256,((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),uint112,uint112,uint112)"(
      maturity: BigNumberish,
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      xIncrease: BigNumberish,
      yIncrease: BigNumberish,
      zIncrease: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    withdraw(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    "withdraw(((uint128,uint128),uint256,uint256,(uint112,uint112,uint112,uint112),uint120,uint112,uint112,uint112),(uint112,uint112,uint112,uint112))"(
      state: {
        reserves: { asset: BigNumberish; collateral: BigNumberish };
        feeStored: BigNumberish;
        totalLiquidity: BigNumberish;
        totalClaims: {
          bondPrincipal: BigNumberish;
          bondInterest: BigNumberish;
          insurancePrincipal: BigNumberish;
          insuranceInterest: BigNumberish;
        };
        totalDebtCreated: BigNumberish;
        x: BigNumberish;
        y: BigNumberish;
        z: BigNumberish;
      },
      claimsIn: {
        bondPrincipal: BigNumberish;
        bondInterest: BigNumberish;
        insurancePrincipal: BigNumberish;
        insuranceInterest: BigNumberish;
      },
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;
  };
}
