/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  TimeswapPairCallee,
  TimeswapPairCalleeInterface,
} from "../TimeswapPairCallee";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "pair",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "assetTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "dueTo",
        type: "address",
      },
      {
        internalType: "uint112",
        name: "xDecrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "yIncrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "zIncrease",
        type: "uint112",
      },
    ],
    name: "borrow",
    outputs: [
      {
        internalType: "uint256",
        name: "assetOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint112",
            name: "debt",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "collateral",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "startBlock",
            type: "uint32",
          },
        ],
        internalType: "struct IPair.Due",
        name: "dueOut",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "factoryContract",
    outputs: [
      {
        internalType: "contract IFactory",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getData",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getDataMint",
    outputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "bondTo",
        type: "address",
      },
      {
        internalType: "address",
        name: "insuranceTo",
        type: "address",
      },
      {
        internalType: "uint112",
        name: "xIncrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "yDecrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "zDecrease",
        type: "uint112",
      },
    ],
    name: "lend",
    outputs: [
      {
        internalType: "uint256",
        name: "assetIn",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint112",
            name: "bondPrincipal",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "bondInterest",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "insurancePrincipal",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "insuranceInterest",
            type: "uint112",
          },
        ],
        internalType: "struct IPair.Claims",
        name: "claimsOut",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "liquidityTo",
        type: "address",
      },
      {
        internalType: "uint112",
        name: "xIncrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "yIncrease",
        type: "uint112",
      },
      {
        internalType: "uint112",
        name: "zIncrease",
        type: "uint112",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "uint256",
        name: "assetIn",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "liquidityOut",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "uint112",
            name: "debt",
            type: "uint112",
          },
          {
            internalType: "uint112",
            name: "collateral",
            type: "uint112",
          },
          {
            internalType: "uint32",
            name: "startBlock",
            type: "uint32",
          },
        ],
        internalType: "struct IPair.Due",
        name: "dueOut",
        type: "tuple",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pairContract",
    outputs: [
      {
        internalType: "contract IPair",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "maturity",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "ids",
        type: "uint256[]",
      },
      {
        internalType: "uint112[]",
        name: "assetsIn",
        type: "uint112[]",
      },
      {
        internalType: "uint112[]",
        name: "collateralsOut",
        type: "uint112[]",
      },
    ],
    name: "pay",
    outputs: [
      {
        internalType: "uint128",
        name: "assetIn",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "collateralOut",
        type: "uint128",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint112",
        name: "collateralIn",
        type: "uint112",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "timeswapBorrowCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetIn",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "timeswapLendCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "assetIn",
        type: "uint256",
      },
      {
        internalType: "uint112",
        name: "collateralIn",
        type: "uint112",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "timeswapMintCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint128",
        name: "assetIn",
        type: "uint128",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "timeswapPayCallback",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

export class TimeswapPairCallee__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    pair: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TimeswapPairCallee> {
    return super.deploy(pair, overrides || {}) as Promise<TimeswapPairCallee>;
  }
  getDeployTransaction(
    pair: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(pair, overrides || {});
  }
  attach(address: string): TimeswapPairCallee {
    return super.attach(address) as TimeswapPairCallee;
  }
  connect(signer: Signer): TimeswapPairCallee__factory {
    return super.connect(signer) as TimeswapPairCallee__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TimeswapPairCalleeInterface {
    return new utils.Interface(_abi) as TimeswapPairCalleeInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TimeswapPairCallee {
    return new Contract(address, _abi, signerOrProvider) as TimeswapPairCallee;
  }
}
