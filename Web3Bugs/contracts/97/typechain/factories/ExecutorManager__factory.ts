/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ExecutorManager,
  ExecutorManagerInterface,
} from "../ExecutorManager";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ExecutorAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "executor",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ExecutorRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress",
        type: "address",
      },
    ],
    name: "addExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "executorArray",
        type: "address[]",
      },
    ],
    name: "addExecutors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAllExecutors",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executor",
        type: "address",
      },
    ],
    name: "getExecutorStatus",
    outputs: [
      {
        internalType: "bool",
        name: "status",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "executorAddress",
        type: "address",
      },
    ],
    name: "removeExecutor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "executorArray",
        type: "address[]",
      },
    ],
    name: "removeExecutors",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061002161001c610026565b61002a565b61007a565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610881806100896000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063715018a611610066578063715018a6146100fc5780638da5cb5b14610104578063dc09c3e414610119578063f2fde38b1461012c578063fdfebffe1461013f57610093565b80630768d65c146100985780631ecd9cd8146100c15780631f5a0bbe146100d657806324788429146100e9575b600080fd5b6100ab6100a6366004610618565b610154565b6040516100b89190610730565b60405180910390f35b6100d46100cf366004610646565b610172565b005b6100d46100e4366004610618565b610212565b6100d46100f7366004610618565b61034e565b6100d4610405565b61010c610450565b6040516100b891906106b5565b6100d4610127366004610646565b61045f565b6100d461013a366004610618565b6104f1565b610147610562565b6040516100b891906106e3565b6001600160a01b031660009081526002602052604090205460ff1690565b61017a6105c4565b6001600160a01b031661018b610450565b6001600160a01b0316146101ba5760405162461bcd60e51b81526004016101b1906107ef565b60405180910390fd5b60005b8181101561020d576101fd8383838181106101e857634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100e49190610618565b61020681610824565b90506101bd565b505050565b61021a6105c4565b6001600160a01b031661022b610450565b6001600160a01b0316146102515760405162461bcd60e51b81526004016101b1906107ef565b6001600160a01b0381166102775760405162461bcd60e51b81526004016101b1906107b8565b6001600160a01b03811660009081526002602052604090205460ff16156102b05760405162461bcd60e51b81526004016101b190610781565b6001805480820182557fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf60180546001600160a01b0319166001600160a01b03841690811790915560009081526002602052604090819020805460ff1916909217909155517f8a39fc6d5142759acd84b3e96ccde9187266ecb0df56c8ff08bf2aedc7c93c479061034390839033906106c9565b60405180910390a150565b6103566105c4565b6001600160a01b0316610367610450565b6001600160a01b03161461038d5760405162461bcd60e51b81526004016101b1906107ef565b6001600160a01b0381166103b35760405162461bcd60e51b81526004016101b1906107b8565b6001600160a01b03811660009081526002602052604090819020805460ff19169055517f5eda3a085bbb9fa8a317839dd47d7ef8a77f89a24470445af7fec61cbb8c990b9061034390839033906106c9565b61040d6105c4565b6001600160a01b031661041e610450565b6001600160a01b0316146104445760405162461bcd60e51b81526004016101b1906107ef565b61044e60006105c8565b565b6000546001600160a01b031690565b6104676105c4565b6001600160a01b0316610478610450565b6001600160a01b03161461049e5760405162461bcd60e51b81526004016101b1906107ef565b60005b8181101561020d576104e18383838181106104cc57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906100f79190610618565b6104ea81610824565b90506104a1565b6104f96105c4565b6001600160a01b031661050a610450565b6001600160a01b0316146105305760405162461bcd60e51b81526004016101b1906107ef565b6001600160a01b0381166105565760405162461bcd60e51b81526004016101b19061073b565b61055f816105c8565b50565b606060018054806020026020016040519081016040528092919081815260200182805480156105ba57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161059c575b5050505050905090565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610629578081fd5b81356001600160a01b038116811461063f578182fd5b9392505050565b60008060208385031215610658578081fd5b823567ffffffffffffffff8082111561066f578283fd5b818501915085601f830112610682578283fd5b813581811115610690578384fd5b86602080830285010111156106a3578384fd5b60209290920196919550909350505050565b6001600160a01b0391909116815260200190565b6001600160a01b0392831681529116602082015260400190565b6020808252825182820181905260009190848201906040850190845b818110156107245783516001600160a01b0316835292840192918401916001016106ff565b50909695505050505050565b901515815260200190565b60208082526026908201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160408201526564647265737360d01b606082015260800190565b6020808252601b908201527f4578656375746f7220616c726561647920726567697374657265640000000000604082015260600190565b6020808252601d908201527f6578656375746f7220616464726573732063616e206e6f742062652030000000604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600060001982141561084457634e487b7160e01b81526011600452602481fd5b506001019056fea264697066735822122082a07712f06e5f7c631beb3fff9ef42e03c5c08985e2d90df73c5f97b440698764736f6c63430008000033";

export class ExecutorManager__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExecutorManager> {
    return super.deploy(overrides || {}) as Promise<ExecutorManager>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ExecutorManager {
    return super.attach(address) as ExecutorManager;
  }
  connect(signer: Signer): ExecutorManager__factory {
    return super.connect(signer) as ExecutorManager__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExecutorManagerInterface {
    return new utils.Interface(_abi) as ExecutorManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExecutorManager {
    return new Contract(address, _abi, signerOrProvider) as ExecutorManager;
  }
}
